[{"/opt/bitnami/apache/htdocs/converzee-frontend/src/index.js":"1","/opt/bitnami/apache/htdocs/converzee-frontend/src/App.js":"2","/opt/bitnami/apache/htdocs/converzee-frontend/src/serviceWorker.js":"3","/opt/bitnami/apache/htdocs/converzee-frontend/src/Helper.js":"4","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Util.js":"5","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/layout/Landing.js":"6","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/layout/Navbar.js":"7","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/layout/SessionLogin.js":"8","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/layout/Sidebar.js":"9","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Dashboard.js":"10","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Create.js":"11","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/CreateElement.js":"12","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Domain.js":"13","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Campaigns.js":"14","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Pixel.js":"15","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/UserSettings.js":"16","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Agency.js":"17","/opt/bitnami/apache/htdocs/converzee-frontend/src/utils/Storage.js":"18","/opt/bitnami/apache/htdocs/converzee-frontend/src/utils/ToolUtil.js":"19","/opt/bitnami/apache/htdocs/converzee-frontend/src/utils/Routes.js":"20","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/auth/authHandler.js":"21","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/superAdmin/SuperAdmin.js":"22","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/supportUser/SupportUser.js":"23","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/OTO3/OTO3Create.js":"24","/opt/bitnami/apache/htdocs/converzee-frontend/src/actions/URLs.js":"25","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/OTO2/OTO2Create.js":"26","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/utils/ScreenUtil.js":"27","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Bonus/BonusCreate.js":"28","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Bonus/EmailTimer.js":"29","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/VipBonus/VipBonus.js":"30","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/AutoResponderConfig.js":"31","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ThirdParty/index.js":"32","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/admin/index.js":"33","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/index.js":"34","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/BonusUpsell/index.js":"35","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Club/index.js":"36","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ReviewEngin/index.js":"37","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/SpecialBonusOptin/index.js":"38","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/TabMessaging/index.js":"39","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/UrgencyTimer/index.js":"40","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ImagePopup/index.js":"41","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/index.js":"42","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/CentralTimer/index.js":"43","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/GeoRedirection/index.js":"44","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/BreakEvenCalculator/index.js":"45","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/index.js":"46","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/MobileVibrator/index.js":"47","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/DynamicElements/index.js":"48","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/Offeriframe/index.js":"49","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/BackButtonredirection/index.js":"50","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBarTimer/index.js":"51","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/index.js":"52","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ImageOptimization/index.js":"53","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/AutoplayVideo/index.js":"54","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ProofApp/index.js":"55","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Loader.js":"56","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Popup.js":"57","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Constant.js":"58","/opt/bitnami/apache/htdocs/converzee-frontend/src/actions/RequestHandler.js":"59","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/layout/Profile.js":"60","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/DateRangeFilter.js":"61","/opt/bitnami/apache/htdocs/converzee-frontend/src/config.js":"62","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/DropDown.js":"63","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/layout/ToolLayout.js":"64","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/PreviewAble.js":"65","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/TableWithData.js":"66","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/subpages/create/CreateSideBar.js":"67","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/subpages/create/CreateText.js":"68","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/subpages/create/Code.js":"69","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/subpages/create/Style.js":"70","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ThirdParty/Text.js":"71","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ThirdParty/SideBar.js":"72","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Info.js":"73","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Filter.js":"74","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/subpages/create/FileUploader.js":"75","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/subpages/create/CTA.js":"76","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/subpages/create/Timer.js":"77","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/subpages/create/Layout.js":"78","/opt/bitnami/apache/htdocs/converzee-frontend/src/actions/ResellerUtil.js":"79","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/Text.js":"80","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/SideBar.js":"81","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/Responders.js":"82","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/CTA.js":"83","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/Style.js":"84","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/Code.js":"85","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/utils/Modal.js":"86","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/Time.js":"87","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/Preview.js":"88","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/Icons.js":"89","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/Image.js":"90","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/Video.js":"91","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/BonusUpsell/SideBar.js":"92","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ProofApp/Display.js":"93","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ProofApp/Style.js":"94","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ProofApp/Preview.js":"95","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ProofApp/Code.js":"96","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/layout/LayoutSelector.js":"97","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ProofApp/Script.js":"98","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ProofApp/Text.js":"99","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ProofApp/SideBar.js":"100","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/AutoplayVideo/Icons.js":"101","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/AutoplayVideo/Video.js":"102","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/AutoplayVideo/Preview.js":"103","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/AutoplayVideo/Code.js":"104","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/AutoplayVideo/Script.js":"105","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/AutoplayVideo/Text.js":"106","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/AutoplayVideo/SideBar.js":"107","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Uploader.js":"108","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/Preview.js":"109","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/CTA.js":"110","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/Timer.js":"111","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/Style.js":"112","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/Code.js":"113","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/CreateText.js":"114","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/CreateSideBar.js":"115","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBarTimer/Preview.js":"116","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBarTimer/CTA.js":"117","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBarTimer/Timer.js":"118","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBarTimer/Layout.js":"119","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBarTimer/Style.js":"120","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBarTimer/Code.js":"121","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBarTimer/CreateText.js":"122","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/Layout.js":"123","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBarTimer/CreateSideBar.js":"124","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/BackButtonredirection/SideBar.js":"125","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/BackButtonredirection/Text.js":"126","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Editor.js":"127","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/SuccessPopUp.js":"128","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/Offeriframe/Text.js":"129","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/Offeriframe/SideBar.js":"130","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/DynamicElements/Style.js":"131","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/DynamicElements/SideBar.js":"132","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/DynamicElements/Text.js":"133","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/MobileVibrator/SideBar.js":"134","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/MobileVibrator/Timer.js":"135","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/Preview.js":"136","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/NoThanks.js":"137","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/CTA.js":"138","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/Media.js":"139","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/Style.js":"140","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/SideBar.js":"141","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/Text.js":"142","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/BreakEvenCalculator/Result.js":"143","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/BreakEvenCalculator/Number.js":"144","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/BreakEvenCalculator/SideBar.js":"145","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/GeoRedirection/Redirection.js":"146","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/GeoRedirection/SideBar.js":"147","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/GeoRedirection/Text.js":"148","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Portal.js":"149","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/TimeCounter.js":"150","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Switch.js":"151","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/UrlInput.js":"152","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/DynamicElements/Icon.js":"153","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/CentralTimer/Preview.js":"154","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/CentralTimer/Style.js":"155","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/CentralTimer/SideBar.js":"156","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/CentralTimer/Text.js":"157","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/Preview.js":"158","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/Style.js":"159","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/SideBar.js":"160","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/Text.js":"161","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ImagePopup/Preview.js":"162","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ImagePopup/Image.js":"163","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ImagePopup/SideBar.js":"164","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ImagePopup/Text.js":"165","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/UrgencyTimer/Preview.js":"166","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/UrgencyTimer/Style.js":"167","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/UrgencyTimer/Timer.js":"168","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/UrgencyTimer/SideBar.js":"169","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/UrgencyTimer/Text.js":"170","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/TabMessaging/SideBar.js":"171","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/TabMessaging/Text.js":"172","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/TabMessaging/Timing.js":"173","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/TabMessaging/Favicon.js":"174","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/SpecialBonusOptin/Code.js":"175","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/SpecialBonusOptin/Preview.js":"176","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/SpecialBonusOptin/CTA.js":"177","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/SpecialBonusOptin/Text.js":"178","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/SpecialBonusOptin/SideBar.js":"179","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ReviewEngin/Preview.js":"180","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ReviewEngin/Code.js":"181","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ReviewEngin/Style.js":"182","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ReviewEngin/Text.js":"183","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ReviewEngin/SideBar.js":"184","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Club/Preview.js":"185","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Club/Time.js":"186","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Club/Code.js":"187","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Club/Style.js":"188","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Club/CTA.js":"189","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Club/Text.js":"190","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Club/SideBar.js":"191","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/BonusUpsell/Style.js":"192","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/BonusUpsell/Image.js":"193","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/BonusUpsell/Text.js":"194","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/BonusUpsell/SideImage.js":"195","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/FlipClock.js":"196","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Emoji.js":"197","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Club/circularClock.js":"198"},{"size":466,"mtime":1644345967735,"results":"199","hashOfConfig":"200"},{"size":17167,"mtime":1646032667719,"results":"201","hashOfConfig":"200"},{"size":4941,"mtime":1640346248210,"results":"202","hashOfConfig":"200"},{"size":2709,"mtime":1653903065885,"results":"203","hashOfConfig":"200"},{"size":43642,"mtime":1653902937251,"results":"204","hashOfConfig":"200"},{"size":15082,"mtime":1643635009023,"results":"205","hashOfConfig":"200"},{"size":8804,"mtime":1643979312267,"results":"206","hashOfConfig":"200"},{"size":4181,"mtime":1643635012659,"results":"207","hashOfConfig":"200"},{"size":8427,"mtime":1653901688832,"results":"208","hashOfConfig":"200"},{"size":13444,"mtime":1643375823104,"results":"209","hashOfConfig":"200"},{"size":7774,"mtime":1653902712482,"results":"210","hashOfConfig":"200"},{"size":10352,"mtime":1653902712478,"results":"211","hashOfConfig":"200"},{"size":5067,"mtime":1643798328738,"results":"212","hashOfConfig":"200"},{"size":7012,"mtime":1653902703486,"results":"213","hashOfConfig":"200"},{"size":3198,"mtime":1653902722697,"results":"214","hashOfConfig":"200"},{"size":13416,"mtime":1644069601306,"results":"215","hashOfConfig":"200"},{"size":10724,"mtime":1647253912641,"results":"216","hashOfConfig":"200"},{"size":384,"mtime":1638623946453,"results":"217","hashOfConfig":"200"},{"size":18280,"mtime":1644932682924,"results":"218","hashOfConfig":"200"},{"size":2260,"mtime":1643376137169,"results":"219","hashOfConfig":"200"},{"size":1002,"mtime":1653901552115,"results":"220","hashOfConfig":"200"},{"size":33882,"mtime":1646032083823,"results":"221","hashOfConfig":"200"},{"size":8603,"mtime":1643290789829,"results":"222","hashOfConfig":"200"},{"size":6712,"mtime":1643893607776,"results":"223","hashOfConfig":"200"},{"size":3883,"mtime":1646038337427,"results":"224","hashOfConfig":"200"},{"size":4848,"mtime":1643893592373,"results":"225","hashOfConfig":"200"},{"size":94,"mtime":1638623843114,"results":"226","hashOfConfig":"200"},{"size":5220,"mtime":1644230322170,"results":"227","hashOfConfig":"200"},{"size":4074,"mtime":1646455615534,"results":"228","hashOfConfig":"200"},{"size":4864,"mtime":1638866849325,"results":"229","hashOfConfig":"200"},{"size":35669,"mtime":1653901636239,"results":"230","hashOfConfig":"200"},{"size":3202,"mtime":1637608086000,"results":"231","hashOfConfig":"200"},{"size":24979,"mtime":1646032108661,"results":"232","hashOfConfig":"200"},{"size":9206,"mtime":1644069562308,"results":"233","hashOfConfig":"200"},{"size":3581,"mtime":1638266037744,"results":"234","hashOfConfig":"200"},{"size":21573,"mtime":1646395838606,"results":"235","hashOfConfig":"200"},{"size":4781,"mtime":1643721437945,"results":"236","hashOfConfig":"200"},{"size":7954,"mtime":1640345278113,"results":"237","hashOfConfig":"200"},{"size":7622,"mtime":1643635111058,"results":"238","hashOfConfig":"200"},{"size":5654,"mtime":1640345828302,"results":"239","hashOfConfig":"200"},{"size":5426,"mtime":1640345812583,"results":"240","hashOfConfig":"200"},{"size":6286,"mtime":1653902664996,"results":"241","hashOfConfig":"200"},{"size":6122,"mtime":1643117209866,"results":"242","hashOfConfig":"200"},{"size":4692,"mtime":1640345791604,"results":"243","hashOfConfig":"200"},{"size":5738,"mtime":1640345771069,"results":"244","hashOfConfig":"200"},{"size":7253,"mtime":1653902339967,"results":"245","hashOfConfig":"200"},{"size":3926,"mtime":1653902526466,"results":"246","hashOfConfig":"200"},{"size":5700,"mtime":1644582557176,"results":"247","hashOfConfig":"200"},{"size":3828,"mtime":1640345820591,"results":"248","hashOfConfig":"200"},{"size":4376,"mtime":1640345768213,"results":"249","hashOfConfig":"200"},{"size":9490,"mtime":1643290724280,"results":"250","hashOfConfig":"200"},{"size":9162,"mtime":1646809270851,"results":"251","hashOfConfig":"200"},{"size":1884,"mtime":1640345811059,"results":"252","hashOfConfig":"200"},{"size":7578,"mtime":1643290699578,"results":"253","hashOfConfig":"200"},{"size":6624,"mtime":1646398304139,"results":"254","hashOfConfig":"200"},{"size":258,"mtime":1639572519358,"results":"255","hashOfConfig":"200"},{"size":9701,"mtime":1647253861972,"results":"256","hashOfConfig":"200"},{"size":644,"mtime":1637608086000,"results":"257","hashOfConfig":"200"},{"size":2304,"mtime":1646037238135,"results":"258","hashOfConfig":"200"},{"size":7121,"mtime":1653901688840,"results":"259","hashOfConfig":"200"},{"size":994,"mtime":1643375835303,"results":"260","hashOfConfig":"200"},{"size":28,"mtime":1640346184189,"results":"261","hashOfConfig":"200"},{"size":6972,"mtime":1643793164824,"results":"262","hashOfConfig":"200"},{"size":14369,"mtime":1653904092135,"results":"263","hashOfConfig":"200"},{"size":2242,"mtime":1653901635999,"results":"264","hashOfConfig":"200"},{"size":1377,"mtime":1643979293096,"results":"265","hashOfConfig":"200"},{"size":4151,"mtime":1640349995102,"results":"266","hashOfConfig":"200"},{"size":2286,"mtime":1640349996105,"results":"267","hashOfConfig":"200"},{"size":4795,"mtime":1643979454848,"results":"268","hashOfConfig":"200"},{"size":2270,"mtime":1640349998085,"results":"269","hashOfConfig":"200"},{"size":1120,"mtime":1643979276924,"results":"270","hashOfConfig":"200"},{"size":566,"mtime":1643878746053,"results":"271","hashOfConfig":"200"},{"size":326,"mtime":1639572518386,"results":"272","hashOfConfig":"200"},{"size":5772,"mtime":1646031959081,"results":"273","hashOfConfig":"200"},{"size":1222,"mtime":1640349997061,"results":"274","hashOfConfig":"200"},{"size":2089,"mtime":1640349996145,"results":"275","hashOfConfig":"200"},{"size":5950,"mtime":1644248826019,"results":"276","hashOfConfig":"200"},{"size":2904,"mtime":1640349997129,"results":"277","hashOfConfig":"200"},{"size":486,"mtime":1639574796465,"results":"278","hashOfConfig":"200"},{"size":1693,"mtime":1643375759843,"results":"279","hashOfConfig":"200"},{"size":3010,"mtime":1643290573220,"results":"280","hashOfConfig":"200"},{"size":8398,"mtime":1653901952184,"results":"281","hashOfConfig":"200"},{"size":2899,"mtime":1653901951264,"results":"282","hashOfConfig":"200"},{"size":2866,"mtime":1643290574104,"results":"283","hashOfConfig":"200"},{"size":4610,"mtime":1653901951272,"results":"284","hashOfConfig":"200"},{"size":16191,"mtime":1646038389176,"results":"285","hashOfConfig":"200"},{"size":6190,"mtime":1653901952204,"results":"286","hashOfConfig":"200"},{"size":8068,"mtime":1643697759656,"results":"287","hashOfConfig":"200"},{"size":3088,"mtime":1643290571316,"results":"288","hashOfConfig":"200"},{"size":1679,"mtime":1644602341240,"results":"289","hashOfConfig":"200"},{"size":2380,"mtime":1653902665892,"results":"290","hashOfConfig":"200"},{"size":1287,"mtime":1638266037572,"results":"291","hashOfConfig":"200"},{"size":2426,"mtime":1646032801212,"results":"292","hashOfConfig":"200"},{"size":1366,"mtime":1646032804912,"results":"293","hashOfConfig":"200"},{"size":2422,"mtime":1653902573916,"results":"294","hashOfConfig":"200"},{"size":4678,"mtime":1653902570836,"results":"295","hashOfConfig":"200"},{"size":1828,"mtime":1643635009971,"results":"296","hashOfConfig":"200"},{"size":2360,"mtime":1646032803068,"results":"297","hashOfConfig":"200"},{"size":2434,"mtime":1646395889848,"results":"298","hashOfConfig":"200"},{"size":1490,"mtime":1646032803832,"results":"299","hashOfConfig":"200"},{"size":1821,"mtime":1643721570251,"results":"300","hashOfConfig":"200"},{"size":2457,"mtime":1643290702449,"results":"301","hashOfConfig":"200"},{"size":3868,"mtime":1653902248107,"results":"302","hashOfConfig":"200"},{"size":4704,"mtime":1653902253487,"results":"303","hashOfConfig":"200"},{"size":2360,"mtime":1643290700590,"results":"304","hashOfConfig":"200"},{"size":636,"mtime":1643290701578,"results":"305","hashOfConfig":"200"},{"size":1953,"mtime":1643290701498,"results":"306","hashOfConfig":"200"},{"size":2606,"mtime":1639572526034,"results":"307","hashOfConfig":"200"},{"size":7130,"mtime":1646647257786,"results":"308","hashOfConfig":"200"},{"size":2522,"mtime":1653902393572,"results":"309","hashOfConfig":"200"},{"size":4241,"mtime":1653902393580,"results":"310","hashOfConfig":"200"},{"size":1499,"mtime":1646647280473,"results":"311","hashOfConfig":"200"},{"size":4749,"mtime":1653902389496,"results":"312","hashOfConfig":"200"},{"size":2780,"mtime":1653902391624,"results":"313","hashOfConfig":"200"},{"size":1886,"mtime":1643117225341,"results":"314","hashOfConfig":"200"},{"size":9984,"mtime":1643290725424,"results":"315","hashOfConfig":"200"},{"size":2505,"mtime":1653902432802,"results":"316","hashOfConfig":"200"},{"size":6790,"mtime":1653902433690,"results":"317","hashOfConfig":"200"},{"size":774,"mtime":1643290724468,"results":"318","hashOfConfig":"200"},{"size":2120,"mtime":1643290727468,"results":"319","hashOfConfig":"200"},{"size":4780,"mtime":1653902432810,"results":"320","hashOfConfig":"200"},{"size":2727,"mtime":1646817924761,"results":"321","hashOfConfig":"200"},{"size":777,"mtime":1643117228113,"results":"322","hashOfConfig":"200"},{"size":2039,"mtime":1643290721529,"results":"323","hashOfConfig":"200"},{"size":828,"mtime":1640345768169,"results":"324","hashOfConfig":"200"},{"size":1202,"mtime":1653902289765,"results":"325","hashOfConfig":"200"},{"size":4951,"mtime":1640344654847,"results":"326","hashOfConfig":"200"},{"size":994,"mtime":1639572522426,"results":"327","hashOfConfig":"200"},{"size":1230,"mtime":1643878639875,"results":"328","hashOfConfig":"200"},{"size":572,"mtime":1643878632247,"results":"329","hashOfConfig":"200"},{"size":3465,"mtime":1643117216214,"results":"330","hashOfConfig":"200"},{"size":1044,"mtime":1643117215330,"results":"331","hashOfConfig":"200"},{"size":2867,"mtime":1645010911197,"results":"332","hashOfConfig":"200"},{"size":1113,"mtime":1640345817071,"results":"333","hashOfConfig":"200"},{"size":1920,"mtime":1653902533282,"results":"334","hashOfConfig":"200"},{"size":6012,"mtime":1653902341139,"results":"335","hashOfConfig":"200"},{"size":888,"mtime":1653902340283,"results":"336","hashOfConfig":"200"},{"size":2650,"mtime":1653902338523,"results":"337","hashOfConfig":"200"},{"size":2206,"mtime":1653902339403,"results":"338","hashOfConfig":"200"},{"size":4022,"mtime":1653902342003,"results":"339","hashOfConfig":"200"},{"size":2009,"mtime":1653902341723,"results":"340","hashOfConfig":"200"},{"size":2590,"mtime":1653902342870,"results":"341","hashOfConfig":"200"},{"size":1276,"mtime":1640345771977,"results":"342","hashOfConfig":"200"},{"size":4439,"mtime":1640345771033,"results":"343","hashOfConfig":"200"},{"size":846,"mtime":1640345772053,"results":"344","hashOfConfig":"200"},{"size":3489,"mtime":1640345791648,"results":"345","hashOfConfig":"200"},{"size":1052,"mtime":1640345792480,"results":"346","hashOfConfig":"200"},{"size":751,"mtime":1640345792600,"results":"347","hashOfConfig":"200"},{"size":981,"mtime":1639572521530,"results":"348","hashOfConfig":"200"},{"size":3856,"mtime":1639572525126,"results":"349","hashOfConfig":"200"},{"size":709,"mtime":1639572523326,"results":"350","hashOfConfig":"200"},{"size":3365,"mtime":1646997192130,"results":"351","hashOfConfig":"200"},{"size":18786,"mtime":1643117214418,"results":"352","hashOfConfig":"200"},{"size":10118,"mtime":1643117210778,"results":"353","hashOfConfig":"200"},{"size":2617,"mtime":1653902314680,"results":"354","hashOfConfig":"200"},{"size":1311,"mtime":1643117210798,"results":"355","hashOfConfig":"200"},{"size":1784,"mtime":1643117211714,"results":"356","hashOfConfig":"200"},{"size":3080,"mtime":1653902665000,"results":"357","hashOfConfig":"200"},{"size":2515,"mtime":1643117270819,"results":"358","hashOfConfig":"200"},{"size":1626,"mtime":1643117270791,"results":"359","hashOfConfig":"200"},{"size":853,"mtime":1643117271711,"results":"360","hashOfConfig":"200"},{"size":1644,"mtime":1640345813455,"results":"361","hashOfConfig":"200"},{"size":1141,"mtime":1640345812107,"results":"362","hashOfConfig":"200"},{"size":924,"mtime":1640345814019,"results":"363","hashOfConfig":"200"},{"size":840,"mtime":1653902451574,"results":"364","hashOfConfig":"200"},{"size":4868,"mtime":1640345829146,"results":"365","hashOfConfig":"200"},{"size":3811,"mtime":1653902636029,"results":"366","hashOfConfig":"200"},{"size":1983,"mtime":1653902636685,"results":"367","hashOfConfig":"200"},{"size":1630,"mtime":1640345829254,"results":"368","hashOfConfig":"200"},{"size":2294,"mtime":1640345830210,"results":"369","hashOfConfig":"200"},{"size":1303,"mtime":1640345824335,"results":"370","hashOfConfig":"200"},{"size":3166,"mtime":1640345825422,"results":"371","hashOfConfig":"200"},{"size":2079,"mtime":1653902606318,"results":"372","hashOfConfig":"200"},{"size":2913,"mtime":1653902605654,"results":"373","hashOfConfig":"200"},{"size":4551,"mtime":1653902810093,"results":"374","hashOfConfig":"200"},{"size":5868,"mtime":1639572728356,"results":"375","hashOfConfig":"200"},{"size":1366,"mtime":1639572726540,"results":"376","hashOfConfig":"200"},{"size":2020,"mtime":1639572729256,"results":"377","hashOfConfig":"200"},{"size":1881,"mtime":1639572728432,"results":"378","hashOfConfig":"200"},{"size":7096,"mtime":1637990184561,"results":"379","hashOfConfig":"200"},{"size":4551,"mtime":1653902784134,"results":"380","hashOfConfig":"200"},{"size":1537,"mtime":1637990185641,"results":"381","hashOfConfig":"200"},{"size":2958,"mtime":1637990186529,"results":"382","hashOfConfig":"200"},{"size":1325,"mtime":1637990185541,"results":"383","hashOfConfig":"200"},{"size":9630,"mtime":1643459028207,"results":"384","hashOfConfig":"200"},{"size":6209,"mtime":1653901595493,"results":"385","hashOfConfig":"200"},{"size":4610,"mtime":1653901583137,"results":"386","hashOfConfig":"200"},{"size":2420,"mtime":1643459029411,"results":"387","hashOfConfig":"200"},{"size":2514,"mtime":1653901583721,"results":"388","hashOfConfig":"200"},{"size":4551,"mtime":1646395831519,"results":"389","hashOfConfig":"200"},{"size":2732,"mtime":1643459029067,"results":"390","hashOfConfig":"200"},{"size":2114,"mtime":1638266038668,"results":"391","hashOfConfig":"200"},{"size":1060,"mtime":1638266036676,"results":"392","hashOfConfig":"200"},{"size":1487,"mtime":1638266039364,"results":"393","hashOfConfig":"200"},{"size":1062,"mtime":1638266038472,"results":"394","hashOfConfig":"200"},{"size":304,"mtime":1639572517362,"results":"395","hashOfConfig":"200"},{"size":1242,"mtime":1639572516242,"results":"396","hashOfConfig":"200"},{"size":3136,"mtime":1643459024132,"results":"397","hashOfConfig":"200"},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400"},"1qvvmid",{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409"},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":2,"source":"418"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433"},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462"},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485"},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488"},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491"},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494"},{"filePath":"495","messages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497"},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503"},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506"},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512"},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515"},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521"},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535"},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541"},{"filePath":"542","messages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544"},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547"},{"filePath":"548","messages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550"},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553"},{"filePath":"554","messages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556"},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"561"},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":2,"source":"568"},{"filePath":"569","messages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575"},{"filePath":"576","messages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578"},{"filePath":"579","messages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581"},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584"},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"587","messages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"589","messages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591"},{"filePath":"592","messages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"594","messages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"596"},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"599","messages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"601","messages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603"},{"filePath":"604","messages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606"},{"filePath":"607","messages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"609","messages":"610","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611"},{"filePath":"612","messages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614"},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"617","messages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"619"},{"filePath":"620","messages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"622"},{"filePath":"623","messages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625"},{"filePath":"626","messages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"628","messages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"630","messages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"632"},{"filePath":"633","messages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"637"},{"filePath":"638","messages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"640"},{"filePath":"641","messages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"643","messages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645"},{"filePath":"646","messages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"648","messages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"650","messages":"651","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652"},{"filePath":"653","messages":"654","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"655","messages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657"},{"filePath":"658","messages":"659","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"660"},{"filePath":"661","messages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"663"},{"filePath":"664","messages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"669","messages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"671","messages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673"},{"filePath":"674","messages":"675","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"676"},{"filePath":"677","messages":"678","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679"},{"filePath":"680","messages":"681","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682"},{"filePath":"683","messages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666"},{"filePath":"685","messages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"687"},{"filePath":"688","messages":"689","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"690"},{"filePath":"691","messages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"693"},{"filePath":"694","messages":"695","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"696"},{"filePath":"697","messages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"699","messages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"701","messages":"702","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"703","messages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"705"},{"filePath":"706","messages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"708"},{"filePath":"709","messages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"711","messages":"712","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"713"},{"filePath":"714","messages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"716"},{"filePath":"717","messages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"719","messages":"720","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"721","messages":"722","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"723"},{"filePath":"724","messages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"726"},{"filePath":"727","messages":"728","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"729"},{"filePath":"730","messages":"731","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"732","messages":"733","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"734","messages":"735","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"736"},{"filePath":"737","messages":"738","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"739","messages":"740","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"741"},{"filePath":"742","messages":"743","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"744","messages":"745","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"746"},{"filePath":"747","messages":"748","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"749","messages":"750","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"751"},{"filePath":"752","messages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"754","messages":"755","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"756"},{"filePath":"757","messages":"758","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"759"},{"filePath":"760","messages":"761","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"762","messages":"763","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"764"},{"filePath":"765","messages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"767","messages":"768","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"769","messages":"770","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"771"},{"filePath":"772","messages":"773","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"774"},{"filePath":"775","messages":"776","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"777"},{"filePath":"778","messages":"779","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"780","messages":"781","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"782","messages":"783","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"784","messages":"785","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"786"},{"filePath":"787","messages":"788","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"789","messages":"790","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"791"},{"filePath":"792","messages":"793","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"794","messages":"795","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"796"},{"filePath":"797","messages":"798","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"799"},{"filePath":"800","messages":"801","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"802","messages":"803","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"804"},{"filePath":"805","messages":"806","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"807"},{"filePath":"808","messages":"809","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"810"},{"filePath":"811","messages":"812","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"813","messages":"814","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"815","messages":"816","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"817"},{"filePath":"818","messages":"819","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"820"},{"filePath":"821","messages":"822","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"823"},{"filePath":"824","messages":"825","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"826","messages":"827","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"828"},{"filePath":"829","messages":"830","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"831"},{"filePath":"832","messages":"833","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"834"},{"filePath":"835","messages":"836","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"837"},{"filePath":"838","messages":"839","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"840","messages":"841","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"842"},{"filePath":"843","messages":"844","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"845","messages":"846","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"847","messages":"848","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"849","messages":"850","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"851"},{"filePath":"852","messages":"853","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"854"},{"filePath":"855","messages":"856","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"857"},{"filePath":"858","messages":"859","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"860"},{"filePath":"861","messages":"862","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"863"},{"filePath":"864","messages":"865","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"866"},{"filePath":"867","messages":"868","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"869"},{"filePath":"870","messages":"871","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"872","messages":"873","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"874","messages":"875","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"876","messages":"877","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"878"},{"filePath":"879","messages":"880","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"866"},{"filePath":"881","messages":"882","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"883","messages":"884","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"885"},{"filePath":"886","messages":"887","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"888"},{"filePath":"889","messages":"890","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"891"},{"filePath":"892","messages":"893","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"894"},{"filePath":"895","messages":"896","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"632"},{"filePath":"897","messages":"898","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"899"},{"filePath":"900","messages":"901","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"902"},{"filePath":"903","messages":"904","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"905"},{"filePath":"906","messages":"907","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"908","messages":"909","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"910"},{"filePath":"911","messages":"912","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"913"},{"filePath":"914","messages":"915","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"916"},{"filePath":"917","messages":"918","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"919"},{"filePath":"920","messages":"921","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"922","messages":"923","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"924","messages":"925","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/opt/bitnami/apache/htdocs/converzee-frontend/src/index.js",["926"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/App.js",["927","928","929","930","931","932"],"import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Redirect  } from \"react-router-dom\";\r\nimport Landing from \"./components/layout/Landing\";\r\nimport Dashboard from \"./components/pages/Dashboard\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport Sidebar from \"./components/layout/Sidebar\";\r\nimport Create from \"./components/pages/Create\";\r\nimport CreateElement from \"./components/pages/CreateElement\";\r\nimport Campaigns from \"./components/pages/Campaigns\";\r\nimport Util from \"./components/Util\";\r\nimport { Storage } from \"./utils/Storage\";\r\nimport ToolUtil, { getToolsPermission } from \"./utils/ToolUtil\";\r\nimport SessionLogin from './components/layout/SessionLogin';\r\nimport { Request } from \"./components/auth/authHandler\";\r\n\r\nimport _ from \"lodash\";\r\nimport {\r\n  TABMESSAGING,\r\n  URGENCY,\r\n  IMAGEPOPUP,\r\n  VIDEOPOPUP,\r\n  CENTRALTIMER,\r\n  GEOREDIRECTION,\r\n  BREAKEVENCALCULATOR,\r\n  EXITINTENT,\r\n  MOBILEVIBRATOR,\r\n  IMAGE_OPTIOMAZTION,\r\n  BACKBUTTONREDIRECTION,\r\n  HELLOBARTIMER,\r\n  HELLOBAR,\r\n  DYNEMICELEMENT,\r\n  OFFERIFRAME,\r\n  DOMAIN,\r\n  PIXEL,\r\n  ADMIN,\r\n  SUPER_ADMIN,\r\n  SUPPORT_USER,\r\n  OTO2,\r\n  OTO3,\r\n  EMAIL_SEND,\r\n  THIRD_PARTY,\r\n  USER_SETTINGS,\r\n  OPTIN_FORM,\r\n  AGENCY,\r\n  BONUS,\r\n  CLUB,\r\n  BONUS_CREATE,\r\n  REVIEW_ENGIN,\r\n  INPUT_FORM,\r\n  TRAINING,\r\n  EMAIL_TIMER,\r\n  VIP_BONUS_VIEW,\r\n  VIP_BONUS,\r\n  SPECIAL_OPTIN_FORM,\r\n  AUTO_RESPONDER,\r\n  MAIL_RESPONDER,\r\n  AUTO_PLAY_VIDEO,\r\n  PROOF_APP\r\n} from \"./utils/Routes\";\r\nimport TabMessaging from \"./components/pages/tools/TabMessaging\";\r\nimport UrgencyTimer from \"./components/pages/tools/UrgencyTimer\";\r\nimport ImagePopup from \"./components/pages/tools/ImagePopup\";\r\nimport VideoPopup from \"./components/pages/tools/VideoPopup\";\r\nimport CentralTimer from \"./components/pages/tools/CentralTimer\";\r\nimport GeoRedirection from \"./components/pages/tools/GeoRedirection\";\r\nimport BreakEvenCalculator from \"./components/pages/tools/BreakEvenCalculator\";\r\nimport ExitIntent from \"./components/pages/tools/ExitIntent\";\r\nimport MobileVibrator from \"./components/pages/tools/MobileVibrator\";\r\nimport DynamicElement from \"./components/pages/tools/DynamicElements\";\r\nimport OfferIframe from \"./components/pages/tools/Offeriframe\";\r\nimport BackButtonRedirection from \"./components/pages/tools/BackButtonredirection\";\r\nimport HelloBarTimer from \"./components/pages/tools/HelloBarTimer\";\r\nimport HelloBar from \"./components/pages/tools/HelloBar\";\r\nimport Domain from \"./components/pages/Domain\";\r\nimport Pixel from \"./components/pages/Pixel\";\r\nimport ImageOptimization from \"./components/pages/tools/ImageOptimization\";\r\nimport UserSettings from \"./components/pages/UserSettings\";\r\nimport Admin from \"./components/admin\";\r\nimport SuperAdmin from \"./components/superAdmin/SuperAdmin\";\r\nimport SupportUser from \"./components/supportUser/SupportUser\";\r\nimport ThirdParty from \"./components/ThirdParty/\";\r\nimport OptinForm from \"./components/OptinForm\";\r\nimport OTO3Create from \"./components/pages/OTO3/OTO3Create\";\r\nimport OTO2Create from \"./components/pages/OTO2/OTO2Create\";\r\nimport AutoplayVideo from \"./components/pages/tools/AutoplayVideo\";\r\nimport ProofApp from \"./components/pages/tools/ProofApp\";\r\nimport { RPath } from \"./actions/URLs\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./style.css\";\r\nimport Helper from \"./Helper\";\r\nimport Agency from \"./components/pages/Agency\";\r\nimport { isMobile } from \"./components/utils/ScreenUtil\";\r\nimport BonusPage from \"./components/BonusUpsell\";\r\nimport Club from \"./components/Club\";\r\nimport BonusCreate from \"./components/pages/Bonus/BonusCreate\";\r\nimport ReviewEngin from \"./components/ReviewEngin\";\r\n// import { Training } from \"./components/Training\";\r\nimport EmailTimer from \"./components/pages/Bonus/EmailTimer\";\r\nimport VipBonus from \"./components/pages/VipBonus/VipBonus\";\r\nimport SpecialOptin from \"./components/SpecialBonusOptin\";\r\nimport AutoResponderConfig from \"./components/comman/AutoResponderConfig\";\r\nclass App extends Component {\r\n  state = {\r\n    isAuthenticated: false,\r\n    title: \"Dashboard\",\r\n    loading: false,\r\n    tools: new Set(),\r\n    access: 20,\r\n    visible: false,\r\n    isUpgrade1: false,\r\n    isUpgrade2: false,\r\n    isVipBonus: false,\r\n    mainHeight: window.innerHeight,\r\n    fullSideBar: true,\r\n    getAccessDone: false,\r\n    checkSession: false,\r\n    createdAt: \"\",\r\n    isSubuser: false\r\n  };\r\n  isSuccess = false;\r\n  keys = 0;\r\n  consumeLicence = 0;\r\n  totalLicence = 0;\r\n  componentWillMount() {\r\n    window.gs = {};\r\n    const loader = document.getElementById(\"loaderItem\");\r\n    loader.style = \"display:none\";\r\n    const body = document.getElementsByTagName(\"body\")[0];\r\n    body.style = \"\";\r\n    window.rPath = RPath();\r\n    window.addEventListener(\"resize\", this.onResize);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.onResize);\r\n  }\r\n\r\n  onResize = () => {\r\n    /// this.forceUpdate();\r\n  };\r\n\r\n  toggleSideBar = () => {\r\n    this.setState({ fullSideBar: !this.state.fullSideBar });\r\n  };\r\n\r\n  componentDidMount() {\r\n    ToolUtil.setToolsToItemIdMap();\r\n    // window.gs.setAuth = this.logout;\r\n    this.logout();\r\n    Util.setCreateItems();\r\n  }\r\n  setAuth = (auth) => {\r\n    this.setState({ isAuthenticated: auth }, () => {\r\n      if (this.state.isAuthenticated) {\r\n        this.getToolsAccess();\r\n      }\r\n    });\r\n  };\r\n  logout = (auth = null) => {\r\n    if(window.location.pathname == \"/\") {\r\n      if(Request.getAuth()) {\r\n        this.setState({ isAuthenticated: true });\r\n        window.location.pathname = \"/Dashboard\";\r\n      } else {\r\n        this.setState({ isAuthenticated: false, checkSession: false });\r\n      }\r\n    } else {\r\n      if(Request.getAuth()) {\r\n        this.setState({ checkSession: false });\r\n      } else {\r\n        this.setState({ isAuthenticated: true,checkSession: true });\r\n      }\r\n    }\r\n    ToolUtil.toolsToAccess = null;\r\n    ToolUtil.isResponsed = false;\r\n  };\r\n\r\n  getToolsAccess = () => {\r\n    try {\r\n      getToolsPermission((permission, err) => {\r\n        if (permission) {\r\n          this.keys = permission.keys;\r\n          this.consumeLicence = permission.consumeLicence;\r\n          this.totalLicence = permission.totallicence;\r\n          this.setState({\r\n            getAccessDone: true,\r\n            tools: new Set(permission.tools),\r\n            access: permission.access,\r\n            isUpgrade1: ToolUtil.isUpgrade1,\r\n            isUpgrade2: ToolUtil.isUpgrade2,\r\n            isVipBonus: ToolUtil.isVipBonus,\r\n            createdAt: ToolUtil.createdAt,\r\n            isSubuser: ToolUtil.isSubuser\r\n          });\r\n        }\r\n        if (_.isEmpty(permission)) {\r\n          setTimeout(() => {\r\n            this.getToolsAccess();\r\n          }, 2000);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  isAccess = (tool) => {\r\n    const { tools, access } = this.state;\r\n    if (access > 80) return true;\r\n    return tools.has(tool);\r\n  };\r\n\r\n  setTitle = (title) => {\r\n    this.setState({ title });\r\n  };\r\n\r\n  getWidthStyle = () => {\r\n    const { fullSideBar } = this.state;\r\n    if (isMobile()) {\r\n      return { width: \"100%\" };\r\n    }\r\n    return fullSideBar ? { width: \"calc(100% - 214px)\" } : { width: \"calc(100% - 65px)\" };\r\n  };\r\n\r\n  render() {\r\n    const { isAuthenticated, title, access, isUpgrade1, isUpgrade2, fullSideBar, isVipBonus, createdAt, isSubuser } = this.state;\r\n    const { isAccess, keys, consumeLicence, totalLicence } = this;\r\n    return (\r\n      <div className=\"wrapper\">\r\n        {isAuthenticated ? (\r\n          <Router>\r\n            <React.Fragment>\r\n              <Sidebar access={access} createdAt={createdAt} isFull={fullSideBar} toggleSideBar={this.toggleSideBar} />\r\n              <div className=\"d-flex flex-column content-wrapper\" style={this.getWidthStyle()}>\r\n                <div className=\"content\">\r\n                  <Navbar title={title} toggleSideBar={this.toggleSideBar} />\r\n                  <Switch>\r\n                    <Route exact path=\"/Dashboard\" setTitle={this.setTitle} component={Dashboard} />\r\n                    <Route exact path=\"/CreatePanel/:routeName\" setTitle={this.setTitle} component={Create} />\r\n                    <Route exact path=\"/UpdatePanel/:id\" setTitle={this.setTitle} component={Create} />\r\n                    <Route exact path=\"/Create\" setTitle={this.setTitle} component={CreateElement} />\r\n                    <Route exact path={USER_SETTINGS} setTitle={this.setTitle} component={UserSettings} />\r\n                    {access > 50 ? <Route exact path={AGENCY} setTitle={this.setTitle} component={Agency} /> : null}\r\n                    {/* ToolsRoutes  */}\r\n                    {isAccess(1) ? <Route exact path={TABMESSAGING} setTitle={this.setTitle} component={TabMessaging} /> : null}\r\n                    {isAccess(2) ? <Route exact path={URGENCY} setTitle={this.setTitle} component={UrgencyTimer} /> : null}\r\n                    {isAccess(4) ? <Route exact path={IMAGEPOPUP} setTitle={this.setTitle} component={ImagePopup} /> : null}\r\n                    {isAccess(5) ? <Route exact path={VIDEOPOPUP} setTitle={this.setTitle} component={VideoPopup} /> : null}\r\n                    {isAccess(6) ? <Route exact path={CENTRALTIMER} setTitle={this.setTitle} component={CentralTimer} /> : null}\r\n                    {isAccess(7) ? <Route exact path={GEOREDIRECTION} setTitle={this.setTitle} component={GeoRedirection} /> : null}\r\n                    {isAccess(8) ? <Route exact path={BREAKEVENCALCULATOR} setTitle={this.setTitle} component={BreakEvenCalculator} /> : null}\r\n                    {isAccess(9) ? <Route exact path={EXITINTENT} setTitle={this.setTitle} component={ExitIntent} /> : null}\r\n                    {isAccess(10) ? <Route exact path={MOBILEVIBRATOR} setTitle={this.setTitle} component={MobileVibrator} /> : null}\r\n                    {isAccess(13) ? <Route exact path={DYNEMICELEMENT} setTitle={this.setTitle} component={DynamicElement} /> : null}\r\n                    {isAccess(14) ? <Route exact path={OFFERIFRAME} setTitle={this.setTitle} component={OfferIframe} /> : null}\r\n                    {isAccess(15) ? <Route exact path={BACKBUTTONREDIRECTION} setTitle={this.setTitle} component={BackButtonRedirection} /> : null}\r\n                    {isAccess(17) ? <Route exact path={HELLOBARTIMER} setTitle={this.setTitle} component={HelloBarTimer} /> : null}\r\n                    {isAccess(3) ? <Route exact path={HELLOBAR} setTitle={this.setTitle} component={HelloBar} /> : null}\r\n                    {isAccess(8) ? <Route exact path={INPUT_FORM} setTitle={this.setTitle} component={OptinForm} /> : null}\r\n                    {isAccess(12) ? <Route exact path={IMAGE_OPTIOMAZTION} setTitle={this.setTitle} component={ImageOptimization} /> : null}\r\n                    {isAccess(18) ? <Route exact path={THIRD_PARTY} setTitle={this.setTitle} component={ThirdParty} /> : null}\r\n                    {isAccess(19) ? <Route exact path={OPTIN_FORM} setTitle={this.setTitle} component={OptinForm} /> : null}\r\n                    {isAccess(20) ? <Route exact path={CLUB} setTitle={this.setTitle} component={Club} /> : null}\r\n                    {isAccess(20) ? <Route exact path={CLUB} setTitle={this.setTitle} component={Club} /> : null}\r\n                    {isAccess(24) ? <Route exact path={AUTO_PLAY_VIDEO} setTitle={this.setTitle} component={AutoplayVideo} /> : null}\r\n                    {isAccess(25) ? <Route exact path={PROOF_APP} setTitle={this.setTitle} component={ProofApp} /> : null}\r\n                    {access > 80 || isUpgrade1 ? <Route exact path={OTO2} setTitle={this.setTitle} component={OTO2Create} /> : null}\r\n                    {access > 80 || isUpgrade2 ? <Route exact path={OTO3} setTitle={this.setTitle} component={OTO3Create} /> : null}\r\n                    {isVipBonus ? <Route exact path={VIP_BONUS} setTitle={this.setTitle} component={VipBonus} /> : null}\r\n                    {true ? <Route exact path={BONUS_CREATE} setTitle={this.setTitle} component={BonusCreate} /> : null}\r\n                    {/* {isAccess(19) ? <Route exact path={EMAIL_SEND + \"/:id\"} setTitle={this.setTitle} component={EmailSend} /> : null} */}\r\n                    {true ? <Route exact path={REVIEW_ENGIN} setTitle={this.setTitle} component={ReviewEngin} /> : null}\r\n                    {true ? <Route exact path={BONUS} setTitle={this.setTitle} component={BonusPage} /> : null}\r\n                    {isVipBonus ? <Route exact path={SPECIAL_OPTIN_FORM} setTitle={this.setTitle} component={SpecialOptin} /> : null}\r\n                    {/* id Routes */}\r\n                    {isAccess(1) ? <Route exact path={TABMESSAGING + \"/:id\"} setTitle={this.setTitle} component={TabMessaging} /> : null}\r\n                    {isAccess(2) ? <Route exact path={URGENCY + \"/:id\"} setTitle={this.setTitle} component={UrgencyTimer} /> : null}\r\n                    {isAccess(4) ? <Route exact path={IMAGEPOPUP + \"/:id\"} setTitle={this.setTitle} component={ImagePopup} /> : null}\r\n                    {isAccess(5) ? <Route exact path={VIDEOPOPUP + \"/:id\"} setTitle={this.setTitle} component={VideoPopup} /> : null}\r\n                    {isAccess(6) ? <Route exact path={CENTRALTIMER + \"/:id\"} setTitle={this.setTitle} component={CentralTimer} /> : null}\r\n                    {isAccess(7) ? <Route exact path={GEOREDIRECTION + \"/:id\"} setTitle={this.setTitle} component={GeoRedirection} /> : null}\r\n                    {isAccess(8) ? <Route exact path={BREAKEVENCALCULATOR + \"/:id\"} setTitle={this.setTitle} component={BreakEvenCalculator} /> : null}\r\n                    {isAccess(9) ? <Route exact path={EXITINTENT + \"/:id\"} setTitle={this.setTitle} component={ExitIntent} /> : null}\r\n                    {isAccess(10) ? <Route exact path={MOBILEVIBRATOR + \"/:id\"} setTitle={this.setTitle} component={MobileVibrator} /> : null}\r\n                    {isAccess(13) ? <Route exact path={DYNEMICELEMENT + \"/:id\"} setTitle={this.setTitle} component={DynamicElement} /> : null}\r\n                    {isAccess(14) ? <Route exact path={OFFERIFRAME + \"/:id\"} setTitle={this.setTitle} component={OfferIframe} /> : null}\r\n                    {isAccess(15) ? <Route exact path={BACKBUTTONREDIRECTION + \"/:id\"} setTitle={this.setTitle} component={BackButtonRedirection} /> : null}\r\n                    {isAccess(17) ? <Route exact path={HELLOBARTIMER + \"/:id\"} setTitle={this.setTitle} component={HelloBarTimer} /> : null}\r\n                    {isAccess(3) ? <Route exact path={HELLOBAR + \"/:id\"} setTitle={this.setTitle} component={HelloBar} /> : null}\r\n                    {isAccess(19) ? <Route exact path={OPTIN_FORM + \"/:id\"} setTitle={this.setTitle} component={OptinForm} /> : null}\r\n                    {isAccess(20) ? <Route exact path={CLUB + \"/:id\"} setTitle={this.setTitle} component={Club} /> : null}\r\n                    {isAccess(24) ? <Route exact path={AUTO_PLAY_VIDEO + \"/:id\"} setTitle={this.setTitle} component={AutoplayVideo} /> : null}\r\n                    {isAccess(25) ? <Route exact path={PROOF_APP + \"/:id\"} setTitle={this.setTitle} component={ProofApp} /> : null}\r\n                    {true ? <Route exact path={REVIEW_ENGIN + \"/:id\"} setTitle={this.setTitle} component={ReviewEngin} /> : null}\r\n                    {isVipBonus ? <Route exact path={VIP_BONUS_VIEW + \"/:id\"} setTitle={this.setTitle} component={Club} /> : null}\r\n                    {isVipBonus ? <Route exact path={SPECIAL_OPTIN_FORM + \"/:id\"} setTitle={this.setTitle} component={SpecialOptin} /> : null}\r\n                    <Route exact path={EMAIL_TIMER} component={EmailTimer} />\r\n\r\n                    {/* End of id Routes */}\r\n                    <Route exact path=\"/Campaigns\" setTitle={this.setTitle} component={Campaigns} />\r\n                    {access > 30 ? <Route exact path={DOMAIN} setTitle={this.setTitle} component={Domain} /> : null}\r\n                    <Route exact path={PIXEL} setTitle={this.setTitle} component={Pixel} />\r\n                    {access > 50 ? <Route exact path={ADMIN} setTitle={this.setTitle} component={() => <Admin keys={keys} consumeLicence={consumeLicence} totalLicence={totalLicence}/>} /> : null}\r\n                    {access > 80 || isSubuser ? <Route exact path={SUPER_ADMIN} setTitle={this.setTitle} component={SuperAdmin} /> : null}\r\n                    {access > 80 ? <Route exact path={SUPPORT_USER} setTitle={this.setTitle} component={SupportUser} /> : null}\r\n                    {true ? <Route exact path={MAIL_RESPONDER} setTitle={this.setTitle} component={AutoResponderConfig} /> : null}\r\n                  </Switch>\r\n                </div>\r\n              </div>\r\n            </React.Fragment>\r\n          </Router>\r\n        ) : (\r\n          <Router>\r\n            <div className=\"container auth_container\">\r\n              <Route exact path=\"/*\" component={() => <Landing setAuth={this.setAuth} />} />\r\n            </div>\r\n          </Router>\r\n        )}\r\n        <Helper />\r\n        <SessionLogin checkSession={this.state.checkSession} setAuth={this.setAuth}></SessionLogin>\r\n      </div>\r\n        // <SessionLogin isAuthenticated={isAuthenticated}></SessionLogin>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/serviceWorker.js",["933","934"],"// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\"This web app is being served cache-first by a service \" + \"worker. To learn more, visit http://bit.ly/CRA-PWA\");\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\"New content is available and will be used when all \" + \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (response.status === 404 || (contentType !== null && contentType.indexOf(\"javascript\") === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\"No internet connection found. App is running in offline mode.\");\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/Helper.js",["935"],"import React, { Component, createRef } from \"react\";\r\nimport Loader from \"./components/comman/Loader\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { SuccessModel, SayUpdate, CopyScript, ErrorModel } from \"./components/comman/Popup\";\r\n\r\nexport default class Helper extends Component {\r\n  state = {\r\n    loading: false,\r\n    visible: false,\r\n    update: false,\r\n    showError: false,\r\n  };\r\n  isSuccess = \"\";\r\n  msg = \"\";\r\n  defaultUpdateMsg = \"Follow to Update your App.\";\r\n  updateMsg = \"\";\r\n  hideUpdate = false;\r\n  link = \"\";\r\n  componentDidMount() {\r\n    window.gs.toast = toast;\r\n    window.gs.loader = this.initLoader;\r\n    window.gs.success = this.setVisible;\r\n    window.gs.sayUpdate = this.sayupdatePopup;\r\n    window.gs.setScript = this.setScript;\r\n    window.gs.showErrorWithHtml = this.showErrorWithHtml;\r\n  }\r\n  setVisible = (isSuccess, msg = \"\") => {\r\n    this.isSuccess = isSuccess;\r\n    this.msg = msg;\r\n    this.setState({ visible: true }, () => {\r\n      setTimeout(() => {\r\n        this.setState({ visible: false });\r\n      }, 5000);\r\n    });\r\n  };\r\n\r\n  setScript = (script = \"\", isShow = true) => {\r\n    if (isShow) {\r\n      this.setState({ showCopyScript: true, script });\r\n    } else {\r\n      this.setState({ showCopyScript: false, script });\r\n    }\r\n  };\r\n\r\n  sayupdatePopup = (msg = null, hideButton = false, link = \"\") => {\r\n    if (msg) {\r\n      this.updateMsg = msg;\r\n    } else {\r\n      this.updateMsg = this.defaultUpdateMsg;\r\n    }\r\n    this.link = link;\r\n    this.hideUpdate = hideButton;\r\n    this.setState({ update: true });\r\n  };\r\n\r\n  closeUpdate = () => {\r\n    this.setState({ update: false });\r\n  };\r\n\r\n  initLoader = (isOn) => {\r\n    this.setState({ loading: isOn });\r\n  };\r\n\r\n  showErrorWithHtml = (err) => {\r\n    const { showError } = this.state;\r\n    if (showError) {\r\n      this.setState({ showError: false });\r\n    } else {\r\n      this.setState({ showError: err });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { loading, update, showCopyScript, script, showError } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        {loading ? <Loader /> : null}\r\n        <ToastContainer autoClose={5000} />\r\n        {showError ? <ErrorModel visible={showError ? true : false} Close={this.showErrorWithHtml} {...showError} /> : null}\r\n        <SuccessModel isSuccess={this.isSuccess} msg={this.msg} visible={this.state.visible} />\r\n        <SayUpdate msg={this.updateMsg} link={this.link} hideButton={this.hideUpdate} visible={update} Close={this.closeUpdate} />\r\n        <CopyScript script={script} Close={() => this.setScript(\"\", false)} visible={showCopyScript} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Util.js",["936","937","938","939","940","941","942","943"],"import {\r\n  CREATE_ELEMENT_VIEWED_ITEMS,\r\n  TEXT,\r\n  TIMER,\r\n  LAYOUT,\r\n  STYLE,\r\n  CODE,\r\n  CTA,\r\n  FILE,\r\n  SOUND,\r\n  VIDEO,\r\n  REDIRECTION,\r\n  NUMBER,\r\n  RESULT,\r\n  MEDIA,\r\n  NOTHANKS,\r\n  TIMING,\r\n  EMAIL,\r\n  DYNEMIC_ELEMENT,\r\n  OFFER_IFRAME,\r\n} from \"./Constant\";\r\nimport moment from \"moment\";\r\nimport { BASE_URL } from \"../actions/URLs\";\r\nimport _ from \"lodash\";\r\nexport default class Util {\r\n  static setCreateItems = function () {\r\n    CREATE_ELEMENT_VIEWED_ITEMS.set(1, [TEXT, FILE, TIMER, SOUND, CODE]);\r\n    CREATE_ELEMENT_VIEWED_ITEMS.set(2, [TEXT, TIMER, STYLE, CODE]);\r\n    CREATE_ELEMENT_VIEWED_ITEMS.set(3, [TEXT, CTA, LAYOUT, STYLE, CODE]);\r\n    CREATE_ELEMENT_VIEWED_ITEMS.set(4, [TEXT, FILE, STYLE, CODE]);\r\n    CREATE_ELEMENT_VIEWED_ITEMS.set(5, [TEXT, VIDEO, STYLE, CODE]);\r\n    CREATE_ELEMENT_VIEWED_ITEMS.set(6, [TEXT, TIMER, LAYOUT, STYLE, CODE]);\r\n    CREATE_ELEMENT_VIEWED_ITEMS.set(7, [TEXT, REDIRECTION, CODE]);\r\n    CREATE_ELEMENT_VIEWED_ITEMS.set(8, [NUMBER, RESULT]);\r\n    CREATE_ELEMENT_VIEWED_ITEMS.set(9, [TEXT, LAYOUT, MEDIA, CTA, NOTHANKS, STYLE, CODE]);\r\n    CREATE_ELEMENT_VIEWED_ITEMS.set(10, [TEXT, TIMING, CODE]);\r\n    CREATE_ELEMENT_VIEWED_ITEMS.set(11, [EMAIL]);\r\n    CREATE_ELEMENT_VIEWED_ITEMS.set(12, [TEXT, CTA, TIMER, LAYOUT, STYLE, CODE, FILE]);\r\n    CREATE_ELEMENT_VIEWED_ITEMS.set(13, [DYNEMIC_ELEMENT]);\r\n    CREATE_ELEMENT_VIEWED_ITEMS.set(14, [OFFER_IFRAME]);\r\n    CREATE_ELEMENT_VIEWED_ITEMS.set(15, [TEXT, CODE]);\r\n    CREATE_ELEMENT_VIEWED_ITEMS.set(16, [TEXT, CTA, TIMER, LAYOUT, STYLE, CODE, FILE]);\r\n  };\r\n  static getCreateItems = function (key) {\r\n    return CREATE_ELEMENT_VIEWED_ITEMS.get(key);\r\n  };\r\n  static CAMPAIGNS_NAME = \"\";\r\n  static RedirectWhenCampaignEmpty = function (props) {\r\n    if (props && Util.CAMPAIGNS_NAME == \"\") {\r\n      props.history.push(\"/Create\");\r\n    }\r\n  };\r\n  static isArrayEqual = function (obj1, obj2, numb = 3) {\r\n    const diff = Object.keys(obj1).reduce((result, key) => {\r\n      if (!obj2.hasOwnProperty(key)) {\r\n        result.push(key);\r\n      } else if (_.isEqual(obj1[key], obj2[key])) {\r\n        const resultKeyIndex = result.indexOf(key);\r\n        result.splice(resultKeyIndex, 1);\r\n      }\r\n      return result;\r\n    }, Object.keys(obj2));\r\n\r\n    if (diff.length > numb) return false;\r\n    else {\r\n      window.gs.toast(\"Reqaird Fields Are not to be empty\", { position: \"bottom-right\", autoClose: false, type: window.gs.toast.TYPE.ERROR });\r\n      return true;\r\n    }\r\n  };\r\n  static isRedirected = false;\r\n  static getTimeZoneList = function () {\r\n    return [\r\n      { label: \"Pacific/Niue - (GMT-11:00) Niue\", value: \"Pacific/Niue\" },\r\n      { label: \"Pacific/Pago_Pago - (GMT-11:00) Pago Pago\", value: \"Pacific/Pago_Pago\" },\r\n      { label: \"Pacific/Honolulu - (GMT-10:00) Hawaii Time\", value: \"Pacific/Honolulu\" },\r\n      { label: \"Pacific/Rarotonga - (GMT-10:00) Rarotonga\", value: \"Pacific/Rarotonga\" },\r\n      { label: \"Pacific/Tahiti - (GMT-10:00) Tahiti\", value: \"Pacific/Tahiti\" },\r\n      { label: \"Pacific/Marquesas - (GMT-09:30) Marquesas\", value: \"Pacific/Marquesas\" },\r\n      { label: \"America/Anchorage - (GMT-09:00) Alaska Time\", value: \"America/Anchorage\" },\r\n      { label: \"Pacific/Gambier - (GMT-09:00) Gambier\", value: \"Pacific/Gambier\" },\r\n      { label: \"America/Los_Angeles - (GMT-08:00) Pacific Time\", value: \"America/Los_Angeles\" },\r\n      { label: \"America/Tijuana - (GMT-08:00) Pacific Time - Tijuana\", value: \"America/Tijuana\" },\r\n      { label: \"America/Vancouver - (GMT-08:00) Pacific Time - Vancouver\", value: \"America/Vancouver\" },\r\n      { label: \"America/Whitehorse - (GMT-08:00) Pacific Time - Whitehorse\", value: \"America/Whitehorse\" },\r\n      { label: \"Pacific/Pitcairn - (GMT-08:00) Pitcairn\", value: \"Pacific/Pitcairn\" },\r\n      { label: \"America/Dawson_Creek - (GMT-07:00) Mountain Time - Dawson Creek\", value: \"America/Dawson_Creek\" },\r\n      { label: \"America/Denver - (GMT-07:00) Mountain Time\", value: \"America/Denver\" },\r\n      { label: \"America/Edmonton - (GMT-07:00) Mountain Time - Edmonton\", value: \"America/Edmonton\" },\r\n      { label: \"America/Hermosillo - (GMT-07:00) Mountain Time - Hermosillo\", value: \"America/Hermosillo\" },\r\n      { label: \"America/Mazatlan - (GMT-07:00) Mountain Time - Chihuahua, Mazatlan\", value: \"America/Mazatlan\" },\r\n      { label: \"America/Phoenix - (GMT-07:00) Mountain Time - Arizona\", value: \"America/Phoenix\" },\r\n      { label: \"America/Yellowknife - (GMT-07:00) Mountain Time - Yellowknife\", value: \"America/Yellowknife\" },\r\n      { label: \"America/Belize - (GMT-06:00) Belize\", value: \"America/Belize\" },\r\n      { label: \"America/Chicago - (GMT-06:00) Central Time\", value: \"America/Chicago\" },\r\n      { label: \"America/Costa_Rica - (GMT-06:00) Costa Rica\", value: \"America/Costa_Rica\" },\r\n      { label: \"America/El_Salvador - (GMT-06:00) El Salvador\", value: \"America/El_Salvador\" },\r\n      { label: \"America/Guatemala - (GMT-06:00) Guatemala\", value: \"America/Guatemala\" },\r\n      { label: \"America/Managua - (GMT-06:00) Managua\", value: \"America/Managua\" },\r\n      { label: \"America/Mexico_City - (GMT-06:00) Central Time - Mexico City\", value: \"America/Mexico_City\" },\r\n      { label: \"America/Regina - (GMT-06:00) Central Time - Regina\", value: \"America/Regina\" },\r\n      { label: \"America/Tegucigalpa - (GMT-06:00) Central Time - Tegucigalpa\", value: \"America/Tegucigalpa\" },\r\n      { label: \"America/Winnipeg - (GMT-06:00) Central Time - Winnipeg\", value: \"America/Winnipeg\" },\r\n      { label: \"Pacific/Galapagos - (GMT-06:00) Galapagos\", value: \"Pacific/Galapagos\" },\r\n      { label: \"America/Bogota - (GMT-05:00) Bogota\", value: \"America/Bogota\" },\r\n      { label: \"America/Cancun - (GMT-05:00) America Cancun\", value: \"America/Cancun\" },\r\n      { label: \"America/Cayman - (GMT-05:00) Cayman\", value: \"America/Cayman\" },\r\n      { label: \"America/Guayaquil - (GMT-05:00) Guayaquil\", value: \"America/Guayaquil\" },\r\n      { label: \"America/Havana - (GMT-05:00) Havana\", value: \"America/Havana\" },\r\n      { label: \"America/Iqaluit - (GMT-05:00) Eastern Time - Iqaluit\", value: \"America/Iqaluit\" },\r\n      { label: \"America/Jamaica - (GMT-05:00) Jamaica\", value: \"America/Jamaica\" },\r\n      { label: \"America/Lima - (GMT-05:00) Lima\", value: \"America/Lima\" },\r\n      { label: \"America/Nassau - (GMT-05:00) Nassau\", value: \"America/Nassau\" },\r\n      { label: \"America/New_York - (GMT-05:00) Eastern Time\", value: \"America/New_York\" },\r\n      { label: \"America/Panama - (GMT-05:00) Panama\", value: \"America/Panama\" },\r\n      { label: \"America/Port-au-Prince - (GMT-05:00) Port-au-Prince\", value: \"America/Port-au-Prince\" },\r\n      { label: \"America/Rio_Branco - (GMT-05:00) Rio Branco\", value: \"America/Rio_Branco\" },\r\n      { label: \"America/Toronto - (GMT-05:00) Eastern Time - Toronto\", value: \"America/Toronto\" },\r\n      { label: \"Pacific/Easter - (GMT-05:00) Easter Island\", value: \"Pacific/Easter\" },\r\n      { label: \"America/Caracas - (GMT-04:30) Caracas\", value: \"America/Caracas\" },\r\n      { label: \"America/Asuncion - (GMT-03:00) Asuncion\", value: \"America/Asuncion\" },\r\n      { label: \"America/Barbados - (GMT-04:00) Barbados\", value: \"America/Barbados\" },\r\n      { label: \"America/Boa_Vista - (GMT-04:00) Boa Vista\", value: \"America/Boa_Vista\" },\r\n      { label: \"America/Campo_Grande - (GMT-03:00) Campo Grande\", value: \"America/Campo_Grande\" },\r\n      { label: \"America/Cuiaba - (GMT-03:00) Cuiaba\", value: \"America/Cuiaba\" },\r\n      { label: \"America/Curacao - (GMT-04:00) Curacao\", value: \"America/Curacao\" },\r\n      { label: \"America/Grand_Turk - (GMT-04:00) Grand Turk\", value: \"America/Grand_Turk\" },\r\n      { label: \"America/Guyana - (GMT-04:00) Guyana\", value: \"America/Guyana\" },\r\n      { label: \"America/Halifax - (GMT-04:00) Atlantic Time - Halifax\", value: \"America/Halifax\" },\r\n      { label: \"America/La_Paz - (GMT-04:00) La Paz\", value: \"America/La_Paz\" },\r\n      { label: \"America/Manaus - (GMT-04:00) Manaus\", value: \"America/Manaus\" },\r\n      { label: \"America/Martinique - (GMT-04:00) Martinique\", value: \"America/Martinique\" },\r\n      { label: \"America/Port_of_Spain - (GMT-04:00) Port of Spain\", value: \"America/Port_of_Spain\" },\r\n      { label: \"America/Porto_Velho - (GMT-04:00) Porto Velho\", value: \"America/Porto_Velho\" },\r\n      { label: \"America/Puerto_Rico - (GMT-04:00) Puerto Rico\", value: \"America/Puerto_Rico\" },\r\n      { label: \"America/Santo_Domingo - (GMT-04:00) Santo Domingo\", value: \"America/Santo_Domingo\" },\r\n      { label: \"America/Thule - (GMT-04:00) Thule\", value: \"America/Thule\" },\r\n      { label: \"Atlantic/Bermuda - (GMT-04:00) Bermuda\", value: \"Atlantic/Bermuda\" },\r\n      { label: \"America/St_Johns - (GMT-03:30) Newfoundland Time - St. Johns\", value: \"America/St_Johns\" },\r\n      { label: \"America/Araguaina - (GMT-03:00) Araguaina\", value: \"America/Araguaina\" },\r\n      { label: \"America/Argentina/Buenos_Aires - (GMT-03:00) Buenos Aires\", value: \"America/Argentina/Buenos_Aires\" },\r\n      { label: \"America/Bahia - (GMT-03:00) Salvador\", value: \"America/Bahia\" },\r\n      { label: \"America/Belem - (GMT-03:00) Belem\", value: \"America/Belem\" },\r\n      { label: \"America/Cayenne - (GMT-03:00) Cayenne\", value: \"America/Cayenne\" },\r\n      { label: \"America/Fortaleza - (GMT-03:00) Fortaleza\", value: \"America/Fortaleza\" },\r\n      { label: \"America/Godthab - (GMT-03:00) Godthab\", value: \"America/Godthab\" },\r\n      { label: \"America/Maceio - (GMT-03:00) Maceio\", value: \"America/Maceio\" },\r\n      { label: \"America/Miquelon - (GMT-03:00) Miquelon\", value: \"America/Miquelon\" },\r\n      { label: \"America/Montevideo - (GMT-03:00) Montevideo\", value: \"America/Montevideo\" },\r\n      { label: \"America/Paramaribo - (GMT-03:00) Paramaribo\", value: \"America/Paramaribo\" },\r\n      { label: \"America/Recife - (GMT-03:00) Recife\", value: \"America/Recife\" },\r\n      { label: \"America/Santiago - (GMT-03:00) Santiago\", value: \"America/Santiago\" },\r\n      { label: \"America/Sao_Paulo - (GMT-02:00) Sao Paulo\", value: \"America/Sao_Paulo\" },\r\n      { label: \"Antarctica/Palmer - (GMT-03:00) Palmer\", value: \"Antarctica/Palmer\" },\r\n      { label: \"Antarctica/Rothera - (GMT-03:00) Rothera\", value: \"Antarctica/Rothera\" },\r\n      { label: \"Atlantic/Stanley - (GMT-03:00) Stanley\", value: \"Atlantic/Stanley\" },\r\n      { label: \"America/Noronha - (GMT-02:00) Noronha\", value: \"America/Noronha\" },\r\n      { label: \"Atlantic/South_Georgia - (GMT-02:00) South Georgia\", value: \"Atlantic/South_Georgia\" },\r\n      { label: \"America/Scoresbysund - (GMT-01:00) Scoresbysund\", value: \"America/Scoresbysund\" },\r\n      { label: \"Atlantic/Azores - (GMT-01:00) Azores\", value: \"Atlantic/Azores\" },\r\n      { label: \"Atlantic/Cape_Verde - (GMT-01:00) Cape Verde\", value: \"Atlantic/Cape_Verde\" },\r\n      { label: \"Africa/Abidjan - (GMT+00:00) Abidjan\", value: \"Africa/Abidjan\" },\r\n      { label: \"Africa/Accra - (GMT+00:00) Accra\", value: \"Africa/Accra\" },\r\n      { label: \"Africa/Bissau - (GMT+00:00) Bissau\", value: \"Africa/Bissau\" },\r\n      { label: \"Africa/Casablanca - (GMT+00:00) Casablanca\", value: \"Africa/Casablanca\" },\r\n      { label: \"Africa/El_Aaiun - (GMT+00:00) El Aaiun\", value: \"Africa/El_Aaiun\" },\r\n      { label: \"Africa/Monrovia - (GMT+00:00) Monrovia\", value: \"Africa/Monrovia\" },\r\n      { label: \"America/Danmarkshavn - (GMT+00:00) Danmarkshavn\", value: \"America/Danmarkshavn\" },\r\n      { label: \"Atlantic/Canary - (GMT+00:00) Canary Islands\", value: \"Atlantic/Canary\" },\r\n      { label: \"Atlantic/Faroe - (GMT+00:00) Faeroe\", value: \"Atlantic/Faroe\" },\r\n      { label: \"Atlantic/Reykjavik - (GMT+00:00) Reykjavik\", value: \"Atlantic/Reykjavik\" },\r\n      { label: \"Etc/GMT - (GMT+00:00) GMT (no daylight saving)\", value: \"Etc/GMT\" },\r\n      { label: \"Europe/Dublin - (GMT+00:00) Dublin\", value: \"Europe/Dublin\" },\r\n      { label: \"Europe/Lisbon - (GMT+00:00) Lisbon\", value: \"Europe/Lisbon\" },\r\n      { label: \"Europe/London - (GMT+00:00) London\", value: \"Europe/London\" },\r\n      { label: \"Africa/Algiers - (GMT+01:00) Algiers\", value: \"Africa/Algiers\" },\r\n      { label: \"Africa/Ceuta - (GMT+01:00) Ceuta\", value: \"Africa/Ceuta\" },\r\n      { label: \"Africa/Lagos - (GMT+01:00) Lagos\", value: \"Africa/Lagos\" },\r\n      { label: \"Africa/Ndjamena - (GMT+01:00) Ndjamena\", value: \"Africa/Ndjamena\" },\r\n      { label: \"Africa/Tunis - (GMT+01:00) Tunis\", value: \"Africa/Tunis\" },\r\n      { label: \"Africa/Windhoek - (GMT+02:00) Windhoek\", value: \"Africa/Windhoek\" },\r\n      { label: \"Europe/Amsterdam - (GMT+01:00) Amsterdam\", value: \"Europe/Amsterdam\" },\r\n      { label: \"Europe/Andorra - (GMT+01:00) Andorra\", value: \"Europe/Andorra\" },\r\n      { label: \"Europe/Belgrade - (GMT+01:00) Central European Time - Belgrade\", value: \"Europe/Belgrade\" },\r\n      { label: \"Europe/Berlin - (GMT+01:00) Berlin\", value: \"Europe/Berlin\" },\r\n      { label: \"Europe/Brussels - (GMT+01:00) Brussels\", value: \"Europe/Brussels\" },\r\n      { label: \"Europe/Budapest - (GMT+01:00) Budapest\", value: \"Europe/Budapest\" },\r\n      { label: \"Europe/Copenhagen - (GMT+01:00) Copenhagen\", value: \"Europe/Copenhagen\" },\r\n      { label: \"Europe/Gibraltar - (GMT+01:00) Gibraltar\", value: \"Europe/Gibraltar\" },\r\n      { label: \"Europe/Luxembourg - (GMT+01:00) Luxembourg\", value: \"Europe/Luxembourg\" },\r\n      { label: \"Europe/Madrid - (GMT+01:00) Madrid\", value: \"Europe/Madrid\" },\r\n      { label: \"Europe/Malta - (GMT+01:00) Malta\", value: \"Europe/Malta\" },\r\n      { label: \"Europe/Monaco - (GMT+01:00) Monaco\", value: \"Europe/Monaco\" },\r\n      { label: \"Europe/Oslo - (GMT+01:00) Oslo\", value: \"Europe/Oslo\" },\r\n      { label: \"Europe/Paris - (GMT+01:00) Paris\", value: \"Europe/Paris\" },\r\n      { label: \"Europe/Prague - (GMT+01:00) Central European Time - Prague\", value: \"Europe/Prague\" },\r\n      { label: \"Europe/Rome - (GMT+01:00) Rome\", value: \"Europe/Rome\" },\r\n      { label: \"Europe/Stockholm - (GMT+01:00) Stockholm\", value: \"Europe/Stockholm\" },\r\n      { label: \"Europe/Tirane - (GMT+01:00) Tirane\", value: \"Europe/Tirane\" },\r\n      { label: \"Europe/Vienna - (GMT+01:00) Vienna\", value: \"Europe/Vienna\" },\r\n      { label: \"Europe/Warsaw - (GMT+01:00) Warsaw\", value: \"Europe/Warsaw\" },\r\n      { label: \"Europe/Zurich - (GMT+01:00) Zurich\", value: \"Europe/Zurich\" },\r\n      { label: \"Africa/Cairo - (GMT+02:00) Cairo\", value: \"Africa/Cairo\" },\r\n      { label: \"Africa/Johannesburg - (GMT+02:00) Johannesburg\", value: \"Africa/Johannesburg\" },\r\n      { label: \"Africa/Maputo - (GMT+02:00) Maputo\", value: \"Africa/Maputo\" },\r\n      { label: \"Africa/Tripoli - (GMT+02:00) Tripoli\", value: \"Africa/Tripoli\" },\r\n      { label: \"Asia/Amman - (GMT+02:00) Amman\", value: \"Asia/Amman\" },\r\n      { label: \"Asia/Beirut - (GMT+02:00) Beirut\", value: \"Asia/Beirut\" },\r\n      { label: \"Asia/Damascus - (GMT+02:00) Damascus\", value: \"Asia/Damascus\" },\r\n      { label: \"Asia/Gaza - (GMT+02:00) Gaza\", value: \"Asia/Gaza\" },\r\n      { label: \"Asia/Jerusalem - (GMT+02:00) Jerusalem\", value: \"Asia/Jerusalem\" },\r\n      { label: \"Asia/Nicosia - (GMT+02:00) Nicosia\", value: \"Asia/Nicosia\" },\r\n      { label: \"Europe/Athens - (GMT+02:00) Athens\", value: \"Europe/Athens\" },\r\n      { label: \"Europe/Bucharest - (GMT+02:00) Bucharest\", value: \"Europe/Bucharest\" },\r\n      { label: \"Europe/Chisinau - (GMT+02:00) Chisinau\", value: \"Europe/Chisinau\" },\r\n      { label: \"Europe/Helsinki - (GMT+02:00) Helsinki\", value: \"Europe/Helsinki\" },\r\n      { label: \"Europe/Istanbul - (GMT+02:00) Istanbul\", value: \"Europe/Istanbul\" },\r\n      { label: \"Europe/Kaliningrad - (GMT+02:00) Moscow-01 - Kaliningrad\", value: \"Europe/Kaliningrad\" },\r\n      { label: \"Europe/Kiev - (GMT+02:00) Kiev\", value: \"Europe/Kiev\" },\r\n      { label: \"Europe/Riga - (GMT+02:00) Riga\", value: \"Europe/Riga\" },\r\n      { label: \"Europe/Sofia - (GMT+02:00) Sofia\", value: \"Europe/Sofia\" },\r\n      { label: \"Europe/Tallinn - (GMT+02:00) Tallinn\", value: \"Europe/Tallinn\" },\r\n      { label: \"Europe/Vilnius - (GMT+02:00) Vilnius\", value: \"Europe/Vilnius\" },\r\n      { label: \"Africa/Khartoum - (GMT+03:00) Khartoum\", value: \"Africa/Khartoum\" },\r\n      { label: \"Africa/Nairobi - (GMT+03:00) Nairobi\", value: \"Africa/Nairobi\" },\r\n      { label: \"Antarctica/Syowa - (GMT+03:00) Syowa\", value: \"Antarctica/Syowa\" },\r\n      { label: \"Asia/Baghdad - (GMT+03:00) Baghdad\", value: \"Asia/Baghdad\" },\r\n      { label: \"Asia/Qatar - (GMT+03:00) Qatar\", value: \"Asia/Qatar\" },\r\n      { label: \"Asia/Riyadh - (GMT+03:00) Riyadh\", value: \"Asia/Riyadh\" },\r\n      { label: \"Europe/Minsk - (GMT+03:00) Minsk\", value: \"Europe/Minsk\" },\r\n      { label: \"Europe/Moscow - (GMT+03:00) Moscow+00 - Moscow\", value: \"Europe/Moscow\" },\r\n      { label: \"Asia/Tehran - (GMT+03:30) Tehran\", value: \"Asia/Tehran\" },\r\n      { label: \"Asia/Baku - (GMT+04:00) Baku\", value: \"Asia/Baku\" },\r\n      { label: \"Asia/Dubai - (GMT+04:00) Dubai\", value: \"Asia/Dubai\" },\r\n      { label: \"Asia/Tbilisi - (GMT+04:00) Tbilisi\", value: \"Asia/Tbilisi\" },\r\n      { label: \"Asia/Yerevan - (GMT+04:00) Yerevan\", value: \"Asia/Yerevan\" },\r\n      { label: \"Europe/Samara - (GMT+04:00) Moscow+01 - Samara\", value: \"Europe/Samara\" },\r\n      { label: \"Indian/Mahe - (GMT+04:00) Mahe\", value: \"Indian/Mahe\" },\r\n      { label: \"Indian/Mauritius - (GMT+04:00) Mauritius\", value: \"Indian/Mauritius\" },\r\n      { label: \"Indian/Reunion - (GMT+04:00) Reunion\", value: \"Indian/Reunion\" },\r\n      { label: \"Asia/Kabul - (GMT+04:30) Kabul\", value: \"Asia/Kabul\" },\r\n      { label: \"Antarctica/Mawson - (GMT+05:00) Mawson\", value: \"Antarctica/Mawson\" },\r\n      { label: \"Asia/Aqtau - (GMT+05:00) Aqtau\", value: \"Asia/Aqtau\" },\r\n      { label: \"Asia/Aqtobe - (GMT+05:00) Aqtobe\", value: \"Asia/Aqtobe\" },\r\n      { label: \"Asia/Ashgabat - (GMT+05:00) Ashgabat\", value: \"Asia/Ashgabat\" },\r\n      { label: \"Asia/Dushanbe - (GMT+05:00) Dushanbe\", value: \"Asia/Dushanbe\" },\r\n      { label: \"Asia/Karachi - (GMT+05:00) Karachi\", value: \"Asia/Karachi\" },\r\n      { label: \"Asia/Tashkent - (GMT+05:00) Tashkent\", value: \"Asia/Tashkent\" },\r\n      { label: \"Asia/Yekaterinburg - (GMT+05:00) Moscow+02 - Yekaterinburg\", value: \"Asia/Yekaterinburg\" },\r\n      { label: \"Indian/Kerguelen - (GMT+05:00) Kerguelen\", value: \"Indian/Kerguelen\" },\r\n      { label: \"Indian/Maldives - (GMT+05:00) Maldives\", value: \"Indian/Maldives\" },\r\n      { label: \"Asia/Calcutta - (GMT+05:30) India Standard Time\", value: \"Asia/Calcutta\" },\r\n      { label: \"Asia/Colombo - (GMT+05:30) Colombo\", value: \"Asia/Colombo\" },\r\n      { label: \"Asia/Katmandu - (GMT+05:45) Katmandu\", value: \"Asia/Katmandu\" },\r\n      { label: \"Antarctica/Vostok - (GMT+06:00) Vostok\", value: \"Antarctica/Vostok\" },\r\n      { label: \"Asia/Almaty - (GMT+06:00) Almaty\", value: \"Asia/Almaty\" },\r\n      { label: \"Asia/Bishkek - (GMT+06:00) Bishkek\", value: \"Asia/Bishkek\" },\r\n      { label: \"Asia/Dhaka - (GMT+06:00) Dhaka\", value: \"Asia/Dhaka\" },\r\n      { label: \"Asia/Omsk - (GMT+06:00) Moscow+03 - Omsk, Novosibirsk\", value: \"Asia/Omsk\" },\r\n      { label: \"Asia/Thimphu - (GMT+06:00) Thimphu\", value: \"Asia/Thimphu\" },\r\n      { label: \"Indian/Chagos - (GMT+06:00) Chagos\", value: \"Indian/Chagos\" },\r\n      { label: \"Asia/Rangoon - (GMT+06:30) Rangoon\", value: \"Asia/Rangoon\" },\r\n      { label: \"Indian/Cocos - (GMT+06:30) Cocos\", value: \"Indian/Cocos\" },\r\n      { label: \"Antarctica/Davis - (GMT+07:00) Davis\", value: \"Antarctica/Davis\" },\r\n      { label: \"Asia/Bangkok - (GMT+07:00) Bangkok\", value: \"Asia/Bangkok\" },\r\n      { label: \"Asia/Hovd - (GMT+07:00) Hovd\", value: \"Asia/Hovd\" },\r\n      { label: \"Asia/Jakarta - (GMT+07:00) Jakarta\", value: \"Asia/Jakarta\" },\r\n      { label: \"Asia/Krasnoyarsk - (GMT+07:00) Moscow+04 - Krasnoyarsk\", value: \"Asia/Krasnoyarsk\" },\r\n      { label: \"Asia/Saigon - (GMT+07:00) Hanoi\", value: \"Asia/Saigon\" },\r\n      { label: \"Asia/Ho_Chi_Minh - (GMT+07:00) Ho Chi Minh\", value: \"Asia/Ho_Chi_Minh\" },\r\n      { label: \"Indian/Christmas - (GMT+07:00) Christmas\", value: \"Indian/Christmas\" },\r\n      { label: \"Antarctica/Casey - (GMT+08:00) Casey\", value: \"Antarctica/Casey\" },\r\n      { label: \"Asia/Brunei - (GMT+08:00) Brunei\", value: \"Asia/Brunei\" },\r\n      { label: \"Asia/Choibalsan - (GMT+08:00) Choibalsan\", value: \"Asia/Choibalsan\" },\r\n      { label: \"Asia/Hong_Kong - (GMT+08:00) Hong Kong\", value: \"Asia/Hong_Kong\" },\r\n      { label: \"Asia/Irkutsk - (GMT+08:00) Moscow+05 - Irkutsk\", value: \"Asia/Irkutsk\" },\r\n      { label: \"Asia/Kuala_Lumpur - (GMT+08:00) Kuala Lumpur\", value: \"Asia/Kuala_Lumpur\" },\r\n      { label: \"Asia/Macau - (GMT+08:00) Macau\", value: \"Asia/Macau\" },\r\n      { label: \"Asia/Makassar - (GMT+08:00) Makassar\", value: \"Asia/Makassar\" },\r\n      { label: \"Asia/Manila - (GMT+08:00) Manila\", value: \"Asia/Manila\" },\r\n      { label: \"Asia/Shanghai - (GMT+08:00) China Time - Beijing\", value: \"Asia/Shanghai\" },\r\n      { label: \"Asia/Singapore - (GMT+08:00) Singapore\", value: \"Asia/Singapore\" },\r\n      { label: \"Asia/Taipei - (GMT+08:00) Taipei\", value: \"Asia/Taipei\" },\r\n      { label: \"Asia/Ulaanbaatar - (GMT+08:00) Ulaanbaatar\", value: \"Asia/Ulaanbaatar\" },\r\n      { label: \"Australia/Perth - (GMT+08:00) Western Time - Perth\", value: \"Australia/Perth\" },\r\n      { label: \"Asia/Pyongyang - (GMT+08:30) Pyongyang\", value: \"Asia/Pyongyang\" },\r\n      { label: \"Asia/Dili - (GMT+09:00) Dili\", value: \"Asia/Dili\" },\r\n      { label: \"Asia/Jayapura - (GMT+09:00) Jayapura\", value: \"Asia/Jayapura\" },\r\n      { label: \"Asia/Seoul - (GMT+09:00) Seoul\", value: \"Asia/Seoul\" },\r\n      { label: \"Asia/Tokyo - (GMT+09:00) Tokyo\", value: \"Asia/Tokyo\" },\r\n      { label: \"Asia/Yakutsk - (GMT+09:00) Moscow+06 - Yakutsk\", value: \"Asia/Yakutsk\" },\r\n      { label: \"Pacific/Palau - (GMT+09:00) Palau\", value: \"Pacific/Palau\" },\r\n      { label: \"Australia/Adelaide - (GMT+10:30) Central Time - Adelaide\", value: \"Australia/Adelaide\" },\r\n      { label: \"Australia/Darwin - (GMT+09:30) Central Time - Darwin\", value: \"Australia/Darwin\" },\r\n      { label: \"Antarctica/DumontDUrville - (GMT+10:00) Dumont DUrville\", value: \"Antarctica/DumontDUrville\" },\r\n      { label: \"Asia/Magadan - (GMT+10:00) Moscow+07 - Magadan\", value: \"Asia/Magadan\" },\r\n      { label: \"Asia/Vladivostok - (GMT+10:00) Moscow+07 - Yuzhno-Sakhalinsk\", value: \"Asia/Vladivostok\" },\r\n      { label: \"Australia/Brisbane - (GMT+10:00) Eastern Time - Brisbane\", value: \"Australia/Brisbane\" },\r\n      { label: \"Australia/Hobart - (GMT+11:00) Eastern Time - Hobart\", value: \"Australia/Hobart\" },\r\n      { label: \"Australia/Sydney - (GMT+11:00) Eastern Time - Melbourne, Sydney\", value: \"Australia/Sydney\" },\r\n      { label: \"Pacific/Chuuk - (GMT+10:00) Truk\", value: \"Pacific/Chuuk\" },\r\n      { label: \"Pacific/Guam - (GMT+10:00) Guam\", value: \"Pacific/Guam\" },\r\n      { label: \"Pacific/Port_Moresby - (GMT+10:00) Port Moresby\", value: \"Pacific/Port_Moresby\" },\r\n      { label: \"Pacific/Efate - (GMT+11:00) Efate\", value: \"Pacific/Efate\" },\r\n      { label: \"Pacific/Guadalcanal - (GMT+11:00) Guadalcanal\", value: \"Pacific/Guadalcanal\" },\r\n      { label: \"Pacific/Kosrae - (GMT+11:00) Kosrae\", value: \"Pacific/Kosrae\" },\r\n      { label: \"Pacific/Norfolk - (GMT+11:00) Norfolk\", value: \"Pacific/Norfolk\" },\r\n      { label: \"Pacific/Noumea - (GMT+11:00) Noumea\", value: \"Pacific/Noumea\" },\r\n      { label: \"Pacific/Pohnpei - (GMT+11:00) Ponape\", value: \"Pacific/Pohnpei\" },\r\n      { label: \"Asia/Kamchatka - (GMT+12:00) Moscow+09 - Petropavlovsk-Kamchatskiy\", value: \"Asia/Kamchatka\" },\r\n      { label: \"Pacific/Auckland - (GMT+13:00) Auckland\", value: \"Pacific/Auckland\" },\r\n      { label: \"Pacific/Fiji - (GMT+13:00) Fiji\", value: \"Pacific/Fiji\" },\r\n      { label: \"Pacific/Funafuti - (GMT+12:00) Funafuti\", value: \"Pacific/Funafuti\" },\r\n      { label: \"Pacific/Kwajalein - (GMT+12:00) Kwajalein\", value: \"Pacific/Kwajalein\" },\r\n      { label: \"Pacific/Majuro - (GMT+12:00) Majuro\", value: \"Pacific/Majuro\" },\r\n      { label: \"Pacific/Nauru - (GMT+12:00) Nauru\", value: \"Pacific/Nauru\" },\r\n      { label: \"Pacific/Tarawa - (GMT+12:00) Tarawa\", value: \"Pacific/Tarawa\" },\r\n      { label: \"Pacific/Wake - (GMT+12:00) Wake\", value: \"Pacific/Wake\" },\r\n      { label: \"Pacific/Wallis - (GMT+12:00) Wallis\", value: \"Pacific/Wallis\" },\r\n      { label: \"Pacific/Apia - (GMT+14:00) Apia\", value: \"Pacific/Apia\" },\r\n      { label: \"Pacific/Enderbury - (GMT+13:00) Enderbury\", value: \"Pacific/Enderbury\" },\r\n      { label: \"Pacific/Fakaofo - (GMT+13:00) Fakaofo\", value: \"Pacific/Fakaofo\" },\r\n      { label: \"Pacific/Tongatapu - (GMT+13:00) Tongatapu\", value: \"Pacific/Tongatapu\" },\r\n      { label: \"Pacific/Kiritimati - (GMT+14:00) Kiritimati\", value: \"Pacific/Kiritimati\" },\r\n    ];\r\n  };\r\n}\r\n\r\nexport function parseImgUrl(pathName) {\r\n  try {\r\n    if (pathName.indexOf(\"http\") > -1) {\r\n      return pathName;\r\n    } else {\r\n      pathName = \"contains\\\\/\" + pathName;\r\n      return BASE_URL + pathName;\r\n    }\r\n  } catch (e) {\r\n    window.gs.toast(\"Error in Video URL , Please input a valid Url\", { position: \"bottom-right\", type: window.gs.toast.TYPE.FAILED });\r\n  }\r\n}\r\n\r\nexport function getUser() {\r\n  return localStorage.getItem(\"user\") || \"\";\r\n}\r\n\r\nexport function dateParser(dateTime) {\r\n  if (!dateTime) {\r\n    return \"\";\r\n  }\r\n  return moment(dateTime).format(\"YYYY-MM-DD HH:mm:ss\");\r\n}\r\n\r\nexport function getCountryList() {\r\n  return [\r\n    { label: \"Afghanistan - AF\", value: \"Afghanistan - AF\" },\r\n    { label: \"Åland Islands - AX\", value: \"Åland Islands - AX\" },\r\n    { label: \"Albania - AL\", value: \"Albania - AL\" },\r\n    { label: \"Algeria - DZ\", value: \"Algeria - DZ\" },\r\n    { label: \"American Samoa - AS\", value: \"American Samoa - AS\" },\r\n    { label: \"AndorrA - AD\", value: \"AndorrA - AD\" },\r\n    { label: \"Angola - AO\", value: \"Angola - AO\" },\r\n    { label: \"Anguilla - AI\", value: \"Anguilla - AI\" },\r\n    { label: \"Antarctica - AQ\", value: \"Antarctica - AQ\" },\r\n    { label: \"Antigua and Barbuda - AG\", value: \"Antigua and Barbuda - AG\" },\r\n    { label: \"Argentina - AR\", value: \"Argentina - AR\" },\r\n    { label: \"Armenia - AM\", value: \"Armenia - AM\" },\r\n    { label: \"Aruba - AW\", value: \"Aruba - AW\" },\r\n    { label: \"Australia - AU\", value: \"Australia - AU\" },\r\n    { label: \"Austria - AT\", value: \"Austria - AT\" },\r\n    { label: \"Azerbaijan - AZ\", value: \"Azerbaijan - AZ\" },\r\n    { label: \"Bahamas - BS\", value: \"Bahamas - BS\" },\r\n    { label: \"Bahrain - BH\", value: \"Bahrain - BH\" },\r\n    { label: \"Bangladesh - BD\", value: \"Bangladesh - BD\" },\r\n    { label: \"Barbados - BB\", value: \"Barbados - BB\" },\r\n    { label: \"Belarus - BY\", value: \"Belarus - BY\" },\r\n    { label: \"Belgium - BE\", value: \"Belgium - BE\" },\r\n    { label: \"Belize - BZ\", value: \"Belize - BZ\" },\r\n    { label: \"Benin - BJ\", value: \"Benin - BJ\" },\r\n    { label: \"Bermuda - BM\", value: \"Bermuda - BM\" },\r\n    { label: \"Bhutan - BT\", value: \"Bhutan - BT\" },\r\n    { label: \"Bolivia - BO\", value: \"Bolivia - BO\" },\r\n    { label: \"Bosnia and Herzegovina - BA\", value: \"Bosnia and Herzegovina - BA\" },\r\n    { label: \"Botswana - BW\", value: \"Botswana - BW\" },\r\n    { label: \"Bouvet Island - BV\", value: \"Bouvet Island - BV\" },\r\n    { label: \"Brazil - BR\", value: \"Brazil - BR\" },\r\n    { label: \"British Indian Ocean Territory - IO\", value: \"British Indian Ocean Territory - IO\" },\r\n    { label: \"Brunei Darussalam - BN\", value: \"Brunei Darussalam - BN\" },\r\n    { label: \"Bulgaria - BG\", value: \"Bulgaria - BG\" },\r\n    { label: \"Burkina Faso - BF\", value: \"Burkina Faso - BF\" },\r\n    { label: \"Burundi - BI\", value: \"Burundi - BI\" },\r\n    { label: \"Cambodia - KH\", value: \"Cambodia - KH\" },\r\n    { label: \"Cameroon - CM\", value: \"Cameroon - CM\" },\r\n    { label: \"Canada - CA\", value: \"Canada - CA\" },\r\n    { label: \"Cape Verde - CV\", value: \"Cape Verde - CV\" },\r\n    { label: \"Cayman Islands - KY\", value: \"Cayman Islands - KY\" },\r\n    { label: \"Central African Republic - CF\", value: \"Central African Republic - CF\" },\r\n    { label: \"Chad - TD\", value: \"Chad - TD\" },\r\n    { label: \"Chile - CL\", value: \"Chile - CL\" },\r\n    { label: \"China - CN\", value: \"China - CN\" },\r\n    { label: \"Christmas Island - CX\", value: \"Christmas Island - CX\" },\r\n    { label: \"Cocos (Keeling) Islands - CC\", value: \"Cocos (Keeling) Islands - CC\" },\r\n    { label: \"Colombia - CO\", value: \"Colombia - CO\" },\r\n    { label: \"Comoros - KM\", value: \"Comoros - KM\" },\r\n    { label: \"Congo - CG\", value: \"Congo - CG\" },\r\n    { label: \"Congo, The Democratic Republic of the - CD\", value: \"Congo, The Democratic Republic of the - CD\" },\r\n    { label: \"Cook Islands - CK\", value: \"Cook Islands - CK\" },\r\n    { label: \"Costa Rica - CR\", value: \"Costa Rica - CR\" },\r\n    { label: \"Cote D'Ivoire - CI\", value: \"Cote D'Ivoire - CI\" },\r\n    { label: \"Croatia - HR\", value: \"Croatia - HR\" },\r\n    { label: \"Cuba - CU\", value: \"Cuba - CU\" },\r\n    { label: \"Cyprus - CY\", value: \"Cyprus - CY\" },\r\n    { label: \"Czech Republic - CZ\", value: \"Czech Republic - CZ\" },\r\n    { label: \"Denmark - DK\", value: \"Denmark - DK\" },\r\n    { label: \"Djibouti - DJ\", value: \"Djibouti - DJ\" },\r\n    { label: \"Dominica - DM\", value: \"Dominica - DM\" },\r\n    { label: \"Dominican Republic - DO\", value: \"Dominican Republic - DO\" },\r\n    { label: \"Ecuador - EC\", value: \"Ecuador - EC\" },\r\n    { label: \"Egypt - EG\", value: \"Egypt - EG\" },\r\n    { label: \"El Salvador - SV\", value: \"El Salvador - SV\" },\r\n    { label: \"Equatorial Guinea - GQ\", value: \"Equatorial Guinea - GQ\" },\r\n    { label: \"Eritrea - ER\", value: \"Eritrea - ER\" },\r\n    { label: \"Estonia - EE\", value: \"Estonia - EE\" },\r\n    { label: \"Ethiopia - ET\", value: \"Ethiopia - ET\" },\r\n    { label: \"Falkland Islands (Malvinas) - FK\", value: \"Falkland Islands (Malvinas) - FK\" },\r\n    { label: \"Faroe Islands - FO\", value: \"Faroe Islands - FO\" },\r\n    { label: \"Fiji - FJ\", value: \"Fiji - FJ\" },\r\n    { label: \"Finland - FI\", value: \"Finland - FI\" },\r\n    { label: \"France - FR\", value: \"France - FR\" },\r\n    { label: \"French Guiana - GF\", value: \"French Guiana - GF\" },\r\n    { label: \"French Polynesia - PF\", value: \"French Polynesia - PF\" },\r\n    { label: \"French Southern Territories - TF\", value: \"French Southern Territories - TF\" },\r\n    { label: \"Gabon - GA\", value: \"Gabon - GA\" },\r\n    { label: \"Gambia - GM\", value: \"Gambia - GM\" },\r\n    { label: \"Georgia - GE\", value: \"Georgia - GE\" },\r\n    { label: \"Germany - DE\", value: \"Germany - DE\" },\r\n    { label: \"Ghana - GH\", value: \"Ghana - GH\" },\r\n    { label: \"Gibraltar - GI\", value: \"Gibraltar - GI\" },\r\n    { label: \"Greece - GR\", value: \"Greece - GR\" },\r\n    { label: \"Greenland - GL\", value: \"Greenland - GL\" },\r\n    { label: \"Grenada - GD\", value: \"Grenada - GD\" },\r\n    { label: \"Guadeloupe - GP\", value: \"Guadeloupe - GP\" },\r\n    { label: \"Guam - GU\", value: \"Guam - GU\" },\r\n    { label: \"Guatemala - GT\", value: \"Guatemala - GT\" },\r\n    { label: \"Guernsey - GG\", value: \"Guernsey - GG\" },\r\n    { label: \"Guinea - GN\", value: \"Guinea - GN\" },\r\n    { label: \"Guinea-Bissau - GW\", value: \"Guinea-Bissau - GW\" },\r\n    { label: \"Guyana - GY\", value: \"Guyana - GY\" },\r\n    { label: \"Haiti - HT\", value: \"Haiti - HT\" },\r\n    { label: \"Heard Island and Mcdonald Islands - HM\", value: \"Heard Island and Mcdonald Islands - HM\" },\r\n    { label: \"Holy See (Vatican City State) - VA\", value: \"Holy See (Vatican City State) - VA\" },\r\n    { label: \"Honduras - HN\", value: \"Honduras - HN\" },\r\n    { label: \"Hong Kong - HK\", value: \"Hong Kong - HK\" },\r\n    { label: \"Hungary - HU\", value: \"Hungary - HU\" },\r\n    { label: \"Iceland - IS\", value: \"Iceland - IS\" },\r\n    { label: \"India - IN\", value: \"India - IN\" },\r\n    { label: \"Indonesia - ID\", value: \"Indonesia - ID\" },\r\n    { label: \"Iran, Islamic Republic Of - IR\", value: \"Iran, Islamic Republic Of - IR\" },\r\n    { label: \"Iraq - IQ\", value: \"Iraq - IQ\" },\r\n    { label: \"Ireland - IE\", value: \"Ireland - IE\" },\r\n    { label: \"Isle of Man - IM\", value: \"Isle of Man - IM\" },\r\n    { label: \"Israel - IL\", value: \"Israel - IL\" },\r\n    { label: \"Italy - IT\", value: \"Italy - IT\" },\r\n    { label: \"Jamaica - JM\", value: \"Jamaica - JM\" },\r\n    { label: \"Japan - JP\", value: \"Japan - JP\" },\r\n    { label: \"Jersey - JE\", value: \"Jersey - JE\" },\r\n    { label: \"Jordan - JO\", value: \"Jordan - JO\" },\r\n    { label: \"Kazakhstan - KZ\", value: \"Kazakhstan - KZ\" },\r\n    { label: \"Kenya - KE\", value: \"Kenya - KE\" },\r\n    { label: \"Kiribati - KI\", value: \"Kiribati - KI\" },\r\n    { label: \"Korea, Democratic People'S Republic of - KP\", value: \"Korea, Democratic People'S Republic of - KP\" },\r\n    { label: \"Korea, Republic of - KR\", value: \"Korea, Republic of - KR\" },\r\n    { label: \"Kuwait - KW\", value: \"Kuwait - KW\" },\r\n    { label: \"Kyrgyzstan - KG\", value: \"Kyrgyzstan - KG\" },\r\n    { label: \"Lao People'S Democratic Republic - LA\", value: \"Lao People'S Democratic Republic - LA\" },\r\n    { label: \"Latvia - LV\", value: \"Latvia - LV\" },\r\n    { label: \"Lebanon - LB\", value: \"Lebanon - LB\" },\r\n    { label: \"Lesotho - LS\", value: \"Lesotho - LS\" },\r\n    { label: \"Liberia - LR\", value: \"Liberia - LR\" },\r\n    { label: \"Libyan Arab Jamahiriya - LY\", value: \"Libyan Arab Jamahiriya - LY\" },\r\n    { label: \"Liechtenstein - LI\", value: \"Liechtenstein - LI\" },\r\n    { label: \"Lithuania - LT\", value: \"Lithuania - LT\" },\r\n    { label: \"Luxembourg - LU\", value: \"Luxembourg - LU\" },\r\n    { label: \"Macao - MO\", value: \"Macao - MO\" },\r\n    { label: \"Macedonia, The Former Yugoslav Republic of - MK\", value: \"Macedonia, The Former Yugoslav Republic of - MK\" },\r\n    { label: \"Madagascar - MG\", value: \"Madagascar - MG\" },\r\n    { label: \"Malawi - MW\", value: \"Malawi - MW\" },\r\n    { label: \"Malaysia - MY\", value: \"Malaysia - MY\" },\r\n    { label: \"Maldives - MV\", value: \"Maldives - MV\" },\r\n    { label: \"Mali - ML\", value: \"Mali - ML\" },\r\n    { label: \"Malta - MT\", value: \"Malta - MT\" },\r\n    { label: \"Marshall Islands - MH\", value: \"Marshall Islands - MH\" },\r\n    { label: \"Martinique - MQ\", value: \"Martinique - MQ\" },\r\n    { label: \"Mauritania - MR\", value: \"Mauritania - MR\" },\r\n    { label: \"Mauritius - MU\", value: \"Mauritius - MU\" },\r\n    { label: \"Mayotte - YT\", value: \"Mayotte - YT\" },\r\n    { label: \"Mexico - MX\", value: \"Mexico - MX\" },\r\n    { label: \"Micronesia, Federated States of - FM\", value: \"Micronesia, Federated States of - FM\" },\r\n    { label: \"Moldova, Republic of - MD\", value: \"Moldova, Republic of - MD\" },\r\n    { label: \"Monaco - MC\", value: \"Monaco - MC\" },\r\n    { label: \"Mongolia - MN\", value: \"Mongolia - MN\" },\r\n    { label: \"Montserrat - MS\", value: \"Montserrat - MS\" },\r\n    { label: \"Morocco - MA\", value: \"Morocco - MA\" },\r\n    { label: \"Mozambique - MZ\", value: \"Mozambique - MZ\" },\r\n    { label: \"Myanmar - MM\", value: \"Myanmar - MM\" },\r\n    { label: \"Namibia - NA\", value: \"Namibia - NA\" },\r\n    { label: \"Nauru - NR\", value: \"Nauru - NR\" },\r\n    { label: \"Nepal - NP\", value: \"Nepal - NP\" },\r\n    { label: \"Netherlands - NL\", value: \"Netherlands - NL\" },\r\n    { label: \"Netherlands Antilles - AN\", value: \"Netherlands Antilles - AN\" },\r\n    { label: \"New Caledonia - NC\", value: \"New Caledonia - NC\" },\r\n    { label: \"New Zealand - NZ\", value: \"New Zealand - NZ\" },\r\n    { label: \"Nicaragua - NI\", value: \"Nicaragua - NI\" },\r\n    { label: \"Niger - NE\", value: \"Niger - NE\" },\r\n    { label: \"Nigeria - NG\", value: \"Nigeria - NG\" },\r\n    { label: \"Niue - NU\", value: \"Niue - NU\" },\r\n    { label: \"Norfolk Island - NF\", value: \"Norfolk Island - NF\" },\r\n    { label: \"Northern Mariana Islands - MP\", value: \"Northern Mariana Islands - MP\" },\r\n    { label: \"Norway - NO\", value: \"Norway - NO\" },\r\n    { label: \"Oman - OM\", value: \"Oman - OM\" },\r\n    { label: \"Pakistan - PK\", value: \"Pakistan - PK\" },\r\n    { label: \"Palau - PW\", value: \"Palau - PW\" },\r\n    { label: \"Palestinian Territory, Occupied - PS\", value: \"Palestinian Territory, Occupied - PS\" },\r\n    { label: \"Panama - PA\", value: \"Panama - PA\" },\r\n    { label: \"Papua New Guinea - PG\", value: \"Papua New Guinea - PG\" },\r\n    { label: \"Paraguay - PY\", value: \"Paraguay - PY\" },\r\n    { label: \"Peru - PE\", value: \"Peru - PE\" },\r\n    { label: \"Philippines - PH\", value: \"Philippines - PH\" },\r\n    { label: \"Pitcairn - PN\", value: \"Pitcairn - PN\" },\r\n    { label: \"Poland - PL\", value: \"Poland - PL\" },\r\n    { label: \"Portugal - PT\", value: \"Portugal - PT\" },\r\n    { label: \"Puerto Rico - PR\", value: \"Puerto Rico - PR\" },\r\n    { label: \"Qatar - QA\", value: \"Qatar - QA\" },\r\n    { label: \"Reunion - RE\", value: \"Reunion - RE\" },\r\n    { label: \"Romania - RO\", value: \"Romania - RO\" },\r\n    { label: \"Russian Federation - RU\", value: \"Russian Federation - RU\" },\r\n    { label: \"RWANDA - RW\", value: \"RWANDA - RW\" },\r\n    { label: \"Saint Helena - SH\", value: \"Saint Helena - SH\" },\r\n    { label: \"Saint Kitts and Nevis - KN\", value: \"Saint Kitts and Nevis - KN\" },\r\n    { label: \"Saint Lucia - LC\", value: \"Saint Lucia - LC\" },\r\n    { label: \"Saint Pierre and Miquelon - PM\", value: \"Saint Pierre and Miquelon - PM\" },\r\n    { label: \"Saint Vincent and the Grenadines - VC\", value: \"Saint Vincent and the Grenadines - VC\" },\r\n    { label: \"Samoa - WS\", value: \"Samoa - WS\" },\r\n    { label: \"San Marino - SM\", value: \"San Marino - SM\" },\r\n    { label: \"Sao Tome and Principe - ST\", value: \"Sao Tome and Principe - ST\" },\r\n    { label: \"Saudi Arabia - SA\", value: \"Saudi Arabia - SA\" },\r\n    { label: \"Senegal - SN\", value: \"Senegal - SN\" },\r\n    { label: \"Serbia and Montenegro - CS\", value: \"Serbia and Montenegro - CS\" },\r\n    { label: \"Seychelles - SC\", value: \"Seychelles - SC\" },\r\n    { label: \"Sierra Leone - SL\", value: \"Sierra Leone - SL\" },\r\n    { label: \"Singapore - SG\", value: \"Singapore - SG\" },\r\n    { label: \"Slovakia - SK\", value: \"Slovakia - SK\" },\r\n    { label: \"Slovenia - SI\", value: \"Slovenia - SI\" },\r\n    { label: \"Solomon Islands - SB\", value: \"Solomon Islands - SB\" },\r\n    { label: \"Somalia - SO\", value: \"Somalia - SO\" },\r\n    { label: \"South Africa - ZA\", value: \"South Africa - ZA\" },\r\n    { label: \"South Georgia and the South Sandwich Islands - GS\", value: \"South Georgia and the South Sandwich Islands - GS\" },\r\n    { label: \"Spain - ES\", value: \"Spain - ES\" },\r\n    { label: \"Sri Lanka - LK\", value: \"Sri Lanka - LK\" },\r\n    { label: \"Sudan - SD\", value: \"Sudan - SD\" },\r\n    { label: \"Surilabel - SR\", value: \"Surilabel - SR\" },\r\n    { label: \"Svalbard and Jan Mayen - SJ\", value: \"Svalbard and Jan Mayen - SJ\" },\r\n    { label: \"Swaziland - SZ\", value: \"Swaziland - SZ\" },\r\n    { label: \"Sweden - SE\", value: \"Sweden - SE\" },\r\n    { label: \"Switzerland - CH\", value: \"Switzerland - CH\" },\r\n    { label: \"Syrian Arab Republic - SY\", value: \"Syrian Arab Republic - SY\" },\r\n    { label: \"Taiwan, Province of China - TW\", value: \"Taiwan, Province of China - TW\" },\r\n    { label: \"Tajikistan - TJ\", value: \"Tajikistan - TJ\" },\r\n    { label: \"Tanzania, United Republic of - TZ\", value: \"Tanzania, United Republic of - TZ\" },\r\n    { label: \"Thailand - TH\", value: \"Thailand - TH\" },\r\n    { label: \"Timor-Leste - TL\", value: \"Timor-Leste - TL\" },\r\n    { label: \"Togo - TG\", value: \"Togo - TG\" },\r\n    { label: \"Tokelau - TK\", value: \"Tokelau - TK\" },\r\n    { label: \"Tonga - TO\", value: \"Tonga - TO\" },\r\n    { label: \"Trinidad and Tobago - TT\", value: \"Trinidad and Tobago - TT\" },\r\n    { label: \"Tunisia - TN\", value: \"Tunisia - TN\" },\r\n    { label: \"Turkey - TR\", value: \"Turkey - TR\" },\r\n    { label: \"Turkmenistan - TM\", value: \"Turkmenistan - TM\" },\r\n    { label: \"Turks and Caicos Islands - TC\", value: \"Turks and Caicos Islands - TC\" },\r\n    { label: \"Tuvalu - TV\", value: \"Tuvalu - TV\" },\r\n    { label: \"Uganda - UG\", value: \"Uganda - UG\" },\r\n    { label: \"Ukraine - UA\", value: \"Ukraine - UA\" },\r\n    { label: \"United Arab Emirates - AE\", value: \"United Arab Emirates - AE\" },\r\n    { label: \"United Kingdom - GB\", value: \"United Kingdom - GB\" },\r\n    { label: \"United States - US\", value: \"United States - US\" },\r\n    { label: \"United States Minor Outlying Islands - UM\", value: \"United States Minor Outlying Islands - UM\" },\r\n    { label: \"Uruguay - UY\", value: \"Uruguay - UY\" },\r\n    { label: \"Uzbekistan - UZ\", value: \"Uzbekistan - UZ\" },\r\n    { label: \"Vanuatu - VU\", value: \"Vanuatu - VU\" },\r\n    { label: \"Venezuela - VE\", value: \"Venezuela - VE\" },\r\n    { label: \"Viet Nam - VN\", value: \"Viet Nam - VN\" },\r\n    { label: \"Virgin Islands, British - VG\", value: \"Virgin Islands, British - VG\" },\r\n    { label: \"Virgin Islands, U.S. - VI\", value: \"Virgin Islands, U.S. - VI\" },\r\n    { label: \"Wallis and Futuna - WF\", value: \"Wallis and Futuna - WF\" },\r\n    { label: \"Western Sahara - EH\", value: \"Western Sahara - EH\" },\r\n    { label: \"Yemen - YE\", value: \"Yemen - YE\" },\r\n    { label: \"Zambia - ZM\", value: \"Zambia - ZM\" },\r\n    { label: \"Zimbabwe - ZW\", value: \"Zimbabwe - ZW\" },\r\n  ];\r\n}\r\n\r\nexport function youtubeUrlParse(url) {\r\n  var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&\\?]*).*/;\r\n  var match = url.match(regExp);\r\n  return match && match[7].length == 11 ? match[7] : false;\r\n}\r\n\r\nexport function vimeoUrlParse(url) {\r\n  var regExp = /https?:\\/\\/(?:www\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/([^\\/]*)\\/videos\\/|album\\/(\\d+)\\/video\\/|)(\\d+)(?:$|\\/|\\?)/;\r\n  var match = url.match(regExp);\r\n  return match ? match[3] : false;\r\n}\r\n\r\nexport function getcolor(element, key) {\r\n  let color = \"#fff\";\r\n  element.forEach((value) => {\r\n    if (value.name === key) {\r\n      color = value.color;\r\n    }\r\n  });\r\n  return color;\r\n}\r\n\r\nexport function generateFile(fileName = \"index.html\", content = \"Hello World\") {\r\n  var element = document.createElement(\"a\");\r\n  element.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(content));\r\n  element.setAttribute(\"download\", fileName);\r\n  element.style.display = \"none\";\r\n  document.body.appendChild(element);\r\n  element.click();\r\n  document.body.removeChild(element);\r\n}\r\n\r\nexport function getChartData(data) {\r\n  // var sorted = [];\r\n  // var values = [];\r\n  // for(var k in data){\r\n  //   console.log(k)\r\n  //   sorted.push(k);\r\n  //     // values.push(data.countCustomer[k])\r\n  // }\r\n  const sorted = data.dates.sort((a, b) => new moment(a).format(\"YYYYMMDD\") - new moment(b).format(\"YYYYMMDD\"));\r\n  const options = {\r\n    chart: {\r\n      height: 350,\r\n      type: \"area\",\r\n      toolbar: { show: false },\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    stroke: {\r\n      curve: \"smooth\",\r\n    },\r\n    xaxis: {\r\n      type: \"date\",\r\n      categories: sorted,\r\n    },\r\n    colors: [\"#A398F5\"],\r\n    markers: {\r\n      size: 0,\r\n      colors: [\"#FFA41B\"],\r\n      strokeColors: \"#fff\",\r\n      strokeWidth: 2,\r\n      hover: {\r\n        size: 7,\r\n      },\r\n    },\r\n    tooltip: {\r\n      x: {\r\n        format: \"dd/MM/yy\",\r\n      },\r\n    },\r\n  };\r\n  const series = [\r\n    {\r\n      name: \"\",\r\n      data: data.dots,\r\n    },\r\n  ];\r\n\r\n  return { options, series };\r\n}\r\n\r\nexport const GenerateCVS = function (JSONData, ReportTitle, ShowLabel) {\r\n  var arrData = typeof JSONData !== \"object\" ? JSON.parse(JSONData) : JSONData;\r\n  var CSV = \"\";\r\n  CSV += ReportTitle + \"\\r\\n\\n\";\r\n  if (ShowLabel) {\r\n    var row = \"\";\r\n    for (var index in arrData[0]) {\r\n      row += index + \",\";\r\n    }\r\n    row = row.slice(0, -1);\r\n    CSV += row + \"\\r\\n\";\r\n  }\r\n  for (var i = 0; i < arrData.length; i++) {\r\n    var row = \"\";\r\n    for (var index in arrData[i]) {\r\n      row += '\"' + arrData[i][index] + '\",';\r\n    }\r\n    row.slice(0, row.length - 1);\r\n    CSV += row + \"\\r\\n\";\r\n  }\r\n\r\n  if (CSV == \"\") {\r\n    alert(\"Invalid data\");\r\n    return;\r\n  }\r\n\r\n  var fileName = \"Converzee_\";\r\n  fileName += ReportTitle.replace(/ /g, \"_\");\r\n  var uri = \"data:text/csv;charset=utf-8,\" + escape(CSV);\r\n  var link = document.createElement(\"a\");\r\n  link.href = uri;\r\n  link.style = \"visibility:hidden\";\r\n  link.download = fileName + \".csv\";\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n};\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/layout/Landing.js",["944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969","970"],"import React, { Component, useState, useCallback } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport \"./Landing.css\";\r\nimport { Request } from \"../auth/authHandler\";\r\nimport RequestHandler from \"../../actions/RequestHandler\";\r\nimport { SAVE_USER_DETAILS, VERIFY_AND_ADD_USER, UPDATE_PASSWORD, FORGOT_PASSWORD, getPath, getBGPath } from \"../../actions/URLs\";\r\nimport { message } from \"antd\";\r\nimport Loader from \"../comman/Loader\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (Request.getAuth()) {\r\n      this.props.setAuth(true);\r\n    }\r\n  }\r\n  state = {\r\n    loginPage: true,\r\n    process: false,\r\n  };\r\n  onChangeInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onSubmit = (email = \"\", password = \"\") => {\r\n    this.setState({ process: true });\r\n    const emailId = email.trim();\r\n    const passworded = password.trim();\r\n    Request.loginAuth({ email: emailId, password: passworded }, (res, err) => {\r\n      if (res) {\r\n        if (!res.data.success) {\r\n          window.gs.toast(res.data.message, { position: \"bottom-right\", autoClose: true, type: window.gs.toast.TYPE.ERROR });\r\n          this.setState({ process: false });\r\n        } else if (res.data.user.isActive) {\r\n          window.email = emailId;\r\n          this.props.setAuth(true);\r\n          window.gs.toast(res.data.message, { position: \"bottom-right\", type: window.gs.toast.TYPE.SUCCESS });\r\n          window.location.pathname = \"/Dashboard\";\r\n        } else {\r\n          this.setState({ loginPage: \"REG\", process: false });\r\n        }\r\n      } else {\r\n        this.setState({ process: false });\r\n        window.gs.toast(\"Something Wrong\", { position: \"bottom-right\", type: window.gs.toast.TYPE.FAILED });\r\n      }\r\n    });\r\n  };\r\n\r\n  onSaveClick = (firstname) => {\r\n    RequestHandler.PostRequest(SAVE_USER_DETAILS, { userData: { firstname } }, (res, err) => {\r\n      if (err) {\r\n      } else {\r\n        if (res.data.success) this.props.setAuth(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  onVerifyKeyClick = (e, key, email, password, firstname) => {\r\n    this.setLoder();\r\n    RequestHandler.RegRequest(VERIFY_AND_ADD_USER, { keyData: { key, email, password, firstname } }, (res, err) => {\r\n      if (res) {\r\n        if (res.data.success) {\r\n          this.setState({ loader: false });\r\n          message.success(\"Successfully Applied\");\r\n        } else {\r\n          this.setState({ loader: false });\r\n          message.error(res.data.message);\r\n        }\r\n      } else {\r\n        this.setState({ loader: false });\r\n        message.error(\"Something wrong\");\r\n      }\r\n    });\r\n  };\r\n\r\n  setLoder = () => {\r\n    this.setState({ loader: true });\r\n  };\r\n\r\n  changeView = (view) => {\r\n    this.setState({ loginPage: view });\r\n  };\r\n\r\n  resendTimer;\r\n\r\n  onSendOTP = (email, cb, cb2) => {\r\n    RequestHandler.ForgotRequest(FORGOT_PASSWORD, { userData: { email } }, (res, err) => {\r\n      if (res.data.success) {\r\n        cb(true);\r\n        setTimeout(() => {\r\n          cb2(true);\r\n        }, 2000 * 60);\r\n      } else {\r\n        window.gs.toast(res.data.message, { position: \"bottom-right\", autoClose: true, type: window.gs.toast.TYPE.ERROR });\r\n      }\r\n    });\r\n  };\r\n\r\n  updatePassword = (email, otp, password) => {\r\n    RequestHandler.ForgotRequest(UPDATE_PASSWORD, { userData: { email, otp, password } }, (res, err) => {\r\n      if (res.data.success) {\r\n        window.gs.toast(res.data.message, { position: \"bottom-right\", type: window.gs.toast.TYPE.SUCCESS });\r\n      } else {\r\n        window.gs.toast(res.data.message, { position: \"bottom-right\", autoClose: true, type: window.gs.toast.TYPE.ERROR });\r\n      }\r\n    });\r\n  };\r\n\r\n  renderForm = () => {\r\n    let component = null;\r\n    const { loginPage, process } = this.state;\r\n    switch (loginPage) {\r\n      case \"LOGIN\":\r\n        component = <LoginPage req={process} onSubmit={this.onSubmit} email={\"\"} password={\"\"} changeView={this.changeView} />;\r\n        break;\r\n      case \"REG\":\r\n        component = <RegisterPage req={process} onSaveClick={this.onSaveClick} firstName={\"\"} changeView={this.changeView} />;\r\n        break;\r\n      case \"KEY\":\r\n        component = <KEYRegisterPage req={process} onVerifyKeyClick={this.onVerifyKeyClick} key={\"\"} email={\"\"} password=\"\" firstName={\"\"} changeView={this.changeView} />;\r\n        break;\r\n      case \"FORGOT\":\r\n        component = <ForgotPassword req={process} onSendOTP={this.onSendOTP} updatePassword={this.updatePassword} email={\"\"} password=\"\" firstName={\"\"} changeView={this.changeView} />;\r\n        break;\r\n      default:\r\n        component = <LoginPage req={process} onSubmit={this.onSubmit} email={\"\"} password={\"\"} changeView={this.changeView} />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  render() {\r\n    const { loginPage, loader } = this.state;\r\n    return (\r\n      <>\r\n        {loader ? <Loader /> : null}\r\n        <center>\r\n          <div className=\"row center-row\">{this.renderForm()}</div>\r\n        </center>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n// onSubmit, email, password\r\nconst LoginPage = function (props) {\r\n  const [email, setEmail] = useState(props.email);\r\n  const [password, setPassword] = useState(props.password);\r\n  const changeEmail = useCallback(\r\n    (newEmail) => {\r\n      setEmail(newEmail);\r\n    },\r\n    [email]\r\n  );\r\n  const changePassword = useCallback(\r\n    (newPassword) => {\r\n      setPassword(newPassword);\r\n    },\r\n    [password]\r\n  );\r\n\r\n  //const onKeyUp(event) {\r\n  //   if (event.charCode === 13) {\r\n  //     this.setState({ inputValue: event.target.value });\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div className=\"col-md-12 col-sm-12 col-lg-12 login-form-1 login_page\">\r\n      <div className=\"login_vector\">\r\n          <img src={getPath(\"asset/login_vector.png\")} /> \r\n      </div>\r\n      <div className=\"cz_auth_wrapper cz_login_wrapper\">\r\n        <div className=\"cz_logo\">\r\n          <img src={getPath(\"asset/dark_logo.png\")} style={{ height: \"50px\" }} /> \r\n        </div>\r\n        <div className=\"cz_login_inner\">\r\n        <div className=\"loginTitle\">Login Your Account</div>\r\n        {/* <div className=\"subtitle\">Use your email to login.</div> */}\r\n        <div className=\"cz_auth_form\">\r\n          <div className=\"inputBox\">\r\n            {/* <label className=\"login_label\">Email-ID</label> */}\r\n            <img src={getPath(\"asset/user.png\")}/> \r\n            <Input placeholder=\"Email\" className=\"form-control\" name=\"email\" onChange={(e) => changeEmail(e.target.value)} value={email} />\r\n          </div>\r\n          <div className=\"inputBox\">\r\n            {/* <label className=\"login_label\">Password</label> */}\r\n            <img src={getPath(\"asset/lock.png\")}/> \r\n            <Input.Password placeholder=\"Password\" onChange={(e) => changePassword(e.target.value)} value={password} />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button disabled={props.req} name=\"Sign In\" className=\"login_button\" onClick={() => props.onSubmit(email, password)}>\r\n            LOGIN\r\n          </button>\r\n        </div>\r\n        <div className=\"bottom_text\" onClick={() => props.changeView(\"KEY\")} style={{fontWeight:800}}>\r\n          Create Account\r\n        </div>\r\n        <div className=\"forgot_password\">\r\n          <div onClick={() => props.changeView(\"FORGOT\")}>\r\n            Forget Password?\r\n          </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RegisterPage = function (props) {\r\n  const [firstName, setfirstName] = useState(props.firstName);\r\n  const changeFirstName = useCallback(\r\n    (newfirstName) => {\r\n      setfirstName(newfirstName);\r\n    },\r\n    [firstName]\r\n  );\r\n  return (\r\n    <div className=\"col-md-12 col-sm-12 col-lg-12 login-form-1\">\r\n      <div className=\"cz_auth_wrapper\">\r\n        <div className=\"cz_logo\">\r\n          <img src={getPath(\"asset/logo-wb.png\")} style={{ height: \"50px\" }} />\r\n        </div>\r\n        <div className=\"loginTitle\">Fill the details to Conti...:</div>\r\n\r\n        <div className=\"inputBox\">\r\n          <label className=\"login_label\">Firstname</label>\r\n          <input type=\"text\" name=\"firstname\" placeholder=\"Firstname\" onChange={(e) => changeFirstName(e.target.value)} className=\"form-control\" value={firstName} />\r\n        </div>\r\n        <div className=\"form-group\" style={{ display: \"flex\" }}>\r\n          <button name=\"Save\" disabled={props.req} onClick={() => props.onSaveClick(firstName)} className=\"btnSubmit btnSigUp\">\r\n            Save\r\n          </button>\r\n        </div>\r\n        <div style={{ cursor: \"pointer\",fontWeight:800 }} onClick={() => props.changeView(\"KEY\")}>\r\n          Click to Register throught to KEY\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst KEYRegisterPage = function (props) {\r\n  const [key, setkey] = useState(props.key);\r\n  const [email, setEmail] = useState(props.email);\r\n  const [password, setPassword] = useState(props.password);\r\n  const [firstName, setfirstName] = useState(props.firstName);\r\n  const changeKey = useCallback(\r\n    (newkey) => {\r\n      setkey(newkey);\r\n    },\r\n    [key]\r\n  );\r\n  const changeEmail = useCallback(\r\n    (newEmail) => {\r\n      setEmail(newEmail);\r\n    },\r\n    [email]\r\n  );\r\n  const changePassword = useCallback(\r\n    (newPassword) => {\r\n      setPassword(newPassword);\r\n    },\r\n    [password]\r\n  );\r\n  const changeFirstName = useCallback(\r\n    (newfirstName) => {\r\n      setfirstName(newfirstName);\r\n    },\r\n    [firstName]\r\n  );\r\n  return (\r\n    <div className=\"col-md-12 col-sm-12 col-lg-12 login-form-1 login_page\">\r\n      <div className=\"login_vector\">\r\n          <img src={getPath(\"asset/login_vector.png\")} /> \r\n      </div>\r\n      <div className=\"cz_auth_wrapper cz_login_wrapper\">\r\n        <div className=\"cz_logo\">\r\n          <img src={getPath(\"asset/dark_logo.png\")} style={{ height: \"50px\" }} />\r\n        </div>\r\n        <div className=\"cz_login_inner\">\r\n        <div className=\"loginTitle\">Create Your Account</div>\r\n        {/* <div className=\"subtitle\">Enter your details below.</div> */}\r\n        <div className=\"cz_auth_form\">\r\n          <div className=\"inputBox\">\r\n            {/* <label className=\"login_label\">Key</label> */}\r\n            <img src={getPath(\"asset/lock.png\")}/> \r\n            <Input name=\"key\" placeholder=\"key\" onChange={(e) => changeKey(e.target.value)} className=\"form-control\" value={key} />\r\n          </div>\r\n          <div className=\"inputBox\">\r\n            {/* <label className=\"login_label\">Email-ID</label> */}\r\n            <img src={getPath(\"asset/user.png\")}/> \r\n            <Input name=\"email\" placeholder=\"Email\" onChange={(e) => changeEmail(e.target.value)} className=\"form-control\" value={email} />\r\n          </div>\r\n          <div className=\"inputBox\">\r\n            {/* <label className=\"login_label\">Password</label> */}\r\n            <img src={getPath(\"asset/lock.png\")}/> \r\n            <Input.Password placeholder=\"Password\" onChange={(e) => changePassword(e.target.value)} value={password} />\r\n            {/* <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={(e) => changePassword(e.target.value)} className=\"form-control\" value={password} /> */}\r\n          </div>\r\n          <div className=\"inputBox\">\r\n            {/* <label className=\"login_label\">Firstname</label> */}\r\n            <img src={getPath(\"asset/user.png\")}/> \r\n            <Input name=\"firstName\" placeholder=\"Name\" onChange={(e) => changeFirstName(e.target.value)} className=\"form-control\" value={firstName} />\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-3 cz_auth_btns\">\r\n          <button type=\"button\" disabled={props.req} onClick={(e) => props.onVerifyKeyClick(e, key, email, password, firstName)} className=\"btnSubmit btnSigUp verify-key\">\r\n            VerifyKey\r\n          </button>\r\n          <button type=\"button\" onClick={(e) => props.changeView(\"LOGIN\")} className=\"btnSubmit btnSigUp\">\r\n            Back to Login\r\n          </button>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ForgotPassword = function (props) {\r\n  const [email, setEmail] = useState(props.email);\r\n  const [show, setShow] = useState(false);\r\n  const [resend, setResend] = useState(false);\r\n  const [otp, setOTP] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confPass, setConfPass] = useState(\"\");\r\n  const changeEmail = useCallback(\r\n    (newEmail) => {\r\n      setEmail(newEmail);\r\n    },\r\n    [email]\r\n  );\r\n  const changeOTP = useCallback(\r\n    (newotp) => {\r\n      setOTP(newotp);\r\n    },\r\n    [otp]\r\n  );\r\n  const changePassword = useCallback(\r\n    (newPassword) => {\r\n      setPassword(newPassword);\r\n    },\r\n    [password]\r\n  );\r\n  const changeConfPass = useCallback(\r\n    (newConfPass) => {\r\n      setConfPass(newConfPass);\r\n    },\r\n    [confPass]\r\n  );\r\n  return (\r\n    <div className=\"col-md-12 col-sm-12 col-lg-12 login-form-1 login_page\">\r\n      <div className=\"login_vector\">\r\n          <img src={getPath(\"asset/login_vector.png\")} /> \r\n      </div>\r\n      <div className=\"cz_auth_wrapper cz_login_wrapper\">\r\n        <div className=\"cz_logo\">\r\n          <img src={getPath(\"asset/dark_logo.png\")} style={{ height: \"50px\" }} />\r\n        </div>\r\n        <div className=\"cz_login_inner\">\r\n        <div className=\"loginTitle\">Reset Password</div>\r\n        {/* <div className=\"subtitle\">Use your email for password reset.</div> */}\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" name=\"email\" placeholder=\"email\" onChange={(e) => changeEmail(e.target.value)} className=\"form-control\" value={email} />\r\n        </div>\r\n        {show ? (\r\n          <React.Fragment>\r\n            <div className=\"form-group\">\r\n              <input type=\"text\" name=\"OTP\" placeholder=\"OTP\" onChange={(e) => changeOTP(e.target.value)} className=\"form-control\" value={otp} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Input.Password placeholder=\"Password\" onChange={(e) => changePassword(e.target.value)} value={password} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Input.Password placeholder=\"Conf Password\" onChange={(e) => changeConfPass(e.target.value)} value={confPass} />\r\n            </div>\r\n          </React.Fragment>\r\n        ) : null}\r\n        <div className=\"form-group cz_auth_btns\" style={{ display: \"flex\" }}>\r\n          {!show || resend ? (\r\n            <button name=\"Save\" onClick={() => props.onSendOTP(email, setShow, setResend)} className=\"btnSubmit btnSigUp cz_black_btn\">\r\n              Send OTP\r\n            </button>\r\n          ) : null}\r\n          {show ? (\r\n            <button name=\"Save\" disabled={password.length == 0 || password !== confPass || otp.length < 3} onClick={() => props.updatePassword(email, otp, password)} className=\"btnSubmit btnSigUp cz_black_btn\">\r\n              Update Password\r\n            </button>\r\n          ) : null}\r\n          <button onClick={() => props.changeView(\"LOGIN\")} className=\"btnSubmit btnSigUp\">\r\n            Back to login\r\n          </button>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/layout/Navbar.js",["971","972","973","974","975","976","977","978","979","980","981","982","983"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Popover, Button, Modal } from \"antd\";\r\nimport { DOMAIN, PIXEL, DONWLOADS, MAIL_RESPONDER } from \"../../utils/Routes\";\r\nimport \"./Navbar.css\";\r\nimport Profile from \"./Profile\";\r\nimport _ from \"lodash\";\r\nimport ToolUtil from \"../../utils/ToolUtil\";\r\nimport { CopyScript, AutoResponderConfig } from \"../comman/Popup\";\r\nimport RequestHandler from \"../../actions/RequestHandler\";\r\nimport { AUTO_RESPONDER } from \"../../actions/URLs\";\r\nclass Navbar extends Component {\r\n  state = {\r\n    showsettingDropdown: false,\r\n    startedPopup: false,\r\n    title: \"Dashboard\",\r\n    isShowProfile: false,\r\n    showMobileNav: false,\r\n    bonusPixel: false,\r\n    autoRepo: false,\r\n  };\r\n  autoResponder = null;\r\n  itemScript = \"\";\r\n  componentDidMount() {\r\n    window.gs.navTitle = this.changeTitle;\r\n  }\r\n  changeTitle = (title = \"Dashboard\") => {\r\n    this.setState({ title });\r\n  };\r\n  onSettingDropdownClick = () => {\r\n    const { showsettingDropdown } = this.state;\r\n    this.setState({ showsettingDropdown: !showsettingDropdown });\r\n  };\r\n  onStartedDropdownClick = () => {\r\n    const { startedPopup } = this.state;\r\n    this.setState({ startedPopup: !startedPopup });\r\n  }\r\n\r\n  onAutoReponder = () => {\r\n    const { autoRepo } = this.state;\r\n    if (ToolUtil.autoResponder) {\r\n      this.autoResponder = ToolUtil.autoResponder;\r\n    } else {\r\n      this.autoResponder = { region: \"\", uid: \"\", apiKey: \"\" };\r\n    }\r\n    this.setState({ autoRepo: !autoRepo });\r\n  };\r\n\r\n  toggleProfile = () => {\r\n    const { isShowProfile } = this.state;\r\n    this.setState({ isShowProfile: !isShowProfile });\r\n  };\r\n\r\n  getPageStyle() {\r\n    const urlTab = window.location.pathname;\r\n    var isExit = 0;\r\n    return isExit;\r\n  }\r\n\r\n  info() {\r\n    return Modal.info({\r\n      title: \"Bookmarkify for Copy Scroll\",\r\n      content: (\r\n        <div className=\"btn btn-sm btn-success\">\r\n          <a href='javascript:(function(){window.addEventListener(\"click\",function e(t){var o=t.target,n=0;do{isNaN(o.offsetTop)||(n+=o.offsetTop)}while(o=o.offsetParent);var a=n;if(window.clipboardData&&window.clipboardData.setData){ return clipboardData.setData(\"Text\",a) };if(document.queryCommandSupported&&document.queryCommandSupported(\"copy\")){var d=document.createElement(\"textarea\");d.textContent=a,d.style.position=\"fixed\",document.body.appendChild(d),d.select();try{ if(window.gs) { window.gs.toast(\"Your pixel copied!\", { position: \"top-center\", type: window.gs.toast.TYPE.INFO }); } else { alert(\"Your pixel copied!\"); } return document.execCommand(\"copy\");}catch(e){return console.warn(\"Copy to clipboard failed.\",e),!1}finally{ document.body.removeChild(d); window.removeEventListener(\"click\",e)}}  })})();'>\r\n            Converzee Bookmarklet\r\n          </a>\r\n        </div>\r\n      ),\r\n      onOk() {},\r\n    });\r\n  }\r\n  // document.body.innerHTML += `<img src=\"https://app.converzee.com/favicon.png\" style=\"position: fixed; left: 10px; bottom: 10px; z-index: 1000\">`;\r\n  openCloseBonusPixel = () => {\r\n    const scriptURI = ToolUtil.host + \"/static/lib/bonusscript.js\";\r\n    this.itemScript = `<script type=\"text/javascript\" src=\"${scriptURI}\"></script>`;\r\n    this.setState({ bonusPixel: !this.state.bonusPixel });\r\n  };\r\n\r\n  saveResponder = (region, uid, apiKey) => {\r\n    RequestHandler.PostRequest(AUTO_RESPONDER, { userData: { region, uid, apiKey } }, (res, err) => {\r\n      if (res) {\r\n        if (res.data.success) {\r\n          window.gs.success(true, \"Autoresponder Save Successfully\");\r\n        } else {\r\n          window.gs.success(false, res.data.message);\r\n        }\r\n      } else {\r\n        window.gs.success(false, \"Something Went Wrong\");\r\n      }\r\n      this.onAutoReponder();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { showsettingDropdown, title, isShowProfile, bonusPixel, autoRepo } = this.state;\r\n    const isstyle = this.getPageStyle();\r\n    const access = ToolUtil.toolsAccess ? ToolUtil.toolsAccess.access : 30;\r\n    return (\r\n      <nav name=\"Navbar\" className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\r\n        <button className=\"btn btn-link rounded-circle mr-3 toggle-bar\" onClick={this.props.toggleSideBar}>\r\n          <i className=\"fa fa-bars\"></i>\r\n        </button>\r\n        <CopyScript visible={bonusPixel} Close={this.openCloseBonusPixel} script={this.itemScript} />\r\n        <Profile visible={isShowProfile} onClose={this.toggleProfile} />\r\n        {autoRepo ? <AutoResponderConfig visible={autoRepo} {...this.autoResponder} Close={this.onAutoReponder} save={this.saveResponder} /> : null}\r\n        <div className=\"toggle-bar\">{title}</div>\r\n        <ul className=\"navbar-nav ml-auto nav-topmenu-list\">\r\n          <Popover\r\n            content={\r\n              <div className=\"started_popup\">\r\n                <img className=\"started_popup_vector\" src=\"/asset/started_popup_vector.png\"/>\r\n                <div className=\"started_popup_head\">\r\n                  <h2><img src=\"/asset/hand.png\"/>Hey Converzee</h2>\r\n                  <p>You only need 3 simple steps to get <br/>rolling with Converzee App:</p>\r\n                </div>\r\n                <div className=\"started_popup_body\">\r\n                  <h3><Link to=\"/Domain\">Domain Setup</Link></h3>\r\n                  <p>Add your domain under domain profile</p>\r\n                  <h3><Link to=\"/Pixel\">Add Pixel</Link></h3>\r\n                  <p>Add Converzee Pixel to you webpage</p>\r\n                  <h3><Link to=\"/Create\">Create Campaign</Link></h3>\r\n                  <p>Create a campaign from the choice of your tools</p>\r\n                </div>\r\n              </div>\r\n            }\r\n            title=\" \"\r\n            trigger=\"click\"\r\n            visible={this.state.startedPopup}\r\n            onVisibleChange={this.onStartedDropdownClick}\r\n            className=\"asdf\"\r\n          >\r\n            <li onClick={this.onStartedDropdownClick}><button type=\"button\" className=\"cz_btn cz_orange_btn cz_started_btn\"><i className=\"fa fa-plus\" aria-hidden=\"true\"></i><span>Get Started</span></button></li>\r\n          </Popover>\r\n\r\n\r\n          <li className=\"nav-item dropdown no-arrow mr-3 profile-icon align-items-center\">\r\n            <a href=\"https://converzee.com/kb/\" target=\"_blank\">\r\n              <i className=\"fa fa-question-circle\" />\r\n            </a>\r\n          </li>\r\n          <li className=\"d-none d-sm-flex nav-item dropdown no-arrow mr-3 align-items-center username\">\r\n            <a href=\"https://converzee.com/kb/\" target=\"_blank\">\r\n              Help\r\n            </a>\r\n          </li>\r\n\r\n          <Popover\r\n            content={\r\n              <ul style={{ padding: \"0px\" }} onClick={() => {\r\n                  let activeItem = document.querySelector(\".nav-active\");\r\n                  if(activeItem) {\r\n                    activeItem.classList.remove(\"nav-active\");\r\n                  }\r\n                  this.onSettingDropdownClick();\r\n              }}>\r\n                {access > 30 ? (\r\n                  <li className=\"dropdown-item setting-item\">\r\n                    <Link to={DOMAIN}> Domain Profile</Link>\r\n                  </li>\r\n                ) : null}\r\n                <li className=\"dropdown-item setting-item\">\r\n                  <Link to={PIXEL}> Pixel</Link>\r\n                </li>\r\n                <li className=\"dropdown-item setting-item\">\r\n                  <a onClick={this.info}>Converzee Bookmarklet</a>\r\n                </li>\r\n                {/* <li className=\"dropdown-item setting-item\">\r\n                  <a onClick={this.openCloseBonusPixel}>Bonus Page Pixel</a>\r\n                </li> */}\r\n                <li className=\"dropdown-item setting-item\">\r\n                  <Link to={MAIL_RESPONDER}> Auto Responder</Link>\r\n                </li>\r\n              </ul>\r\n            }\r\n            title=\"Integration\"\r\n            trigger=\"click\"\r\n            visible={this.state.showsettingDropdown}\r\n            onVisibleChange={this.onSettingDropdownClick}\r\n          >\r\n            <li className=\"nav-item dropdown no-arrow mr-3 setting-icon align-items-center\">\r\n              <i className=\"fa fa-cog\"></i>\r\n            </li>\r\n          </Popover>\r\n          <li onClick={this.onSettingDropdownClick} className=\"d-none d-sm-flex nav-item dropdown no-arrow mr-3 align-items-center username\">\r\n            Integration\r\n          </li>\r\n          <li onClick={this.toggleProfile} className=\"nav-item dropdown no-arrow mr-3 profile-icon align-items-center\">\r\n            <i className=\"fa fa-user\" />\r\n          </li>\r\n          <li onClick={this.toggleProfile} className=\"d-none d-sm-flex nav-item dropdown no-arrow mr-3 align-items-center username\">\r\n            {window.userName}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/layout/SessionLogin.js",["984","985","986","987","988"],"import React, { Component, useState, useCallback } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport \"./Landing.css\";\r\nimport { Request } from \"../auth/authHandler\";\r\nimport { getPath } from \"../../actions/URLs\";\r\n\r\nclass SessionLogin extends Component {\r\n  state = {\r\n    loginPage: true,\r\n    process: false,\r\n    checkSession: false\r\n  };\r\n  componentDidMount() {\r\n    // if (Request.getAuth()) {\r\n    //   this.props.setAuth(true);\r\n    // } else {\r\n    //   this.setState({ checkSession: true });\r\n    // }\r\n  }\r\n  onChangeInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onSubmit = (email = \"\", password = \"\") => {\r\n    this.setState({ process: true });\r\n    const emailId = email.trim();\r\n    const passworded = password.trim();\r\n    Request.loginAuth({ email: emailId, password: passworded }, (res, err) => {\r\n      if (res) {\r\n        if (!res.data.success) {\r\n          this.setState({ process: false });\r\n          window.gs.toast(res.data.message, { position: \"bottom-right\", autoClose: true, type: window.gs.toast.TYPE.ERROR });\r\n        } else if (res.data.user.isActive) {\r\n          window.email = emailId;\r\n          this.props.setAuth(true);\r\n          window.gs.toast(res.data.message, { position: \"bottom-right\", autoClose: true, type: window.gs.toast.TYPE.SUCCESS });\r\n          window.location.reload();\r\n        } else {\r\n          this.setState({ loginPage: \"REG\", process: false });\r\n        }\r\n      } else {\r\n        this.setState({ process: false });\r\n        window.gs.toast(\"Something Wrong\", { position: \"bottom-right\", type: window.gs.toast.TYPE.FAILED });\r\n      }\r\n    });\r\n  };\r\n\r\n  changeView = (view) => {\r\n    this.setState({ loginPage: view }); \r\n  };\r\n\r\n  render() {\r\n    const { loginPage, loader, process } = this.state;\r\n    return (\r\n      <LoginPage req={process} onSubmit={this.onSubmit} email={\"\"} password={\"\"} changeView={this.changeView} checkSession={this.props.checkSession}></LoginPage>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SessionLogin;\r\n// onSubmit, email, password\r\nconst LoginPage = function (props) {\r\n  const [email, setEmail] = useState(props.email);\r\n  const [password, setPassword] = useState(props.password);\r\n  const changeEmail = useCallback(\r\n    (newEmail) => {\r\n      setEmail(newEmail);\r\n    },\r\n    [email]\r\n  );\r\n  const changePassword = useCallback(\r\n    (newPassword) => {\r\n      setPassword(newPassword);\r\n    },\r\n    [password]\r\n  );\r\n  return (\r\n    <div className={\"session_login_wrapper\".concat(props.checkSession ? \"\" : \" cz_hide\")}>\r\n      <div className=\"session_login_overlay\"></div>\r\n      <div className=\"session_login_inner\">\r\n        <div className=\"col-md-12 col-sm-12 col-lg-12 login-form-1\">\r\n          <div className=\"cz_auth_wrapper cz_login_wrapper\">\r\n            <div className=\"cz_logo\">\r\n              <img src={getPath(\"/asset/dark_logo.png\")} style={{ height: \"50px\" }} /> \r\n            </div>\r\n            <div className=\"loginTitle\">Get started</div>\r\n            <div className=\"subtitle\">Use your email to login.</div>\r\n            <div className=\"cz_auth_form\">\r\n              <div className=\"inputBox\">\r\n                <label className=\"login_label\">Email-ID</label>\r\n                <Input placeholder=\"Email\" className=\"form-control\" name=\"email\" onChange={(e) => changeEmail(e.target.value)} value={email} />\r\n              </div>\r\n              <div className=\"inputBox\">\r\n                <label className=\"login_label\">Password</label>\r\n                <Input.Password placeholder=\"Password\" onChange={(e) => changePassword(e.target.value)} value={password} />\r\n              </div>\r\n            </div>\r\n            <div className=\"forgot_password\">\r\n              <div style={{ cursor: \"pointer\" }} onClick={() => props.changeView(\"FORGOT\")}>\r\n                Forget Password?\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button disabled={props.req} name=\"Sign In\" className=\"login_button\" onClick={() => props.onSubmit(email, password)}>\r\n                LOGIN\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/layout/Sidebar.js",["989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012"],"import React, { Component } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport {\r\n  TABMESSAGING,\r\n  URGENCY,\r\n  HELLOBAR,\r\n  HELLOBARTIMER,\r\n  IMAGEPOPUP,\r\n  VIDEOPOPUP,\r\n  CENTRALTIMER,\r\n  GEOREDIRECTION,\r\n  BREAKEVENCALCULATOR,\r\n  EXITINTENT,\r\n  MOBILEVIBRATOR,\r\n  EMAIL_INTRIGATION,\r\n  IMAGE_OPTIOMAZTION,\r\n  DYNEMICELEMENT,\r\n  OFFERIFRAME,\r\n  BACKBUTTONREDIRECTION,\r\n  ADMIN,\r\n  SUPER_ADMIN,\r\n  OTO2,\r\n  OTO3,\r\n  USER_SETTINGS,\r\n  AGENCY,\r\n  BONUS,\r\n  BONUS_CREATE,\r\n  TRAINING,\r\n  VIP_BONUS,\r\n  SUPPORT_USER\r\n} from \"../../utils/Routes\";\r\nimport ToolUtil from \"../../utils/ToolUtil\";\r\nimport { getPath } from \"../../actions/URLs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Drawer } from \"antd\";\r\nimport { isMobile } from \"../utils/ScreenUtil\";\r\n\r\nclass Sidebar extends Component {\r\n  state = { activePage: 0, showMenu: false, active: \"\" };\r\n  dashBoard = [\"\"];\r\n  create = [\r\n    \"/Create\",\r\n    TABMESSAGING,\r\n    URGENCY,\r\n    HELLOBAR,\r\n    HELLOBARTIMER,\r\n    IMAGEPOPUP,\r\n    VIDEOPOPUP,\r\n    CENTRALTIMER,\r\n    GEOREDIRECTION,\r\n    BREAKEVENCALCULATOR,\r\n    EXITINTENT,\r\n    MOBILEVIBRATOR,\r\n    EMAIL_INTRIGATION,\r\n    IMAGE_OPTIOMAZTION,\r\n    DYNEMICELEMENT,\r\n    OFFERIFRAME,\r\n    BACKBUTTONREDIRECTION,\r\n  ];\r\n\r\n  state = { access: 0, isUpgrade1: false, isUpgrade2: false, active: \"\", isVipBonus: false, createdAt: \"\", isSubuser: false };\r\n  items = [];\r\n\r\n  componentWillMount() {\r\n    this.setPermission(this.props.access, this.props.createdAt);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.access != nextProps.access && this.props.createdAt != nextProps.createdAt) {\r\n      this.setPermission(nextProps.access, nextProps.createdAt);\r\n    }\r\n  }\r\n\r\n  getActivePage() {\r\n    const urlTab = window.location.pathname;\r\n    const { active } = this.state;\r\n    if (!urlTab) {\r\n      return \"DASHBOARD\";\r\n    } else if (this.create.includes(urlTab)) {\r\n      return \"CREATE\";\r\n    } else if (urlTab == \"/Campaigns\") {\r\n      return \"CAMPAIGNS\";\r\n    } else if (urlTab == \"/Admin\") {\r\n      return \"ADMIN\";\r\n    } else if (urlTab == SUPER_ADMIN) {\r\n      return \"SUPERADMIN\";\r\n    } else if (urlTab == OTO2) {\r\n      return \"OTO2\";\r\n    } else if (urlTab == OTO3) {\r\n      return \"OTO3\";\r\n    } else if (urlTab == USER_SETTINGS) {\r\n      return \"USER_SETTINGS\";\r\n    } else if (urlTab == AGENCY) {\r\n      return \"AGENCY\";\r\n    } else if (urlTab == BONUS_CREATE) {\r\n      return \"BONUS\";\r\n    } else if (urlTab == TRAINING) {\r\n      return \"TRAINING\";\r\n    } else if (urlTab == VIP_BONUS) {\r\n      return \"VIP_BONUS\";\r\n    } else if (urlTab == SUPPORT_USER) {\r\n      return \"SUPPORT_USER\";\r\n    }\r\n    return \"DASHBOARD\";\r\n  }\r\n\r\n  setPermission = (access, createdAt) => {\r\n    this.setState({ \r\n      access: access, \r\n      isUpgrade1: ToolUtil.isUpgrade1, \r\n      isUpgrade2: ToolUtil.isUpgrade2, \r\n      isVipBonus: ToolUtil.isVipBonus, \r\n      createdAt: createdAt, \r\n      isSubuser: window.isSubuser }, () => {\r\n        this.setItems();\r\n    });\r\n  };\r\n\r\n  setItems = () => {\r\n    const { access, isUpgrade1, isUpgrade2, isVipBonus, createdAt, isSubuser } = this.state;\r\n    const items = [];\r\n    items.push({ icon: \"dashboard.svg\", text: \"Dashboard\", url: \"/Dashboard\", a: \"DASHBOARD\" });\r\n    items.push({ icon: \"create.svg\", text: \"Create\", url: \"/Create\", a: \"CREATE\" });\r\n    items.push({ icon: \"campaign.svg\", text: \"Campaigns\", url: \"/Campaigns\", a: \"CAMPAIGNS\" });\r\n    if (access > 80 || isUpgrade1) items.push({ icon: \"upgrade.svg\", text: \"Pro\", url: OTO2, a: \"OTO2\" });\r\n    else items.push({ icon: \"upgrade.svg\", text: \"Pro\", url: null, a: \"OTO2\" });\r\n    if (access > 80 || isUpgrade2) items.push({ icon: \"upgrade.svg\", text: \"Club\", url: OTO3, a: \"OTO3\" });\r\n    else items.push({ icon: \"upgrade.svg\", text: \"Club\", url: null, a: \"OTO3\" });\r\n    if (access > 50) items.push({ icon: \"upgrade.svg\", text: \"Agency\", url: AGENCY, a: \"AGENCY\" });\r\n    /* if (access > 50 && isUpgrade1) items.push({ icon: \"admin.svg\", text: \"Admin\", url: \"/Admin\", a: \"ADMIN\" }); */\r\n    if (access > 50) items.push({ icon: \"admin.svg\", text: \"Admin\", url: null, a: \"ADMIN\" });\r\n    if (access > 80 || isSubuser) items.push({ icon: \"superadmin.svg\", text: \"Super Admin\", url: \"/SuperAdmin\", a: \"SUPERADMIN\" });\r\n    if (access > 80) items.push({ icon: \"superadmin.svg\", text: \"Support User\", url: \"/SupportUser\", a: \"SUPPORT_USER\" });\r\n    items.push({ icon: \"upgrade.svg\", text: \"Settings\", url: USER_SETTINGS, a: \"USER_SETTINGS\" });\r\n    items.push({ icon: \"upgrade.svg\", text: \"Bonus\", url: BONUS_CREATE, a: \"BONUS\" });\r\n    // items.push({ icon: \"upgrade.svg\", text: \"Training\", url: TRAINING, a: \"TRAINING\" });\r\n    if (isVipBonus) items.push({ icon: \"upgrade.svg\", text: \"Vip Bonus\", url: VIP_BONUS, a: \"VIP_BONUS\" });\r\n    // items.push({ icon: \"upgrade.svg\", text: \"Bonus\", url: null, a: \"BONUS\" });\r\n    this.items = items;\r\n    this.forceUpdate();\r\n  };\r\n\r\n  onClick = (key, url) => {\r\n    var d = new Date(this.state.createdAt);\r\n    if (key == \"Admin\" && !(new Date() >= d.setMonth(d.getMonth() + 1)) ) {\r\n      window.gs.sayUpdate(\"To be fair to our JV partners & affiliates, your Agency access will be unlocked 1 month after your purchase\", true, \"\");\r\n      return;\r\n    } else {\r\n      if(key == \"Admin\") {\r\n        url = \"/\"+key;\r\n        window.location.pathname = url;\r\n      }\r\n    }\r\n\r\n    if (url) {\r\n      window.gs.navTitle(key);\r\n      this.setState({ active: key });\r\n    } else {\r\n      if (key == \"Pro\") {\r\n        window.gs.sayUpdate(null, false, ToolUtil.linksList ? ToolUtil.linksList.oto2 : \"\");\r\n      } else {\r\n        window.gs.sayUpdate(null, false, ToolUtil.linksList ? ToolUtil.linksList.oto3 : \"\");\r\n      }\r\n    }\r\n    if (isMobile()) {\r\n      this.props.toggleSideBar();\r\n    }\r\n  };\r\n\r\n  openDrawer = () => {\r\n    this.setState({ showMenu: !this.state.showMenu });\r\n  };\r\n\r\n  onDrawerMenuSelect = (title) => {\r\n    window.gs.navTitle(title);\r\n    this.openDrawer();\r\n  };\r\n\r\n  render() {\r\n    const { isFull } = this.props;\r\n    const { items } = this;\r\n    const active = this.getActivePage();\r\n    return (\r\n      <div name=\"Sidebar\">\r\n        {!isMobile() ? (\r\n          <ul className=\"mckSidebar navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\">\r\n            <a className=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"index.html\" style={isFull ? {} : { width: \"fit-content\" }}>\r\n              <div className=\"sidebar-brand-icon nav-logo\">\r\n                {isFull ? <img src={getPath(\"/asset/logo_white.svg\")} /> : <img className={isFull ? \"\" : \"small-img\"} src={getPath(\"/asset/logo_white_small.svg\")} />}\r\n              </div>\r\n            </a>\r\n            {items.map((e, i) => (\r\n              <Item key={i} {...e} onItemClick={this.onClick} isFull={isFull} active={active} />\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <Drawer placement={\"left\"} width={\"200px\"} className={\"Sidebar\"} onClose={this.props.toggleSideBar} closable={true} visible={isFull}>\r\n            <ul className=\"mckSidebar navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\">\r\n              <a className=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"index.html\" style={isFull ? {} : { width: \"fit-content\" }}>\r\n                <div className=\"sidebar-brand-icon nav-logo\">\r\n                  <img className=\"small-img\" src={getPath(\"/asset/logo_white_small.svg\")} />\r\n                </div>\r\n              </a>\r\n              {items.map((e, i) => (\r\n                <Item key={i} {...e} onItemClick={this.onClick} isFull={true} active={active} />\r\n              ))}\r\n            </ul>\r\n          </Drawer>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Item = function (props) {\r\n  return (\r\n    <li title={props.text} style={props.isFull ? {} : { width: \"63px\" }} className={props.active === props.a ? \"nav-item align-items-center sidebar_content nav-active\" : \"nav-item align-items-center sidebar_content\"}>\r\n      <Link to={props.url ? props.url : \"?\"} onClick={() => props.onItemClick(props.text, props.url)}>\r\n        <div className=\"mckSideBarItem\">\r\n          <div className=\"itemicon\">\r\n            <img src={getPath(`/asset/sidebarIcon/${props.icon}`)} />\r\n          </div>\r\n          {props.isFull ? <div className=\"d-flex align-items-center ml-2 title\">{props.text}</div> : null}\r\n        </div>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Dashboard.js",["1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030"],"import React, { Component, useState, useCallback } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport RequestHandler from \"../../actions/RequestHandler\";\r\nimport { DASHBOARD_DATA, getPath } from \"../../actions/URLs\";\r\nimport { Tabs } from \"antd\";\r\nimport { Storage } from \"../../utils/Storage\";\r\nimport \"./DashBoard.css\";\r\nimport _ from \"lodash\";\r\nimport { getChartData } from \"../Util\";\r\nimport { addDays, subDays } from \"date-fns\";\r\nimport DateRangeFilter from \"./DateRangeFilter\";\r\nimport { Link } from 'react-router-dom';\r\nconst { TabPane } = Tabs;\r\n\r\nlet settingIcon = null;\r\nlet createCampaingnID = null;\r\nexport default class Dashboard extends Component {\r\n  constructor() {\r\n    super();\r\n    const tips = Storage.getOneItem(\"tips\");\r\n    if (tips) {\r\n      this.state.closePopup = false;\r\n    }\r\n  }\r\n  state = {\r\n    views: 0,\r\n    clicks: 0,\r\n    closePopup: true,\r\n    showGraph: false,\r\n    totalCampaign: 0,\r\n    isShowViews: true,\r\n    datePickerPop:false,\r\n    selection: [\r\n      {\r\n        startDate: subDays(new Date(), 6),\r\n        endDate: addDays(new Date(), 0),\r\n        key: \"selection\"\r\n      }\r\n    ]\r\n  };\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    window.gs.logout();\r\n  };\r\n\r\n  handleDatePicker(){\r\n    this.setState({\r\n      datePickerPop:!this.state.datePickerPop\r\n    })\r\n  }\r\n  handleDateOverlay(){\r\n    this.setState({\r\n      datePickerPop:false\r\n    })\r\n  }\r\n\r\n  // componentWillMount() {\r\n  //   this.handleDashboard(this.state.selection);\r\n  // }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      const react1 = document.getElementById(\"settingIcon\").getBoundingClientRect().x;\r\n      const react2 = document.getElementById(\"createCampaingnID\").getBoundingClientRect().y;\r\n      settingIcon = `${react1}px`;\r\n      createCampaingnID = `${react2}px`;\r\n    } catch (e) {\r\n      settingIcon = \"62%\";\r\n      createCampaingnID = \"40%\";\r\n    }\r\n    window.gs.navTitle(\"Dashboard\");\r\n    this.handleDashboard(this.state.selection);\r\n  }\r\n\r\n  handleDashboard(data) {\r\n    RequestHandler.PostRequest(DASHBOARD_DATA, {\"selection\" : data}, (res, err) => {\r\n      if (res) {\r\n        if (res.data.success) {\r\n          const { clicks = 0, views = 0, graphData, totalCampaign = 0 } = res.data.data;\r\n          this.setState({ clicks, views, totalCampaign });\r\n          if (graphData) {\r\n            try {\r\n              // const clicksViews = processGraphData(graphData);\r\n              var clickItems = getChartData(pointDateToDot(graphData, \"clicks\"));\r\n              var viewItems = getChartData(pointDateToDot(graphData, \"views\"));\r\n              this.setState({ clickItems, viewItems, showGraph: true });\r\n            } catch (err) {\r\n              console.log(err);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  callback(key) {\r\n    console.log(key);\r\n  }\r\n\r\n  onClosePopup = () => {\r\n    this.setState({ closePopup: false });\r\n  };\r\n\r\n  onClickCheck = () => {\r\n    Storage.put(\"tips\", 0);\r\n  };\r\n\r\n  toggleChart = () => {\r\n    this.setState({ isShowViews: !this.state.isShowViews });\r\n  };\r\n\r\n  handleSelect = (ranges) => {\r\n    this.handleDashboard(ranges);\r\n  }\r\n  \r\n  render() {\r\n    const { clicks, views, isShowViews, showGraph, clickItems, viewItems, totalCampaign, closePopup = true, selection } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"cz_dashboard_head\">\r\n          <div className=\"cz_start_text\">\r\n            <h3>Get Started</h3>\r\n            <p>Follow these 3 simple steps<br/>to create a new campaign.</p>\r\n          </div>\r\n          <div className=\"cz_dash_header_boxes\">\r\n            <Link to=\"/Domain\">\r\n              <div className=\"rectangle mt-4 react-item1\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-4\"></div>\r\n                  <div className=\"col-sm-8\" >\r\n                    <img className=\"img-fluid\" src=\"/asset/domain.png\"/>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"bottom-desc\">\r\n                    <div className=\"white mt-3 mb-2 masonry-title\">Domain Setup</div>\r\n                    <div className=\"white description\">Add your domain under domain profile</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n            <Link to=\"/Pixel\">\r\n              <div className=\"rectangle mt-4 react-item1\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-4\"> </div>\r\n                  <div className=\"col-sm-8\" >\r\n                    <img className=\"img-fluid\" src=\"/asset/add_pixels.png\"/>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"bottom-desc\">\r\n                    <div className=\"white mt-3 mb-2 masonry-title\">Add Pixel</div>\r\n                    <div className=\"white description\">Add Converzee Pixel to you webpage</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n            <Link to=\"/Create\">\r\n              <div className=\"rectangle mt-4 react-item1\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-4\"></div>\r\n                  <div className=\"col-sm-8\" >\r\n                    <img className=\"img-fluid\" src=\"/asset/create_campaigns.png\"/>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"bottom-desc\">\r\n                    <div className=\"white mt-3 mb-2 masonry-title\">Create  Campaign</div>\r\n                    <div className=\"white description\">Create a campaign from the choice of your tools</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"cz_dashboard_wrapper\" name=\"Dashboard\">\r\n          <div className=\"row mb-4\">\r\n            <div className=\"col-md-4 col-sm-12 col-lg-4\">\r\n              <div className=\"dashboard-card\">\r\n                <div className=\"col-4 card-title\">\r\n                  <div className=\"card-text\">{clicks}</div>\r\n                  <div className=\"card-subtext\">Total Clicks</div>\r\n                </div>\r\n                <div className=\"col-8 card-img\">\r\n                  <img className=\"img-fluid\" src={getPath(\"/asset/group-15.png\")} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4 col-sm-12 col-lg-4\">\r\n              <div className=\"dashboard-card\">\r\n                <div className=\"col-4 card-title\">\r\n                  <div className=\"card-text\">{views}</div>\r\n                  <div className=\"card-subtext\">Total Views</div>\r\n                </div>\r\n                <div className=\"col-8 card-img\">\r\n                  <img className=\"img-fluid\" src={getPath(\"/asset/group-16.png\")} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4 col-sm-12 col-lg-4\">\r\n              <div className=\"dashboard-card\">\r\n                <div className=\"col-4 card-title\">\r\n                  <div className=\"card-text\">{totalCampaign}</div>\r\n                  <div className=\"card-subtext\">Total Campaigns</div>\r\n                </div>\r\n                <div className=\"col-8 card-img\">\r\n                  <img className=\"img-fluid\" src={getPath(\"/asset/group-14.png\")} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"chart-container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <div className=\"cz_chart_head\">\r\n                      <div className=\"toggle-chart m-2 align-items-center\">\r\n                        <div onClick={this.toggleChart} className={isShowViews ? \"toggle-button align-items-center toogle-active\" : \"toggle-button align-items-center\"}>\r\n                          Views\r\n                        </div>\r\n                        <div onClick={this.toggleChart} className={isShowViews ? \"toggle-button align-items-center\" : \"toggle-button align-items-center toogle-active\"}>\r\n                          Clicks\r\n                        </div>\r\n                      </div>\r\n                      <div className={\"cz_chart_filter \".concat(this.state.datePickerPop === true ? ' active' : null)}>\r\n                        <div className=\"cz_filter_box\" onClick={()=>this.handleDatePicker()}>\r\n                          Fiter by Date\r\n                          <i className=\"fa fa-calendar\"></i>\r\n                        </div>\r\n                        <div className=\"cz_date_picker\">\r\n                          <div className=\"cz_date_overlay\" onClick={()=>this.handleDateOverlay()}></div>\r\n                          <DateRangeFilter state={selection} onChange={this.handleSelect} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  {showGraph ? (\r\n                    <div className=\"col-12\">\r\n                      {isShowViews ? (\r\n                        <Chart options={viewItems.options} series={viewItems.series} type=\"line\" height={350} />\r\n                      ) : (\r\n                        <Chart options={clickItems.options} series={clickItems.series} type=\"line\" height={350} />\r\n                      )}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst Popover = function (props) {\r\n  return (\r\n    <div className={\"tip-popup \" + props.cs} style={{ left: props.left, top: props.top }}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\nconst showToolTips = Storage.getOneItem(\"tips\");\r\nconst Tips = (props) => {\r\n  const [show, setShow] = useState(props.isShow);\r\n  const [count, setCount] = useState(0);\r\n  const setCounter = useCallback(() => {\r\n    const newCount = count + 1;\r\n    setCount(newCount);\r\n    if (newCount > 2) {\r\n      setShow(false);\r\n    }\r\n  });\r\n  if (showToolTips == 0 || !show) {\r\n    return null;\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {count == 2 ? (\r\n        <Popup onClosePopup={setCounter} onClickCheck={() => Storage.put(\"tips\", 0)} />\r\n      ) : (\r\n        <div className=\"loader-item tip\" onClick={setCounter}>\r\n          {count == 0 ? (\r\n            <Popover left={\"12%\"} top={createCampaingnID} cs={\"arrow_box1\"}>\r\n              <p>Add Campaigns from here</p>\r\n            </Popover>\r\n          ) : null}\r\n          {count == 1 ? (\r\n            <Popover left={settingIcon} top={\"12%\"} cs={\"arrow_box2\"}>\r\n              <p>Copy pixel from here</p>\r\n            </Popover>\r\n          ) : null}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst Popup = (props) => {\r\n  return (\r\n    <div className=\"popup\">\r\n      <div className=\"popup_inner\" style={{ height: \"fit-content\", maxHeight: \"185px\", minHeight: \"200px\" }}>\r\n        <div className=\"popUpMainContainer\">\r\n          <div className=\"popUpTitlebar\">\r\n            <div onClick={props.onClosePopup} className=\"popupCloseButton\">\r\n              <i className=\"fa fa-close\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"main-campaing\">\r\n            <div>Steps to initial setup</div>\r\n            <div style={{ textAlign: \"left\" }}>\r\n              1. copy pixel\r\n              <br />\r\n              2. Add Domains\r\n              <br />\r\n              3. Make sure to add trigger\r\n            </div>\r\n          </div>\r\n          <div className=\"popUpbottomBar row\" style={{ display: \"flex\", position: \"unset\" }}>\r\n            <div style={{ paddingTop: \"20px\", left: \"20px\", display: \"flex\" }}>\r\n              <input type=\"checkbox\" onClick={props.onClickCheck} style={{ marginTop: \"5px\" }} /> Skip tips\r\n            </div>\r\n            <div className=\"float-right\" style={{ right: \"10px\", position: \"absolute\" }}>\r\n              <button className=\"btn btn-xs btn-danger\" onClick={props.onClosePopup}>\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction processGraphData(graphData = null) {\r\n  if (graphData) {\r\n    const clicks = new Array();\r\n    const views = new Array();\r\n    _.forEach(graphData, (item) => {\r\n      //for clicks\r\n      _.forEach(item.clicks, (c) => {\r\n        clicks.push(c);\r\n      });\r\n      _.forEach(item.views, (v) => {\r\n        views.push(v);\r\n      });\r\n    });\r\n    const clicksItems = findDuplicateAndAdd(clicks, \"click\");\r\n    const viewsItems = findDuplicateAndAdd(views, \"view\");\r\n    return { clicksItems, viewsItems };\r\n  }\r\n}\r\n\r\nfunction findDuplicateAndAdd(arrayItems, typ) {\r\n  const items = [];\r\n  _.forEach(arrayItems, (i, index) => {\r\n    if (items.length === 0) items.push(i);\r\n    const itemIndex = _.findIndex(items, (o) => {\r\n      return o.date == i.date;\r\n    });\r\n    if (itemIndex !== -1) {\r\n      items[itemIndex][typ] = items[itemIndex][typ] + i[typ];\r\n    } else {\r\n      items.push(i);\r\n    }\r\n  });\r\n  return items;\r\n}\r\n\r\nfunction pointDateToDot(items = [], typ = \"clicks\") {\r\n  const obj = { dates: [], dots: [] };\r\n  for(var k in items){\r\n    obj.dates.push(k);\r\n    obj.dots.push(items[k][typ]);\r\n  }\r\n  return obj;\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Create.js",["1031"],"import React, { Component } from \"react\";\r\nimport \"./Create.css\";\r\nimport CreateSideBar from \"../subpages/create/CreateSideBar\";\r\nimport CreateText from \"../subpages/create/CreateText\";\r\nimport Code from \"../subpages/create/Code\";\r\nimport Style from \"../subpages/create/Style\";\r\nimport Layout from \"../subpages/create/Layout\";\r\nimport Timer from \"../subpages/create/Timer\";\r\nimport CTA from \"../subpages/create/CTA\";\r\nimport RequestHandler from \"../../actions/RequestHandler\";\r\nimport { SAVE_TOOL, GET_ONE_TOOL } from \"../../actions/URLs\";\r\nimport FileUploader from \"../subpages/create/FileUploader\";\r\nimport ToolUtil from \"../../utils/ToolUtil\";\r\nimport Util from \"../Util\";\r\nexport default class Create extends Component {\r\n  static CAMPAIGNS_NAME = \"\";\r\n  toolId = 0;\r\n  state = {\r\n    toolName: \"\",\r\n    activeTab: 1,\r\n    create: { campaignName: Util.CAMPAIGNS_NAME, helloBarPos: \"\", textBody: \"\" },\r\n    cta: { ctaText: \"\", ctaAction: \"\", redirectUrl: \"\" },\r\n    timer: { timerType: \"\", endDateTime: new Date(), timeZone: Util.getTimeZoneList()[0].value, whenTimeExp: \"\" },\r\n    layout: { layout: 1 },\r\n    style: {\r\n      elements: [\r\n        { name: \"centralTimer\", text: \"Central Timer\", color: \"\" },\r\n        { name: \"centralTimerTitle\", text: \"Central Timer Title\", color: \"\" },\r\n        { name: \"centralTimerLabel\", text: \"Central Timer Label\", color: \"\" },\r\n        { name: \"highlight\", text: \"Highlight\", color: \"\" },\r\n        { name: \"highlightBackground\", text: \"Highlight Background\", color: \"\" },\r\n      ],\r\n      selected: 0,\r\n    },\r\n    code: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: \"\" }] },\r\n    file: { file: [] },\r\n    toolId: 0,\r\n    status: true,\r\n    openPopUp: false,\r\n    popUpScript: \"\",\r\n    _id: null,\r\n  };\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        if (res) {\r\n          const data = res.data.campaigns;\r\n          Object.assign(data, { _id: id, toolName: ToolUtil.getTool(data.toolId), toolId: data.toolId, name: data.data });\r\n          this.setState({ ...data });\r\n          window.gs.navTitle(ToolUtil.getTool(data.toolId));\r\n        }\r\n      });\r\n    } else {\r\n      if (Util.CAMPAIGNS_NAME == \"\") {\r\n        this.props.history.push(\"/\");\r\n      } else {\r\n        const toolId = this.props.match ? (this.props.match.params ? parseInt(this.props.match.params.routeName) : 1) : 1;\r\n        this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\r\n        Util.RedirectWhenCampaignEmpty(this.props); \r\n        window.gs.navTitle(ToolUtil.getTool(toolId));\r\n      }\r\n    }\r\n  }\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n  onUpdate = (index, data) => {\r\n    switch (index) {\r\n      case 1:\r\n        this.setState({ create: data, toolName: data.campaignName });\r\n        break;\r\n      case 2:\r\n        this.setState({ cta: data });\r\n        break;\r\n      case 3:\r\n        this.setState({ timer: data });\r\n        break;\r\n      case 4:\r\n        this.setState({ layout: data });\r\n        break;\r\n      case 5:\r\n        this.setState({ style: data });\r\n        break;\r\n      case 6:\r\n        this.setState({ code: data });\r\n        break;\r\n      case 7:\r\n        this.setState({ file: data });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  renderMain = () => {\r\n    const { activeTab, create, cta, timer, layout, style, code, file } = this.state;\r\n    let component = null;\r\n    switch (activeTab) {\r\n      case 1:\r\n        component = <CreateText {...create} onChange={this.onUpdate} />;\r\n        break;\r\n      case 2:\r\n        component = <CTA {...cta} onChange={this.onUpdate} />;\r\n        break;\r\n      case 3:\r\n        component = <Timer {...timer} onChange={this.onUpdate} />;\r\n        break;\r\n      case 4:\r\n        component = <Layout {...layout} onChange={this.onUpdate} />;\r\n        break;\r\n      case 5:\r\n        component = <Style {...style} onChange={this.onUpdate} />;\r\n        break;\r\n      case 6:\r\n        component = <Code {...code} onChange={this.onUpdate} />;\r\n        break;\r\n      case 7:\r\n        component = <FileUploader {...file} onChange={this.onUpdate} />;\r\n        break;\r\n      default:\r\n        component = <CreateText {...create} onChange={this.onUpdate} />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    const toolData = this.state;\r\n    RequestHandler.PostRequest(SAVE_TOOL, { toolData: toolData }, (res, err) => {\r\n      if (res) {\r\n        if (res.data.script) {\r\n          this.setState({ openPopUp: true, popUpScript: res.data.script });\r\n        }\r\n      } else {\r\n        console.log(err);\r\n      }\r\n    });\r\n  };\r\n\r\n  closePopup = () => {\r\n    this.setState({ openPopUp: false, success: false });\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const itemId = this.props.location.state;\r\n    const { openPopUp, popUpScript } = this.state;\r\n    const scriptPorps = {\r\n      popUpScript: popUpScript,\r\n      closePopup: this.closePopup,\r\n    };\r\n    return (\r\n      <div className=\"container\">\r\n        {openPopUp ? <ScriptPopup {...scriptPorps} /> : null}\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"create-top-bar-button\">\r\n              <button className=\"btn btn-primary btn-md create-top-button\">Preview</button>\r\n              <button onClick={this.onClickSave} className=\"btn btn-primary btn-md create-top-button\">\r\n                Save\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\" style={{ paddingTop: \"35px\" }}>\r\n          <div className=\"col\">\r\n            <center>\r\n              <div className=\"create-center-main\">{this.renderMain()}</div>\r\n            </center>\r\n          </div>\r\n          <div className=\"col col-lg-2\">\r\n            <CreateSideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} {...itemId} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction copyScript() {\r\n  var copyText = document.getElementById(\"scriptToCopy\");\r\n  copyText.select();\r\n  copyText.setSelectionRange(0, 99999);\r\n  document.execCommand(\"copy\");\r\n}\r\n\r\nconst ScriptPopup = (props) => {\r\n  return (\r\n    <div className=\"popup\">\r\n      <div className=\"popup_inner\">\r\n        <div className=\"popUpMainContainer\">\r\n          <div className=\"popUpTitlebar\">\r\n            <div onClick={() => props.closePopup()} className=\"popupCloseButton\">\r\n              <i className=\"fa fa-close\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"main-campaing\">\r\n            <label>Script</label>\r\n            <div class=\"input-group mb-3\">\r\n              <input type=\"text\" className=\"form-control\" id=\"scriptToCopy\" value={props.popUpScript} name=\"campaignsName\" required />\r\n              <div class=\"input-group-append\">\r\n                <span class=\"input-group-text\" onClick={copyScript} style={{ cursor: \"pointer\" }}>\r\n                  <i className=\"fa fa-copy\" />\r\n                </span>\r\n              </div>\r\n            </div>\r\n            {/* <input type=\"text\" className=\"form-control\" value={props.popUpScript} name=\"campaignsName\" required /> */}\r\n          </div>\r\n          <div className=\"popUpbottomBar\">\r\n            <div>\r\n              <button className=\"btn btn-xs btn-danger\" onClick={() => props.closePopup()}>\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/CreateElement.js",["1032","1033","1034","1035","1036","1037","1038","1039","1040","1041"],"import React, { Component } from \"react\";\r\nimport \"./CreateElement.css\";\r\nimport Util from \"../Util\";\r\nimport ToolUtil, { getToolsPermission } from \"../../utils/ToolUtil\";\r\nimport _ from \"lodash\";\r\nimport \"../comman/Popup.css\";\r\nimport {\r\n  TABMESSAGING,\r\n  URGENCY,\r\n  IMAGEPOPUP,\r\n  VIDEOPOPUP,\r\n  CENTRALTIMER,\r\n  GEOREDIRECTION,\r\n  BREAKEVENCALCULATOR,\r\n  EXITINTENT,\r\n  MOBILEVIBRATOR,\r\n  EMAIL_INTRIGATION,\r\n  IMAGE_OPTIOMAZTION,\r\n  BACKBUTTONREDIRECTION,\r\n  HELLOBARTIMER,\r\n  HELLOBAR,\r\n  DYNEMICELEMENT,\r\n  OFFERIFRAME,\r\n  CHATBOT,\r\n  INPUT_FORM,\r\n  OPTIN_FORM,\r\n  AUTO_PLAY_VIDEO,\r\n  PROOF_APP\r\n} from \"../../utils/Routes\";\r\nimport RequestHandler from \"../../actions/RequestHandler\";\r\nimport { CHECK_CAMPAIGNS_NAME, getPath } from \"../../actions/URLs\";\r\nimport { CampaignNameInput, LockTool } from \"../comman/Popup\";\r\nimport { CreateItem } from \"../layout/ToolLayout\";\r\nimport { Request } from \"../auth/authHandler\";\r\nexport default class CreateElement extends Component {\r\n  createItems = [\r\n    {\r\n      diaplayName: \"Tab Messaging\",\r\n      classnm: \"\",\r\n      classnm2: \"react-item1\",\r\n      desc: \"Notify your customers by sending them continuous reminder after they switch the tab\",\r\n      color: \"#F5ECCF\",\r\n      height: \"237px\",\r\n      routeName: 1,\r\n      URL: TABMESSAGING,\r\n    },\r\n    { \r\n      diaplayName: \"HELLO BAR + Timer\", \r\n      classnm: \"\", \r\n      classnm2: \"react-item2\", \r\n      desc: \"You can create FOMO from hellobar too\", \r\n      color: \"#fccc6f\", \r\n      height: \"141px\", \r\n      routeName: 17, \r\n      URL: HELLOBARTIMER \r\n    },\r\n    {\r\n      diaplayName: \"Central Timer\",\r\n      classnm: \"\",\r\n      classnm2: \"react-item3\",\r\n      desc: \"A timer that will be integrated into the web page to create an urgency for your customers.\",\r\n      color: \"#b26a4f\",\r\n      height: \"237px\",\r\n      routeName: 6,\r\n      URL: CENTRALTIMER,\r\n    },\r\n    {\r\n      diaplayName: \"Mobile Vibrator\",\r\n      byPass: true,\r\n      classnm: \"\",\r\n      classnm2: \"react-item4\",\r\n      desc: \"Notify your customers as soon as your complete page loads and bring back all your lost traffic.\",\r\n      color: \"#f7ae98\",\r\n      height: \"202px\",\r\n      routeName: 10,\r\n      URL: MOBILEVIBRATOR,\r\n    },\r\n    {\r\n      diaplayName: \"Back Button redirection\",\r\n      classnm: \"hackMargin lightColor\",\r\n      classnm2: \"react-item5\",\r\n      desc: \"Redirect your customers wherever you want when they click on the back button\",\r\n      color: \"#f5eccf\",\r\n      height: \"237px\",\r\n      routeName: 15,\r\n      URL: BACKBUTTONREDIRECTION,\r\n    },\r\n    {\r\n      diaplayName: \"Urgency Timer\",\r\n      classnm: \"\",\r\n      classnm2: \"react-item6\",\r\n      desc: \"Use this campaign to generate FOMO amongst your customer\",\r\n      color: \"#f7bbb4\",\r\n      height: \"165px\",\r\n      routeName: 2,\r\n      URL: URGENCY,\r\n    },\r\n    {\r\n      diaplayName: \"Image Popup\",\r\n      classnm: \"\",\r\n      classnm2: \"react-item7\",\r\n      desc: \"Use Image popup to grab the attention of your users and engage them with images.\",\r\n      color: \"#4292bf\",\r\n      height: \"204px\",\r\n      routeName: 4,\r\n      URL: IMAGEPOPUP,\r\n    },\r\n    {\r\n      diaplayName: \"Geo Redirection\",\r\n      classnm: \"hackMargin2 \",\r\n      classnm2: \"react-item8\",\r\n      desc: \"Target and filter your customers depending upon their geolocation\",\r\n      color: \"#ed6368\",\r\n      height: \"141px\",\r\n      routeName: 7,\r\n      URL: GEOREDIRECTION,\r\n    },\r\n    {\r\n      diaplayName: \"Dynamic Elements\",\r\n      classnm: \"hackMargin4 \",\r\n      classnm2: \"react-item9\",\r\n      desc: \"Use dynamic elements and customize them from User Interface of the app\",\r\n      color: \"#aa57a9\",\r\n      height: \"208px\",\r\n      routeName: 13,\r\n      URL: DYNEMICELEMENT,\r\n    },\r\n    { \r\n      diaplayName: \"Video Popup\", \r\n      classnm: \"\", \r\n      classnm2: \"react-item10\", \r\n      desc: \"Can be used to import videos to your site easily.\", \r\n      color: \"#75d8dd\", \r\n      height: \"167px\", \r\n      routeName: 5, \r\n      URL: VIDEOPOPUP \r\n    },\r\n    {\r\n      diaplayName: \"HELLO BAR\",\r\n      classnm: \"hackMargin3 \",\r\n      classnm2: \"react-item11\",\r\n      desc: \"Welcome your customers to your site with stylized and dynamic hellobar\",\r\n      color: \"#ef7868\",\r\n      height: \"209px\",\r\n      routeName: 3,\r\n      URL: HELLOBAR,\r\n    },\r\n    {\r\n      diaplayName: \"Offer iframe\",\r\n      classnm: \"hackMargin5 \",\r\n      classnm2: \"react-item12\",\r\n      desc: \"Don’t let your ad hide your content. Show ad and content at one and the same time using Offer iFrame tool\",\r\n      color: \"#fcd1b3\",\r\n      height: \"162px\",\r\n      routeName: 14,\r\n      URL: OFFERIFRAME,\r\n    },\r\n    {\r\n      diaplayName: \"Exit Intent\",\r\n      classnm: \"\",\r\n      classnm2: \"react-item13\",\r\n      desc: \"A pop which appears as soon as the customers tries to move out the window\",\r\n      color: \"rectangle-6\",\r\n      height: \"192px\",\r\n      routeName: 9,\r\n      URL: EXITINTENT,\r\n    },\r\n    {\r\n      diaplayName: \"Optin forms (HELLO BAR)\",\r\n      classnm: \"hackMargin6\",\r\n      classnm2: \"react-item14\",\r\n      img: \"asset/toolIcon/hellobarwithoptin.png\",\r\n      desc: \"Generate leads from your site with stylized and dynamic hellobar\",\r\n      color: \"#aa71a9\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: OPTIN_FORM,\r\n      params: 0,\r\n      ie: 1,\r\n    },\r\n    {\r\n      diaplayName: \"Optin forms (HELLO BAR + TIMER)\",\r\n      classnm: \"hackMargin5 \",\r\n      classnm2: \"react-item15\",\r\n      img: \"asset/toolIcon/hellobartimerwithoptin.png\",\r\n      desc: \"You can generate leads by creating FOMO from hellobar\",\r\n      color: \"#b26a4f\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: OPTIN_FORM,\r\n      params: 1,\r\n      ie: 1,\r\n    },\r\n    {\r\n      diaplayName: \"Optin forms (Exit- Intent)\",\r\n      classnm: \"\",\r\n      classnm2: \"react-item3\",\r\n      img: \"asset/toolIcon/exitintentwithoptin.png\",\r\n      desc: \"Generate leads from a popup which appears as soon as the customers tries to move out the window\",\r\n      color: \"#b26a4f\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: OPTIN_FORM,\r\n      params: 2,\r\n      ie: 2,\r\n    },\r\n    {\r\n      diaplayName: \"Autoplay Video\",\r\n      classnm: \"hackMargin5 \",\r\n      classnm2: \"react-item17\",\r\n      img: \"asset/toolIcon/autoplay.png\",\r\n      desc: \"Autoplay video will allow to autoplay the muted video and there will be click to play gif and text over the video.\",\r\n      color: \"#97d6ff\",\r\n      height: \"237px\",\r\n      routeName: 24,\r\n      URL: AUTO_PLAY_VIDEO,\r\n      params: 2,\r\n      ie: 2,\r\n    },\r\n    {\r\n      diaplayName: \"Proof App\",\r\n      classnm: \"\",\r\n      classnm2: \"react-item3\",\r\n      img: \"asset/toolIcon/Proof-App.png\",\r\n      desc: \"Increase your conversion with the recent sales notification.\",\r\n      color: \"#97d6ff\",\r\n      height: \"237px\",\r\n      routeName: 25,\r\n      URL: PROOF_APP,\r\n      params: 2,\r\n      ie: 2,\r\n    }\r\n  ];\r\n  // { diaplayName: \"Break-Even Calculator\", routeName: 8, URL: BREAKEVENCALCULATOR },\r\n  // { diaplayName: \"Email Integration\", routeName: 11, URL: EMAIL_INTRIGATION },\r\n  // { diaplayName: \"Image Optimization\", routeName: 12, URL: IMAGE_OPTIOMAZTION },\r\n\r\n  state = {\r\n    openPopup: false,\r\n    CAMPAIGNS_NAME: \"\",\r\n    allowedTool: [],\r\n    access: 0,\r\n  };\r\n\r\n  URL = \"\";\r\n  openTool = (url, byPass, params, ie) => {\r\n    this.URL = url;\r\n    if (params) window.gs.defaultLayout = params;\r\n    if (ie) window.gs.ie = (url === \"/PROOF_APP\" ? null : ie);\r\n    if (byPass) {\r\n      Util.CAMPAIGNS_NAME = \"_\";\r\n      this.props.history.push(this.URL);\r\n    } else {\r\n      this.setState({ openPopup: true });\r\n    }\r\n  };\r\n  \r\n  componentDidMount() {\r\n    window.gs.navTitle(\"Create\");\r\n    this.updateSideBar();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.updateSideBar();\r\n  }\r\n\r\n  updateSideBar = () => {\r\n    let sidebar = document.querySelectorAll(\".sidebar_content\");\r\n    sidebar.forEach(sd => {\r\n      if(sd.getAttribute(\"title\") === \"Create\") {\r\n        if(!sd.classList.contains(\"nav-active\")) {\r\n          sd.classList.add(\"nav-active\");\r\n        }\r\n      } else {\r\n        sd.classList.remove(\"nav-active\");\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillMount() {\r\n    if(Request.getAuth()) {\r\n      this.accessedTools();\r\n    } else {\r\n      document.querySelector(\".session_login_wrapper\").classList.remove(\"cz_hide\");\r\n    }\r\n  }\r\n\r\n  accessedTools = () => {\r\n    getToolsPermission((permission, err) => {\r\n      if (permission) {\r\n        this.setState({ allowedTool: permission.tools, access: permission.access });\r\n      }\r\n    });\r\n  };\r\n\r\n  renderCreateElements = (item, index) => {\r\n    const items = { ...item, isLock: true };\r\n    const { allowedTool, access } = this.state;\r\n    if (access > 80) {\r\n      items.isLock = false;\r\n    } else {\r\n      if (allowedTool.length) {\r\n        const isLock = _.findIndex(allowedTool, function (o) {\r\n          return o === item.routeName;\r\n        });\r\n        if (isLock !== -1) items.isLock = false;\r\n      }\r\n    }\r\n\r\n    Object.assign(items, { openTool: this.openTool });\r\n    return <CreateItem key={index} index={index} openTool {...items} />;\r\n  };\r\n  onChangeCampaign = (e) => {\r\n    this.setState({ CAMPAIGNS_NAME: e.target.value });\r\n    Util.CAMPAIGNS_NAME = e.target.value;\r\n  };\r\n\r\n  closePopUp = () => {\r\n    window.gs.defaultLayout = 0;\r\n    this.setState({ openPopup: false, success: false, CAMPAIGNS_NAME: \"\" });\r\n  };\r\n\r\n  onNextButtonClick = (camp) => {\r\n    this.state.CAMPAIGNS_NAME = camp;\r\n    Util.CAMPAIGNS_NAME = camp;\r\n    RequestHandler.PostRequest(CHECK_CAMPAIGNS_NAME, { toolData: { toolName: this.state.CAMPAIGNS_NAME } }, (res, err) => {\r\n      if (res) {\r\n        if (res.data.success) {\r\n          this.props.history.push(this.URL);\r\n        } else {\r\n          window.gs.toast(res.data.message, { position: \"bottom-right\", autoClose: true, type: window.gs.toast.TYPE.ERROR });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { openPopup, CAMPAIGNS_NAME } = this.state;\r\n    return (\r\n      <div className=\"cz_create_page\">\r\n        <div className=\"row\">\r\n          <CampaignNameInput visible={openPopup} Close={this.closePopUp} submit={this.onNextButtonClick} />\r\n          <div className=\"col\">\r\n            <div className=\"row mt3 mb-3 cz_create_pages_wrapper\">{this.createItems.map(this.renderCreateElements)}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Domain.js",["1042"],"import React, { Component } from \"react\";\r\nimport { SAVE_TOOL, SAVE_DOMAIN, GET_DOMAIN } from \"../../actions/URLs\";\r\nimport RequestHandler from \"../../actions/RequestHandler\";\r\nimport _ from \"lodash\";\r\nimport ToolUtil from \"../../utils/ToolUtil\";\r\nexport default class Domain extends Component {\r\n  state = {\r\n    domains: [\"\"],\r\n  };\r\n  componentDidMount() {\r\n    window.gs.navTitle(\"Domains\");\r\n    RequestHandler.PostRequest(GET_DOMAIN, {}, (res, err) => {\r\n      if (res) {\r\n        const domains = res.data.domains;\r\n        if (domains) {\r\n          this.setState({ domains }, () => {\r\n            if (this.state.domains && !this.state.domains.length) {\r\n              this.setState({ domains: [\"\"] });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  onClickSave = () => {\r\n    const newDomains = _.compact(this.state.domains);\r\n    if (ToolUtil.domainLimit >= newDomains.length) {\r\n      RequestHandler.PostRequest(SAVE_DOMAIN, { domainData: { domains: newDomains } }, (res, err) => {\r\n        if (res.data.success) {\r\n          window.gs.toast(\"Domain Save Successfully\", { position: \"bottom-right\", type: window.gs.toast.TYPE.SUCCESS });\r\n          this.setState({ domains: newDomains }, () => {\r\n            if (this.state.domains && !this.state.domains.length) {\r\n              this.setState({ domains: [\"\"] });\r\n            }\r\n          });\r\n        } else {\r\n          const msg = res.data.message || \"Something went wrong\";\r\n          window.gs.toast(msg, { position: \"bottom-right\", autoClose: true, type: window.gs.toast.TYPE.ERROR });\r\n        }\r\n      });\r\n    } else {\r\n      window.gs.sayUpdate(null, false, ToolUtil.linksList ? ToolUtil.linksList.oto2 : \"\");\r\n    }\r\n  };\r\n\r\n  onItemChange = (index, e) => {\r\n    let { domains } = this.state;\r\n    const value = e.target.value;\r\n    domains[index] = value;\r\n    this.setState({ domains });\r\n  };\r\n\r\n  onAddClick = () => {\r\n    const { domains } = this.state;\r\n    domains.push(\"\");\r\n    this.setState({ domains });\r\n  };\r\n\r\n  onRemoveClick = (index) => {\r\n    const domains = this.state.domains || [\"\"];\r\n    domains.splice(index, 1);\r\n    this.setState({ domains }, () => {\r\n      if (!this.state.domains.length) {\r\n        this.setState({ domains: [\"\"] });\r\n      }\r\n    });\r\n  };\r\n\r\n  renderDomainList = (item, index) => {\r\n    const size = this.state.domains.length;\r\n    const props = {\r\n      value: item,\r\n      onChange: this.onItemChange,\r\n      index,\r\n      onAddClick: this.onAddClick,\r\n      size,\r\n      onRemoveClick: this.onRemoveClick,\r\n    };\r\n    return (\r\n      <div className=\"col-12\" key={index+1}>\r\n        <TextInput {...props} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { domains } = this.state;\r\n    return (\r\n      <div className=\"container cz_domain_box\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"create-top-bar-button\">\r\n              <button onClick={this.onClickSave} className=\"btn btn-primary btn-md create-top-button\">\r\n                Save\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <center>\r\n              <div style={{ width: \"80%\", textAlign: \"left\" }}>\r\n                <div style={{ fontSize: \"20px\", paddingLeft: \"33px\" }}>\r\n                  <strong>Domain</strong>\r\n                </div>\r\n                <div style={{ paddingLeft: \"33px\" }}>\r\n                  <p>Total Domain limit ({ToolUtil.domainLimit})</p>\r\n                  <p style={{ color: \"gray\" }}>List of Domain where you want to run your tool</p>\r\n                </div>\r\n              </div>\r\n            </center>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <center>\r\n              <div className=\"create-center-main\" style={{ paddingTop: \"20px\", marginTop: \"2%\" }}>\r\n                <div style={{ width: \"80%\" }}>{domains.map(this.renderDomainList)}</div>\r\n              </div>\r\n            </center>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <center>\r\n              <div style={{ width: \"80%\", textAlign: \"left\", paddingTop: \"10px\" }}>\r\n                <div style={{ paddingLeft: \"33px\" }}>\r\n                  <p style={{ color: \"gray\" }}>Use HTTP / HTTPS </p>\r\n                </div>\r\n              </div>\r\n            </center>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst TextInput = (props) => {\r\n  return (\r\n    <div className=\"code-input-block \">\r\n      <input type=\"text\" value={props.value} className=\"form-control\" onChange={(e) => props.onChange(props.index, e)} />\r\n      <div className=\"code-plusIcon\">\r\n        {props.size - 1 === props.index ? (\r\n          <i onClick={() => props.onAddClick()} className=\"fa fa-plus-circle\" aria-hidden=\"true\" title=\"Click to Add Domain\" />\r\n        ) : (\r\n          <i onClick={() => props.onRemoveClick(props.index)} className=\"fa fa-minus-circle\" aria-hidden=\"true\" title=\"Click to Remove Domain\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Campaigns.js",["1043","1044"],"import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./Campaigns.css\";\r\nimport RequestHandler from \"../../actions/RequestHandler\";\r\nimport { GET_CAMPAIGNS, CLONE_TOOL, ARCHIVE_TOOL, PURGE_TOOL, getPath, DOWNLOAD_DATA } from \"../../actions/URLs\";\r\nimport ToolUtil, { exportCSVFile } from \"../../utils/ToolUtil\";\r\nimport { EMAIL_SEND } from \"../../utils/Routes\";\r\nimport { Filter } from \"../comman/Filter\";\r\nimport { CampignItem } from \"../layout/ToolLayout\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class Campaigns extends Component {\r\n  toolId = 0;\r\n  url = null;\r\n  state = {\r\n    items: [],\r\n    emails: [],\r\n    isRedirect: false,\r\n    isopenFilter: false,\r\n    searchStr: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gs.navTitle(\"Campaigns\");\r\n    this.getCampaigns(); \r\n  }\r\n  componentDidUpdate() {\r\n    let sidebar = document.querySelectorAll(\".sidebar_content\");\r\n    sidebar.forEach(sd => {\r\n      if(sd.getAttribute(\"title\") === \"Campaigns\") {\r\n        if(!sd.classList.contains(\"nav-active\")) {\r\n          sd.classList.add(\"nav-active\");\r\n        }\r\n      } else {\r\n        sd.classList.remove(\"nav-active\");\r\n      }\r\n    });\r\n  }\r\n  getCampaigns = (data = {}) => {\r\n    RequestHandler.PostRequest(GET_CAMPAIGNS, { searchData: data }, (res, err) => {\r\n      if (res) {\r\n        const items = res.data.campaigns;\r\n        this.setState({ items });\r\n      }\r\n    });\r\n  };\r\n\r\n  getToolurl(toolId, id) {\r\n    if (toolId) this.url = ToolUtil.getToolData(toolId).url + \"/\" + id || null;\r\n    else this.url = EMAIL_SEND + \"/\" + id || null;\r\n  }\r\n\r\n  cloneRequest = (id) => {\r\n    RequestHandler.PostRequest(CLONE_TOOL + id, {}, (res, err) => {\r\n      if (res) {\r\n        window.gs.toast(\"Clone Success\", { position: \"bottom-right\", type: window.gs.toast.TYPE.SUCCESS });\r\n        this.getCampaigns();\r\n      }\r\n    });\r\n  };\r\n\r\n  archiveRequest = (id) => {\r\n    RequestHandler.PostRequest(ARCHIVE_TOOL + id, {}, (res, err) => {\r\n      if (res) {\r\n        window.gs.toast(\"Successfully\", { position: \"bottom-right\", type: window.gs.toast.TYPE.SUCCESS });\r\n        this.getCampaigns();\r\n      }\r\n    });\r\n  };\r\n\r\n  purgeTool = (id) => {\r\n    RequestHandler.PostRequest(PURGE_TOOL + id, {}, (res, err) => {\r\n      if (res) {\r\n        window.gs.toast(\"Archive Success\", { position: \"bottom-right\", type: window.gs.toast.TYPE.SUCCESS });\r\n        this.getCampaigns();\r\n      }\r\n    });\r\n  };\r\n\r\n  downloadData = (id) => {\r\n    RequestHandler.PostRequest(DOWNLOAD_DATA + id, {}, (res, err) => {\r\n      if (res) {\r\n        const { data } = res.data;\r\n        if (data) {\r\n          exportCSVFile(data, \"converzee\");\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  onClickAction = (id, toolId, action) => {\r\n    if (action == \"CLONE\") {\r\n      if (!ToolUtil.isUpgrade1 && !window.isAdvancedOpt) {\r\n        window.gs.sayUpdate(null, false, ToolUtil.linksList ? ToolUtil.linksList.oto2 : \"\");\r\n        return;\r\n      }\r\n    }\r\n    this.getToolurl(toolId, id);\r\n    switch (action) {\r\n      case \"EDIT\":\r\n        this.setState({ isRedirect: true });\r\n        break;\r\n      case \"CLONE\":\r\n        this.cloneRequest(id);\r\n        break;\r\n      case \"ARCHIVE\":\r\n        this.purgeTool(id);\r\n        break;\r\n      case \"STATUS\":\r\n        this.archiveRequest(id);\r\n        break;\r\n      case \"SEND\":\r\n        this.setState({ isRedirect: true });\r\n        break;\r\n      default:\r\n        this.setState({ isRedirect: true });\r\n        break;\r\n    }\r\n  };\r\n\r\n  renderListItems = (item, i) => {\r\n    const items = {\r\n      ...item,\r\n      onClickAction: this.onClickAction,\r\n      archiveRequest: this.archiveRequest,\r\n      downloadData: this.downloadData,\r\n      isLock: (ToolUtil.isUpgrade1 && window.isAdvancedOpt) ? false : true,\r\n    };\r\n    return <CampignItem {...items} key={i} />;\r\n  };\r\n\r\n  openFilterClick = () => {\r\n    if (!ToolUtil.isUpgrade1 || !window.isAdvancedOpt) {\r\n      window.gs.sayUpdate(null, false, ToolUtil.linksList ? ToolUtil.linksList.oto2 : \"\");\r\n      return;\r\n    }\r\n    this.setState({ isopenFilter: true });\r\n  };\r\n\r\n  onFilterClose = () => {\r\n    this.setState({ isopenFilter: false });\r\n  };\r\n\r\n  onFilterChange = (filters) => {\r\n    if (!ToolUtil.isUpgrade1 || !window.isAdvancedOpt) {\r\n      window.gs.sayUpdate(null, false, ToolUtil.linksList ? ToolUtil.linksList.oto2 : \"\");\r\n      return;\r\n    }\r\n    const { searchStr } = this.state;\r\n    if (searchStr !== \"\") filters[\"searchStr\"] = searchStr;\r\n    this.getCampaigns(filters);\r\n  };\r\n\r\n  onSearchClick = () => {\r\n    const { searchStr } = this.state;\r\n    this.getCampaigns({ searchStr });\r\n  };\r\n\r\n  onSearchChange = (e) => {\r\n    this.setState({ searchStr: e.target.value });\r\n  };\r\n\r\n  onSortingChange = (istrue) => {\r\n    this.setState({ sorting: istrue ? 1 : 0 });\r\n  };\r\n\r\n  PressEnter = (e) => {\r\n    if (e.keyCode === 13) this.onSearchClick();\r\n  };\r\n\r\n  resetSearch = () => {\r\n    this.setState({ searchStr: \"\" }, () => this.onSearchClick());\r\n  };\r\n\r\n  render() {\r\n    const { items, isRedirect, isopenFilter, searchStr } = this.state;\r\n    const url = this.url;\r\n    return (\r\n      <div className=\"container\" name=\"Campaigns\">\r\n        <Filter visible={isopenFilter} onChangeFilter={this.onFilterChange} onClose={this.onFilterClose} />\r\n        \r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 col-sm-2 d-none d-sm-block\"></div>\r\n          <div className=\"col-md-5 col-sm-8 camp_filterItem1\">\r\n            <div className=\"pull-right input-group mb-3\">\r\n              <input type=\"text\" className=\"form-control search-field\" onKeyUp={this.PressEnter} value={searchStr} onChange={this.onSearchChange} placeholder=\"Search By Campaign Name\" />\r\n              <div className=\"input-group-append\">\r\n                <span className=\"input-group-text search-icon\" onClick={this.onSearchClick}>\r\n                  <i className=\"fa fa-search\"></i>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 col-sm-2 camp_filterItem2\">\r\n            <div className=\"pull-right\">\r\n              <button className=\"btn btn-sm filter-btn\" onClick={this.openFilterClick}>\r\n                <span className=\"d-block d-sm-none\">\r\n                  <i className=\"fa fa-filter\"></i>\r\n                </span>\r\n                <span className=\"d-none d-sm-block\">\r\n                  <i className=\"fa fa-filter\"></i>Filter\r\n                </span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>  \r\n        { !items.length ? \r\n        <div className=\"cz_empty_box\">\r\n          <h2>No campaigns available right now</h2>\r\n          <p>You have not created any campaigns so far. Click on the button below to create a campaign.</p>\r\n          <Link className=\"cz_btn cz_orange_btn\" to=\"/Create\">Create Campaign</Link>\r\n        </div> : null}\r\n        {isRedirect && url ? <Redirect to={url} /> : null}\r\n        {items.map(this.renderListItems)}\r\n      </div> \r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Pixel.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/UserSettings.js",["1045","1046","1047","1048","1049"],"import React, { Component } from \"react\";\r\nimport { Input, Avatar, Modal } from \"antd\";\r\nimport { getPath, GET_PROFILE_INFO, DELETE_USER, CHANGE_PASSWORD, SAVE_DEVELOPER } from \"../../actions/URLs\";\r\nimport RequestHandler from \"../../actions/RequestHandler\";\r\nimport ToolUtil from \"../../utils/ToolUtil\";\r\nimport { AddAccount } from \"../comman/Popup\";\r\n\r\nexport default class UserSettings extends Component {\r\n  state = { MODAL: null, settings: 0, access: 30, users: [], name: window.userName, email: window.email, cpassword: \"\", newPassword: \"\", repassword: \"\", plan: [] };\r\n\r\n  componentDidMount() {\r\n    window.gs.navTitle(\"User Settings\");\r\n    this.getAndUpdateData();\r\n\r\n    window.gs.accountUpdate = this.getAndUpdateData;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    delete window.gs.accountUpdate;\r\n  }\r\n\r\n  getAndUpdateData = () => {\r\n    RequestHandler.PostRequest(GET_PROFILE_INFO, {}, (res, err) => {\r\n      if (res) {\r\n        const { data } = res;\r\n        if (data.success) {\r\n          this.state.access = (ToolUtil.toolsAccess) ? ToolUtil.toolsAccess.access : null;\r\n          this.setState({ users: data.users || [] });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { name, email } = this.state;\r\n    if (window.userName !== name || email !== window.email) {\r\n      this.state.access = ToolUtil.toolsAccess.access;\r\n      this.setState({ name: window.userName, email: window.email });\r\n    }\r\n  }\r\n\r\n  onValueChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onDeleteClick = (id) => {\r\n    Modal.confirm({\r\n      title: \"Confirm\",\r\n      content: \"Are you Sure to Delete this user\",\r\n      okText: \"Delete\",\r\n      onOk: () => {\r\n        RequestHandler.PostRequest(DELETE_USER, { userData: { id } }, (res, err) => {\r\n          if (res) {\r\n            const { data } = res;\r\n            if (data.success) {\r\n              window.gs.success(true, data.message);\r\n              this.getAndUpdateData();\r\n            }\r\n          }\r\n        });\r\n      },\r\n      cancelText: \"Cancel\",\r\n    });\r\n  };\r\n\r\n  onChangePasswordClick = () => {\r\n    const { newPassword, cpassword, repassword } = this.state;\r\n    if (newPassword !== repassword) {\r\n      window.gs.toast(\"Confirm Password Same as new Password\", { position: \"bottom-right\", autoClose: true, type: window.gs.toast.TYPE.ERROR });\r\n    } else {\r\n      RequestHandler.PostRequest(CHANGE_PASSWORD, { userData: { currentPassword: cpassword, newPassword: newPassword } }, (res, err) => {\r\n        if (res) {\r\n          const data1 = res.data;\r\n          if (data1.success) {\r\n            this.setState({ newPassword: \"\", repassword: \"\", cpassword: \"\" });\r\n            window.gs.success(true, data1.message);\r\n          } else {\r\n            window.gs.toast(data1.message, { position: \"bottom-right\", autoClose: true, type: window.gs.toast.TYPE.ERROR });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  onAddAccountClick = () => {\r\n    if (ToolUtil.isUpgrade1 && ToolUtil.toolsAccess.access > 30) {\r\n      this.setState({ MODAL: \"ADD\" });\r\n      return;\r\n    } else {\r\n      window.gs.sayUpdate(null, false, ToolUtil.linksList ? ToolUtil.linksList.oto2 : \"\");\r\n    }\r\n  };\r\n\r\n  closeAll = () => {\r\n    this.setState({ MODAL: null });\r\n  };\r\n\r\n  onSubmit = (email, name) => {\r\n    this.closeAll();\r\n    RequestHandler.PostRequest(SAVE_DEVELOPER, { userData: { userName: name, email } }, (res, err) => {\r\n      if (res) {\r\n        const data1 = res.data;\r\n        this.closeAll();\r\n        if (data1.success) {\r\n          this.getAndUpdateData();\r\n          window.gs.success(true, data1.message);\r\n        } else {\r\n          window.gs.success(false, data1.message);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  toggleTab = (key) => {\r\n    const { settings } = this.state;\r\n    this.setState({ settings: key });\r\n    if(key === 2) {\r\n      if(window.isUpgrade1) {\r\n        this.setState({plan : [...this.state.plan, { \"name\" : \"Pro\"}]})\r\n      }\r\n      if(window.isUpgrade2) {\r\n        this.setState({plan : [...this.state.plan, { \"name\" : \"Club\"}]})\r\n      }\r\n    }\r\n    \r\n  };\r\n  render() {\r\n    const { settings, name, users, email, MODAL, cpassword, newPassword, repassword, access } = this.state;\r\n    return (\r\n        <div className=\"cz_user_setting_wrapper\">\r\n        <div className=\"container-fluid\">\r\n          {MODAL === \"ADD\" ? <AddAccount visible={MODAL === \"ADD\" ? true : false} submit={this.onSubmit} Close={this.closeAll} /> : null}\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 col-md-12 col-md-12 col-md-12\">\r\n              <div className=\"toggle-chart align-items-center\">\r\n                <div onClick={() => this.toggleTab(0)} className={settings === 0 ? \"toggle-button align-items-center toogle-active\" : \"toggle-button align-items-center\"}>\r\n                  GENERAL\r\n                </div>\r\n                {access > 30 ? (\r\n                  <React.Fragment>\r\n                    <div onClick={() => this.toggleTab(1)} className={settings === 1 ? \"toggle-button align-items-center toogle-active\" : \"toggle-button align-items-center\"}>\r\n                      ACCOUNT\r\n                    </div>\r\n                    {/* <div onClick={() => this.toggleTab(2)} className={settings === 2 ? \"toggle-button align-items-center toogle-active\" : \"toggle-button align-items-center\"}>\r\n                      BILLING\r\n                    </div> */}\r\n                  </React.Fragment>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {settings === 0 ? (\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-12 col-md-4 col-lg-4 cz_user_setting_content\">\r\n                <div className=\"mt-2\">Profile Settings</div>\r\n                <div className=\"form-element\">\r\n                  <div className=\"label-text\">Name</div>\r\n                  <Input value={name} name=\"name\" disabled />\r\n                </div>\r\n                <div className=\"form-element\">\r\n                  <div className=\"label-text\">Email ID</div>\r\n                  <Input value={email} name=\"email\" disabled />\r\n                </div>\r\n                <div className=\"mt-2 password_heading\">Password Settings</div>\r\n                <div className=\"form-element\">\r\n                  <div className=\"label-text\">Current Password</div>\r\n                  <Input.Password autoComplete=\"off\" name=\"cpassword\" value={cpassword} onChange={this.onValueChange} />\r\n                </div>\r\n                <div className=\"form-element\">\r\n                  <div className=\"label-text\">New Password</div>\r\n                  <Input.Password autoComplete=\"off\" value={newPassword} name=\"newPassword\" onChange={this.onValueChange} />\r\n                </div>\r\n                <div className=\"form-element\">\r\n                  <div className=\"label-text\">Confirm Password</div>\r\n                  <Input.Password autoComplete=\"off\" value={repassword} name=\"repassword\" onChange={this.onValueChange} />\r\n                </div>\r\n                <p>Note : Password should be atleast 8 characters.</p>\r\n                <div className=\"form-element\">\r\n                  <button className=\"btn btn-sm ant-btn-primary color-with cz_btn\" disabled={newPassword.length < 8 || newPassword !== repassword} onClick={this.onChangePasswordClick}>\r\n                    Change Password\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          {settings === 1 ? (\r\n            <div className=\"row\">\r\n              <div className=\"col-12 cz_user_setting_content\">\r\n                <div className=\"row\">\r\n                  {users.map((e, i) => (\r\n                    <CardItem key={i} {...e} onDeleteClick={this.onDeleteClick} />\r\n                  ))}\r\n                  <CardItem key={1500} isAdd={true} onAddClick={this.onAddAccountClick} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          {/* {settings === 2 ? (\r\n            <div className=\"row mt-3 cz_user_setting_content\">\r\n              <div className=\"col-md-6 col-lg-4 col-xl-3 col-sm-12\">\r\n                <div className=\"card account-cardItem\">\r\n                  <img className=\"img-fluid\" src={getPath(\"/asset/Group-128.svg\")} />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12 ml-2\">\r\n                      <div className=\"white cz_white_heading description color-with\">{\"CURRENT PLAN\"}</div>\r\n                      <div className=\"white cz_orange_heading masonry-title color-base\">{\"Reseller Advanced\"}</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card account-cardItem next_billing_box\">\r\n                  <img className=\"img-fluid\" src={getPath(\"/asset/Group130.svg\")} />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-7\">\r\n                      <div className=\"white cz_white_heading description color-with\">{\"NEXT BILLING DATE\"}</div>\r\n                      <div className=\"white cz_orange_heading masonry-title color-base\">{\"24th June 2020\"}</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-8 col-lg-8 col-sm-12\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6 col-lg-6 col-sm-12\">\r\n                    <div className=\"card black-account-card m-2 p-3\">\r\n                      <div className=\"black-account-card-title\">Payment Methods</div>\r\n                      <div className=\"black-account-card-body\">No Card Found</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6 col-lg-6 col-sm-12 \">\r\n                    <div className=\"card black-account-card m-2 p-3\">\r\n                      <div className=\"black-account-card-title\">Subscription Information</div>\r\n                      <div className=\"black-account-card-body\">No Active Subsciption</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12 col-lg-12 col-sm-12 \">\r\n                    <div className=\"card black-account-card m-2 p-3\">\r\n                      <div className=\"black-account-card-title\">Active Plans</div>\r\n                      <div className=\"black-account-card-body\" style={{ margin: \"unset\" }}>\r\n                        <div className=\"d-block account-plans-row\">\r\n                          <span className=\"Name\">Name</span>\r\n                          <span className=\"pull-right\">Status</span>\r\n                        </div>\r\n                        {this.state.plan.map(RowItem)}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12 col-lg-12 col-sm-12 \">\r\n                    <div className=\"card black-account-card m-2 p-3\">\r\n                      <div className=\"black-account-card-title\">Invoices</div>\r\n                      <div className=\"black-account-card-body\">No Invoice</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null} */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst CardItem = function (props) {\r\n  return (\r\n    <div className=\"Account-Card-item\">\r\n      <div className=\"Accountcard-body\">\r\n        {!props.isAdd ? (\r\n          <div className=\"AccountDelete-Icon\" onClick={() => props.onDeleteClick(props._id)}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"9.497\" height=\"12.211\" viewBox=\"0 0 9.497 12.211\" style={{display:'inline',margin:'auto'}}><path id=\"Icon_material-delete\" data-name=\"Icon material-delete\" d=\"M8.178,15.354a1.361,1.361,0,0,0,1.357,1.357h5.427a1.361,1.361,0,0,0,1.357-1.357V7.213H8.178ZM17,5.178H14.623L13.944,4.5H10.553l-.678.678H7.5V6.535H17Z\" transform=\"translate(-7.5 -4.5)\" fill=\"gray\"/></svg>\r\n          </div>\r\n        ) : null}\r\n        {props.isAdd ? (\r\n          <Avatar onClick={() => props.onAddClick()} size={106} style={{ backgroundColor: \"#ed8a25\", margin: \"auto\", color: \"#fff\", verticalAlign: \"middle\" }}>\r\n            <i className=\"fa fa-plus\"></i>\r\n          </Avatar>\r\n        ) : (\r\n          <Avatar size={106} style={{ backgroundColor: \"#ffffff\", margin: \"auto\", color: \"#fff\", verticalAlign: \"middle\" }}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"42\" height=\"42\" viewBox=\"0 0 42 42\"><path id=\"Icon_awesome-user-circle\" data-name=\"Icon awesome-user-circle\" d=\"M21,.563a21,21,0,1,0,21,21A21,21,0,0,0,21,.563Zm0,8.129a7.452,7.452,0,1,1-7.452,7.452A7.452,7.452,0,0,1,21,8.692Zm0,29.129A16.226,16.226,0,0,1,8.595,32.046a9.441,9.441,0,0,1,8.341-5.064,2.072,2.072,0,0,1,.6.093A11.211,11.211,0,0,0,21,27.659a11.169,11.169,0,0,0,3.463-.584,2.072,2.072,0,0,1,.6-.093,9.441,9.441,0,0,1,8.341,5.064A16.226,16.226,0,0,1,21,37.821Z\" transform=\"translate(0 -0.563)\" fill=\"#ed8a25\"/></svg>\r\n          </Avatar>\r\n        )}\r\n      </div>\r\n      <div className=\"Accountcard-footer\">{props.name}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RowItem = function (e, i) {\r\n  return (\r\n    <div className=\"d-block account-plans-row\" key={i+1}>\r\n      <span className=\"Name\">{e.name}</span>\r\n      <span className=\"pull-right account-Active\">Active</span>\r\n      <span className=\"Ellipse-6 pull-right\"></span>\r\n    </div>\r\n  );\r\n};\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Agency.js",["1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060"],"import React, { Component } from \"react\";\r\nimport \"./CreateElement.css\";\r\nimport Util from \"../Util\";\r\nimport ToolUtil, { getToolsPermission } from \"../../utils/ToolUtil\";\r\nimport _ from \"lodash\";\r\nimport \"../comman/Popup.css\";\r\nimport {\r\n  TABMESSAGING,\r\n  URGENCY,\r\n  IMAGEPOPUP,\r\n  VIDEOPOPUP,\r\n  CENTRALTIMER,\r\n  GEOREDIRECTION,\r\n  BREAKEVENCALCULATOR,\r\n  EXITINTENT,\r\n  MOBILEVIBRATOR,\r\n  EMAIL_INTRIGATION,\r\n  IMAGE_OPTIOMAZTION,\r\n  BACKBUTTONREDIRECTION,\r\n  HELLOBARTIMER,\r\n  HELLOBAR,\r\n  DYNEMICELEMENT,\r\n  OFFERIFRAME,\r\n  CHATBOT,\r\n  PROOF_APP, \r\n  AUTO_PLAY_VIDEO,\r\n  INPUT_FORM\r\n} from \"../../utils/Routes\";\r\nimport RequestHandler from \"../../actions/RequestHandler\";\r\nimport { CHECK_CAMPAIGNS_NAME, getPath } from \"../../actions/URLs\";\r\nimport { CampaignNameInput, LockTool } from \"../comman/Popup\";\r\nexport default class Agency extends Component {\r\n  createItems = [\r\n    {\r\n      diaplayName: \"Tab Messaging\",\r\n      classnm: \"\",\r\n      desc: \"Notify your customers by sending them continuous reminder after they switch the tab\",\r\n      color: \"#F5ECCF\",\r\n      height: \"237px\",\r\n      routeName: 1,\r\n      URL: TABMESSAGING,\r\n      path: \"https://drive.google.com/uc?id=101_LnDzvT780zCZ_iPTBXkdsPpoUO1gZ&authuser=0&export=download\",\r\n      preview: \"https://converzee.com/reseller-page/tab-messaging/\",\r\n    },\r\n    { \r\n      diaplayName: \"HELLO BAR + Timer\", \r\n      classnm: \"\", \r\n      desc: \"You can create FOMO from hellobar too\", \r\n      color: \"#fccc6f\", \r\n      height: \"162px\", \r\n      routeName: 17, \r\n      URL: HELLOBARTIMER, \r\n      path: \"https://drive.google.com/uc?id=1qqn7LJYO7HArJdyrc-a1zs9iX4hFqnEh&authuser=0&export=download\",\r\n      preview: \"https://converzee.com/reseller-page/hello-bar+timer/\",\r\n    },\r\n    {\r\n      diaplayName: \"Central Timer\",\r\n      classnm: \"\",\r\n      desc: \"A timer that will be integrated into the web page to create an urgency for your customers.\",\r\n      color: \"#b26a4f\",\r\n      height: \"237px\",\r\n      routeName: 6,\r\n      URL: CENTRALTIMER,\r\n      path: \"https://drive.google.com/uc?id=1CgC7y35X2ddfnTv6RnuVa7OkBvtFQv4-&authuser=0&export=download\",\r\n      preview: \"https://converzee.com/reseller-page/central-timer/\",\r\n    },\r\n    { \r\n      diaplayName: \"Mobile Vibrator\", \r\n      classnm: \"\", \r\n      desc: \"A trigger will be generated with the offer you want to show\", \r\n      color: \"#f7ae98\", \r\n      height: \"141px\", \r\n      routeName: 10, \r\n      URL: MOBILEVIBRATOR, \r\n      path: \"https://drive.google.com/uc?id=16szdASoMSxmJ8IUq5ePXwareV5h_PMg8&authuser=0&export=download\",\r\n      preview: \"https://converzee.com/reseller-page/mobile-vibrator/\",\r\n    },\r\n    {\r\n      diaplayName: \"Back Button redirection\",\r\n      classnm: \"hackMargin darkColor\",\r\n      desc: \"Redirect your customers wherever you want when they click on the back button\",\r\n      color: \"#f5eccf\",\r\n      height: \"237px\",\r\n      routeName: 15,\r\n      URL: BACKBUTTONREDIRECTION,\r\n      path: \"https://drive.google.com/uc?id=1t1BSE-B3ba8xhoh4ZeVg56e1nsOLN4RD&authuser=0&export=download\",\r\n      preview: \"https://converzee.com/reseller-page/back-button-redirection/\",\r\n    },\r\n    { \r\n      diaplayName: \"Urgency Timer\", \r\n      classnm: \"\", \r\n      desc: \"Use this campaign to generate FOMO amongst your customer\", \r\n      color: \"#f7bbb4\", \r\n      height: \"141px\", \r\n      routeName: 2, \r\n      URL: URGENCY, \r\n      path: \"https://drive.google.com/uc?id=1wPy00gb8eJ1XCb_AxXrd8nxdd67qc24t&authuser=0&export=download\",\r\n      preview: \"https://converzee.com/reseller-page/urgency-timer/\",\r\n    },\r\n    {\r\n      diaplayName: \"Image Popup\",\r\n      classnm: \"\",\r\n      desc: \"Use Image popup to grab the attention of your users and engage them with images.\",\r\n      color: \"#4292bf\",\r\n      height: \"237px\",\r\n      routeName: 4,\r\n      URL: IMAGEPOPUP,\r\n      path: \"https://drive.google.com/uc?id=1hcJocnOU7Ocpq9s3Lsi_nzrGQppK7KUX&authuser=0&export=download\",\r\n      preview: \"https://converzee.com/reseller-page/image-popup/\",\r\n    },\r\n    { \r\n      diaplayName: \"Geo Redirection\", \r\n      classnm: \"\", \r\n      desc: \"Target and filter your customers depending upon their geolocation\", \r\n      color: \"#ed6368\", \r\n      height: \"141px\", \r\n      routeName: 7, \r\n      URL: GEOREDIRECTION, \r\n      path: \"https://drive.google.com/uc?id=1h-GwR7zOurqXCMsSV-jryu0DV0uu78Jx&authuser=0&export=download\",\r\n      preview: \"https://converzee.com/reseller-page/geo-targeting/\",\r\n    },\r\n    {\r\n      diaplayName: \"Dynamic Elements\",\r\n      classnm: \"\",\r\n      desc: \"Use dynamic elements and customize them from User Interface of the app\",\r\n      color: \"#aa57a9\",\r\n      height: \"237px\",\r\n      routeName: 13,\r\n      URL: DYNEMICELEMENT,\r\n      path: \"https://drive.google.com/uc?id=1JLqSVl8Rr7ngCCrOo4x2NolfC9imeV7j&authuser=0&export=download\",\r\n      preview: \"https://converzee.com/reseller-page/dynamic-elements/\",\r\n    },\r\n    { \r\n      diaplayName: \"Video Popup\", \r\n      classnm: \"\", \r\n      desc: \"Can be used to import videos to your site easily.\", \r\n      color: \"#75d8dd\", \r\n      height: \"137px\", \r\n      routeName: 5, \r\n      URL: VIDEOPOPUP, \r\n      path: \"https://drive.google.com/uc?id=1NrrtuQdjVd48hUWiSajA50V4VxDQegp7&authuser=0&export=download\",\r\n      preview: \"https://converzee.com/reseller-page/video-popup/\",\r\n    },\r\n    { \r\n      diaplayName: \"HELLO BAR\", \r\n      classnm: \"hackMargin\", \r\n      desc: \"Welcome your customers to your site with stylized and dynamic hellobar\", \r\n      color: \"#ef7868\", \r\n      height: \"237px\", \r\n      routeName: 3, \r\n      URL: HELLOBAR, \r\n      path: \"https://drive.google.com/uc?id=1luM0jYAdGFsFvjiwiS6Kj7zoJlISAJa_&authuser=0&export=download\",\r\n      preview: \"https://converzee.com/reseller-page/hello-bar/\",\r\n    },\r\n    {\r\n      diaplayName: \"Offer iframe\",\r\n      classnm: \"\",\r\n      desc: \"Don’t let your ad hide your content. Show ad and content at one and the same time using Offer iFrame tool\",\r\n      color: \"#fcd1b3\",\r\n      height: \"137px\",\r\n      routeName: 14,\r\n      URL: OFFERIFRAME,\r\n      path: \"https://drive.google.com/uc?id=1rlPEj8SCmrgqQM-kK2ECSINLWMh8DzsO&authuser=0&export=download\",\r\n      preview: \"https://converzee.com/reseller-page/offer-iframe/\",\r\n    },\r\n    {\r\n      diaplayName: \"Exit Intent\",\r\n      classnm: \"\",\r\n      desc: \"A pop which appears as soon as the customers tries to move out the window\",\r\n      color: \"rectangle-6\",\r\n      height: \"237px\",\r\n      routeName: 9,\r\n      URL: EXITINTENT,\r\n      path: \"https://drive.google.com/uc?id=1hxxnS2DgRa60w3BHyrN3CM_JkDo9-ln2&authuser=0&export=download\",\r\n      preview: \"https://converzee.com/reseller-page/exit-intent/\",\r\n    },\r\n    {\r\n      diaplayName: \"Optin forms (HELLO BAR)\",\r\n      classnm: \"\",\r\n      classnm2: \"react-item2\",\r\n      desc: \"Welcome your customers to your site with stylized and dynamic hellobar\",\r\n      color: \"#aa71a9\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: INPUT_FORM,\r\n      path: \"https://drive.google.com/uc?id=1q0eG_fhCGCvfqZUAHI72okP6yguN3v7E&authuser=0&export=download\",\r\n      preview: \"https://converzee.com/reseller-page/hellobar-optin/\",\r\n      params: 0,\r\n      ie: 1,\r\n    },\r\n    {\r\n      diaplayName: \"Optin forms (HELLO BAR + TIMER)\",\r\n      classnm: \"\",\r\n      classnm2: \"react-item3\",\r\n      desc: \"You can create FOMO from hellobar too\",\r\n      color: \"#b26a4f\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: INPUT_FORM,\r\n      path: \"https://drive.google.com/uc?id=1BEaN_iQV7iN1kmaa5au4PdG_AKfs-zdH&authuser=0&export=download\",\r\n      preview: \"https://converzee.com/reseller-page/hellobar+timer-optin/\",\r\n      params: 1,\r\n      ie: 1,\r\n    },\r\n    {\r\n      diaplayName: \"Optin forms (Exit- Intent)\",\r\n      classnm: \"\",\r\n      classnm2: \"react-item3\",\r\n      desc: \"You can create FOMO from hellobar too\",\r\n      color: \"#b26a4f\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: INPUT_FORM,\r\n      path: \"https://drive.google.com/uc?id=1bjxaqgpUVD8dMOi6TJByiXZm9JKeH2Zm&authuser=0&export=download\",\r\n      preview: \"https://converzee.com/reseller-page/exit-intent+optin/\",\r\n      params: 2,\r\n      ie: 2,\r\n    },\r\n    {\r\n      diaplayName: \"Autoplay Video\",\r\n      classnm: \"hackMargin5 \",\r\n      classnm2: \"react-item17\",\r\n      img: \"asset/toolIcon/autoplay.png\",\r\n      desc: \"Autoplay video will allow to autoplay the muted video and there will be click to play gif and text over the video.\",\r\n      color: \"#97d6ff\",\r\n      height: \"237px\",\r\n      routeName: 24,\r\n      URL: AUTO_PLAY_VIDEO,\r\n      path: \"\",\r\n      preview: \"\",\r\n      params: 2,\r\n      ie: 2,\r\n    },\r\n    {\r\n      diaplayName: \"Proof App\",\r\n      classnm: \"\",\r\n      classnm2: \"react-item3\",\r\n      img: \"asset/toolIcon/Proof-App.png\",\r\n      desc: \"Increase your conversion with the recent sales notification.\",\r\n      color: \"#97d6ff\",\r\n      height: \"237px\",\r\n      routeName: 25,\r\n      URL: PROOF_APP,\r\n      path: \"\",\r\n      preview: \"\",\r\n      params: 2,\r\n      ie: 2,\r\n    }\r\n  ];\r\n\r\n  state = {};\r\n  URL = \"\";\r\n  componentDidMount() {\r\n      this.setState({\r\n        createdAt: ToolUtil.createdAt,\r\n      });\r\n  }\r\n\r\n  renderCreateElements = (item, index) => {\r\n    const { createdAt } = this.state;\r\n    \r\n    var d = new Date(createdAt), isLock = false;\r\n    if (Date.now() >= d.setMonth(d.getMonth() + 1) ) {\r\n      isLock = true;\r\n    }\r\n\r\n    const items = { ...item, isLock: isLock };\r\n    Object.assign(items, { openTool: this.openTool });\r\n    return <DIVElement key={index} openTool {...items} />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"cz_create_page\">\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <div className=\"row mt3 mb-3 cz_agency_page_wrapper\">{this.createItems.map(this.renderCreateElements)}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst DIVElement = (props) => {\r\n  let classnm = props.classnm;\r\n  if (window.innerWidth <= 360) classnm = \"\";\r\n  return (\r\n    <div className={\"col-md-4 col-sm-12 react-item \" + classnm}>\r\n      <div className={\"rectangle mt-4\"} style={{ backgroundColor: props.color, height: props.height }}>\r\n        {true ? <LockTool {...props} style={{ height: props.height, minWidth: \"230px\" }} /> : null}\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-7\"></div>\r\n          <div className=\"col-sm-5\">\r\n            <img className=\"img-fluid\" src={getPath(ToolUtil.getImg(props.routeName))} />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"bottom-desc\">\r\n            <div className=\"white mt-3 mb-2 masonry-title\">{props.diaplayName}</div>\r\n            <div className=\"white description\">{props.desc}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/utils/Storage.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/utils/ToolUtil.js",["1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097"]," import {\r\n  TABMESSAGING,\r\n  URGENCY,\r\n  HELLOBARTIMER,\r\n  HELLOBAR,\r\n  IMAGEPOPUP,\r\n  VIDEOPOPUP,\r\n  CENTRALTIMER,\r\n  GEOREDIRECTION,\r\n  BREAKEVENCALCULATOR,\r\n  EXITINTENT,\r\n  MOBILEVIBRATOR,\r\n  EMAIL_INTRIGATION,\r\n  IMAGE_OPTIOMAZTION,\r\n  DYNEMICELEMENT,\r\n  OFFERIFRAME,\r\n  BACKBUTTONREDIRECTION,\r\n  CHATBOT,\r\n  EMAIL_BUILDER,\r\n  THIRD_PARTY,\r\n  OPTIN_FORM,\r\n  CLUB,\r\n  REVIEW_ENGIN,\r\n  INPUT_FORM,\r\n  SPECIAL_OPTIN_FORM,\r\n  HELLOBAROPTIN_FORM,\r\n  HELLOBARTIMEROPTIN_FORM,\r\n  EXITINTENTOPTIN_FORM,\r\n  AUTO_PLAY_VIDEO,\r\n  PROOF_APP\r\n} from \"./Routes\";\r\n\r\nimport _, { first } from \"lodash\";\r\nimport RequestHandler from \"../actions/RequestHandler\";\r\nimport { GET_TOOL_PERMISSION, TEMPLATES, AUTO_RESPONDER_TEST, getPath } from \"../actions/URLs\";\r\nimport { Request } from \"../components/auth/authHandler\";\r\n\r\nexport default class ToolUtil {\r\n  static CURRENT_TOOL = \"\";\r\n  static toolsToItemIdMap = new Map();\r\n  static isUpgrade1 = false;\r\n  static isUpgrade2 = false;\r\n  static isUpgrade3 = false;\r\n  static isVipBonus = false;\r\n  static toolsAccess = null;\r\n  static isSubuser = null;\r\n  static parent = null;\r\n  static linksList = null;\r\n  static autoResponder = null;\r\n  static host = \"\";\r\n  static domainLimit = 0;\r\n  static setToolsToItemIdMap = function () {\r\n    const items = new Map();\r\n    items.set(1, { name: \"Tab Messaging\", img: \"asset/toolIcon/tabmessaging.png\", url: TABMESSAGING });\r\n    items.set(2, { name: \"Urgency Timer\", img: \"asset/toolIcon/urgencytimer.png\", url: URGENCY });\r\n    items.set(5, { name: \"Video Popup\", img: \"asset/toolIcon/videopopup.png\", url: VIDEOPOPUP });\r\n    items.set(6, { name: \"Central Timer\", img: \"asset/toolIcon/centraltime.png\", url: CENTRALTIMER });\r\n    items.set(7, { name: \"Geo Redirection\", img: \"asset/toolIcon/georedirection.png\", url: GEOREDIRECTION });\r\n    items.set(3, { name: \"HELLO BAR\", img: \"asset/toolIcon/hellobar.png\", url: HELLOBAR });\r\n    items.set(4, { name: \"Image Popup\", img: \"asset/toolIcon/imagepopup.png\", url: IMAGEPOPUP });\r\n\r\n    // items.set(8, { name: \"Break-Even Calculator\", img: \"asset/toolIcon/calculator.png\", url: BREAKEVENCALCULATOR });\r\n    items.set(9, { name: \"Exit Intent\", img: \"asset/toolIcon/exitintent.png\", url: EXITINTENT });\r\n    items.set(10, { name: \"Mobile Vibrator\", img: \"asset/toolIcon/mobilevibrator.png\", url: MOBILEVIBRATOR });\r\n    // items.set(11, { name: \"Email Integration\", img: \"asset/toolIcon/emailintegration.png\", url: EMAIL_INTRIGATION });\r\n    // items.set(12, { name: \"Image Optimization\", img: \"asset/toolIcon/imageoptimization.png\", url: IMAGE_OPTIOMAZTION });\r\n    items.set(13, { name: \"Dynamic Elements\", img: \"asset/toolIcon/dynamicelements.png\", url: DYNEMICELEMENT });\r\n    items.set(14, { name: \"Offer iframe\", img: \"asset/toolIcon/offeriframe.png\", url: OFFERIFRAME });\r\n    items.set(15, { name: \"Back Button Redirection\", img: \"asset/toolIcon/backbuttonredirection.png\", url: BACKBUTTONREDIRECTION });\r\n    // items.set(16, { name: \"Landing Page protection\", img: \"asset/toolIcon/landingpageprotection.png\", url:  });\r\n    items.set(17, { name: \"HELLO BAR + Timer\", img: \"asset/toolIcon/hellobartimer.png\", url: HELLOBARTIMER });\r\n    items.set(8, { name: \"Optin forms\", img: \"asset/icon/hellobartimer.png\", url: INPUT_FORM });\r\n    items.set(18, { name: \"Run campaign on third party site\", img: \"asset/toolIcon/hellobartimer.png\", url: THIRD_PARTY });\r\n    // items.set(18, { name: \"ChatBot\", img: \"asset/icon/hellobartimer.png\", url: CHATBOT });\r\n    items.set(19, { name: \"Optin forms\", img: \"asset/toolIcon/hellobartimerwithoptin.png\", url: OPTIN_FORM });\r\n    items.set(20, { name: \"Template Club\", img: \"asset/toolIcon/urgencytimer.png\", url: CLUB });\r\n    // items.set(22, { name: \"Template Club\", img: \"asset/toolIcon/urgencytimer.png\", url: CLUB });\r\n    items.set(21, { name: \"Review Engine\", img: \"asset/toolIcon/review_engine.png\", url: REVIEW_ENGIN });\r\n    items.set(23, { name: \"Special Optin forms\", img: \"asset/icon/hellobartimer.png\", url: SPECIAL_OPTIN_FORM });\r\n    items.set(24, { name: \"Auto Play Video\", img: \"asset/toolIcon/Autoplay-01.png\", url: AUTO_PLAY_VIDEO });\r\n    items.set(25, { name: \"Proof App\", img: \"asset/toolIcon/Proof-App.png\", url: PROOF_APP });\r\n    ToolUtil.toolsToItemIdMap = items;\r\n  };\r\n  static getToolData = function (key) {\r\n    if (!key || !ToolUtil.toolsToItemIdMap.has(key)) {\r\n      return {};\r\n    }\r\n    return ToolUtil.toolsToItemIdMap.get(key);\r\n  };\r\n\r\n  static getTool = function (key) {\r\n    if (!key || !ToolUtil.toolsToItemIdMap.has(key)) {\r\n      return \"\";\r\n    }\r\n    return ToolUtil.toolsToItemIdMap.get(key).name;\r\n  };\r\n  static getImg = function (key = 1) {\r\n    if (!key) {\r\n      return \"\";\r\n    }\r\n    if(ToolUtil.toolsToItemIdMap.get(key)){\r\n      return ToolUtil.toolsToItemIdMap.get(key).img;\r\n    }\r\n  };\r\n\r\n  static getToolByName = function (name) {\r\n    const keys = ToolUtil.toolsToItemIdMap.keys();\r\n    let key = 0;\r\n    keys.forEach((element) => {\r\n      if (ToolUtil.toolsToItemIdMap.get(element).name == name) key = element;\r\n    });\r\n    return key;\r\n  };\r\n\r\n  static getImgByName = function (name) {\r\n    const key = ToolUtil.getToolByName(name);\r\n    if (key !== 0) {\r\n      return ToolUtil.getImg(key);\r\n    }\r\n  };\r\n\r\n  static getToolsOptions = function () {\r\n    const keys = Array.from(ToolUtil.toolsToItemIdMap.keys());\r\n    const toolsOptions = [];\r\n    keys.forEach((element) => {\r\n      toolsOptions.push({ id: element, name: ToolUtil.toolsToItemIdMap.get(element).name });\r\n    });\r\n    return toolsOptions;\r\n  };\r\n\r\n  static toolsToAccess = null;\r\n  static isResponsed = false;\r\n}\r\n\r\nexport function generateIframeContant(url = \"\", title = \"\", pixel = \"\") {\r\n  return (\r\n    `<html>\r\n\r\n  <head>\r\n\r\n    <title>` +\r\n    title +\r\n    `</title>\r\n\r\n    <style>\r\n\r\n      * {\r\n\r\n        margin: 0;\r\n\r\n        padding: 0;\r\n\r\n      }\r\n\r\n      body {\r\n\r\n        margin: 0;\r\n\r\n        padding: 0;\r\n\r\n      }\r\n\r\n    </style>\r\n\r\n  </head>\r\n\r\n  <body>\r\n\r\n    <iframe src=\"` +\r\n    url +\r\n    `\" width=\"100%\" height=\"100%\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\">\r\n\r\n      <p>Click <a href=\"` +\r\n    url +\r\n    `\">here</a>! (Your browser does not support iframes)</p>\r\n\r\n    </iframe>\r\n\r\n  </body>\r\n      ` +\r\n    pixel +\r\n    `\r\n</html>`\r\n  );\r\n}\r\n\r\nexport const resetToolAccess = (cb) => {\r\n  RequestHandler.PostRequest(GET_TOOL_PERMISSION, {}, function (res, err) {\r\n    if (res) {\r\n      if (res.status == 205) {\r\n        cb(null, \"Error\");\r\n        return;\r\n      } else {\r\n        if (res) {\r\n          const data = res.data;\r\n          const obj = { keys: data.keys, consumeLicence: data.consumeLicence };\r\n          ToolUtil.toolsAccess = Object.assign(ToolUtil.toolsAccess, { keys: data.keys, consumeLicence: data.consumeLicence });\r\n          cb(obj, null);\r\n        }\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nexport const getToolsPermission = function (cb) {\r\n  if(Request.getAuth()) {\r\n    if (ToolUtil.toolsAccess && ToolUtil.isResponsed) {\r\n      const temp = ToolUtil.toolsAccess;\r\n      const obj = { access: temp.access, keys: temp.keys, consumeLicence: temp.consumeLicence, tools: temp.tools, totallicence: temp.totallicence};\r\n      cb(obj, null);\r\n    } else {\r\n      RequestHandler.PostRequest(GET_TOOL_PERMISSION, {}, function (res, err) {\r\n        try {\r\n          if (res) {\r\n            if (res.status == 205) {\r\n              cb(null, \"Error\");\r\n            } else {\r\n              if (res) {\r\n                const data = res.data;\r\n                const obj = { access: data.access, tools: data.tools, keys: data.keys, consumeLicence: data.consumeLicence, totallicence: data.totallicence };\r\n                ToolUtil.toolsAccess = obj;\r\n                ToolUtil.isResponsed = true;\r\n                ToolUtil.isUpgrade1 = data.isUpgrade1;\r\n                ToolUtil.isUpgrade2 = data.isUpgrade2;\r\n                ToolUtil.isUpgrade3 = data.isUpgrade3;\r\n                ToolUtil.isVipBonus = data.vipBonus;\r\n                ToolUtil.host = data.host;\r\n                ToolUtil.autoResponder = data.autoResponder;\r\n                ToolUtil.domainLimit = data.domainLimit;\r\n                ToolUtil.createdAt = data.createdAt;\r\n                ToolUtil.isSubuser = data.isSubuser;\r\n                ToolUtil.parent = data.parent;\r\n                ToolUtil.linksList = data.linkList;\r\n                window.userName = data.userName;\r\n                window.email = data.email;\r\n                window.isUpgrade1 = data.isUpgrade1;\r\n                window.isUpgrade2 = data.isUpgrade2;\r\n                window.isUpgrade3 = data.isUpgrade3;\r\n                window.access = data.access;\r\n                window.isSubuser = data.isSubuser;\r\n                window.isDeveloperAccess = data.isDeveloperAccess;\r\n                window.isAdvancedOpt = data.isAdvancedOpt; \r\n                cb(obj, null);\r\n              } else {\r\n                ToolUtil.isResponsed = false;\r\n                cb(null, \"Error\");\r\n              }\r\n            }\r\n          } else {\r\n            cb(null, \"Premission Issue\");\r\n          }\r\n        } catch (e) {\r\n          cb(null, \"Premission Issue\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const createBonusContent = function (title = \"\", url = \"\", logo = \"\", sideImage = \"\", bg = \"#000\", footer = \"\", logoID) {\r\n  const itemColor = bg.replace(\"#\", \"\");\r\n  return (\r\n    \"<!DOCTYPE html><html><head><title>\" +\r\n    title +\r\n    '</title><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"/></head><body><style>.mck_row1{display: flex; text-align: center;background-color: #f7f7f7;display: inline-flex;width: 100%;padding: 0px;}.mck_row{display: block;}.mckCol{position: relative; width: 100%; min-height: 1px; text-align: center;}.inputBox{height: 30px; margin: 5px; padding: 5px; width: 65%; border: 1px solid gray;}.genButton{height: 30px; margin: 8px; padding: 5px; padding-top: 16px; width: 50%; font-size: 18px; background: #ffae00; color: #fff; cursor: pointer;}.mckima_sm{} .mck-imgDiv{height: auto;width: 310px;position: absolute;right: 0px;}@media (max-width: 576px){.mckima_sm{display: none;}}.mckimg-fluid {max-width: 100%;height: auto;}.mck_logo{width: 100px;}</style><script type=\"text/javascript\">var target=\"' +\r\n    url +\r\n    '\";var logoID = \"' +\r\n    logoID +\r\n    '\";var mckColor = \"' +\r\n    itemColor +\r\n    '\";function onpageGenClick(){var name=document.getElementById(\"name\").value; var affID=document.getElementById(\"affID\").value; var url=`${target}?name=${name}&affID=${affID}&logoID=${logoID}&color=${mckColor}` ;window.open(url, \"_blank\");}</script><div style=\"background-color: #fff;\"><div class=\"mck_row\" style=\"text-align: center;padding: 10px;background-color: ' +\r\n    bg +\r\n    ';\"><center><div class=\"mck_logo\"><img class=\"mckimg-fluid\"  src=\"' +\r\n    ToolUtil.host +\r\n    \"/static/contains/\" +\r\n    logo +\r\n    '\"/></div></center></div><div class=\"mck_row\" style=\"text-align: center;padding: 10px;\"><h3>Bonus page Generator</h3><h5>Generate your bonus page below...</h5></div><div class=\"mck_row1\"><div class=\"mckCol mckima_sm\"><div class=\"mck-imgDiv\"><img class=\"mckimg-fluid\" src=\"' +\r\n    ToolUtil.host +\r\n    \"/static/contains/\" +\r\n    sideImage +\r\n    '\"/></div></div><div class=\"mckCol\"> <h4>Boost Conversions!</h4> <div><input class=\"inputBox\" placeholder=\"Name\" id=\"name\"/></div><div><input class=\"inputBox\" placeholder=\"Affilate Id\" id=\"affID\"/></div><div><center><div class=\"genButton\" onclick=\"onpageGenClick();\">Generate Page</div></center></div></div></div><div class=\"mck_row\" style=\"text-align: center;padding: 10px;background-color: ' +\r\n    bg +\r\n    ';\">' +\r\n    footer +\r\n    \"</div></div></body></html>\"\r\n  );\r\n};\r\n\r\nexport const getTemplates = (typ, cb) => {\r\n  RequestHandler.PostRequest(TEMPLATES + typ, {}, (res, err) => {\r\n    if (res) {\r\n      cb(res.data.data);\r\n    } else {\r\n      cb({});\r\n    }\r\n  });\r\n};\r\n\r\nexport const TestAutoResponder = function (uid, apiKey, cb) {\r\n  RequestHandler.PostRequest(AUTO_RESPONDER_TEST, { userData: { uid, apiKey } }, (res, err) => {\r\n    if (res) {\r\n      const data = res.data;\r\n      if (data.error) {\r\n        const err = data.urlKeys;\r\n        cb(false);\r\n        window.gs.showErrorWithHtml({ error: err.title, urlKeys: err });\r\n      } else {\r\n        cb(true);\r\n      }\r\n    } else {\r\n      cb(false);\r\n      window.gs.success(false, \"Something went wrong\");\r\n    }\r\n  });\r\n};\r\n\r\nexport const getCodeOptions = function () {\r\n  const isDisable = ToolUtil.isUpgrade1 ? false : true;\r\n  return [\r\n    { label: \"Exact\", value: \"exact\", disable: isDisable },\r\n    { label: \"Contains\", value: \"contains\" },\r\n  ];\r\n};\r\n\r\nexport const getDefaultItems = function (key) {\r\n  switch (key) {\r\n    case 1:\r\n      return {\r\n        text: '<span style=\"font-size: 36px;\"><font color=\"#ff9c00\">Converzee</font></span>',\r\n        cta: '<font color=\"#000\"><span style=\"font-size: 18px;\">Buy Now</span></font>',\r\n\r\n        style: [\r\n          { name: \"Background\", id: \"backgound\", value: \"#014a81\" },\r\n          { name: \"CTA Backgound\", id: \"ctabackgound\", value: \"#ff3a65\" },\r\n        ],\r\n      };\r\n      break;\r\n    case 2:\r\n      return {\r\n        text: '<span style=\"font-size: 36px;\"><font color=\"#ff9c00\">Converzee</font></span>',\r\n        cta: '<font color=\"#000\"><span style=\"font-size: 18px;\">Buy Now</span></font>',\r\n\r\n        style: [\r\n          { name: \"Background\", id: \"backgound\", value: \"#070336\" },\r\n          { name: \"CTA Backgound\", id: \"ctabackgound\", value: \"#ffa800\" },\r\n        ],\r\n      };\r\n      break;\r\n    case 3:\r\n      return {\r\n        text: '<span style=\"font-size: 36px;\"><font color=\"#ff9c00\">Converzee</font></span>',\r\n        cta: '<font color=\"#000\"><span style=\"font-size: 18px;\">Buy Now</span></font>',\r\n\r\n        style: [\r\n          { name: \"Background\", id: \"backgound\", value: \"#cd075e\" },\r\n          { name: \"CTA Backgound\", id: \"ctabackgound\", value: \"#ffe401\" },\r\n        ],\r\n      };\r\n      break;\r\n    case 4:\r\n      return {\r\n        text: '<span style=\"font-size: 36px;\"><font color=\"#000\">Converzee</font></span>',\r\n        subTitle: '<span style=\"font-size: 18px;\"><font color=\"#636363\">Subtitle here</font></span>',\r\n        cta: '<font color=\"#000\"><span style=\"font-size: 18px;\">Buy Now</span></font>',\r\n        style: [\r\n          { name: \"Background\", id: \"backgound\", value: \"#e9a431\" },\r\n          { name: \"CTA Backgound\", id: \"ctabackgound\", value: \"#4a4a4a\" },\r\n        ],\r\n        noThanks: '<font color=\"#636363\">No thanks</font>',\r\n      };\r\n      break;\r\n    case 6:\r\n      return {\r\n        text: '<span style=\"font-size: 36px;\"><font color=\"#ff9c00\">Converzee</font></span>',\r\n        cta: '<font color=\"#000\"><span style=\"font-size: 18px;\">Buy Now</span></font>',\r\n        style: [\r\n          { name: \"Background\", id: \"backgound\", value: \"#014a81\" },\r\n          { name: \"CTA Backgound\", id: \"ctabackgound\", value: \"#ff3a65\" },\r\n        ],\r\n      };\r\n      break;\r\n    case 7:\r\n      return {\r\n        text: '<span style=\"font-size: 36px;\"><font color=\"#ff9c00\">Converzee</font></span>',\r\n        cta: '<font color=\"#000\"><span style=\"font-size: 18px;\">Buy Now</span></font>',\r\n        style: [\r\n          { name: \"Background\", id: \"backgound\", value: \"#014a81\" },\r\n          { name: \"CTA Backgound\", id: \"ctabackgound\", value: \"#ff3a65\" },\r\n        ],\r\n      };\r\n      break;\r\n    case 8:\r\n      return {\r\n        text: '<span style=\"font-size: 36px;\"><font color=\"#ff9c00\">Converzee</font></span>',\r\n        cta: '<font color=\"#000\"><span style=\"font-size: 18px;\">Buy Now</span></font>',\r\n        style: [\r\n          { name: \"Background\", id: \"backgound\", value: \"#014a81\" },\r\n          { name: \"CTA Backgound\", id: \"ctabackgound\", value: \"#ff3a65\" },\r\n        ],\r\n      };\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const clubTemplate = function (key, toolId) {\r\n  let prefix = \"asset/hb/hb\";\r\n  if (key == 1) prefix = \"asset/hbt/hbt\";\r\n  if (key == 2) prefix = \"asset/exit/\";\r\n  if (key == 3) prefix = \"asset/ct/c_timer\";\r\n  if (key == 4) prefix = \"asset/de/\";\r\n  if (key == 5) prefix = \"asset/optin/hb/\";\r\n  if (key == 6) prefix = \"asset/optin/hbt/\";\r\n  if (key == 7) prefix = \"asset/optin/exit/\";\r\n  const arr = [];\r\n  if (toolId !== 22) {\r\n    /* let templateLength = (key == 2 ) ? 21 : 11;  */\r\n      if( key == 2 ) {\r\n        for (let i = 1; i < 24; i++) {\r\n          arr.push(prefix + i + \".PNG\");\r\n        }  \r\n      } else if( key == 3 || key == 5 || key == 6 || key == 7 ){ \r\n        let length = key == 3 ? 30 : 25;\r\n        for (let i = 1; i < length; i++) {\r\n          arr.push(prefix + i + \".PNG\");\r\n        }\r\n      } else if( key == 4 ){\r\n        for (let i = 1; i < 17; i++) {\r\n          arr.push(prefix + i + \".png\");\r\n        }\r\n      } else {\r\n        for (let i = 1; i < 35; i++) {\r\n          arr.push(prefix + i + \".PNG\");\r\n        }\r\n      }\r\n  } else if (toolId === 23) {\r\n    for (let i = 1; i < 11; i++) {\r\n      arr.push(prefix + i + \".PNG\");\r\n    }\r\n  } else {\r\n    for (let i = 11; i < 16; i++) {\r\n      arr.push(prefix + i + \".PNG\");\r\n    }\r\n  }\r\n  return arr;\r\n};\r\n\r\nfunction convertToCSV(objArray) {\r\n  var array = typeof objArray != \"object\" ? JSON.parse(objArray) : objArray;\r\n  var str = \"\";\r\n  for (var i = 0; i < array.length; i++) {\r\n    var line = \"\";\r\n    for (var index in array[i]) {\r\n      if (line != \"\") line += \",\";\r\n      line += array[i][index];\r\n    }\r\n    str += line + \"\\r\\n\";\r\n  }\r\n  return str;\r\n}\r\n\r\nexport const exportCSVFile = function (items, fileTitle) {\r\n  var headers = {\r\n    email: \"Email\",\r\n    name: \"Name\",\r\n  };\r\n  items.unshift(headers);\r\n  var jsonObject = JSON.stringify(items);\r\n  var csv = convertToCSV(jsonObject);\r\n  var exportedFilenmae = fileTitle + \".csv\" || \"export.csv\";\r\n  var blob = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\r\n  if (navigator.msSaveBlob) {\r\n    navigator.msSaveBlob(blob, exportedFilenmae);\r\n  } else {\r\n    var link = document.createElement(\"a\");\r\n    if (link.download !== undefined) {\r\n      var url = URL.createObjectURL(blob);\r\n      link.setAttribute(\"href\", url);\r\n      link.setAttribute(\"download\", exportedFilenmae);\r\n      link.style.visibility = \"hidden\";\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }\r\n  }\r\n};\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/utils/Routes.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/auth/authHandler.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/superAdmin/SuperAdmin.js",["1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115"],"import React, { Component, useState, useEffect } from \"react\";\r\nimport \"./SuperAdmin.css\";\r\nimport { dateParser } from \"../Util\";\r\nimport { getUserList, parseUserData, parseResellerData, parseLinkData } from \"../comman/TableWithData\";\r\nimport { Tabs, Modal, Select, Switch, Popconfirm } from \"antd\";\r\nimport ToolUtil from \"../../utils/ToolUtil\";\r\nimport RequestHandler from \"../../actions/RequestHandler\";\r\nimport { \r\n  UPDATE_USER, \r\n  UPDATE_ACCESS, \r\n  SEARCH_USER, \r\n  ADD_USER, \r\n  UPDATE_PASSWORD_ACCESS,\r\n  GET_LINKS,\r\n  ADD_LINKS,\r\n  UPDATE_LINK,\r\n  DELETE_USER_DATA,\r\n  SCRIPT_UPDATE\r\n} from \"../../actions/URLs\";\r\nconst { Option } = Select;\r\n\r\nexport default class SuperAdmin extends Component {\r\n  state = {\r\n    reseller: [],\r\n    user: [],\r\n    link: [],\r\n    activeTab: 2,\r\n    loading: true,\r\n    id: null,\r\n    emailId: null,\r\n    isEmailLogs: false,\r\n    linkId: null,\r\n    isAdd: false,\r\n    productPop:false,\r\n    isUpgrade1: false,\r\n    isUpgrade2: false,\r\n    tool: [],\r\n    isSubuser: false\r\n  };\r\n  resellers = [];\r\n  users = [];\r\n  links = [];\r\n\r\n  OTO1 = [\r\n    { tid: 1, selected: false, text: \"Tab Messaging\" },\r\n    { tid: 2, selected: false, text: \"Urgency Timer\" },\r\n    { tid: 5, selected: false, text: \"Video Popup\" },\r\n    { tid: 6, selected: false, text: \"Central Timer\" },\r\n    { tid: 7, selected: false, text: \"Geo Redirection\" },\r\n    { tid: 3, selected: false, text: \"HELLO BAR\" },\r\n    { tid: 4, selected: false, text: \"Image Popup\" },\r\n    { tid: 9, selected: false, text: \"Exit Intent\" },\r\n    { tid: 10, selected: false, text: \"Mobile Vibrator\" },\r\n    { tid: 13, selected: false, text: \"Dynamic Elements\" },\r\n    { tid: 14, selected: false, text: \"Offer iframe\" },\r\n    { tid: 15, selected: false, text: \"Back Button redirection\" },\r\n    { tid: 17, selected: false, text: \"HELLO BAR + Timer\" },\r\n    { tid: 19, selected: false, text: \"Optin Form\" },\r\n    { tid: 24, selected: false, text: \"Autoplay Video\" },\r\n    { tid: 25, selected: false, text: \"Proof App\" }\r\n  ];\r\n\r\n  componentDidMount() {\r\n    this.setState({isSubuser: window.isSubuser}, ()=> {\r\n      this.onTabSwitch(1);\r\n    })\r\n  }\r\n  productPopClick=()=>{\r\n    this.setState({ productPop: true });\r\n  }\r\n  onPopClose=()=>{\r\n    this.setState({ productPop: false });\r\n  }\r\n\r\n  onTabSwitch = (userType) => {\r\n    this.state.activeTab = userType;\r\n    if(userType === 3) {\r\n      RequestHandler.PostRequest(GET_LINKS, {}, (res, err) => {\r\n        let response = res.data;\r\n        if(response) {\r\n          if(response.links) {\r\n            this.links = response.links;\r\n            this.setState({ link: parseLinkData(response.links), loading: false });\r\n          } else {\r\n            this.links = [];\r\n            this.setState({ link: [], loading: false });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      getUserList(userType, (data, err) => {\r\n        if (data && userType == 1) {\r\n          this.resellers = data;\r\n          this.setState({ reseller: parseResellerData(data), loading: false });\r\n        }\r\n        if (data && userType == 2) {\r\n          this.users = data;\r\n          this.setState({ user: parseUserData(data), loading: false });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  onSearch = (searchString) => {\r\n    const userType = this.state.activeTab;\r\n    RequestHandler.PostRequest(SEARCH_USER, { userData: { searchString, userType } }, (res, err) => {\r\n      if (res) {\r\n        const data = res.data.data;\r\n        if (userType == \"1\") this.setState({ reseller: parseResellerData(data) });\r\n        else this.setState({ user: parseUserData(data) });\r\n      }\r\n    });\r\n  };\r\n\r\n  onAddClick = () => {\r\n    this.setState({ isAdd: true });\r\n  };\r\n\r\n  onCloseAdd = () => {\r\n    this.setState({ \r\n      isAdd: false,\r\n      tool: [],\r\n      isUpgrade1: false,\r\n      isUpgrade2: false\r\n    });\r\n  };\r\n\r\n  addUser = (email, password, firstname, access, tools) => {\r\n    const { isUpgrade1, isUpgrade2, tool } = this.state;\r\n    \r\n    if(isUpgrade1) {\r\n      tool.push(18);\r\n    }\r\n    if(isUpgrade2) {\r\n      tool.push(20);\r\n      tool.push(21);\r\n    }\r\n    \r\n    access = access ? 80 : 50;\r\n    RequestHandler.PostRequest(ADD_USER, { userData: { email, password, firstname, access, tool, isUpgrade1, isUpgrade2 } }, (res, err) => {\r\n      if (res) {\r\n        if (res.data.success) {\r\n          window.gs.success(res.data.success);\r\n          this.setState({ \r\n            isAdd: false,\r\n            tool: [],\r\n            isUpgrade1: false,\r\n            isUpgrade2: false\r\n          });\r\n          this.onTabSwitch(this.state.activeTab);\r\n        } else {\r\n          window.gs.success(false, res.data.message);\r\n        }\r\n      }\r\n    });\r\n  };\r\n   \r\n  addLinks = (state) => {\r\n    RequestHandler.PostRequest(ADD_LINKS, { state }, (res, err) => {\r\n      if (res) {\r\n        if (res.data.success) {\r\n          window.gs.success(res.data.success);\r\n          this.setState({ isAdd: false });\r\n          this.onTabSwitch(this.state.activeTab);\r\n        } else {\r\n          window.gs.success(false, res.data.message);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  updateLinks = (name, url) => {\r\n    const { linkId } = this.state;\r\n    RequestHandler.PostRequest(UPDATE_LINK, { userData: { linkId, name, url } }, (res, err) => {\r\n      if (res) {\r\n        window.gs.success(res.data.success);\r\n        if (res.data.success) {\r\n          this.onTabSwitch(this.state.activeTab);\r\n          this.setState({ linkId: null });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  onLinkEdit = (linkId) => {\r\n    this.setState({ linkId });\r\n  };\r\n\r\n  onLinkClose = () => {\r\n    this.setState({ linkId: null });\r\n  };\r\n\r\n  getUserData = (id) => {\r\n    const { activeTab } = this.state;\r\n    let data;\r\n    if (activeTab === 1) {\r\n      data = this.resellers.find((e) => e._id === id);\r\n    } else if(activeTab === 2){\r\n      data = this.users.find((e) => e._id === id);\r\n    }  else {\r\n      data = this.links.find((e) => e._id === id);\r\n    }\r\n    return data;\r\n  };\r\n\r\n  onEdit = (id) => {\r\n    this.setState({ id });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({ id: null });\r\n  };\r\n\r\n  getTools = (isUpgrade1 = false, isUpgrade2 = false) => {\r\n    const tools = new Set([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 17, 19, 24, 25]);\r\n    if (isUpgrade1) {\r\n      tools.add(18);\r\n    }\r\n    if (isUpgrade2) {\r\n      tools.add(20);\r\n      tools.add(21);\r\n    }\r\n    return Array.from(tools);\r\n  };\r\n\r\n  onSave = (name, isActive, isUpgrade1 = false, isUpgrade2 = false) => {\r\n    const { id } = this.state;\r\n    const tools = this.getTools(isUpgrade1, isUpgrade2);\r\n    RequestHandler.PostRequest(UPDATE_USER, { userData: { id, name, isActive, tools, isUpgrade1, isUpgrade2 } }, (res, err) => {\r\n      if (res) {\r\n        window.gs.success(res.data.success);\r\n        if (res.data.success) {\r\n          this.onTabSwitch(this.state.activeTab);\r\n          this.setState({ id: null });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  makeAdmin = (id) => {\r\n    RequestHandler.PostRequest(UPDATE_ACCESS, { userData: { id } }, (res, err) => {\r\n      if (res) {\r\n        window.gs.success(res.data.success);\r\n        this.onTabSwitch(this.state.activeTab);\r\n      }\r\n    });\r\n  };\r\n\r\n  onResetPass = (id) => {\r\n    RequestHandler.PostRequest(UPDATE_PASSWORD_ACCESS, { userData: { id } }, (res, err) => {\r\n      if (res) {\r\n        window.gs.success(res.data.success);\r\n        this.onTabSwitch(this.state.activeTab);\r\n      }\r\n    });\r\n  };\r\n\r\n  toggleView = (tab) => {\r\n    this.onTabSwitch(tab);\r\n  };\r\n\r\n  changeUpgrade = (data) => {\r\n    this.setState(data);\r\n  }\r\n\r\n  // email log show\r\n  showEmailLogs = () => {\r\n    this.setState({ isEmailLogs: true})\r\n  } \r\n\r\n  closeEmailLogs = () => {\r\n    this.setState({ emailId:null, isEmailLogs: false})\r\n  }\r\n\r\n  onEmailLogs = (id) => {\r\n    this.setState({ emailId: id})\r\n  }\r\n\r\n  onDelete = (id) => {\r\n    Modal.confirm({\r\n      title: \"Confirm\",\r\n      content: \"Are you Sure to Delete this user\",\r\n      okText: \"Delete\",\r\n      onOk: () => {\r\n        RequestHandler.PostRequest(DELETE_USER_DATA, { userData: { id } }, (res, err) => {\r\n          if (res) {\r\n            const { data } = res;\r\n            if (data.success) {\r\n              window.gs.success(true, data.message);\r\n              this.onTabSwitch(this.state.activeTab);\r\n            }\r\n          }\r\n        });\r\n      },\r\n      cancelText: \"Cancel\",\r\n    });\r\n  };\r\n\r\n  updateScript = () => {\r\n    RequestHandler.PostRequest(SCRIPT_UPDATE, {}, (res, err) => {\r\n      let response = res.data;\r\n      if(response.success) {\r\n        window.gs.toast(res.data.message, { position: \"bottom-right\", autoClose: true, type: window.gs.toast.TYPE.SUCCESS });\r\n      } else {\r\n        window.gs.toast(res.data.message, { position: \"bottom-right\", autoClose: true, type: window.gs.toast.TYPE.ERROR });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { user, reseller, link, id, linkId, isAdd, activeTab, isSubuser, emailId} = this.state;\r\n    const modelProps = {\r\n      visible: id ? true : false,\r\n      onClose: this.onClose,\r\n      data: id ? this.getUserData(id) : {},\r\n      onSave: this.onSave\r\n    };\r\n\r\n    const linkProps = {\r\n      visible: linkId ? true : false,\r\n      onClose: this.onLinkClose,\r\n      data: linkId ? this.getUserData(linkId) : {},\r\n      updateLinks: this.updateLinks,\r\n      isSubuser: isSubuser\r\n    }\r\n\r\n    const emailProps = {\r\n      onClose: this.closeEmailLogs,\r\n      data: emailId ? this.getUserData(emailId) : {}\r\n    }\r\n\r\n    return (\r\n      <div className=\"container admin\" name=\"admin\">\r\n        {this.state.productPop  ? <ProductModel {...this.state} popClose={()=>this.onPopClose()} OTO1={this.OTO1} onChange={this.changeUpgrade} />:null}\r\n        {activeTab !== 3 ? (id ? <EditModel {...modelProps} /> : null) : null}\r\n        { activeTab !== 3 ? (emailId ? <GetEmailLogs  {...emailProps} /> : null) : null}\r\n        \r\n        { activeTab === 3 ? (linkId ? <EditLinkModel {...linkProps} /> : null) : null}\r\n\r\n        {/* <ADDLinkModel onAddClick={this.addLinks} visible={isAdd} onClose={this.onCloseAdd} /> */}\r\n        {activeTab === 3 ? null : <ADDModel onAddClick={this.addUser} visible={isAdd} onClose={this.onCloseAdd} productPopClick={()=>this.productPopClick()}/> }\r\n        <div className=\"row\">\r\n          <SearchInput onSearch={this.onSearch} />\r\n\r\n          {/* <ADD_LINKS_BUTTON onAddClicked={this.onAddClick} /> */}\r\n      \r\n          {activeTab === 3 && !isSubuser? null : (!isSubuser ? <ADD_USER_BUTTON onAddClicked={this.onAddClick} /> : null) }\r\n          <UpdateScript updateScript={this.updateScript} />\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"toggle-chart m-2 align-items-center\">\r\n              <div onClick={() => this.toggleView(1)} className={activeTab === 1 ? \"toggle-button align-items-center toogle-active\" : \"toggle-button align-items-center\"}>\r\n                Admin\r\n              </div>\r\n              <div onClick={() => this.toggleView(2)} className={activeTab === 2 ? \"toggle-button align-items-center toogle-active\" : \"toggle-button align-items-center\"}>\r\n                User\r\n              </div>\r\n              <div onClick={() => this.toggleView(3)} className={activeTab === 3 ? \"toggle-button align-items-center toogle-active\" : \"toggle-button align-items-center\"}>\r\n                Links\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            {activeTab === 2 ? (\r\n              <USERTABLE data={user} isSubuser={isSubuser} onResetPass={this.onResetPass} onEdit={this.onEdit} showEmailLogs={this.showEmailLogs} onEmailLogs={this.onEmailLogs} onAdmin={this.makeAdmin} onDelete={this.onDelete}/>\r\n            ) : null }\r\n            { activeTab === 1 ?\r\n              <RESELLERTABLE data={reseller} isSubuser={isSubuser} onEdit={this.onEdit} onResetPass={this.onResetPass} showEmailLogs={this.showEmailLogs} onEmailLogs={this.onEmailLogs} onAdmin={this.makeAdmin} onDelete={this.onDelete}/>\r\n            : null }\r\n            { activeTab === 3 ?\r\n              <LINKTABLE data={link} onEdit={this.onLinkEdit} isSubuser={isSubuser}/>\r\n            : null }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst SearchInput = function (props) {\r\n  const [search, setSearch] = useState(props.search);\r\n  return (\r\n    <div className=\"col-md-6 col-sm-12 col-lg-6\">\r\n      <div className=\"input-group mb-3\">\r\n        <input type=\"text\" onChange={(e) => setSearch(e.target.value)} className=\"form-control\" placeholder=\"Search\" />\r\n        <div className=\"input-group-append\">\r\n          <span className=\"input-group-text\" onClick={() => props.onSearch(search)} style={{ cursor: \"pointer\" }}>\r\n            <i className=\"fa fa-search\"></i>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ADD_USER_BUTTON = function (props) {\r\n  return (\r\n    <div className=\"col-md-6 col-sm-12 col-lg-3 \">\r\n      <button className=\"btn btn-sm btn-primary pull-right\" onClick={props.onAddClicked}>\r\n        Add User\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UpdateScript = function (props) {\r\n  return (\r\n    <div className=\"col-md-6 col-sm-12 col-lg-3 \">\r\n      <button className=\"btn btn-sm btn-primary pull-left\" onClick={props.updateScript}>\r\n        Update User Script\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ADD_LINKS_BUTTON = function (props) {\r\n  return (\r\n    <div className=\"col-md-6 col-sm-12 col-lg-6 \">\r\n      <button className=\"btn btn-sm btn-primary pull-right\" onClick={props.onAddClicked}>\r\n        Add Links\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst USERROW = function (props) {\r\n  const item = props.item;\r\n  return (\r\n    <tr>\r\n      <td>{item.firstname}</td>\r\n      <td>{item.email}</td>\r\n      <td>{item.isActive ? <span className=\"badge badge-success\">Active</span> : <span className=\"badge badge-secondary\">De-Active</span>}</td>\r\n      <td>{dateParser(item.date)}</td>\r\n      <td>\r\n        <div className=\"btn-group\">\r\n          <button className=\"btn btn-sm btn-font-size editbtn\" onClick={() => props.onEmailLogs(item.id)}>\r\n          <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i> Email Logs\r\n          </button>\r\n        </div>\r\n      </td>\r\n      {!props.isSubuser ? <td>\r\n        <div className=\"btn-group\">\r\n          <button className=\"btn btn-sm btn-font-size editbtn\" onClick={() => props.onEdit(item.id)}>\r\n            <i className=\"fa fa-edit\" aria-hidden=\"true\"></i> Edit\r\n          </button>\r\n          <button className=\"btn btn-sm btn-font-size editbtn\" onClick={() => props.onDelete(item.id)}>\r\n            <i className=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete\r\n          </button>\r\n          <button className=\"btn btn-sm btn-font-size makeAdminBtn\" onClick={() => props.onAdmin(item.id)}>\r\n            <i className=\"fa fa-user-secret\" aria-hidden=\"true\"></i> Make Admin\r\n          </button>\r\n          <button className=\"btn btn-sm btn-font-size makeAdminBtn\" onClick={() => props.onResetPass(item.id)}>\r\n            <i className=\"fa fa-user-secret\" aria-hidden=\"true\"></i> Reset\r\n          </button>\r\n        </div>\r\n      </td> : null}\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst USERTABLE = function (props) {\r\n  return (\r\n    <div className=\"cz_userTable\">\r\n      <table className=\"table userTable\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Active</th>\r\n            <th>Created</th>\r\n            <th>Script</th>\r\n            {!props.isSubuser ? <th>Action</th> : null}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.data.length ? props.data.map((value, i) => (\r\n            <USERROW key={i} item={value} isSubuser={props.isSubuser} onEdit={props.onEdit} onEmailLogs={props.onEmailLogs} onResetPass={props.onResetPass} onAdmin={props.onAdmin}  onDelete={props.onDelete}/>\r\n          )): <tr><td colSpan=\"5\">There is no user.</td></tr>}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RESELLERROW = function (props) {\r\n  const item = props.item;\r\n  return (\r\n    <tr>\r\n      <td>{item.firstname}</td>\r\n      <td>{item.email}</td>\r\n      <td>{item.isActive ? <span className=\"badge badge-success\">Active</span> : <span className=\"badge badge-secondary\">De-Active</span>}</td>\r\n      <td>{dateParser(item.date)}</td>\r\n      <td>{item.totallicence}</td>\r\n      <td>{item.consumeLicence}</td>\r\n      <td>\r\n        <div className=\"btn-group\">\r\n          <button className=\"btn btn-sm btn-font-size editbtn\" onClick={() => props.onEmailLogs(item.id)}>\r\n          <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i> Email Logs\r\n          </button>\r\n        </div>\r\n      </td>\r\n      {!props.isSubuser ? <td>\r\n        <div className=\"btn-group\">\r\n          <button className=\"btn btn-sm btn-font-size editbtn\" onClick={() => props.onEdit(item.id)}>\r\n            <i className=\"fa fa-edit\" aria-hidden=\"true\"></i> Edit\r\n          </button>\r\n          <button className=\"btn btn-sm btn-font-size editbtn\" onClick={() => props.onDelete(item.id)}>\r\n            <i className=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete\r\n          </button>\r\n          <button className=\"btn btn-sm btn-font-size makeAdminBtn\" onClick={() => props.onAdmin(item.id)}>\r\n            <i className=\"fa fa-user-secret\" aria-hidden=\"true\"></i> Remove Admin\r\n          </button>\r\n          <button className=\"btn btn-sm btn-font-size makeAdminBtn\" onClick={() => props.onResetPass(item.id)}>\r\n            <i className=\"fa fa-user-secret\" aria-hidden=\"true\"></i> Reset\r\n          </button>\r\n        </div>\r\n      </td> : null }\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst RESELLERTABLE = function (props) {\r\n  return (\r\n    <div className=\"cz_userTable\">\r\n      <table className=\"table userTable\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Active</th>\r\n            <th>Created</th>\r\n            <th>Total Licence</th>\r\n            <th>Consume Licence</th>\r\n            <th>Email Log</th>\r\n            {!props.isSubuser ? <th>Action</th> : null}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.data.length ? props.data.map((value, i) => (\r\n            <RESELLERROW key={i} item={value} isSubuser={props.isSubuser} onEdit={props.onEdit} onEmailLogs={props.onEmailLogs} onResetPass={props.onResetPass} onAdmin={props.onAdmin}  onDelete={props.onDelete}/>\r\n          )) : <tr><td colSpan=\"5\">There is no user.</td></tr>}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LINKROW = function (props) {\r\n  const item = props.item;\r\n  var val = \"\";\r\n\r\n  if(item.name === \"oto1\") {\r\n    val = \"(Agency)\";\r\n  } else if(item.name === \"oto2\") {\r\n    val = \"(Pro)\";\r\n  } else if(item.name === \"oto3\") {\r\n    val = \"(Club)\";\r\n  } else if(item.name === \"oto4\") {\r\n    val = \"(Mobile App)\";\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <td>{item.name} {val}</td>\r\n      <td>{item.url}</td>\r\n      {!props.isSubuser ? <td>\r\n        <div className=\"btn-group\">\r\n          <button className=\"btn btn-sm btn-font-size editbtn\" onClick={() => props.onEdit(item.id)}>\r\n            <i className=\"fa fa-edit\" aria-hidden=\"true\"></i> Edit\r\n          </button>\r\n        </div>\r\n      </td> : null }\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst LINKTABLE  = function (props) {\r\n  return (\r\n    <div className=\"cz_userTable\">\r\n      <table className=\"table userTable\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Url</th>\r\n            {!props.isSubuser ? <th>Action</th> : null}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.data.length ? props.data.map((value, i) => (\r\n            <LINKROW key={i} item={value} isSubuser={props.isSubuser} onEdit={props.onEdit} />\r\n          )) : <tr><td colSpan=\"5\">There is no link.</td></tr>}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EditModel = function (props) {\r\n  const [name, setName] = useState(props.data.firstname);\r\n  const [isActive, setisActive] = useState(props.data.isActive);\r\n  // const [tools, setTools] = useState(props.data.allowedTool);\r\n  const [isUpgrade1, setisUpgrade1] = useState(props.data.isUpgrade1);\r\n  const [isUpgrade2, setisUpgrade2] = useState(props.data.isUpgrade2);\r\n  return (\r\n    <Modal title=\"Edit User\" centered visible={props.visible} onOk={() => props.onSave(name, isActive, isUpgrade1, isUpgrade2)} onCancel={() => props.onClose(false)}>\r\n      <div className=\"form-group admin-form-group\">\r\n        <label>Name</label>\r\n        <input type=\"text\" name=\"name\" value={name} onChange={(e) => setName(e.target.value)} className=\"form-control\" />\r\n      </div>\r\n      <div className=\"form-group admin-form-group\" style={{ display: \"flex\" }}>\r\n        <label>IsActive</label>\r\n        <Switch className=\"pull-right m-2\" onChange={() => setisActive(!isActive)} size=\"small\" defaultChecked={isActive} />\r\n      </div>\r\n      <div className=\"form-group admin-form-group\" style={{ display: \"flex\" }}>\r\n        <label>Upgrade - 1</label>\r\n        <Switch className=\"pull-right m-2\" onChange={() => setisUpgrade1(!isUpgrade1)} size=\"small\" defaultChecked={isUpgrade1} />\r\n      </div>\r\n      <div className=\"form-group admin-form-group\" style={{ display: \"flex\" }}>\r\n        <label>Upgrade - 2</label>\r\n        <Switch className=\"pull-right m-2\" onChange={() => setisUpgrade2(!isUpgrade2)} size=\"small\" defaultChecked={isUpgrade2} />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst EditLinkModel = function (props) {\r\n  const [name, setName] = useState(props.data.name);\r\n  const [url, setUrl] = useState(props.data.url);\r\n  let [val, setVal] = useState(\"\");\r\n  \r\n  useEffect(() => {\r\n    if(name === \"oto1\") {\r\n      setVal(\"(Agency)\");\r\n    } else if(name === \"oto2\") {\r\n      setVal(\"(Pro)\");\r\n    } else if(name === \"oto3\") {\r\n      setVal(\"(Club)\");\r\n    } else if(name === \"oto4\") {\r\n      setVal(\"(Mobile App)\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Modal title=\"Edit Links\" centered visible={props.visible} onOk={() => props.updateLinks(name, url)} onCancel={() => props.onClose(false)}>\r\n      <div className=\"form-group admin-form-group\">\r\n        <label>Name</label>\r\n        <input type=\"text\" name=\"name\" value={name + \" \" + val } onChange={(e) => setName(e.target.value)} className=\"form-control\" readOnly/>\r\n      </div>\r\n      <div className=\"form-group admin-form-group\">\r\n        <label>URL</label>\r\n        <input type=\"text\" name=\"url\" value={url} onChange={(e) => setUrl(e.target.value)} className=\"form-control\" />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst GetEmailLogs = function (props) {\r\n  let logs = (props.data ? props.data.logs : null);\r\n  return (\r\n    <>\r\n    <div className=\"product_popup_wrapper\">\r\n      <div className=\"product_popup_overlay\"></div>\r\n      <div className=\"product_popup_box\">\r\n        <div className=\"product_popup_close\" onClick={props.onClose}>✖︎</div>\r\n        <h3>Email Log</h3>\r\n        { logs ? <div><br/><br/>\r\n          Dear <strong> { logs.name }</strong>,<br/><br/>\r\n          Congratulations on your purchase of Converzee software. You’ve made a significant step towards solidifying your business success by opting for this organized, standardized, streamlined and efficient tool. <br/><br/>\r\n  \r\n          Based on our recent study, One Single Line Of Code Gives You Up To 330% More Leads & Sales, and Recovers 50-86% Lost Traffic.<br/><br/>\r\n          \r\n          Your success is critical to us. We know that you will be utterly satisfied after using this growth hacking 18 in 1 tool, which will save you time and grow your business exponentially.<br/><br/>\r\n          \r\n          So, without wasting any more time, click on the below link and start using this fantastic tool right away.<br/><br/>\r\n          \r\n          https://app.converzee.com<br/><br/>\r\n          \r\n          Login credentials:<br/><br/>\r\n          Username:  <strong> { logs.ccustemail }</strong><br/><br/>\r\n          Password:  <strong> { logs.password }</strong><br/><br/>\r\n          \r\n          We request you to change the password immediately after your login.<br/><br/>\r\n          \r\n          Please write back to us on this same thread if you have any further queries about the software, we would be happy to help.<br/><br/>;\r\n         </div>: \r\n          <div> This user has no Email logs. </div>\r\n          }\r\n      </div>\r\n    </div> \r\n      {/* <div dangerouslySetInnerHTML={props.logs}>\r\n      \r\n      </div> */}\r\n      </>\r\n  );\r\n};\r\n\r\nconst OptionItem = (props) => {\r\n  return (\r\n    <div className={props.selected ? \"tool_menuItem tool_menuItem_selected\" : \"tool_menuItem\"} onClick={() => props.onChange(props.tid, props.index, props.selected)}>\r\n      {props.text}\r\n      <span>\r\n        <i className=\"fa fa-check\" />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProductModel = function(props){\r\n  const [selectTools, setSelectTools] = useState(false);\r\n  const [isUpgrade1, setisUpgrade1] = useState(props.isUpgrade1);\r\n  const [isUpgrade2, setisUpgrade2] = useState(props.isUpgrade2);\r\n  const [checked, setChecked] = useState(false);\r\n  const [tools, setTools] = useState(props.tool);\r\n  let newTool = [];\r\n\r\n  useEffect(() => {\r\n    if(tools.length) {\r\n      let ft = document.querySelectorAll(\".frontend_tools\");\r\n      for(let i = 0; i<ft.length; i++) {\r\n        let id = parseInt(ft[i].childNodes[1].getAttribute(\"data-label\"));\r\n        for(let j=0; j<tools.length; j++) {\r\n          if(id === tools[j]) {\r\n            ft[i].childNodes[0].setAttribute(\"checked\", \"\");\r\n          }\r\n        }\r\n      }\r\n      if(props.OTO1.length === ft.length) {\r\n        document.querySelector(\".fe_selectAll\").childNodes[0].setAttribute(\"checked\", \"\");\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  const selectAllProduct = (e) => {\r\n    let toolArray = [];\r\n    if(checked) {\r\n      e.target.previousSibling.removeAttribute(\"checked\");\r\n    } else {\r\n      e.target.previousSibling.setAttribute(\"checked\", \"\");\r\n    }\r\n    \r\n    let items = document.querySelectorAll(\".frontend_tools\");\r\n    items.forEach(element => {\r\n      if(!checked) {\r\n        toolArray.push(parseInt(element.childNodes[1].getAttribute(\"data-label\")));\r\n        element.childNodes[0].setAttribute(\"checked\", \"\");\r\n      } else {\r\n        toolArray = [];\r\n        element.childNodes[0].removeAttribute(\"checked\");\r\n      }\r\n    });\r\n    setSelectTools(!selectTools);\r\n    setTools(toolArray);\r\n    props.onChange({tool : toolArray})\r\n  }\r\n\r\n  const SelectSingleProduct = (e) => {\r\n    var event = e || window.e,\r\n        target = event.target || event.srcElement;\r\n        \r\n    if (target.tagName.toUpperCase() == 'INPUT') {\r\n      let toolId = parseInt(target.nextElementSibling.getAttribute(\"data-label\"));\r\n      if (target.checked){\r\n        tools.push(toolId)\r\n        setTools(tools);\r\n        props.onChange({tool : tools})\r\n        target.setAttribute(\"checked\", \"\");\r\n      } else {\r\n        target.removeAttribute(\"checked\");\r\n        tools.filter(tool => {\r\n          if(tool !== toolId) {\r\n            newTool.push(tool);\r\n          }\r\n        });\r\n        setTools(newTool);\r\n        props.onChange({tool : newTool})\r\n      }\r\n    }\r\n  }\r\n  \r\n  const selectUpgrade1 = (e) => {\r\n    var event = e || window.e,\r\n        target = event.target || event.srcElement;\r\n        \r\n    if (target.tagName.toUpperCase() == 'INPUT') {\r\n      if (target.checked){\r\n        target.setAttribute(\"checked\", \"\");\r\n      } else {\r\n        target.removeAttribute(\"checked\");\r\n      }\r\n      setisUpgrade1(!isUpgrade1); \r\n      props.onChange({isUpgrade1 : !isUpgrade1})\r\n    }\r\n  } \r\n\r\n  const selectUpgrade2 = (e) => {\r\n    var event = e || window.e,\r\n        target = event.target || event.srcElement;\r\n        \r\n    if (target.tagName.toUpperCase() == 'INPUT') {\r\n      if (target.checked){\r\n        target.setAttribute(\"checked\", \"\");\r\n      } else {\r\n        target.removeAttribute(\"checked\");\r\n      }\r\n      setisUpgrade2(!isUpgrade2);\r\n      props.onChange({isUpgrade2 : !isUpgrade2})\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div className=\"product_popup_wrapper\">\r\n      <div className=\"product_popup_overlay\"></div>\r\n      <div className=\"product_popup_box\">\r\n        <div className=\"product_popup_close\" onClick={props.popClose}>✖︎</div>\r\n        <h3>Select Products</h3>\r\n        <div className=\"product_type_heading\">\r\n          <h5>Frontend</h5>\r\n          <label className=\"product_check fe_selectAll\" data-label=\"frontend\">\r\n            <input type=\"checkbox\"/>\r\n            <span onClick={(e)=> {\r\n              setChecked(!checked);\r\n              selectAllProduct(e);\r\n            }}>Select All</span>\r\n          </label>\r\n        </div>\r\n        <ul onClick={(e)=> SelectSingleProduct(e)}>\r\n          {props.OTO1.map( tool => {\r\n            return (\r\n              <li key={tool.tid}>\r\n                <label className=\"product_check frontend_tools\">\r\n                  <input type=\"checkbox\"/>\r\n                  <span data-label={tool.tid}>{tool.text}</span>\r\n                </label>\r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n        \r\n        <div className=\"product_type_heading\" onClick={(e)=> selectUpgrade1(e)}>\r\n          <h5>Upgrade 1</h5>\r\n          <label className=\"product_check\">\r\n            <input type=\"checkbox\" defaultChecked={isUpgrade1 ? \"true\": null}/>\r\n            <span>Select</span>\r\n          </label>\r\n        </div>\r\n        <div className=\"product_type_heading\" onClick={(e)=> selectUpgrade2(e)}>\r\n          <h5>Upgrade 2</h5>\r\n          <label className=\"product_check\">\r\n            <input type=\"checkbox\" defaultChecked={isUpgrade2 ? \"true\": null}/>\r\n            <span>Select</span>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div> \r\n  )\r\n}\r\n\r\n/* const SelectProductBtn = function (props) {\r\n  return (\r\n    <button className=\"btn\" onClick={props.onProductClick}>Select Products</button>\r\n  );\r\n}; */\r\n\r\nconst ADDModel = function (props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [tools, setTools] = useState([]);\r\n  const [access, setAccess] = useState(false);\r\n\r\n  return (\r\n    <Modal title=\"Add User\" centered visible={props.visible} onOk={() => props.onAddClick(email, password, firstname, access, tools)} onCancel={() => props.onClose(false)}>\r\n      <div className=\"form-group admin-form-group\">\r\n        <label>Email</label>\r\n        <input type=\"text\" autoComplete={\"off\"} name=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} className=\"form-control\" />\r\n      </div>\r\n      <div className=\"form-group admin-form-group\">\r\n        <label>Password</label>\r\n        <input type=\"password\" autoComplete={\"off\"} name=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"form-control\" />\r\n      </div>\r\n      <div className=\"form-group admin-form-group\">\r\n        <label>Name</label>\r\n        <input type=\"text\" name=\"name\" value={firstname} onChange={(e) => setFirstname(e.target.value)} className=\"form-control\" />\r\n      </div>\r\n      <div className=\"form-group admin-form-group\">\r\n        <label>Is Reseller</label>\r\n        <Switch defaultChecked={access} onChange={(value) => setAccess(value)} />\r\n      </div>\r\n      <div className=\"form-group admin-form-group\">\r\n        <button className=\"cz_btn btn\" onClick={props.productPopClick} >Select Products</button>\r\n        {/* <label className=\"admin_tools\" onClick={() => {setIsOTOAll(!isOTOAll); onFrontEndSelectAll(ToolUtil.getToolsOptions(), !isOTOAll) }}>Tools <p>Select All Tools</p></label> */}\r\n        {/* <Select\r\n          mode=\"multiple\"\r\n          style={{ width: \"100%\" }}\r\n          placeholder=\"Select Product\"\r\n          defaultValue={tools}\r\n          onChange={(newTool) => {\r\n            if(newTool) {\r\n              setTools(newTool);\r\n            }\r\n          }}\r\n          optionLabelProp=\"label\"\r\n        >\r\n          {ToolUtil.getToolsOptions().map(renderTools)}\r\n        </Select> */}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ADDLinkModel = function (props) {\r\n  const [state, setState] = useState({\r\n    fe : \"\",\r\n    oto1 : \"\",\r\n    oto2 : \"\",\r\n    oto3 : \"\",\r\n    oto4 : \"\",\r\n  });\r\n  \r\n  const updateState = () => {\r\n    setState({\r\n      fe : \"\",\r\n      oto1 : \"\",\r\n      oto2 : \"\",\r\n      oto3 : \"\",\r\n      oto4 : \"\",\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Modal title=\"Add Link\" centered visible={props.visible} onOk={() => props.onAddClick(state)} onCancel={() => { updateState(); props.onClose(false) }}>\r\n      <div className=\"form-group admin-form-group\">\r\n        <label>FE Url</label>\r\n        <input type=\"text\" autoComplete={\"off\"} name=\"fe\" value={state.fe} onChange={(e) => setState({...state, fe : e.target.value})} className=\"form-control\" />\r\n      </div>\r\n      <div className=\"form-group admin-form-group\">\r\n        <label>OTO-1(Agency)</label>\r\n        <input type=\"text\" autoComplete={\"off\"} name=\"oto1\" value={state.oto1} onChange={(e) => setState({...state, oto1 : e.target.value})} className=\"form-control\" />\r\n      </div>\r\n      <div className=\"form-group admin-form-group\">\r\n        <label>OTO-2(Pro)</label>\r\n        <input type=\"text\" autoComplete={\"off\"} name=\"oto2\" value={state.oto2} onChange={(e) => setState({...state, oto2 : e.target.value})} className=\"form-control\" />\r\n      </div>\r\n      <div className=\"form-group admin-form-group\">\r\n        <label>OTO-3(Club)</label>\r\n        <input type=\"text\" autoComplete={\"off\"} name=\"oto3\" value={state.oto3} onChange={(e) => setState({...state, oto3 : e.target.value})} className=\"form-control\" />\r\n      </div>\r\n      <div className=\"form-group admin-form-group\">\r\n        <label>OTO-4(Mobile App)</label>\r\n        <input type=\"text\" autoComplete={\"off\"} name=\"oto4\" value={state.oto4} onChange={(e) => setState({...state, oto4 : e.target.value})} className=\"form-control\" />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/supportUser/SupportUser.js",["1116","1117","1118","1119","1120","1121","1122"],"import React, { Component, useState } from \"react\";\r\nimport \"./SupportUser.css\";\r\nimport { dateParser } from \"../Util\";\r\nimport { getUserList, parseUserData, parseResellerData } from \"../comman/TableWithData\";\r\nimport { Tabs, Modal, Select, Switch } from \"antd\";\r\nimport RequestHandler from \"../../actions/RequestHandler\";\r\nimport { UPDATE_USER, SEARCH_USER, ADD_SUBUSER, GET_SUBUSER, DELETE_USER } from \"../../actions/URLs\";\r\nconst { Option } = Select;\r\n\r\nexport default class SuperAdmin extends Component {\r\n  state = {\r\n    user: [],\r\n    loading: true,\r\n    id: null,\r\n    isAdd: false,\r\n  };\r\n  users = [];\r\n\r\n  componentDidMount() {\r\n    this.getSubUser();\r\n  }\r\n\r\n  getSubUser = () => {\r\n    RequestHandler.PostRequest(GET_SUBUSER, {  }, (res, err) => {\r\n      if (res) {\r\n        const data = res.data.data;\r\n        this.setState({ user: parseUserData(data) });\r\n      } else {\r\n        window.gs.success(false, res.data.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  onSearch = (searchString) => {\r\n    const userType = 0;\r\n    RequestHandler.PostRequest(SEARCH_USER, { userData: { searchString, userType } }, (res, err) => {\r\n      if (res) {\r\n        const data = res.data.data;\r\n        this.setState({ user: parseUserData(data) });\r\n      }\r\n    });\r\n  };\r\n\r\n  onAddClick = () => {\r\n    this.setState({ isAdd: true });\r\n  };\r\n\r\n  onCloseAdd = () => {\r\n    this.setState({ isAdd: false });\r\n  };\r\n\r\n  addUser = (firstname, email, password) => {\r\n    let tools = this.getTools(true, true);\r\n    if(firstname && email && password) {\r\n      RequestHandler.PostRequest(ADD_SUBUSER, { userData: { firstname, email, password, tools } }, (res, err) => {\r\n        if (res) {\r\n          if (res.data.success) {\r\n            window.gs.success(res.data.success);\r\n            this.setState({ isAdd: false });\r\n            this.getSubUser();\r\n          } else {\r\n            window.gs.success(false, res.data.message);\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      window.gs.success(false, \"Please fill all the fields.\");\r\n    }\r\n  };\r\n\r\n  getUserData = (id) => {\r\n    let data = this.users.find((e) => e._id === id);\r\n    return data;\r\n  };\r\n\r\n  onEdit = (id) => {\r\n    this.setState({ id });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({ id: null });\r\n  };\r\n\r\n  getTools = (isUpgrade1 = false, isUpgrade2 = false) => {\r\n    const tools = new Set([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 17, 24]);\r\n    if (isUpgrade1) {\r\n      tools.add(18);\r\n      tools.add(19);\r\n    }\r\n    if (isUpgrade2) {\r\n      tools.add(20);\r\n      tools.add(21);\r\n    }\r\n    return Array.from(tools);\r\n  };\r\n\r\n  // onSave = (name, isActive, isUpgrade1 = false, isUpgrade2 = false) => {\r\n  //   const { id } = this.state;\r\n  //   const tools = this.getTools(isUpgrade1, isUpgrade2);\r\n  //   RequestHandler.PostRequest(UPDATE_USER, { userData: { id, name, isActive, tools, isUpgrade1, isUpgrade2 } }, (res, err) => {\r\n  //     if (res) {\r\n  //       window.gs.success(res.data.success);\r\n  //       if (res.data.success) {\r\n  //         // this.onTabSwitch(this.state.activeTab);\r\n  //         this.setState({ id: null });\r\n  //       }\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n  onDeleteClick = (id) => {\r\n    Modal.confirm({\r\n      title: \"Confirm\",\r\n      content: \"Are you Sure to Delete this user\",\r\n      okText: \"Delete\",\r\n      onOk: () => {\r\n        RequestHandler.PostRequest(DELETE_USER, { userData: { id } }, (res, err) => {\r\n          if (res) {\r\n            const { data } = res;\r\n            if (data.success) {\r\n              window.gs.success(true, data.message);\r\n              this.getSubUser();\r\n            }\r\n          }\r\n        });\r\n      },\r\n      cancelText: \"Cancel\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { user, id, isAdd } = this.state;\r\n    const modelProps = {\r\n      visible: id ? true : false,\r\n      onClose: this.onClose,\r\n      data: id ? this.getUserData(id) : {},\r\n      // onSave: this.onSave,\r\n    };\r\n    return (\r\n      <div className=\"container admin\" name=\"admin\">\r\n        {/* {id ? <EditModel {...modelProps} /> : null} */}\r\n        <ADDModel onAddClick={this.addUser} visible={isAdd} onClose={this.onCloseAdd} />\r\n        <div className=\"row\">\r\n          <SearchInput onSearch={this.onSearch} />\r\n          <ADD_USER_BUTTON onAddClicked={this.onAddClick} />\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n              <USERTABLE data={user} onEdit={this.onEdit}  onDelete={this.onDeleteClick}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst SearchInput = function (props) {\r\n  const [search, setSearch] = useState(props.search);\r\n  return (\r\n    <div className=\"col-md-6 col-sm-12 col-lg-6\">\r\n      <div className=\"input-group mb-3\">\r\n        <input type=\"text\" onChange={(e) => setSearch(e.target.value)} className=\"form-control\" placeholder=\"Search\" />\r\n        <div className=\"input-group-append\">\r\n          <span className=\"input-group-text\" onClick={() => props.onSearch(search)} style={{ cursor: \"pointer\" }}>\r\n            <i className=\"fa fa-search\"></i>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ADD_USER_BUTTON = function (props) {\r\n  return (\r\n    <div className=\"col-md-6 col-sm-12 col-lg-6 \">\r\n      <button className=\"btn btn-sm btn-primary pull-right\" onClick={props.onAddClicked}>\r\n        Add Support User\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst USERROW = function (props) {\r\n  const item = props.item;\r\n  return (\r\n    <tr>\r\n      <td>{item.firstname}</td>\r\n      <td>{item.email}</td>\r\n      <td>{item.isActive ? <span className=\"badge badge-success\">Active</span> : <span className=\"badge badge-secondary\">De-Active</span>}</td>\r\n      <td>{dateParser(item.date)}</td>\r\n      <td>\r\n        <div className=\"btn-group\">\r\n          <button className=\"btn btn-sm btn-font-size editbtn\" onClick={() => props.onDelete(item.id)}>\r\n            <i className=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete\r\n          </button>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst USERTABLE = function (props) {\r\n  return (\r\n    <div>\r\n      <table className=\"table userTable\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Active</th>\r\n            <th>Created</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.data.length ? props.data.map((value, i) => (\r\n            <USERROW key={i} item={value} onEdit={props.onEdit} onDelete={props.onDelete}/>\r\n          )): <tr><td colSpan=\"5\">There is no user.</td></tr>}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\n// const EditModel = function (props) {\r\n//   const [name, setName] = useState(props.data.firstname ? props.data.firstname : \"\");\r\n//   const [email, setEmail] = useState(props.data.email);\r\n  \r\n//   return (\r\n//     <Modal title=\"Edit User\" centered visible={props.visible} onOk={() => props.onSave(name, email)} onCancel={() => props.onClose(false)}>\r\n//       <div className=\"form-group admin-form-group\">\r\n//         <label>Name</label>\r\n//         <input type=\"text\" name=\"name\" value={name} onChange={(e) => setName(e.target.value)} className=\"form-control\" />\r\n//       </div>\r\n//       <div className=\"form-group admin-form-group\">\r\n//         <label>Email</label>\r\n//         <input type=\"text\" name=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} className=\"form-control\" />\r\n//       </div>\r\n//     </Modal>\r\n//   );\r\n// };\r\n\r\n\r\nconst ADDModel = function (props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  return (\r\n    <Modal title=\"Add User\" centered visible={props.visible} onOk={() => props.onAddClick(name, email, password)} onCancel={() => props.onClose(false)}>\r\n      <div className=\"form-group admin-form-group\">\r\n        <label>Email</label>\r\n        <input type=\"text\" autoComplete={\"off\"} name=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} className=\"form-control\" />\r\n      </div>\r\n      <div className=\"form-group admin-form-group\">\r\n        <label>Password</label>\r\n        <input type=\"password\" autoComplete={\"off\"} name=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"form-control\" />\r\n      </div>\r\n      <div className=\"form-group admin-form-group\">\r\n        <label>name</label>\r\n        <input type=\"text\" autoComplete={\"off\"} name=\"name\" value={name} onChange={(e) => setName(e.target.value)} className=\"form-control\" />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/OTO3/OTO3Create.js",["1123","1124","1125","1126"],"import React, { Component } from \"react\";\r\nimport Util from \"../../Util\";\r\nimport { getToolsPermission } from \"../../../utils/ToolUtil\";\r\nimport _ from \"lodash\";\r\nimport \"../../comman/Popup.css\";\r\nimport { THIRD_PARTY, OPTIN_FORM, CLUB } from \"../../../utils/Routes\";\r\nimport RequestHandler from \"../../../actions/RequestHandler\";\r\nimport { CHECK_CAMPAIGNS_NAME } from \"../../../actions/URLs\";\r\nimport { CampaignNameInput } from \"../../comman/Popup\";\r\nimport { CreateItem } from \"../../layout/ToolLayout\";\r\nimport { Request } from \"../../auth/authHandler\";\r\n\r\nexport default class OTO3Create extends Component {\r\n  createItems = [\r\n    {\r\n      diaplayName: \"Template Club (HELLO BAR)\",\r\n      classnm: \"\",\r\n      img: \"asset/toolIcon/hellobar.png\",\r\n      classnm2: \"react-item2\",\r\n      desc: \"Welcome your customers to your site with stylized and dynamic hellobar\",\r\n      color: \"#aa71a9\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: CLUB,\r\n      params: 0,\r\n    },\r\n    {\r\n      diaplayName: \"Template Club (HELLO BAR + TIMER)\",\r\n      classnm: \"\",\r\n      img: \"asset/toolIcon/hellobartimer.png\",\r\n      classnm2: \"react-item3\",\r\n      desc: \"You can create FOMO from hellobar too\",\r\n      color: \"#b26a4f\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: CLUB,\r\n      params: 1,\r\n    },\r\n    {\r\n      diaplayName: \"Template Club (EXIT INTENT)\",\r\n      classnm: \"\",\r\n      img: \"asset/toolIcon/exitintent.png\",\r\n      classnm2: \"react-item4\",\r\n      desc: \"A pop which appears as soon as the customers tries to move out the window\",\r\n      color: \"#ed6368\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: CLUB,\r\n      params: 2,\r\n    },\r\n    {\r\n      diaplayName: \"Template Club (CENTRAL TIMER)\",\r\n      classnm: \"\",\r\n      img: \"asset/toolIcon/centraltime.png\",\r\n      classnm2: \"react-item3\",\r\n      desc: \"A timer that will be integrated into the web page to create an urgency for your customers\",\r\n      color: \"#b26a4f\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: CLUB,\r\n      params: 3,\r\n    },\r\n    {\r\n      diaplayName: \"Template Club (DYNAMIC ELEMENTS)\",\r\n      classnm: \"\",\r\n      img: \"asset/toolIcon/dynamicelements.png\",\r\n      classnm2: \"react-item9\",\r\n      desc: \"Use dynamic elements and customize them from User Interface of the app\",\r\n      color: \"#aa57a9\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: CLUB,\r\n      params: 4,\r\n    },\r\n    {\r\n      diaplayName: \"Template Club (HELLO BAR WITH OPTIN FORMS)\",\r\n      classnm: \"\",\r\n      img: \"asset/toolIcon/hellobarwithoptin.png\",\r\n      classnm2: \"react-item15\",\r\n      desc: \"Generate leads from your site with stylized and dynamic hellobar\",\r\n      color: \"#b26a4f\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: CLUB,\r\n      params: 5,\r\n    },\r\n    {\r\n      diaplayName: \"Template Club (HELLO BAR + TIMER WITH OPTIN FORMS)\",\r\n      classnm: \"\",\r\n      img: \"asset/toolIcon/hellobartimerwithoptin.png\",\r\n      classnm2: \"react-item15\",\r\n      desc: \"You can generate leads by creating FOMO from hellobar\",\r\n      color: \"#b26a4f\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: CLUB,\r\n      params: 6,\r\n    },\r\n    {\r\n      diaplayName: \"Template Club (EXIT INTENT WITH OPTIN FORMS)\",\r\n      classnm: \"\",\r\n      img: \"asset/toolIcon/exitintentwithoptin.png\",\r\n      classnm2: \"react-item3\",\r\n      desc: \"Generate leads from a popup which appears as soon as the customers tries to move out the window\",\r\n      color: \"#b26a4f\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: CLUB,\r\n      params: 7,\r\n    },\r\n    {\r\n      diaplayName: \"Masterclass Videos\",\r\n      classnm: \"\",\r\n      img: \"asset/training.png\",\r\n      classnm2: \"react-item6\",\r\n      desc: \"\",\r\n      color: \"#f7ae98\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      params: 1,\r\n      isOpenAble: \"https://spiety.com/masterclass/\",\r\n    },\r\n  ];\r\n\r\n  state = {\r\n    openPopup: false,\r\n    CAMPAIGNS_NAME: \"\",\r\n    allowedTool: [],\r\n    access: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gs.navTitle(\"Club\");\r\n  }\r\n\r\n  URL = \"\";\r\n  openTool = (url, byPass, params, ie, isOpenAble) => {\r\n    if (isOpenAble) {\r\n      window.open(isOpenAble, \"_blank\");\r\n      return;\r\n    }\r\n    this.URL = url;\r\n    if (params) window.gs.defaultLayout = params;\r\n    if (byPass) {\r\n      Util.CAMPAIGNS_NAME = \"_\";\r\n      this.props.history.push(this.URL);\r\n    } else {\r\n      this.setState({ openPopup: true });\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    if(Request.getAuth()) {\r\n      this.accessedTools();\r\n      window.gs.navTitle(\"Club\");\r\n    } else {\r\n      document.querySelector(\".session_login_wrapper\").classList.remove(\"cz_hide\");\r\n    }\r\n  }\r\n\r\n  accessedTools = () => {\r\n    getToolsPermission((permission, err) => {\r\n      if (permission) {\r\n        this.setState({ allowedTool: permission.tools, access: permission.access });\r\n      }\r\n    });\r\n  };\r\n\r\n  renderCreateElements = (item, index) => {\r\n    const items = { ...item, isLock: true };\r\n    const { allowedTool, access } = this.state;\r\n    if (access > 80) {\r\n      items.isLock = false;\r\n    } else {\r\n      if (allowedTool.length) {\r\n        const isLock = _.findIndex(allowedTool, function (o) {\r\n          return o === item.routeName;\r\n        });\r\n        if (isLock !== -1) items.isLock = false;\r\n      }\r\n    }\r\n\r\n    Object.assign(items, { openTool: this.openTool });\r\n    return <CreateItem key={index} openTool {...items} />;\r\n  };\r\n  onChangeCampaign = (e) => {\r\n    this.setState({ CAMPAIGNS_NAME: e.target.value });\r\n    Util.CAMPAIGNS_NAME = e.target.value;\r\n  };\r\n\r\n  closePopUp = () => {\r\n    window.gs.defaultLayout = 0\r\n    this.setState({ openPopup: false, success: false, CAMPAIGNS_NAME: \"\" });\r\n  };\r\n\r\n  onNextButtonClick = (camp) => {\r\n    this.state.CAMPAIGNS_NAME = camp;\r\n    Util.CAMPAIGNS_NAME = camp;\r\n    RequestHandler.PostRequest(CHECK_CAMPAIGNS_NAME, { toolData: { toolName: this.state.CAMPAIGNS_NAME } }, (res, err) => {\r\n      if (res) {\r\n        if (res.data.success) {\r\n          this.props.history.push(this.URL);\r\n        } else {\r\n          window.gs.toast(res.data.message, { position: \"bottom-right\", autoClose: true, type: window.gs.toast.TYPE.ERROR });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { openPopup, CAMPAIGNS_NAME } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <CampaignNameInput visible={openPopup} Close={this.closePopUp} submit={this.onNextButtonClick} />\r\n          <div className=\"col\">\r\n            <div className=\"row mt3 mb-3 cz_create_pages_wrapper\">{this.createItems.map(this.renderCreateElements)}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/actions/URLs.js",["1127"],"import { MODE } from '../config';\r\nexport const BASE_URL = getBaseURL();\r\nexport const SAVE_TOOL = 'tool/insert';\r\nexport const IMAGE_UPLOAD_LINK = 'upload/';\r\nexport const IMAGE_OPTI_UPLOAD = 'imageOpti/';\r\nexport const GET_CAMPAIGNS = 'tool/get';\r\nexport const GET_ONE_TOOL = 'tool/getOne/';\r\nexport const CLONE_TOOL = 'tool/clone/';\r\nexport const ARCHIVE_TOOL = 'tool/archive/';\r\nexport const PURGE_TOOL = 'tool/purge/';\r\nexport const DOWNLOAD_DATA = 'tool/downloadOptin/';\r\nexport const SAVE_DOMAIN = 'domain/insert';\r\nexport const GET_DOMAIN = 'domain/get';\r\nexport const GET_PIXEL = 'pixel/';\r\nexport const DASHBOARD_DATA = 'dashboard/get';\r\nexport const ADD_RESELLER_USER = 'reseller/add-reseller-user';\r\nexport const SEND_LINK_BY_URL = 'reseller/send-by-email';\r\nexport const SAVE_USER_DETAILS = 'reseller/update-userdata';\r\nexport const KEY_GENERATE = 'reseller/generate-key';\r\nexport const VERIFY_AND_ADD_USER = 'register/verify-add-user';\r\nexport const GET_TOOL_PERMISSION = 'access/getPermissions';\r\nexport const GET_USERS = 'reseller/getUser';\r\nexport const UPDATE_USER = 'dashboard/update-user';\r\nexport const UPDATE_ACCESS = 'dashboard/change-Access';\r\nexport const UPDATE_PASSWORD_ACCESS = 'dashboard/resetPassword';\r\nexport const SEARCH_USER = 'reseller/search';\r\nexport const GET_LINKS = 'links/get-links';\r\nexport const ADD_LINKS = 'links/add-links';\r\nexport const UPDATE_LINK = 'links/update-links';\r\nexport const ADD_USER = 'reseller/add-user';\r\nexport const ADD_SUBUSER = 'reseller/add-subuser';\r\nexport const GET_SUBUSER = 'reseller/get-subuser';\r\nexport const FORGOT_PASSWORD = 'register/forgot-password';\r\nexport const VERIFY_PASSWORD = 'register/verify-password';\r\nexport const UPDATE_PASSWORD = 'register/update-password';\r\nexport const CHECK_CAMPAIGNS_NAME = 'tool/toolNameVerify';\r\nexport const EMAIL_TEMPLATE = 'email/insert/';\r\nexport const GET_EMAIL = 'email/get';\r\nexport const GET_CAMPS = 'tool/campList';\r\nexport const GET_EMAILS = 'email/getEmailList';\r\nexport const SEND_MAIL = 'email/sendMail';\r\nexport const SAVE_DEVELOPER = 'access/developerAccess';\r\nexport const GET_PROFILE_INFO = 'access/getAccountInfo';\r\nexport const DELETE_USER = 'access/deleteDeveloper';\r\nexport const DELETE_USER_DATA = 'access/deleteUserData';\r\nexport const CHANGE_PASSWORD = 'access/changePassword';\r\nexport const AUTO_RESPONDER = 'access/configMail';\r\nexport const GET_AUTO_RESPONDER = 'access/getAllAutoResponder';\r\nexport const SAVE_LIST_ID = 'access/saveListId';\r\nexport const AUTO_RESPONDER_TEST = 'access/configMailTest';\r\nexport const USER_DISABLE = 'reseller/user-deactive';\r\nexport const TEMPLATES = 'gettool/tempates/';\r\nexport const CHECKOTO2 = 'pixel/OTO2';\r\nexport const GET_LIST_FROM_AUTORESPONDER = \"access/getListFromAutoresponder\";\r\nexport const AUTHORIZATION = \"auth/infusionsoft/callback\";\r\nexport const CONSTANTCONTACTAUTH = \"constantContact/callback\";\r\nexport const AWEBERCALLBACK = \"aweber/callback\";\r\nexport const AWEBERAUTHORIZATION = \"access/aweber/authorize\";\r\nexport const AUTORESPONDER_AUTHORIZE = \"access/autoresponder/authorize\";\r\nexport const ADD_CUSTOME_AR = \"access/add-custom-ar-form\";\r\nexport const EDIT_CUSTOME_AR = \"access/edit-custom-ar-form\";\r\nexport const DELETE_CUSTOME_AR = \"access/delete-custom-ar-form\";\r\nexport const DISCONNECT_AR = \"access/disconnect-ar\";\r\nexport const SCRIPT_UPDATE = \"reseller/update-script\";\r\n\r\nfunction getBaseURL() {\r\n  return 'https://api.converzee.com/';\r\n  /* return 'http://localhost:3001/'; */\r\n  /* return 'http://192.168.1.227:3001/'; */\r\n}                \r\n\r\nexport const RPath = function () {\r\n  return 'https://d257yxqteot439.cloudfront.net/app/';\r\n};\r\n\r\nexport const bonusScriptPixel = '<script';\r\n\r\nexport const getPath = function (path = '/') {\r\n  return `${path}`;\r\n};\r\n\r\nexport const getBGPath = function (path = '/') {\r\n  return `url('${path}')`;\r\n};\r\n\r\n// window.rPath = RPath();\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/OTO2/OTO2Create.js",["1128","1129"],"import React, { Component } from \"react\";\r\nimport \"./OTO2Create.css\";\r\nimport Util from \"../../Util\";\r\nimport { getToolsPermission } from \"../../../utils/ToolUtil\";\r\nimport _ from \"lodash\";\r\nimport \"../../comman/Popup.css\";\r\nimport { THIRD_PARTY, OPTIN_FORM } from \"../../../utils/Routes\";\r\nimport RequestHandler from \"../../../actions/RequestHandler\";\r\nimport { CHECK_CAMPAIGNS_NAME } from \"../../../actions/URLs\";\r\nimport { CampaignNameInput } from \"../../comman/Popup\";\r\nimport { CreateItem } from \"../../layout/ToolLayout\";\r\nimport { Request } from \"../../auth/authHandler\";\r\n\r\nexport default class OTO2Create extends Component {\r\n  createItems = [\r\n    {\r\n      diaplayName: \"Run campaign on third party site\",\r\n      classnm: \"\",\r\n      img: \"asset/toolIcon/offeriframe.png\",\r\n      classnm2: \"react-item1\",\r\n      desc: \"\",\r\n      color: \"#6799e8\",\r\n      height: \"237px\",\r\n      routeName: 1,\r\n      URL: THIRD_PARTY,\r\n      byPass: true,\r\n    },\r\n    {\r\n      diaplayName: \"Optin forms (HELLO BAR)\",\r\n      classnm: \"\",\r\n      img: \"asset/toolIcon/hellobarwithoptin.png\",\r\n      classnm2: \"react-item2\",\r\n      desc: \"Welcome your customers to your site with stylized and dynamic hellobar\",\r\n      color: \"#aa71a9\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: OPTIN_FORM,\r\n      params: 0,\r\n      ie: 3,\r\n    },\r\n    {\r\n      diaplayName: \"Optin forms (HELLO BAR + TIMER)\",\r\n      classnm: \"\",\r\n      img: \"asset/toolIcon/hellobartimerwithoptin.png\",\r\n      classnm2: \"react-item3\",\r\n      desc: \"You can create FOMO from hellobar too\",\r\n      color: \"#b26a4f\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: OPTIN_FORM,\r\n      params: 1,\r\n      ie: 3,\r\n    },\r\n    {\r\n      diaplayName: \"Optin forms (EXIT INTENT)\",\r\n      classnm: \"\",\r\n      img: \"asset/toolIcon/exitintentwithoptin.png\",\r\n      classnm2: \"react-item4\",\r\n      desc: \"A pop which appears as soon as the customers tries to move out the window\",\r\n      color: \"#ed6368\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: OPTIN_FORM,\r\n      params: 2,\r\n      ie: 4,\r\n    }\r\n  ];\r\n\r\n  state = {\r\n    openPopup: false,\r\n    CAMPAIGNS_NAME: \"\",\r\n    allowedTool: [],\r\n    access: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gs.navTitle(\"Pro\");\r\n  }\r\n\r\n  URL = \"\";\r\n  openTool = (url, byPass, params, ie) => {\r\n    this.URL = url;\r\n    if (params) window.gs.defaultLayout = params;\r\n    if (ie) window.gs.ie = ie;\r\n    if (byPass) {\r\n      Util.CAMPAIGNS_NAME = \"_\";\r\n      this.props.history.push(this.URL);\r\n    } else {\r\n      this.setState({ openPopup: true });\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    if(Request.getAuth()) {\r\n      this.accessedTools();\r\n      window.gs.navTitle(\"Pro\");\r\n    } else {\r\n      document.querySelector(\".session_login_wrapper\").classList.remove(\"cz_hide\");\r\n    }\r\n  }\r\n\r\n  accessedTools = () => {\r\n    getToolsPermission((permission, err) => {\r\n      if (permission) {\r\n        this.setState({ allowedTool: permission.tools, access: permission.access });\r\n      }\r\n    });\r\n  };\r\n\r\n  renderCreateElements = (item, index) => {\r\n    const items = { ...item, isLock: true };\r\n    const { allowedTool, access } = this.state;\r\n    if (access > 80) {\r\n      items.isLock = false;\r\n    } else {\r\n      if (allowedTool.length) {\r\n        const isLock = _.findIndex(allowedTool, function (o) {\r\n          return o === item.routeName;\r\n        });\r\n        if (isLock !== -1) items.isLock = false;\r\n      }\r\n    }\r\n\r\n    Object.assign(items, { openTool: this.openTool });\r\n    return <CreateItem key={index} openTool {...items} />;\r\n  };\r\n  onChangeCampaign = (e) => {\r\n    this.setState({ CAMPAIGNS_NAME: e.target.value });\r\n    Util.CAMPAIGNS_NAME = e.target.value;\r\n  };\r\n\r\n  closePopUp = () => {\r\n    window.gs.defaultLayout = 0; \r\n    this.setState({ openPopup: false, success: false, CAMPAIGNS_NAME: \"\" });\r\n  };\r\n\r\n  onNextButtonClick = (camp) => {\r\n    this.state.CAMPAIGNS_NAME = camp;\r\n    Util.CAMPAIGNS_NAME = camp;\r\n    RequestHandler.PostRequest(CHECK_CAMPAIGNS_NAME, { toolData: { toolName: this.state.CAMPAIGNS_NAME } }, (res, err) => {\r\n      if (res) {\r\n        if (res.data.success) {\r\n          this.props.history.push(this.URL);\r\n        } else {\r\n          window.gs.toast(res.data.message, { position: \"bottom-right\", autoClose: true, type: window.gs.toast.TYPE.ERROR });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { openPopup, CAMPAIGNS_NAME } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <CampaignNameInput visible={openPopup} Close={this.closePopUp} submit={this.onNextButtonClick} />\r\n          <div className=\"col\">\r\n            <div className=\"row mt3 mb-3 cz_create_pages_wrapper\">{this.createItems.map(this.renderCreateElements)}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/utils/ScreenUtil.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Bonus/BonusCreate.js",["1130","1131","1132"],"import React, { Component } from \"react\";\r\nimport Util from \"../../Util\";\r\nimport { getToolsPermission } from \"../../../utils/ToolUtil\";\r\nimport _ from \"lodash\";\r\nimport \"../../comman/Popup.css\";\r\nimport { BONUS, REVIEW_ENGIN, EMAIL_TIMER, AUTO_PLAY_VIDEO } from \"../../../utils/Routes\";\r\nimport RequestHandler from \"../../../actions/RequestHandler\";\r\nimport { CHECK_CAMPAIGNS_NAME } from \"../../../actions/URLs\";\r\nimport { CampaignNameInput } from \"../../comman/Popup\";\r\nimport { CreateItem } from \"../../layout/ToolLayout\";\r\nexport default class BonusCreate extends Component {\r\n  createItems = [\r\n    /* {\r\n      diaplayName: \"Bonus Page Generate\",\r\n      classnm: \"\",\r\n      img: \"asset/bonus.png\",\r\n      classnm2: \"react-item1\",\r\n      desc: \"\",\r\n      color: \"#6799e8\",\r\n      height: \"237px\",\r\n      routeName: 1,\r\n      URL: BONUS,\r\n      byPass: true,\r\n    }, */\r\n    {\r\n      diaplayName: \"Review Engine\",\r\n      classnm: \"\",\r\n      img: \"asset/bonus.png\",\r\n      classnm2: \"react-item2\",\r\n      desc: \"\",\r\n      color: \"#aa71a9\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: REVIEW_ENGIN,\r\n    },\r\n    {\r\n      diaplayName: \"Email Timer\",\r\n      classnm: \"\",\r\n      img: \"asset/bonus.png\",\r\n      classnm2: \"react-item3\",\r\n      desc: \"\",\r\n      color: \"#6799e8\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: EMAIL_TIMER,\r\n      byPass: true,\r\n    },\r\n    /* {\r\n      diaplayName: \"Mail Builder\",\r\n      classnm: \"\",\r\n      img: \"asset/bonus.png\",\r\n      classnm2: \"react-item4\",\r\n      desc: \"\",\r\n      color: \"#b26a4f\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      params: 1,\r\n      isOpenAble: \"https://spiety.com/emailBuilder/\",\r\n    }, */\r\n    {\r\n      diaplayName: \"Page Builder\",\r\n      classnm: \"\",\r\n      img: \"asset/bonus.png\",\r\n      classnm2: \"react-item5\",\r\n      desc: \"\",\r\n      color: \"#b26a4f\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      params: 1,\r\n      isOpenAble: \"https://spiety.com/emailBuilder/\",\r\n    },\r\n    {\r\n      diaplayName: \"Special Bonus\",\r\n      classnm: \"\",\r\n      img: \"asset/bonus.png\",\r\n      classnm2: \"react-item6\",\r\n      desc: \"\",\r\n      color: \"#f7ae98\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      params: 1,\r\n      isOpenAble: \"https://docs.google.com/document/d/1VskBKyrJQt1PSqzhJ4AJG73j1AyejeoSSB2L5HKTY-U/edit?usp=sharing\",\r\n    },\r\n    {\r\n      diaplayName: \"Autoplay Video\",\r\n      classnm: \"\",\r\n      img: \"asset/bonus.png\",\r\n      classnm2: \"react-item4\",\r\n      desc: \"\",\r\n      color: \"#6799e8\",\r\n      height: \"237px\",\r\n      routeName: 24,\r\n      params: 1,\r\n      URL: AUTO_PLAY_VIDEO\r\n    },\r\n  ];\r\n\r\n  state = {\r\n    openPopup: false,\r\n    CAMPAIGNS_NAME: \"\",\r\n    allowedTool: [],\r\n    access: 0,\r\n  };\r\n\r\n  URL = \"\";\r\n  openTool = (url, byPass, params, ie, isOpenAble) => {\r\n    if (isOpenAble) {\r\n      window.open(isOpenAble, \"_blank\");\r\n      return;\r\n    }\r\n    this.URL = url;\r\n    if (params) window.gs.defaultLayout = params;\r\n    if (byPass) {\r\n      Util.CAMPAIGNS_NAME = \"_\";\r\n      this.props.history.push(this.URL);\r\n    } else {\r\n      this.setState({ openPopup: true });\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.accessedTools();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.gs.navTitle(\"Bonus\");\r\n  }\r\n\r\n  accessedTools = () => {\r\n    getToolsPermission((permission, err) => {\r\n      if (permission) {\r\n        this.setState({ allowedTool: permission.tools, access: permission.access });\r\n      }\r\n    });\r\n  };\r\n\r\n  renderCreateElements = (item, index) => {\r\n    const items = { ...item, isLock: true };\r\n    const { allowedTool, access } = this.state;\r\n    if (access > 80) {\r\n      items.isLock = false;\r\n    } else {\r\n      if (allowedTool.length) {\r\n        const isLock = _.findIndex(allowedTool, function (o) {\r\n          return o === item.routeName;\r\n        });\r\n        if (isLock !== -1) items.isLock = false;\r\n      }\r\n    }\r\n\r\n    Object.assign(items, { openTool: this.openTool });\r\n    return <CreateItem key={index} openTool {...items} />;\r\n  };\r\n  onChangeCampaign = (e) => {\r\n    this.setState({ CAMPAIGNS_NAME: e.target.value });\r\n    Util.CAMPAIGNS_NAME = e.target.value;\r\n  };\r\n\r\n  closePopUp = () => {\r\n    this.setState({ openPopup: false, success: false, CAMPAIGNS_NAME: \"\" });\r\n  };\r\n\r\n  onNextButtonClick = (camp) => {\r\n    this.state.CAMPAIGNS_NAME = camp;\r\n    Util.CAMPAIGNS_NAME = camp;\r\n    RequestHandler.PostRequest(CHECK_CAMPAIGNS_NAME, { toolData: { toolName: this.state.CAMPAIGNS_NAME } }, (res, err) => {\r\n      if (res) {\r\n        if (res.data.success) {\r\n          this.props.history.push(this.URL);\r\n        } else {\r\n          window.gs.toast(res.data.message, { position: \"bottom-right\", autoClose: false, type: window.gs.toast.TYPE.ERROR });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { openPopup, CAMPAIGNS_NAME } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <CampaignNameInput visible={openPopup} Close={this.closePopUp} submit={this.onNextButtonClick} />\r\n          <div className=\"col\">\r\n            <div className=\"row mt3 mb-3\">{this.createItems.map(this.renderCreateElements)}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Bonus/EmailTimer.js",["1133","1134","1135","1136","1137"],"import React, { Component } from \"react\";\r\nimport { ToolLayout, ButtonsGroup } from \"../../layout/ToolLayout\";\r\nimport Datetime from \"react-datetime\";\r\nimport moment from \"moment\";\r\nimport { ReponsiveImage } from \"../../comman/PreviewAble\";\r\nimport Style from \"../../subpages/create/Style\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { BONUS_CREATE } from \"../../../utils/Routes\";\r\n\r\nexport default class EmailTimer extends Component {\r\n  state = {\r\n    date: new Date(),\r\n    color: \"\",\r\n    size: 20,\r\n    preview: true,\r\n  };\r\n  componentDidMount() {\r\n    window.gs.navTitle(\"Email Timer\");\r\n  }\r\n  onDropDownChange2 = (value) => {\r\n    const newValu = value.format(\"YYYY-MM-DD HH:mm:ss\");\r\n    this.setState({ date: newValu });\r\n  };\r\n  onColorChange = (color) => {\r\n    this.setState({ color: color.rgb });\r\n  };\r\n  changeFont = (e) => {\r\n    this.setState({ size: e.target.value});\r\n  };\r\n\r\n  renderMain = () => {\r\n    const { date, color, size } = this.state;\r\n    let inputProps = {\r\n      placeholder: \"Select Date & Time\",\r\n      autoComplete: \"off\",\r\n      readOnly: true\r\n    };\r\n\r\n    return (\r\n      <div className=\"\">\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Time*</div>\r\n          <Datetime inputProps={inputProps} defaultValue={moment(date)} onChange={this.onDropDownChange2} />\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Font Size*</div>\r\n          <input type=\"number\" name=\"cpCode\" className=\"form-control\" value={size} onChange={this.changeFont} />\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Font Color*</div>\r\n          <SketchPicker defaultValue=\"#452135\" color={color} onChangeComplete={this.onColorChange} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onClickSave = () => {\r\n    let script = \"\";\r\n    const { date, color, size } = this.state;\r\n    let newColor = `${color.r},${color.g},${color.b}`;\r\n    let newtime = (date == \"\") ? date.replace(\" \", \"+\") : moment(date).format(\"YYYY-MM-DD HH:mm:ss\").replace(\" \", \"+\");\r\n    let url = `https://spiety.com/emailTimer/gif.php?time=${newtime}&width=640&height=110&boxColor=8B2860&font=BebasNeue&fontColor=${newColor}&fontSize=${size}&xOffset=155&yOffset=70&labelOffsets=1.4,5,8,11`;\r\n    script = \"<img src='\" + url + \"' />\";\r\n    window.gs.setScript(script, true);\r\n  };\r\n\r\n  togglePreview = () => {\r\n    this.setState({ preview: !this.state.preview }, () => {\r\n      setTimeout(() => {\r\n        this.setState({ preview: !this.state.preview });\r\n      }, 1000);\r\n    });\r\n  };\r\n\r\n  renderRight = () => {\r\n    const { date, color, size, preview } = this.state;\r\n    if (!preview) return \"\";\r\n    let newColor = color !==\"\" ? `${color.r},${color.g},${color.b}`: `0,0,0` ;\r\n    let newtime = (date == \"\") ? date.replace(\" \", \"+\") : moment(date).format(\"YYYY-MM-DD HH:mm:ss\").replace(\" \", \"+\");\r\n    let url = `https://spiety.com/emailTimer/gif.php?time=${newtime}&width=640&height=110&boxColor=8B2860&font=BebasNeue&fontColor=${newColor}&fontSize=${size || 20}&xOffset=155&yOffset=70&labelOffsets=1.4,5,8,11`;\r\n    return <img style={{ height: \"auto\", width: \"100%\", paddingTop: \"51px\" }} src={url} />;\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(BONUS_CREATE);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ToolLayout>\r\n        <div className=\"row\">\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\r\n              {/* <ButtonsGroup backUrl={this.back} preview={this.togglePreview} save={this.onClickSave} /> */}\r\n              <ButtonsGroup backUrl={this.back} save={this.onClickSave} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">{/* <SideBar layout={this.state.toolData.layout} activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} /> */}</div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/VipBonus/VipBonus.js",["1138","1139"],"import React, { Component } from \"react\";\r\nimport Util from \"../../Util\";\r\nimport { getToolsPermission } from \"../../../utils/ToolUtil\";\r\nimport _ from \"lodash\";\r\nimport \"../../comman/Popup.css\";\r\nimport { VIP_BONUS_VIEW, SPECIAL_OPTIN_FORM } from \"../../../utils/Routes\";\r\nimport RequestHandler from \"../../../actions/RequestHandler\";\r\nimport { CHECK_CAMPAIGNS_NAME } from \"../../../actions/URLs\";\r\nimport { CampaignNameInput } from \"../../comman/Popup\";\r\nimport { CreateItem } from \"../../layout/ToolLayout\";\r\nexport default class VipBonus extends Component {\r\n  createItems = [\r\n    {\r\n      diaplayName: \"Template Club (HELLO BAR)\",\r\n      classnm: \"\",\r\n      img: \"asset/bonus.png\",\r\n      classnm2: \"react-item2\",\r\n      desc: \"Welcome your customers to your site with stylized and dynamic hellobar\",\r\n      color: \"#aa71a9\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: VIP_BONUS_VIEW,\r\n      params: 0,\r\n    },\r\n    {\r\n      diaplayName: \"Template Club (HELLO BAR + TIMER)\",\r\n      classnm: \"\",\r\n      img: \"asset/bonus.png\",\r\n      classnm2: \"react-item3\",\r\n      desc: \"You can create FOMO from hellobar too\",\r\n      color: \"#b26a4f\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: VIP_BONUS_VIEW,\r\n      params: 1,\r\n    },\r\n    {\r\n      diaplayName: \"Template Club (EXIT INTENT)\",\r\n      classnm: \"\",\r\n      classnm2: \"react-item4\",\r\n      img: \"asset/bonus.png\",\r\n      desc: \"A pop which appears as soon as the customers tries to move out the window\",\r\n      color: \"#ed6368\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: VIP_BONUS_VIEW,\r\n      params: 2,\r\n    },\r\n    {\r\n      diaplayName: \"Optin Form (Hello Bar)\",\r\n      classnm: \"\",\r\n      classnm2: \"react-item4\",\r\n      img: \"asset/bonus.png\",\r\n      desc: \"A pop which appears as soon as the customers tries to move out the window\",\r\n      color: \"#ed6368\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: SPECIAL_OPTIN_FORM,\r\n      params: 0,\r\n    },\r\n    {\r\n      diaplayName: \"Optin Form (Exit intent)\",\r\n      classnm: \"\",\r\n      classnm2: \"react-item4\",\r\n      img: \"asset/bonus.png\",\r\n      desc: \"A pop which appears as soon as the customers tries to move out the window\",\r\n      color: \"#ed6368\",\r\n      height: \"237px\",\r\n      routeName: 2,\r\n      URL: SPECIAL_OPTIN_FORM,\r\n      params: 2,\r\n    },\r\n  ];\r\n\r\n  state = {\r\n    openPopup: false,\r\n    CAMPAIGNS_NAME: \"\",\r\n    allowedTool: [],\r\n    access: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gs.navTitle(\"Vip Bonus\");\r\n  }\r\n\r\n  URL = \"\";\r\n  openTool = (url, byPass, params, ie) => {\r\n    this.URL = url;\r\n    window.gs.toolId = 22;\r\n    if (params) window.gs.defaultLayout = params;\r\n    if (byPass) {\r\n      Util.CAMPAIGNS_NAME = \"_\";\r\n      this.props.history.push(this.URL);\r\n    } else {\r\n      this.setState({ openPopup: true });\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.accessedTools();\r\n  }\r\n\r\n  accessedTools = () => {\r\n    getToolsPermission((permission, err) => {\r\n      if (permission) {\r\n        this.setState({ allowedTool: permission.tools, access: permission.access });\r\n      }\r\n    });\r\n  };\r\n\r\n  renderCreateElements = (item, index) => {\r\n    const items = { ...item, isLock: true };\r\n    const { allowedTool, access } = this.state;\r\n    if (access > 80) {\r\n      items.isLock = false;\r\n    } else {\r\n      if (allowedTool.length) {\r\n        const isLock = _.findIndex(allowedTool, function (o) {\r\n          return o === item.routeName;\r\n        });\r\n        if (isLock !== -1) items.isLock = false;\r\n      }\r\n    }\r\n\r\n    Object.assign(items, { openTool: this.openTool });\r\n    return <CreateItem key={index} openTool {...items} />;\r\n  };\r\n  onChangeCampaign = (e) => {\r\n    this.setState({ CAMPAIGNS_NAME: e.target.value });\r\n    Util.CAMPAIGNS_NAME = e.target.value;\r\n  };\r\n\r\n  closePopUp = () => {\r\n    this.setState({ openPopup: false, success: false, CAMPAIGNS_NAME: \"\" });\r\n  };\r\n\r\n  onNextButtonClick = (camp) => {\r\n    this.state.CAMPAIGNS_NAME = camp;\r\n    Util.CAMPAIGNS_NAME = camp;\r\n    RequestHandler.PostRequest(CHECK_CAMPAIGNS_NAME, { toolData: { toolName: this.state.CAMPAIGNS_NAME } }, (res, err) => {\r\n      if (res) {\r\n        if (res.data.success) {\r\n          this.props.history.push(this.URL);\r\n        } else {\r\n          window.gs.toast(res.data.message, { position: \"bottom-right\", autoClose: false, type: window.gs.toast.TYPE.ERROR });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { openPopup, CAMPAIGNS_NAME } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <CampaignNameInput visible={openPopup} Close={this.closePopUp} submit={this.onNextButtonClick} />\r\n          <div className=\"col\">\r\n            <div className=\"row mt3 mb-3\">{this.createItems.map(this.renderCreateElements)}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/AutoResponderConfig.js",["1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152"],"import React, { PureComponent, useState } from \"react\";\r\nimport { Input, Avatar, Modal } from \"antd\";\r\nimport DropDown from \"./DropDown\";\r\nimport RequestHandler from \"../../actions/RequestHandler\";\r\nimport ToolUtil, { getToolsPermission } from \"../../utils/ToolUtil\";\r\nimport { CampaignNameInput, LockTool } from \"../comman/Popup\";\r\nimport { \r\n  AUTO_RESPONDER,\r\n  GET_AUTO_RESPONDER,\r\n  BASE_URL,\r\n  AUTHORIZATION,\r\n  AWEBERAUTHORIZATION,\r\n  CONSTANTCONTACTAUTH,\r\n  AUTORESPONDER_AUTHORIZE,\r\n  ADD_CUSTOME_AR,\r\n  EDIT_CUSTOME_AR,\r\n  DELETE_CUSTOME_AR,\r\n  DISCONNECT_AR\r\n} from \"../../actions/URLs\";\r\nimport axios from \"axios\";\r\nimport { Storage } from \"../../utils/Storage\";\r\n\r\nexport default class AutoResponderConfig extends PureComponent {\r\n  state = {\r\n    mailServer: \"MAILCHIMP\",\r\n    showdata:false,\r\n    displayData:[],\r\n    mailData: {},\r\n    responderPopup:false,\r\n    formId:0,\r\n    connectedAR: {},\r\n    auto_data : [\r\n      {\r\n        id : 1,\r\n        name : 'Mailchimp',\r\n        serverName : 'MAILCHIMP',\r\n        icon : '/asset/auto/mailchimp.png',\r\n        stateName : \"mailChimp\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 2,\r\n        name : 'Active Campaign',\r\n        serverName : 'ACTIVE_CAMPAIGN',\r\n        icon : '/asset/auto/activecampaign.png',\r\n        stateName : \"activeCampaign\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 3,\r\n        name : 'Aweber',\r\n        serverName : 'AWEBER',\r\n        icon : '/asset/auto/aweber.png',\r\n        stateName : \"aweber\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 4,\r\n        name : 'Constant Contact',\r\n        serverName : 'CONSTANT_CONTACT',\r\n        icon : 'asset/auto/constant_contact.png',\r\n        stateName : \"constantContact\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 5,\r\n        name : 'Convert Kit',\r\n        serverName : 'CONVERT_KIT',\r\n        icon : 'asset/auto/convertkit.png',\r\n        stateName : \"convertKit\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 6,\r\n        name : 'Infusion Soft',\r\n        serverName : 'INFUSION_SOFT',\r\n        icon : 'asset/auto/infusionsoft.png',\r\n        stateName : \"infusionSoft\",\r\n        active: false\r\n      },\r\n      \r\n      {\r\n        id : 7,\r\n        name : 'Sendiio',\r\n        serverName : 'SENDIIO',\r\n        icon : 'asset/auto/sendiio.png',\r\n        stateName : \"sendiio\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 8,\r\n        name : 'Mailvio',\r\n        serverName : 'MAILVIO',\r\n        icon : 'asset/auto/mailvio.png',\r\n        stateName : \"mailVio\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 9,\r\n        name : 'Getresponse',\r\n        serverName : 'GETRESPONSE',\r\n        icon : 'asset/auto/getresponse.png',\r\n        stateName : \"getResponse\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 10,\r\n        name : 'Sendlane',\r\n        serverName : 'SENDLANE',\r\n        icon : 'asset/auto/sendlane.png',\r\n        stateName : \"sendlane\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 11,\r\n        name : 'Custom',\r\n        serverName : 'CUSTOM',\r\n        icon : 'asset/auto/custom_html.png',\r\n        stateName : \"custom\",\r\n        active: false\r\n      }\r\n    ],\r\n    mailChimp : {\r\n      apikey: \"\"\r\n    },\r\n    activeCampaign : {\r\n      url: \"\",\r\n      apikey: \"\"\r\n    },\r\n    aweber : {\r\n      clientId: \"\",\r\n      clientSecret: \"\"\r\n    },\r\n    constantContact : {\r\n      clientId: \"\",\r\n      clientSecret: \"\"\r\n    },\r\n    convertKit : {\r\n      apikey: \"\",\r\n      apiSecret: \"\"\r\n    },\r\n    infusionSoft : {\r\n      clientId: \"\",\r\n      clientSecret: \"\"\r\n    },\r\n    sendiio : {\r\n      apiToken: \"\",\r\n      apiSecret: \"\"\r\n    },\r\n    mailVio : {\r\n      apikey: \"\"\r\n    },\r\n    getResponse : {\r\n      apikey: \"\"\r\n    },\r\n    sendlane : {\r\n      apikey: \"\",\r\n      apiUrl: \"\",\r\n      hashkey: \"\"\r\n    },\r\n  };\r\n\r\n  handleResponderPopup(id, serverName){\r\n    this.setState({\r\n      responderPopup:true,\r\n      formId:id,\r\n      mailServer:serverName\r\n    })\r\n  }\r\n  componentDidMount() {\r\n    window.gs.navTitle(\"Setup Auto-Responder\");\r\n    setTimeout( () => {\r\n      if (ToolUtil.autoResponder) {\r\n        this.setState({ mailServer: ToolUtil.autoResponder.mailServer, mailData: ToolUtil.autoResponder });\r\n        this.getDefaultResponderData();\r\n      }\r\n    }, 500);\r\n  }\r\n\r\n  getDefaultResponderData = () => {\r\n    RequestHandler.PostRequest(GET_AUTO_RESPONDER, {} ,async (res, err) => {\r\n      if(res) {\r\n        let auto_data = this.state.auto_data, autoresponderData = res.data.autoResponder, newFormData = res.data.displayData;\r\n        let displayData = this.state.displayData;\r\n        if(autoresponderData.length> 0) {\r\n          for(let i=0; i<auto_data.length; i++) {\r\n            for(let j=0; j<autoresponderData.length; j++) {\r\n              if(auto_data[i].serverName === autoresponderData[j].mailServer) {\r\n                this.setState({\r\n                  ...this.state, \r\n                  [auto_data[i].stateName] : autoresponderData[j]\r\n                });\r\n                if(Object.keys(autoresponderData[j]).length>1) {\r\n                  auto_data[i].active = true;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          let ar = [];\r\n          auto_data.map( ad => {\r\n            ad.active = false;\r\n            ar.push(ad);\r\n          });\r\n          this.setState({auto_data: ar});\r\n        }\r\n        if(newFormData.length>0) {\r\n          auto_data[auto_data.length-1].active = true;\r\n          for(let nf of newFormData) {\r\n            let formData = `<div class=\"cz_responder_form\" data-label=\"${nf._id}\">\r\n              <div class=\"form-elements\">\r\n                <label>Form Name*</label>\r\n                <input class=\"cz_custom_input\" type=\"text\" placeholder=\"Enter name\" name=\"formName\" value=\"${nf.name}\"/>\r\n              </div>\r\n              <div class=\"form-elements\">\r\n                <label>Enter your custom HTML form below and click on submit.</label>\r\n                <textarea class=\"customhtml_code form-control\" name=\"formData\">${JSON.parse(nf.formData)}</textarea>\r\n              </div>\r\n              <div class=\"cz_responder_btns\">\r\n                <span class=\"cz_btn cz_light_btn remove_form\">Remove</span>\r\n                <button class=\"cz_btn cz_orange_btn submit_form\" type=\"button\">Submit</button>\r\n              </div>\r\n            </div>`;\r\n\r\n            displayData.push(formData);\r\n          }\r\n        }\r\n        this.setState(auto_data, () => {console.log(this.state.auto_data)});\r\n        this.setState(displayData, () => {})\r\n      }\r\n    });\r\n  }\r\n\r\n  onMailServerChange = (value) => {\r\n    this.setState({ mailServer: value });\r\n  };\r\n\r\n  onSave = (data) => {\r\n    const { mailServer } = this.state;\r\n    if(mailServer === \"CONSTANT_CONTACT\" ){\r\n      this.authorizeConstantContact(data, mailServer);\r\n    } else if(mailServer === \"AWEBER\" ) {\r\n      this.authorizeAweber(data, mailServer);\r\n    } else if(mailServer === \"INFUSION_SOFT\" ) {\r\n      this.authorizeInfusionSoft(data, mailServer);\r\n    }else {\r\n      this.setState({ mailData: { mailServer, ...data } }, () => {\r\n        this.onInstall();\r\n      });\r\n    }\r\n  };\r\n\r\n  onInstall = () => {\r\n    const { mailData } = this.state;\r\n    RequestHandler.PostRequest(AUTO_RESPONDER, { userData: { ...mailData } }, (res, err) => {\r\n      if (res) {\r\n        if (res.data.success) {\r\n          ToolUtil.autoResponder = mailData;\r\n          window.gs.success(true, res.data.message);\r\n          this.setState({responderPopup:false});\r\n          this.getDefaultResponderData();\r\n        } else {\r\n          window.gs.success(false, res.data.message);\r\n        }\r\n      } else {\r\n        window.gs.success(false, \"Something Went Wrong\");\r\n      }\r\n    });\r\n  };\r\n\r\n  authorizeInfusionSoft = (data, mailServer) => {\r\n    const { infusionSoft } = this.state;\r\n\r\n    let popupwin;\r\n    this.setState({ mailData: { mailServer, ...data } }, () => {\r\n      this.onInstall();\r\n    });\r\n    setTimeout( () => {\r\n      let params = new URLSearchParams({\r\n        \"scope\": \"full\",\r\n        \"response_type\": \"code\",\r\n        \"client_id\": infusionSoft.clientId,\r\n        \"client_secret\": infusionSoft.clientSecret,\r\n        \"redirect_uri\": BASE_URL+AUTHORIZATION\r\n      })\r\n      let query = params.toString();\r\n      let Url = `https://signin.infusionsoft.com/app/oauth/authorize?${query}`;\r\n      popupwin = window.open(Url, '_blank', 'location=yes,height=570,width=520,scrollbars=yes,status=yes');\r\n      \r\n      setTimeout( () => {\r\n        this.setState({ mailData: { mailServer, ...data } }, () => {\r\n          this.onInstall();\r\n        });\r\n      }, 10000);\r\n    }, 1000);\r\n  }\r\n\r\n  authorizeConstantContact = (data, mailServer) => {\r\n    let params = new URLSearchParams({\r\n      client_id : data.clientId,\r\n      redirect_uri: BASE_URL+CONSTANTCONTACTAUTH,\r\n      response_type: \"code\",\r\n      scope: \"contact_data+campaign_data+account_read+account_update\"\r\n    })\r\n\r\n    let query = params.toString();\r\n\r\n    let url = `https://api.cc.email/v3/idfed?${query}`;\r\n\r\n    this.authorizeAutoResponder(data, mailServer, url);\r\n  }\r\n  \r\n  authorizeAutoResponder = (data, mailServer, url) => {\r\n    let postData = data;\r\n    let popupwin;\r\n \r\n    postData[\"mailServer\"] = mailServer;\r\n\r\n    RequestHandler.PostRequest(AUTORESPONDER_AUTHORIZE, postData, (res,err) => {\r\n      if (res.data.status) {\r\n        popupwin = window.open(url, '_blank', 'location=yes,height=570,width=720,scrollbars=yes,status=yes');\r\n        setTimeout( () => {\r\n          this.setState({ mailData: { mailServer, ...data } }, () => {\r\n            this.onInstall();\r\n          });\r\n        }, 10000)\r\n      } else {\r\n        window.gs.success(false, \"Something Went Wrong\");\r\n      }\r\n    });\r\n  }\r\n\r\n  authorizeAweber = (data,mailServer) => {\r\n    const { aweber } = this.state;\r\n    let popupwin;\r\n \r\n    let postData = {\r\n      \"clientId\" : aweber.clientId,\r\n      \"clientSecret\" : aweber.clientSecret, \r\n      \"mailServer\" : mailServer\r\n    }\r\n\r\n    RequestHandler.PostRequest(AWEBERAUTHORIZATION, postData, (res,err) => {\r\n      if (res.data.status) {\r\n        popupwin = window.open(res.data.url, '_blank', 'location=yes,height=570,width=520,scrollbars=yes,status=yes');\r\n        let _this = this;\r\n        var popupTick = setInterval(function() {\r\n          if (popupwin.closed) {\r\n              clearInterval(popupTick);\r\n              console.log('window closed!');\r\n              setTimeout(() => {\r\n                _this.setState({ formId: 0, responderPopup:false });\r\n                _this.getDefaultResponderData();\r\n              }, 200);\r\n          }\r\n        }, 500);\r\n      } else {\r\n        window.gs.success(false, \"Something Went Wrong\");\r\n      }\r\n    })\r\n  }\r\n\r\n  appendData = (e) => {\r\n    let formData = `<div class=\"cz_responder_form\">\r\n      <div class=\"form-elements\">\r\n        <label>Form Name*</label>\r\n        <input class=\"cz_custom_input\" type=\"text\" placeholder=\"Enter name\" name=\"formName\" />\r\n      </div>\r\n      <div class=\"form-elements\">\r\n        <label>Enter your custom HTML form below and click on submit.</label>\r\n        <textarea class=\"customhtml_code form-control\" name=\"formData\"></textarea>\r\n      </div>\r\n      <div class=\"cz_responder_btns\">\r\n        <span class=\"cz_btn cz_light_btn remove_form\">Remove</span>\r\n        <button class=\"cz_btn cz_orange_btn submit_form\" type=\"button\">Submit</button>\r\n      </div>\r\n    </div>`;\r\n\r\n    this.state.displayData.push(formData);\r\n    this.setState(this.state.displayData, () => {});\r\n  }\r\n\r\n  onFormSubmit = (target) => {\r\n    let parentElem = target.parentNode.parentNode;\r\n    let id = parentElem.getAttribute(\"data-label\");\r\n    let element = parentElem.children;\r\n    let formName = element[0].getElementsByTagName(\"input\")[0].value;\r\n    let formData = element[1].getElementsByTagName(\"textarea\")[0].value;\r\n    let URL = ADD_CUSTOME_AR;\r\n    let postData = {\r\n      \"name\" : formName,\r\n      \"formData\" : JSON.stringify(formData)\r\n    }\r\n\r\n    if(id) {\r\n      URL = EDIT_CUSTOME_AR;\r\n      postData[\"id\"] = id;\r\n    }\r\n    RequestHandler.PostRequest(URL, postData, (res, err) => {\r\n      if (res.data.success) {\r\n        this.setState({responderPopup:false, displayData: []}, () => {});\r\n        setTimeout(() => {\r\n          this.getDefaultResponderData();\r\n          window.gs.success(true, res.data.message);\r\n        },100);\r\n      } else {\r\n        window.gs.success(false, res.data.message);\r\n      }\r\n    })\r\n  }\r\n\r\n  detectFunction = (e) => {\r\n    if(e.target.classList.contains(\"remove_form\")) {\r\n      this.removeForm(e.target);\r\n    } else if(e.target.classList.contains(\"submit_form\")) {\r\n      this.onFormSubmit(e.target);\r\n    }\r\n  }\r\n\r\n  removeForm = (target) => {\r\n    let parentElem = target.parentNode.parentNode;\r\n    let id = parentElem.getAttribute(\"data-label\");\r\n    Modal.confirm({\r\n      title: \"Confirm\",\r\n      content: \"Are you Sure you want to delete this form ?\",\r\n      okText: \"Remove\",\r\n      onOk: () => {\r\n        if(id) {\r\n          RequestHandler.PostRequest(DELETE_CUSTOME_AR, { userData: { id } }, (res, err) => {\r\n            if (res) {\r\n              const { data } = res;\r\n              if (data.success) {\r\n                window.gs.success(true, data.message);\r\n                this.setState({responderPopup:false, displayData: []}, () => {});\r\n                setTimeout(() => {\r\n                  this.getDefaultResponderData();\r\n                },100);\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          parentElem.remove();\r\n        }\r\n      },\r\n      cancelText: \"Cancel\",\r\n    });\r\n  }\r\n\r\n  disconnectAr = (userData) => {\r\n    Modal.confirm({\r\n      title: \"Confirm\",\r\n      content: \"Are you Sure you want to disconnect ?\",\r\n      okText: \"Disconnect\",\r\n      onOk: () => {\r\n        RequestHandler.PostRequest(DISCONNECT_AR, { userData }, (res, err) => {\r\n          if (res) {\r\n            const { data } = res;\r\n            if (data.success) {\r\n              window.gs.success(true, data.message);\r\n              this.setState({responderPopup:false}, () => {});\r\n              let ar = [];\r\n              this.state.auto_data.map( ad => {\r\n                if(ad.serverName === userData.mailServer) {\r\n                  ad.active = false;\r\n                }\r\n                ar.push(ad);\r\n              });\r\n              this.setState({auto_data: ar});\r\n              setTimeout(() => {\r\n                this.getDefaultResponderData();\r\n              }, 300);\r\n            }\r\n          }\r\n        });\r\n      },\r\n      cancelText: \"Cancel\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { mailChimp, activeCampaign, aweber, constantContact, convertKit, infusionSoft, sendiio, mailVio, getResponse, sendlane, displayData } = this.state;\r\n    return (\r\n      <div className=\"cz_auto_responder_wrapper\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 col-sm-12\">\r\n            <div className=\"cz_responder_box\">\r\n              {this.state.auto_data.map((item, index) =>{\r\n                return (\r\n                  <div className={\"cz_responders\".concat(item.active ? \" active\" : \"\")} key={index} onClick={()=>{\r\n                    this.handleResponderPopup(item.id, item.serverName);\r\n                  }}>\r\n                    <i className=\"fa fa-check-circle\"></i>\r\n                    <img src={item.icon} alt={item.name} /> \r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* autoresponder popup  */}\r\n        <div className={this.state.responderPopup === true ? 'cz_autoresponder_popup active' : 'cz_autoresponder_popup'}>\r\n            <div className=\"cz_popup_close\" onClick={()=>this.setState({responderPopup:false})}></div>\r\n            <div className=\"cz_popup_box\">\r\n              {this.state.formId === 1 ? \r\n                <form>\r\n                  <h2>Mailchimp</h2>\r\n                  <div className=\"cz_responder_form\">\r\n                    <div className=\"form-elements\">\r\n                      <label>Api Key*</label>\r\n                      <input \r\n                        className=\"cz_custom_input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Enter api Key\" \r\n                        value={mailChimp.apikey} \r\n                        onChange={(e)=>  this.setState({mailChimp : {...mailChimp, apikey :e.target.value}})}\r\n                      />\r\n                    </div>\r\n                    <div className=\"cz_responder_btns\">\r\n                      <span className=\"cz_btn cz_light_btn\" onClick={()=>this.setState({responderPopup:false})}>Cancel</span>\r\n                      { !mailChimp.isValidate ?\r\n                      <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                        // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                        this.onSave(mailChimp)}}\r\n                      >Submit</button> :\r\n                      <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                        // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                        this.disconnectAr(mailChimp)}}\r\n                      >Disconnect</button>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </form> \r\n              : null}\r\n\r\n              {this.state.formId === 2 ? \r\n                <form>\r\n                  <h2>Active Campaign</h2>\r\n                  <div className=\"cz_responder_form\">\r\n                    <div className=\"form-elements\">\r\n                      <label>API Access URL*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter api Access url\" value={activeCampaign.url} \r\n                        onChange={(e)=> this.setState({activeCampaign : {...activeCampaign, url :e.target.value}})}/>\r\n                    </div>\r\n                    <div className=\"form-elements\">\r\n                      <label>API Access Key*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter api Access Key\" value={activeCampaign.apikey} \r\n                        onChange={(e)=> this.setState({activeCampaign : {...activeCampaign, apikey :e.target.value}})}/>\r\n                    </div>\r\n                    <div className=\"cz_responder_btns\">\r\n                      <span className=\"cz_btn cz_light_btn\" onClick={()=>this.setState({responderPopup:false})}>Cancel</span>\r\n                      { !activeCampaign.isValidate ?\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                        // this.setState({ mailServer : \"ACTIVE_CAMPAIGN\"});\r\n                        this.onSave(activeCampaign)\r\n                        }}>Submit</button> :\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                          this.disconnectAr(activeCampaign)}}\r\n                        >Disconnect</button>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </form> \r\n              : null}\r\n\r\n              {this.state.formId === 3 ? \r\n                <form>\r\n                  <h2>Aweber</h2>\r\n                  <div className=\"cz_responder_form\">\r\n                    <div className=\"form-elements\">\r\n                      <label>Client ID*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter Client id\" value={aweber.clientId} \r\n                        onChange={(e)=> this.setState({aweber : {...aweber, clientId :e.target.value}})}/>\r\n                    </div>\r\n                    <div className=\"form-elements\">\r\n                      <label>Client Secret*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter Client Secret\" value={aweber.clientSecret} \r\n                        onChange={(e)=> this.setState({aweber : {...aweber, clientSecret :e.target.value}})}/>\r\n                    </div>\r\n                    <div className=\"cz_responder_btns\">\r\n                      <span className=\"cz_btn cz_light_btn\" onClick={()=>this.setState({responderPopup:false})}>Cancel</span>\r\n                    { !aweber.isValidate ?\r\n                      <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                        // this.setState({ mailServer : \"AWEBER\"});\r\n                        this.onSave(aweber)\r\n                      }}>Submit</button>:\r\n                      <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                        // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                        this.disconnectAr(aweber)}}\r\n                      >Disconnect</button>\r\n                    }\r\n                    </div>\r\n                    {/* <a href=\"https://auth.aweber.com/1.0/oauth/authorize_app/b2d4f695\">Click Here</a> to get the code. */}\r\n                  </div>\r\n                </form> \r\n              : null}\r\n              {this.state.formId === 4 ? \r\n                <form>\r\n                  <h2>Constant Contact</h2>\r\n                  <div className=\"cz_responder_form\">\r\n                    <div className=\"form-elements\">\r\n                      <label>clientId*</label>\r\n                      <input \r\n                        className=\"cz_custom_input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Enter clientId\" \r\n                        autoComplete=\"Off\"\r\n                        value={constantContact.clientId} \r\n                        onChange={(e) => this.setState({constantContact : {...constantContact, clientId :e.target.value}})}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-elements\">\r\n                      <label>Client Secret*</label>\r\n                      <input \r\n                        className=\"cz_custom_input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Enter Client Secret\" \r\n                        autoComplete=\"Off\"\r\n                        defaultValue={constantContact.username} \r\n                        onChange={(e)=> this.setState({constantContact : {...constantContact, clientSecret :e.target.value}})}\r\n                      />\r\n                    </div>\r\n                    <div className=\"cz_responder_btns\">\r\n                      <span className=\"cz_btn cz_light_btn\" onClick={()=>this.setState({responderPopup:false})}>Cancel</span>\r\n                      { !constantContact.isValidate ?\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                        // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                        this.onSave(constantContact)}}>Submit</button> :\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                          this.disconnectAr(constantContact)}}\r\n                        >Disconnect</button>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </form>  \r\n              : null}\r\n              {this.state.formId === 5 ? \r\n                <form>\r\n                  <h2>Convert Kit</h2>\r\n                  <div className=\"cz_responder_form\">\r\n                    <div className=\"form-elements\">\r\n                      <label>API Key*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter api key\" value={convertKit.apikey} \r\n                        onChange={(e)=> this.setState({convertKit : {...convertKit, apikey :e.target.value}})}/>\r\n                    </div>\r\n                    <div className=\"form-elements\">\r\n                      <label>API Secret*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter api secret\" value={convertKit.apiSecret} \r\n                        onChange={(e)=> this.setState({convertKit : {...convertKit, apiSecret :e.target.value}})}/>\r\n                    </div>\r\n                    \r\n                    <div className=\"cz_responder_btns\">\r\n                      <span className=\"cz_btn cz_light_btn\" onClick={()=>this.setState({responderPopup:false})}>Cancel</span>\r\n                      { !convertKit.isValidate ?\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"ACTIVE_CAMPAIGN\"});\r\n                          this.onSave(convertKit)\r\n                        }}>Submit</button> :\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                          this.disconnectAr(convertKit)}}\r\n                        >Disconnect</button>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </form> \r\n              : null}\r\n              {this.state.formId === 6 ? \r\n                <form>\r\n                  <h2>Infusionsoft</h2>\r\n                  <div className=\"cz_responder_form\">\r\n                    <div className=\"form-elements\">\r\n                      <label>Client Id*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter Client Id\" value={infusionSoft.clientId} \r\n                        onChange={(e)=> this.setState({infusionSoft : { ...infusionSoft, clientId: e.target.value}})}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-elements\">\r\n                      <label>Client Secret*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter Client Secret\" value={infusionSoft.clientSecret} \r\n                        onChange={(e) => this.setState({infusionSoft : { ...infusionSoft, clientSecret: e.target.value}})}/>\r\n                    </div>\r\n                    \r\n                    <div className=\"cz_responder_btns\">\r\n                      <span className=\"cz_btn cz_light_btn\" onClick={()=>this.setState({responderPopup:false})}>Cancel</span>\r\n                      { !infusionSoft.isValidate ?\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"ACTIVE_CAMPAIGN\"});\r\n                          this.onSave(infusionSoft)\r\n                        }}>Submit</button> :\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                          this.disconnectAr(infusionSoft)}}\r\n                        >Disconnect</button>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </form>  \r\n              : null}\r\n              {this.state.formId === 7 ? \r\n                <form>\r\n                  <h2>Sendiio</h2>\r\n                  <div className=\"cz_responder_form\">\r\n                    <div className=\"form-elements\">\r\n                      <label>API Token*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter api token\" value={sendiio.apiToken} \r\n                        onChange={(e)=> this.setState({sendiio : {...sendiio, apiToken :e.target.value}})}/>\r\n                    </div>\r\n                    <div className=\"form-elements\">\r\n                      <label>API Secret*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter api secret\" value={sendiio.apiSecret} \r\n                        onChange={(e)=> this.setState({sendiio : {...sendiio, apiSecret :e.target.value}})}/>\r\n                    </div>\r\n                    <div className=\"cz_responder_btns\">\r\n                      <span className=\"cz_btn cz_light_btn\" onClick={()=>this.setState({responderPopup:false})}>Cancel</span>\r\n                      { !sendiio.isValidate ?\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"ACTIVE_CAMPAIGN\"});\r\n                          this.onSave(sendiio)\r\n                        }}>Submit</button>:\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                          this.disconnectAr(sendiio)}}\r\n                        >Disconnect</button>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </form>  \r\n              : null}\r\n              {this.state.formId === 8 ? \r\n                <form>\r\n                  <h2>Mailvio</h2>\r\n                  <div className=\"cz_responder_form\">\r\n                    <div className=\"form-elements\">\r\n                      <label>API Key*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter api key\" value={mailVio.apikey} \r\n                        onChange={(e)=> this.setState({mailVio : {...mailVio, apikey :e.target.value}})}/>\r\n                    </div>\r\n                    <div className=\"cz_responder_btns\">\r\n                      <span className=\"cz_btn cz_light_btn\" onClick={()=>this.setState({responderPopup:false})}>Cancel</span>\r\n                      { !mailVio.isValidate ?\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"ACTIVE_CAMPAIGN\"});\r\n                          this.onSave(mailVio)\r\n                        }}>Submit</button>:\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                          this.disconnectAr(mailVio)}}\r\n                        >Disconnect</button>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </form>  \r\n              : null}\r\n              {this.state.formId === 9 ? \r\n                <form>\r\n                  <h2>GetResponse</h2>\r\n                  <div className=\"cz_responder_form\">\r\n                    <div className=\"form-elements\">\r\n                      <label>API Key*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter api key\" value={getResponse.apikey} \r\n                        onChange={(e)=> this.setState({getResponse : {...getResponse, apikey :e.target.value}})}/>\r\n                    </div>\r\n                    <div className=\"cz_responder_btns\">\r\n                      <span className=\"cz_btn cz_light_btn\" onClick={()=>this.setState({responderPopup:false})}>Cancel</span>\r\n                      { !getResponse.isValidate ?\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"ACTIVE_CAMPAIGN\"});\r\n                          this.onSave(getResponse)\r\n                        }}>Submit</button>:\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                          this.disconnectAr(getResponse)}}\r\n                        >Disconnect</button>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </form>  \r\n              : null}\r\n              {this.state.formId === 10 ? \r\n                <form>\r\n                  <h2>Sendlane</h2>\r\n                  <div className=\"cz_responder_form\">\r\n                    <div className=\"form-elements\">\r\n                      <label>API Key*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter api key\" value={sendlane.apikey} \r\n                        onChange={(e)=> this.setState({sendlane: {...sendlane, apikey:e.target.value}})}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-elements\">\r\n                      <label>API URL*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"yourapi.sendlane.com\" value={sendlane.apiUrl} \r\n                        onChange={(e)=> this.setState({sendlane: {...sendlane, apiUrl:e.target.value}})}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-elements\">\r\n                      <label>Hash Key*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter hash key\" value={sendlane.hashkey} \r\n                        onChange={(e)=> this.setState({sendlane: {...sendlane, hashkey:e.target.value}})}/>\r\n                    </div>\r\n                    <div className=\"cz_responder_btns\">\r\n                      <span className=\"cz_btn cz_light_btn\" onClick={()=>this.setState({responderPopup:false})}>Cancel</span>\r\n                      { !sendlane.isValidate ?\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"ACTIVE_CAMPAIGN\"});\r\n                          this.onSave(sendlane)\r\n                        }}>Submit</button>:\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                          this.disconnectAr(sendlane)}}\r\n                        >Disconnect</button>\r\n                    }\r\n                    </div>\r\n                  </div>\r\n                </form>  \r\n              : null}\r\n              {this.state.formId === 11 ? \r\n                <>\r\n                <form className=\"cz_custom_responder_form\">\r\n                  <h2 className=\"custom_responder_heading\">Custom Auto Responder </h2>\r\n                  {/* <div className=\"cz_responder_form\">\r\n                    <div className=\"form-elements\">\r\n                      <label>Form Name*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter name\" name=\"formName\" />\r\n                    </div>\r\n                    <div className=\"form-elements\">\r\n                      <label>Enter your custom HTML form below and click on submit.</label>\r\n                      <textarea className=\"customhtml_code form-control\" name=\"formData\"></textarea>\r\n                    </div>\r\n                    <div className=\"cz_responder_btns\">\r\n                      <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={(e) => this.onFormSubmit(e.target)}>Submit</button>\r\n                    </div>\r\n                  </div> */}\r\n                  {displayData.map( (elem, i) => {\r\n                    return (\r\n                      <div onClick={this.detectFunction} dangerouslySetInnerHTML={{ __html: elem }} key={i}></div>\r\n                    )\r\n                  })}\r\n                </form>  \r\n                <div className=\"cz_responder_btns\">\r\n                  <span className=\"cz_btn cz_light_btn\" onClick={()=>this.setState({responderPopup:false})}>Cancel</span>\r\n                  <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={()=> this.appendData()}>Add Form</button>\r\n                </div>\r\n                </>\r\n              : null}\r\n            </div>\r\n        </div>\r\n        {/* autoresponder popup  */}\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ThirdParty/index.js",["1153","1154"],"import React, { Component } from \"react\";\nimport SideBar from \"./SideBar\";\nimport ToolUtil, { generateIframeContant } from \"../../utils/ToolUtil\";\nimport Util, { generateFile } from \"../Util\";\nimport Text from \"./Text\";\nimport { ToolLayout, ButtonsGroup } from \"../layout/ToolLayout\";\nimport { getPath, GET_PIXEL, CHECKOTO2 } from \"../../actions/URLs\";\nimport { OTO2 } from \"../../utils/Routes\";\nimport RequestHandler from \"../../actions/RequestHandler\";\nimport { Modal } from \"antd\";\nexport default class ThirdParty extends Component {\n  state = {\n    activeTab: 1,\n    TEXT: { url: \"\", title: \"\" },\n  };\n  componentDidMount() {\n    window.gs.navTitle(ToolUtil.getTool(18) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\n  }\n  onChangeActive = (tabIndex) => {\n    const { activeTab } = this.state;\n    if (activeTab !== tabIndex) {\n      this.setState({ activeTab: tabIndex });\n    }\n  };\n  onUpdate = (index, data) => {\n    switch (index) {\n      case 1:\n        this.setState({ TEXT: data });\n        break;\n      case 2:\n        this.setState({ cta: data });\n        break;\n      default:\n        break;\n    }\n  };\n  renderMain = () => {\n    const { activeTab, TEXT } = this.state;\n    let component = null;\n    switch (activeTab) {\n      case 1:\n        component = <Text {...TEXT} onChange={this.onUpdate} />;\n        break;\n      default:\n        component = <Text {...TEXT} onChange={this.onUpdate} />;\n        break;\n    }\n    return component;\n  };\n\n  onClickSave = () => {\n    const { TEXT } = this.state;\n    const { url, title } = TEXT;\n    if (url && title) {\n      RequestHandler.PostRequest(CHECKOTO2, {}, (res, err) => {\n        if (res) {\n          const pixel = res.data.pixel;\n          if (res.data.isValid) {\n            if (pixel) {\n              generateFile(\"index.html\", generateIframeContant(url, title, pixel));\n              Modal.success({\n                content: \"File has been Donwloaded\",\n              });\n              setTimeout(() => {\n                this.props.history.push(\"/OTO2\");\n              }, 2000);\n            }\n          } else {\n            window.gs.toast(\"Limit Execeed\", { position: \"bottom-right\", autoClose: false, type: window.gs.toast.TYPE.ERROR });\n          }\n        }\n      });\n    } else {\n      window.gs.toast(\"URL & TITLE not to be empty\", { position: \"bottom-right\", autoClose: false, type: window.gs.toast.TYPE.ERROR });\n    }\n  };\n\n  renderRight = () => {\n    return <img src={getPath(\"asset/Iframegraphic.png\")} class=\"img-fluid\" alt=\"Responsive image\"></img>;\n  };\n\n  back = () => {\n    this.props.history.push(OTO2);\n  };\n\n  render() {\n    return (\n      <ToolLayout>\n        <div className=\"row\">\n          <div className=\"col-10 toolItem\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">{this.renderMain()}</div>\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\n              <ButtonsGroup backUrl={this.back} download={this.onClickSave} />\n            </div>\n          </div>\n          <div className=\"col-1 sideBarButtomPanel\">\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\n          </div>\n        </div>\n      </ToolLayout>\n    );\n  }\n}\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/admin/index.js",["1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171"],"import React, { Component, useState, useEffect } from 'react';\r\nimport './Admin.css';\r\nimport { Select, Modal, Result, Icon, Input, Switch } from 'antd';\r\nimport ToolUtil, { resetToolAccess } from '../../utils/ToolUtil';\r\nimport { VerifyCreateAccount, checkTools } from '../../actions/ResellerUtil';\r\nimport RequestHandler from '../../actions/RequestHandler';\r\nimport {\r\n  ADD_RESELLER_USER,\r\n  KEY_GENERATE,\r\n  SEND_LINK_BY_URL,\r\n  getPath,\r\n  USER_DISABLE,\r\n  UPDATE_USER,\r\n  DELETE_USER_DATA\r\n} from '../../actions/URLs';\r\nimport { dateParser } from '../Util';\r\nimport { getUserList, parseUserData } from '../comman/TableWithData';\r\nimport { ToolSelectorDropDown } from '../comman/DropDown';\r\nconst { Option } = Select;\r\nexport default class Admin extends Component {\r\n  state = {\r\n    email1: '',\r\n    email2: '',\r\n    password: '',\r\n    tools: [],\r\n    url: '',\r\n    key: null,\r\n    count: 0,\r\n    user: [],\r\n    keys: 0,\r\n    id: null,\r\n    consumeLicence: 0,\r\n    totalLicence: 0,\r\n    productPop: false,\r\n    isUpgrade1: false,\r\n    isUpgrade2: false,\r\n  };\r\n\r\n  OTO1 = [\r\n    { tid: 1, selected: false, text: \"Tab Messaging\" },\r\n    { tid: 2, selected: false, text: \"Urgency Timer\" },\r\n    { tid: 5, selected: false, text: \"Video Popup\" },\r\n    { tid: 6, selected: false, text: \"Central Timer\" },\r\n    { tid: 7, selected: false, text: \"Geo Redirection\" },\r\n    { tid: 3, selected: false, text: \"HELLO BAR\" },\r\n    { tid: 4, selected: false, text: \"Image Popup\" },\r\n    { tid: 9, selected: false, text: \"Exit Intent\" },\r\n    { tid: 10, selected: false, text: \"Mobile Vibrator\" },\r\n    { tid: 13, selected: false, text: \"Dynamic Elements\" },\r\n    { tid: 14, selected: false, text: \"Offer iframe\" },\r\n    { tid: 15, selected: false, text: \"Back Button redirection\" },\r\n    { tid: 17, selected: false, text: \"HELLO BAR + Timer\" },\r\n    { tid: 19, selected: false, text: \"Optin Form\" },\r\n    { tid: 24, selected: false, text: \"Autoplay Video\" },\r\n    { tid: 25, selected: false, text: \"Proof App\" }\r\n  ];\r\n  users = []; \r\n\r\n  componentDidMount() {\r\n    this.toolOptions = ToolUtil.getToolsOptions();\r\n    console.log(this.props);\r\n    \r\n    this.setState({\r\n      keys: this.props.keys,\r\n      consumeLicence: this.props.consumeLicence,\r\n      totalLicence: this.props.totalLicence\r\n    });\r\n    this.setState({ count: 1 });\r\n    this.getUser();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { keys, consumeLicence, totalLicence } = this.state;\r\n    if (nextProps.keys != keys || nextProps.consumeLicence != consumeLicence || nextProps.totalLicence != totalLicence) {\r\n      this.setState({\r\n        keys: nextProps.keys,\r\n        consumeLicence: nextProps.consumeLicence, \r\n        totalLicence: nextProps.totalLicence\r\n      });\r\n    }\r\n  }\r\n\r\n  toolOptions = [];\r\n\r\n  handleChange = (value) => {\r\n    this.setState({ tools: value });\r\n  };\r\n\r\n  updateKeysData = () => {\r\n    resetToolAccess((data, err) => {\r\n      if (data)\r\n        this.setState({ keys: data.keys, consumeLicence: data.consumeLicence });\r\n      this.getUser();\r\n    });\r\n  };\r\n\r\n  getUser = () => {\r\n    getUserList(2, (data, err) => {\r\n      if (data) {\r\n        this.users = data;\r\n        this.setState({ user: parseUserData(data) });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleFieldChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  renderTools = (tool) => {\r\n    return (\r\n      <Option key={tool.id} value={tool.id} label={tool.name}>\r\n        {tool.name}\r\n      </Option>\r\n    );\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({ visible: false, success: null, key: null, id: null });\r\n  };\r\n\r\n  onCreateAccount = (accountType) => {\r\n    const { email1, password, tools, isUpgrade1, isUpgrade2 } = this.state;\r\n    if (VerifyCreateAccount(email1, password) && checkTools(tools)) {\r\n      RequestHandler.PostRequest(\r\n        ADD_RESELLER_USER,\r\n        { userData: { email: email1, password: password, allowedTool: tools, isUpgrade1: isUpgrade1, isUpgrade2: isUpgrade2 } },\r\n        (res, err) => {\r\n          if (res) {\r\n            this.setState({ visible: true, success: true, email1: \"\", password: \"\", tools: [], isUpgrade1: false, isUpgrade2: false }, () => {\r\n              this.getUser();\r\n            });\r\n          } else {\r\n            // this.setState({ visible: true, success: false });\r\n            window.gs.toast(res.data.message, {\r\n              position: 'bottom-right',\r\n              type: window.gs.toast.TYPE.FAILED,\r\n            });\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  generateKey = () => {\r\n    const { tools, isUpgrade1, isUpgrade2 } = this.state;\r\n    RequestHandler.PostRequest(\r\n      KEY_GENERATE,\r\n      { toolData: { tools, isUpgrade1, isUpgrade2 } },\r\n      (res, err) => {\r\n        if (res) {\r\n          this.setState({ visible: true, success: true, key: res.data.key });\r\n          this.updateKeysData();\r\n        } else {\r\n          this.setState({ visible: true, success: false });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  sendKey = () => {\r\n    const { tools, email2 } = this.state;\r\n    RequestHandler.PostRequest(\r\n      SEND_LINK_BY_URL,\r\n      { userData: { email: email2, tools } },\r\n      (res, err) => {\r\n        if (res) {\r\n          this.setState({ visible: true, success: true });\r\n          this.updateKeysData();\r\n        } else {\r\n          this.setState({ visible: true, success: false });\r\n          window.gs.toast('Failed', {\r\n            position: 'bottom-right',\r\n            type: window.gs.toast.TYPE.FAILED,\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  onDeActive = (id, isActive) => {\r\n    RequestHandler.PostRequest(\r\n      USER_DISABLE,\r\n      { userData: { id, isActive } },\r\n      (res, err) => {\r\n        Modal.success({\r\n          content: 'SuccessFully',\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  onDelete = (id) => {\r\n    Modal.confirm({\r\n      title: \"Confirm\",\r\n      content: \"Are you Sure to Delete this user\",\r\n      okText: \"Delete\",\r\n      onOk: () => {\r\n        RequestHandler.PostRequest(DELETE_USER_DATA, { userData: { id } }, (res, err) => {\r\n          if (res) {\r\n            const { data } = res;\r\n            if (data.success) {\r\n              window.gs.success(true, data.message);\r\n              this.getUser();\r\n            }\r\n          }\r\n        });\r\n      },\r\n      cancelText: \"Cancel\",\r\n    });\r\n  };\r\n\r\n  onEdit = (id) => {\r\n    this.setState({ id });\r\n  };\r\n  \r\n  getUserData = (id) => {\r\n    let data = this.users.find((e) => e._id === id);\r\n    return data;\r\n  };\r\n\r\n  getTools = (isUpgrade1 = false, isUpgrade2 = false) => {\r\n    const tools = new Set([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 17, 19, 24]);\r\n    if (isUpgrade1) {\r\n      tools.add(18);\r\n    }\r\n    if (isUpgrade2) {\r\n      tools.add(20);\r\n      tools.add(21);\r\n    }\r\n    return Array.from(tools);\r\n  };\r\n\r\n  onSave = (name, isActive, isUpgrade1 = false, isUpgrade2 = false) => {\r\n    const { id } = this.state;\r\n    const tools = this.getTools(isUpgrade1, isUpgrade2);\r\n    RequestHandler.PostRequest(UPDATE_USER, { userData: { id, name, isActive, tools, isUpgrade1, isUpgrade2 } }, (res, err) => {\r\n      if (res) {\r\n        if (res.data.success) {\r\n          window.gs.success(res.data.message);\r\n          this.setState({ id: null });\r\n          this.getUser();\r\n        } else {\r\n          window.gs.success(false, res.data.message);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  productPopClick=()=>{\r\n    this.setState({ productPop: true });\r\n  }\r\n\r\n  onPopClose=()=>{\r\n    this.setState({ productPop: false });\r\n  }\r\n\r\n  changeUpgrade = (data) => {\r\n    this.setState(data);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      email1,\r\n      email2,\r\n      password,\r\n      tools,\r\n      url,\r\n      visible,\r\n      success,\r\n      key,\r\n      user,\r\n      keys,\r\n      id,\r\n      consumeLicence,\r\n      totalLicence\r\n    } = this.state;\r\n    const clicks = 5;\r\n\r\n    const modelProps = {\r\n      visible: id ? true : false,\r\n      onClose: this.onClose,\r\n      data: id ? this.getUserData(id) : {},\r\n      onSave: this.onSave\r\n    };\r\n\r\n    return (\r\n      <div className=\"container admin\" name=\"admin\">\r\n        {success ? (\r\n          <SuccessModel visible={visible} askey={key} onClose={this.onClose} />\r\n        ) : (\r\n          <FailedModel visible={visible} onClose={this.onClose} />\r\n        )}\r\n        {id ? <EditModel {...modelProps} /> : null}\r\n        {this.state.productPop  ? <ProductModel {...this.state} popClose={()=>this.onPopClose()} OTO1={this.OTO1} onChange={this.changeUpgrade} />:null}\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 col-sm-12 col-lg-3\">\r\n            <div className=\"row dashboard-card m-3\">\r\n              <div className=\"col-4 card-title\">\r\n                <div className=\"card-text\">{keys}</div>\r\n                <div className=\"card-subtext\">Key Created</div>\r\n              </div>\r\n              <div className=\"col-8 card-img\">\r\n                <img\r\n                  className=\"img-fluid\"\r\n                  src={getPath('asset/group-14.png')}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 col-sm-12 col-lg-3\">\r\n            <div className=\"row dashboard-card m-3\">\r\n              <div className=\"col-4 card-title\">\r\n                <div className=\"card-text\">{consumeLicence}</div>\r\n                <div className=\"card-subtext\">Key Used</div>\r\n              </div>\r\n              <div className=\"col-8 card-img\">\r\n                <img\r\n                  className=\"img-fluid\"\r\n                  src={getPath('asset/group-15.png')}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 col-sm-12 col-lg-3\">\r\n            <div className=\"row dashboard-card m-3\">\r\n              <div className=\"col-4 card-title\">\r\n                <div className=\"card-text\">{totalLicence}</div>\r\n                <div className=\"card-subtext\">Total Licences</div>\r\n              </div>\r\n              <div className=\"col-8 card-img\">\r\n                <img\r\n                  className=\"img-fluid\"\r\n                  src={getPath('asset/Group130.svg')}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 col-sm-12 col-lg-3\">\r\n            <div className=\"row dashboard-card m-3\">\r\n              <div className=\"col-4 card-title\">\r\n                <div className=\"card-text\">{user.length}</div>\r\n                <div className=\"card-subtext\">Users</div>\r\n              </div>\r\n              <div className=\"col-8 card-img\">\r\n                <img\r\n                  className=\"img-fluid\"\r\n                  src={getPath('asset/group-16.png')}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\" style={{ paddingTop: '35px' }}>\r\n          <div className=\"col-md-4 col-sm-12 col-lg-4\">\r\n            <div className=\"card adminform\">\r\n              <div className=\"box-title\">Create Account</div>\r\n              <div className=\"form-group admin-form-group\">\r\n                <label>Email address</label>\r\n                <Input\r\n                  name=\"email1\"\r\n                  onChange={this.handleFieldChange}\r\n                  value={email1}\r\n                />\r\n              </div>\r\n              <div className=\"form-group admin-form-group\">\r\n                <label>Password</label>\r\n                <Input.Password\r\n                  name=\"password\"\r\n                  onChange={this.handleFieldChange}\r\n                  value={password}\r\n                />\r\n              </div>\r\n              <div className=\"form-group admin-form-group\">\r\n                <label>Tools</label>\r\n                {/* <Select mode=\"multiple\" style={{ width: \"100%\" }} placeholder=\"Select Product\" defaultValue={tools} onChange={this.handleChange} optionLabelProp=\"label\">\r\n                  {this.toolOptions.map(this.renderTools)}\r\n                </Select> */}\r\n                {/* <ToolSelectorDropDown\r\n                  defaultValue={tools}\r\n                  onChange={this.handleChange}\r\n                /> */}\r\n                <br></br>\r\n                <button className=\"cz_btn btn\" onClick={this.productPopClick} >Select Products</button>\r\n                \r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm primaryBtn\"\r\n                onClick={this.onCreateAccount}\r\n              >\r\n                Create Account\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 col-sm-12 col-lg-4\">\r\n            <div className=\"card adminform\">\r\n              <div className=\"box-title\">Send Access By Email</div>\r\n              <div className=\"form-group admin-form-group\">\r\n                <label for=\"exampleInputEmail1\">Email address</label>\r\n                <Input\r\n                  name=\"email2\"\r\n                  value={email2}\r\n                  onChange={this.handleFieldChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group admin-form-group\">\r\n                <label for=\"exampleInputEmail1\">Tools</label>\r\n                {/* <Select mode=\"multiple\" style={{ width: \"100%\" }} placeholder=\"Select Product\" defaultValue={tools} onChange={this.handleChange} optionLabelProp=\"label\">\r\n                  {this.toolOptions.map(this.renderTools)}\r\n                </Select> */}\r\n                {/* <ToolSelectorDropDown\r\n                  defaultValue={tools}\r\n                  onChange={this.handleChange}\r\n                /> */}\r\n                <br></br>\r\n                <button className=\"cz_btn btn\" onClick={this.productPopClick} >Select Products</button>\r\n                \r\n              </div>\r\n              <button onClick={this.sendKey} className=\"btn btn-sm primaryBtn\">\r\n                Send Email with Key\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 col-sm-12 col-lg-4\">\r\n            <div className=\"card adminform\">\r\n              <div className=\"box-title\">Send Access By Key</div>\r\n              <div className=\"form-group admin-form-group\">\r\n                <label for=\"exampleInputEmail1\">Tools</label>\r\n                {/* <Select mode=\"multiple\" style={{ width: \"100%\" }} placeholder=\"Select Product\" defaultValue={tools} onChange={this.handleChange} optionLabelProp=\"label\">\r\n                  {this.toolOptions.map(this.renderTools)}\r\n                </Select> */}\r\n                {/* <ToolSelectorDropDown\r\n                  defaultValue={tools}\r\n                  onChange={this.handleChange}\r\n                /> */}\r\n                <br></br>\r\n                <button className=\"cz_btn btn\" onClick={this.productPopClick} >Select Products</button>\r\n                \r\n              </div>\r\n              <button\r\n                className=\"btn btn-sm primaryBtn\"\r\n                onClick={this.generateKey}\r\n              >\r\n                Send access by email\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ marginTop: '10px' }} className=\"box-title\">\r\n          Active Accounts\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <USERTABLE\r\n              data={user}\r\n              onDelete={this.onDelete}\r\n              onDeActive={this.onDeActive}\r\n              onEdit={this.onEdit} \r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst SuccessModel = function (props) {\r\n  if (props.askey) {\r\n    return (\r\n      <Modal\r\n        title=\"Success\"\r\n        centered\r\n        visible={props.visible}\r\n        onOk={() => props.onClose(false)}\r\n        onCancel={() => props.onClose(false)}\r\n      >\r\n        <Result\r\n          status=\"success\"\r\n          title=\"Successfully Generate the Key\"\r\n          subTitle={props.askey}\r\n          extra={[\r\n            <Input\r\n              /* addonAfter={<Icon type=\"copy\" />} */\r\n              defaultValue={props.askey}\r\n            />,\r\n          ]}\r\n        />\r\n      </Modal>\r\n    );\r\n  } else {\r\n    return (\r\n      <Modal\r\n        title=\"Success\"\r\n        centered\r\n        visible={props.visible}\r\n        onOk={() => props.onClose(false)}\r\n        onCancel={() => props.onClose(false)}\r\n      >\r\n        <Result\r\n          status=\"success\"\r\n          title=\"Successfully Generate the Key\"\r\n          subTitle={props.key}\r\n          extra={[]}\r\n        />\r\n      </Modal>\r\n    );\r\n  }\r\n};\r\n\r\nconst FailedModel = function (props) {\r\n  return (\r\n    <Modal\r\n      title=\"Failed\"\r\n      centered\r\n      visible={props.visible}\r\n      onOk={() => props.onClose(false)}\r\n      onCancel={() => props.onClose(false)}\r\n    >\r\n      <Result\r\n        status=\"warning\"\r\n        title=\"Something went Wrong\"\r\n        subTitle={''}\r\n        extra={[]}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst USERTABLE = function (props) {\r\n  return (\r\n    <div>\r\n      <table className=\"table userTable\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Active</th>\r\n            <th>Created</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.data.map((value, i) => (\r\n            <USERROW\r\n              key={i}\r\n              item={value}\r\n              onDelete={props.onDelete}\r\n              onDeActive={props.onDeActive}\r\n              onEdit={props.onEdit} \r\n            />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst USERROW = function (props) {\r\n  const item = props.item;\r\n  return (\r\n    <tr>\r\n      <td>{item.firstname}</td>\r\n      <td>{item.email}</td>\r\n      <td>\r\n        <Switch\r\n          size=\"small\"\r\n          defaultChecked={item.isActive}\r\n          onChange={() => props.onDeActive(item.id, item.isActive)}\r\n        />\r\n      </td>\r\n\r\n      <td>{dateParser(item.date)}</td>\r\n      <td>\r\n        <div className=\"btn-group\">\r\n          <button className=\"btn btn-sm btn-font-size editbtn\" onClick={() => props.onEdit(item.id)}>\r\n            <i className=\"fa fa-edit\" aria-hidden=\"true\"></i> Edit\r\n          </button>\r\n          <button className=\"btn btn-sm btn-font-size editbtn\" onClick={() => props.onDelete(item.id)}>\r\n            <i className=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete\r\n          </button>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst ProductModel = function(props){\r\n  const [selectTools, setSelectTools] = useState(false);\r\n  const [isUpgrade1, setisUpgrade1] = useState(props.isUpgrade1);\r\n  const [isUpgrade2, setisUpgrade2] = useState(props.isUpgrade2);\r\n  const [checked, setChecked] = useState(false);\r\n  const [tools, setTools] = useState(props.tools);\r\n  let newTool = [];\r\n\r\n  useEffect(() => {\r\n    if(tools.length) {\r\n      let ft = document.querySelectorAll(\".frontend_tools\");\r\n      for(let i = 0; i<ft.length; i++) {\r\n        let id = parseInt(ft[i].childNodes[1].getAttribute(\"data-label\"));\r\n        for(let j=0; j<tools.length; j++) {\r\n          if(id === tools[j]) {\r\n            ft[i].childNodes[0].setAttribute(\"checked\", \"\");\r\n          }\r\n        }\r\n      }\r\n      if(props.OTO1.length === ft.length) {\r\n        document.querySelector(\".fe_selectAll\").childNodes[0].setAttribute(\"checked\", \"\");\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  const selectAllProduct = (e) => {\r\n    let toolArray = [];\r\n    if(checked) {\r\n      e.target.previousSibling.removeAttribute(\"checked\");\r\n    } else {\r\n      e.target.previousSibling.setAttribute(\"checked\", \"\");\r\n    }\r\n    \r\n    let items = document.querySelectorAll(\".frontend_tools\");\r\n    items.forEach(element => {\r\n      if(!checked) {\r\n        toolArray.push(parseInt(element.childNodes[1].getAttribute(\"data-label\")));\r\n        element.childNodes[0].setAttribute(\"checked\", \"\");\r\n      } else {\r\n        toolArray = [];\r\n        element.childNodes[0].removeAttribute(\"checked\");\r\n      }\r\n    });\r\n    setSelectTools(!selectTools);\r\n    setTools(toolArray);\r\n    props.onChange({tools : toolArray})\r\n  }\r\n\r\n  const SelectSingleProduct = (e) => {\r\n    var event = e || window.e,\r\n        target = event.target || event.srcElement;\r\n        \r\n    if (target.tagName.toUpperCase() == 'INPUT') {\r\n      let toolId = parseInt(target.nextElementSibling.getAttribute(\"data-label\"));\r\n      if (target.checked){\r\n        tools.push(toolId)\r\n        setTools(tools);\r\n        props.onChange({tools : tools})\r\n        target.setAttribute(\"checked\", \"\");\r\n      } else {\r\n        target.removeAttribute(\"checked\");\r\n        tools.filter(tool => {\r\n          if(tool !== toolId) {\r\n            newTool.push(tool);\r\n          }\r\n        });\r\n        setTools(newTool);\r\n        props.onChange({tools : newTool})\r\n      }\r\n    }\r\n  }\r\n  \r\n  const selectUpgrade1 = (e) => {\r\n    var event = e || window.e,\r\n        target = event.target || event.srcElement;\r\n        \r\n    if (target.tagName.toUpperCase() == 'INPUT') {\r\n      if (target.checked){\r\n        target.setAttribute(\"checked\", \"\");\r\n      } else {\r\n        target.removeAttribute(\"checked\");\r\n      }\r\n      setisUpgrade1(!isUpgrade1); \r\n      props.onChange({isUpgrade1 : !isUpgrade1})\r\n    }\r\n  } \r\n\r\n  const selectUpgrade2 = (e) => {\r\n    var event = e || window.e,\r\n        target = event.target || event.srcElement;\r\n        \r\n    if (target.tagName.toUpperCase() == 'INPUT') {\r\n      if (target.checked){\r\n        target.setAttribute(\"checked\", \"\");\r\n      } else {\r\n        target.removeAttribute(\"checked\");\r\n      }\r\n      setisUpgrade2(!isUpgrade2);\r\n      props.onChange({isUpgrade2 : !isUpgrade2})\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div className=\"product_popup_wrapper\">\r\n      <div className=\"product_popup_overlay\"></div>\r\n      <div className=\"product_popup_box\">\r\n        <div className=\"product_popup_close\" onClick={props.popClose}>✖︎</div>\r\n        <h3>Select Products</h3>\r\n        <div className=\"product_type_heading\">\r\n          <h5>Frontend</h5>\r\n          <label className=\"product_check fe_selectAll\" data-label=\"frontend\">\r\n            <input type=\"checkbox\"/>\r\n            <span onClick={(e)=> {\r\n              setChecked(!checked);\r\n              selectAllProduct(e);\r\n            }}>Select All</span>\r\n          </label>\r\n        </div>\r\n        <ul onClick={(e)=> SelectSingleProduct(e)}>\r\n          {props.OTO1.map( tool => {\r\n            return (\r\n              <li key={tool.tid}>\r\n                <label className=\"product_check frontend_tools\">\r\n                  <input type=\"checkbox\"/>\r\n                  <span data-label={tool.tid}>{tool.text}</span>\r\n                </label>\r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n        \r\n        <div className=\"product_type_heading\" onClick={(e)=> selectUpgrade1(e)}>\r\n          <h5>Upgrade 1</h5>\r\n          <label className=\"product_check\">\r\n            <input type=\"checkbox\" defaultChecked={isUpgrade1 ? \"true\": null}/>\r\n            <span>Select</span>\r\n          </label>\r\n        </div>\r\n        <div className=\"product_type_heading\" onClick={(e)=> selectUpgrade2(e)}>\r\n          <h5>Upgrade 2</h5>\r\n          <label className=\"product_check\">\r\n            <input type=\"checkbox\" defaultChecked={isUpgrade2 ? \"true\": null}/>\r\n            <span>Select</span>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div> \r\n  )\r\n}\r\n\r\nconst EditModel = function (props) {\r\n  console.log(\"props.data\", props.data)\r\n  const [name, setName] = useState(props.data.firstname);\r\n  const [isActive, setisActive] = useState(props.data.isActive);\r\n  // const [tools, setTools] = useState(props.data.allowedTool);\r\n  const [isUpgrade1, setisUpgrade1] = useState(props.data.isUpgrade1);\r\n  const [isUpgrade2, setisUpgrade2] = useState(props.data.isUpgrade2);\r\n  return (\r\n    <Modal title=\"Edit User\" centered visible={props.visible} onOk={() => props.onSave(name, isActive, isUpgrade1, isUpgrade2)} onCancel={() => props.onClose(false)}>\r\n      <div className=\"form-group admin-form-group\">\r\n        <label>Name</label>\r\n        <input type=\"text\" name=\"name\" value={name} onChange={(e) => setName(e.target.value)} className=\"form-control\" />\r\n      </div>\r\n      <div className=\"form-group admin-form-group\" style={{ display: \"flex\" }}>\r\n        <label>IsActive</label>\r\n        <Switch className=\"pull-right m-2\" onChange={() => setisActive(!isActive)} size=\"small\" defaultChecked={isActive} />\r\n      </div>\r\n      <div className=\"form-group admin-form-group\" style={{ display: \"flex\" }}>\r\n        <label>Upgrade - 1</label>\r\n        <Switch className=\"pull-right m-2\" onChange={() => setisUpgrade1(!isUpgrade1)} size=\"small\" defaultChecked={isUpgrade1} />\r\n      </div>\r\n      <div className=\"form-group admin-form-group\" style={{ display: \"flex\" }}>\r\n        <label>Upgrade - 2</label>\r\n        <Switch className=\"pull-right m-2\" onChange={() => setisUpgrade2(!isUpgrade2)} size=\"small\" defaultChecked={isUpgrade2} />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/index.js",["1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","1182","1183","1184"],"import React, { Component } from \"react\";\r\nimport SideBar from \"./SideBar\";\r\nimport ToolUtil, { generateIframeContant, getDefaultItems } from \"../../utils/ToolUtil\";\r\nimport Util, { generateFile, parseImgUrl } from \"../Util\";\r\nimport Text from \"./Text\";\r\nimport Responders from \"./Responders\";\r\nimport CTA from \"./CTA\";\r\nimport { ToolLayout, ButtonsGroup } from \"../layout/ToolLayout\";\r\nimport { getPath, GET_PIXEL, SAVE_TOOL, GET_ONE_TOOL } from \"../../actions/URLs\";\r\nimport RequestHandler from \"../../actions/RequestHandler\";\r\nimport { Modal } from \"antd\";\r\nimport Style from \"./Style\";\r\nimport Code from \"./Code\";\r\nimport { OptinFormModalResponse, OptinFormModal } from \"../utils/Modal\";\r\nimport Time from \"./Time\";\r\nimport { Preview } from \"./Preview\";\r\nimport { ReponsiveImage } from \"../comman/PreviewAble\";\r\nimport Video from \"../pages/tools/VideoPopup/Video\";\r\nimport Image from \"../pages/tools/VideoPopup/Image\";\r\nimport Icons from \"./Icons\";\r\n\r\nexport default class OptinForm extends Component {\r\n  state = {\r\n    video: { url: \"\", videoType: \"youtube\" },\r\n    toolName: \"\",\r\n    toolId: \"\",\r\n    preview: false,\r\n    _id: null,\r\n    activeTab: 2,\r\n    toolData: {\r\n      text: '<span style=\"font-size: 36px;\"><font color=\"#ff9c00\">Converzee</font></span>',\r\n      cta: '<font color=\"#efefef\"><span style=\"font-size: 18px;\">Buy Now</span></font>',\r\n      layout: 0,\r\n      style: [\r\n        { name: \"Background\", id: \"backgound\", value: \"TRANSPARENT\" },\r\n        { name: \"CTA Backgound\", id: \"ctabackgound\", value: \"#ff3a65\" },\r\n      ],\r\n      timerType: \"DATE_AND_TIME_BASED\",\r\n      endDateTime: new Date(),\r\n      timeZone: Util.getTimeZoneList()[0].value,\r\n      postExpiryAction: \"hide\",\r\n      ctaRedirectUrl: \"\",\r\n      redirectUrl: \"\",\r\n      days: 2,\r\n      hours: 2,\r\n      minutes: 2,\r\n      seconds: 2,\r\n      bgImg: \"#fff\",\r\n      isBGIMG: false,\r\n      noThanks: \"No thanks\",\r\n      subTitle: \"Subtitle here\",\r\n      position: \"TOP\",\r\n      isNameInput: false,\r\n      ctaAction: \"redirect\",\r\n    },\r\n    CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: null }] },\r\n    AutoResponder: {\r\n      mailServer: \"MAILCHIMP\",\r\n      uid: \"\",\r\n      formData: \"\"\r\n    },\r\n  };\r\n  loaded = false;\r\n  layouts = [\"asset/optin-layouts/0.png\", \"asset/optin-layouts/0.png\", \"asset/optin-layouts/0.png\"];\r\n\r\n  componentWillMount() {\r\n    if (window.gs.ie) {\r\n      const ie = getDefaultItems(window.gs.ie);\r\n      let { toolData } = this.state;\r\n      this.state.toolData = { ...toolData, ...ie };\r\n      window.gs.ie = null;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        this.loaded = true;\r\n        if (res) {\r\n          Util.isRedirected = true;\r\n          const data = OptinFormModalResponse(res);\r\n          if (data) {\r\n            this.setState(data, () => {\r\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"  \" + this.getLayoutName(this.state.toolData.layout) + \"  \" + \"(\" + data.name + \")\");\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      let toolId = 19; this.loaded = true;\r\n      const defLayout = window.gs.defaultLayout || 0;\r\n      this.onLayoutChange(defLayout);\r\n      if(defLayout === 3){\r\n        this.setState({ activeTab: 1 });\r\n      }\r\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\r\n      Util.RedirectWhenCampaignEmpty(this.props);\r\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"  \" + this.getLayoutName(defLayout) + \"  \" + \"(\" + Util.CAMPAIGNS_NAME + \")\");\r\n      delete window.gs.defaultLayout;\r\n    }\r\n\r\n  }\r\n  getLayoutName = (i) => {\r\n    if (i == 0) return \"Hello Bar\";\r\n    if (i == 1) return \"Hello Bar + Timer\";\r\n    if (i == 2) return \"Exit Intent\";\r\n    if (i == 3) return \"Autoplay Video\";\r\n    if (i == 4) return \"Purchase Proof\";\r\n  };\r\n  onLayoutChange = (index) => {\r\n    const { toolData } = this.state;\r\n    this.setState({ toolData: { ...toolData, layout: index } });\r\n  };\r\n\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n\r\n  codeChange = (data) => {\r\n    this.setState({ CODE: data });\r\n  };\r\n\r\n  changeAutoResponder = (data) => {\r\n    this.setState({AutoResponder: { ...this.state.AutoResponder, ...data} });\r\n  }\r\n\r\n  onUpdate = (data) => {\r\n    const { toolData } = this.state;\r\n    this.setState({ toolData: { ...toolData, ...data } });\r\n  };\r\n\r\n  renderMain = () => {\r\n    const { activeTab, toolData, CODE } = this.state;\r\n    let component = null;\r\n    if (!this.loaded) return null;\r\n    switch (activeTab) {\r\n      case 1:\r\n        component = <Video onVideoChange={this.onVideoChange} layout={toolData.layout} items={this.layouts} onChange={this.onUpdate}/>;\r\n        break;\r\n      case 2:\r\n        component = <Text text={toolData.text} isNameInput={toolData.isNameInput} subTitle={toolData.subTitle} layout={toolData.layout} onChange={this.onUpdate} />;\r\n        break;\r\n      case 3:\r\n        component = <CTA cta={toolData.cta} ctaRedirectUrl={toolData.ctaRedirectUrl} ctaAction={toolData.ctaAction} position={toolData.position} layout={toolData.layout} onChange={this.onUpdate} />;\r\n        break;\r\n      case 4:\r\n        component = <Style style={toolData.style} bgImg={toolData.bgImg} isBGIMG={toolData.isBGIMG} layout={toolData.layout} onChange={this.onUpdate} />;\r\n        break;\r\n      case 5:\r\n        component = <Code {...CODE} onChange={this.codeChange} />;\r\n        break;\r\n      case 6:\r\n        component = (\r\n          <Time\r\n            timerType={toolData.timerType}\r\n            endDateTime={toolData.endDateTime}\r\n            timeZone={toolData.timeZone}\r\n            postExpiryAction={toolData.postExpiryAction}\r\n            redirectUrl={toolData.redirectUrl}\r\n            days={toolData.days}\r\n            hours={toolData.hours}\r\n            minutes={toolData.minutes}\r\n            seconds={toolData.seconds}\r\n            onChange={this.onUpdate}\r\n          />\r\n        );\r\n        break;\r\n      case 7:\r\n        component = <Responders mailServer={this.state.AutoResponder.mailServer} uid={this.state.AutoResponder.uid} onChange={this.changeAutoResponder} />;\r\n        break;\r\n      case 8:\r\n        component = <Image layout={toolData.layout} items={this.layouts} onChange={this.onUpdate} />;\r\n        break;\r\n      case 9:\r\n        component = <Icons layout={toolData.layout} items={this.layouts} onChange={this.onUpdate} />;\r\n        break;\r\n      default:\r\n        component = <Text onChange={this.onUpdate} />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    if (this.state.CODE.include[0].url !== \"\") {\r\n      RequestHandler.PostRequest(SAVE_TOOL, { toolData: OptinFormModal(this.state) }, (res, err) => {\r\n        if (res) {\r\n          const data1 = res.data;\r\n          if (data1.success) {\r\n            Modal.success({\r\n              content: data1.message,\r\n            });\r\n            setTimeout(() => {\r\n              this.props.history.push(\"/Campaigns\");\r\n            }, 1000);\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      Modal.warning({\r\n        content: \"Should Contain atleast one trigger point\",\r\n      });\r\n    }\r\n  };\r\n\r\n  renderRight = () => {\r\n    const { toolData, activeTab } = this.state;\r\n    if (toolData.layout === 2 && toolData.isBGIMG) {\r\n      return <ReponsiveImage isImg={true} url={toolData.bgImg} />;\r\n    }\r\n    if (toolData.layout === 0 && activeTab !== 7) {\r\n      return <ReponsiveImage isAs={true} url={\"asset/hb3.png\"} />;\r\n    }\r\n    if (toolData.layout === 1 && activeTab !== 7) {\r\n      return <ReponsiveImage isAs={true} url={\"asset/hbt3.png\"} />;\r\n    }\r\n    if (toolData.layout === 2 && activeTab !== 7) {\r\n      return <ReponsiveImage isAs={true} url={\"asset/exit_pop_up.png\"} />;\r\n    }\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(\"/Dashboard\");\r\n  };\r\n\r\n  togglePreview = () => {\r\n    const { preview } = this.state;\r\n    this.setState({ preview: !preview });\r\n  };\r\n\r\n  render() {\r\n    const { preview, activeTab } = this.state;\r\n    return (\r\n      <ToolLayout>\r\n        {preview ? <Preview {...this.state} onClose={this.togglePreview} /> : null}\r\n        <div className=\"row\">\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className={ activeTab===7 ? \"col-md-12\":\"col-md-6\"}>{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\r\n              <ButtonsGroup   \r\n               preview={ () => {\r\n                this.setState({ preview: !preview });\r\n              }}\r\n              backUrl={this.back}\r\n              save={this.onClickSave} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <SideBar layout={this.state.toolData.layout} activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/BonusUpsell/index.js",["1185","1186","1187"],"import React, { Component } from \"react\";\r\nimport SideBar from \"./SideBar\";\r\nimport { ButtonsGroup, ToolLayout } from \"../layout/ToolLayout\";\r\nimport { ReponsiveImage } from \"../comman/PreviewAble\";\r\nimport SideImage from \"./SideImage\";\r\nimport Text from \"./Text\";\r\nimport ImageUp from \"./Image\";\r\nimport Style from \"./Style\";\r\nimport { generateFile } from \"../Util\";\r\nimport { createBonusContent } from \"../../utils/ToolUtil\";\r\nimport { getPath } from \"../../actions/URLs\";\r\nimport { BONUS_CREATE } from \"../../utils/Routes\";\r\n\r\nconst bonusPageGen = {\r\n  activeTab: 1,\r\n  TEXT: { url: \"\", footer: \"\", title: \"\" },\r\n  logo: \"\",\r\n  sideImage: \"\",\r\n  STYLE: {\r\n    selected: 0,\r\n    elements: [{ name: \"bgColor\", text: \"Background Color\", color: \"#000\" }],\r\n  },\r\n};\r\nexport default class BonusPage extends Component {\r\n  state = bonusPageGen;\r\n  componentDidMount() {\r\n    window.gs.navTitle(\"Bonus Page Gen\");\r\n  }\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n  onUpdate = (index, data) => {\r\n    switch (index) {\r\n      case 1:\r\n        this.setState({ TEXT: data });\r\n        break;\r\n      case 2:\r\n        this.setState({ logo: data });\r\n        break;\r\n      case 3:\r\n        this.setState({ sideImage: data });\r\n        break;\r\n      case 4:\r\n        this.setState({ STYLE: data });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  renderMain = () => {\r\n    const { activeTab, TEXT, logo, sideImage, STYLE } = this.state;\r\n    let component = null;\r\n    switch (activeTab) {\r\n      case 1:\r\n        component = <Text {...TEXT} onChange={this.onUpdate} />;\r\n        break;\r\n      case 2:\r\n        component = <ImageUp image={logo} onChange={this.onUpdate} />;\r\n        break;\r\n      case 3:\r\n        component = <SideImage image={sideImage} onChange={this.onUpdate} />;\r\n        break;\r\n      case 4:\r\n        component = <Style {...STYLE} cases={4} onChange={this.onUpdate} />;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    const { TEXT, logo, sideImage, STYLE } = this.state;\r\n    const bg = STYLE.elements[0].color;\r\n    const { url, footer, title } = TEXT;\r\n    generateFile(\"index.html\", createBonusContent(title, url, logo, sideImage, bg, footer, logo));\r\n    window.gs.setScript('<a id=\"MCK_BUYBUTTON\">....</a>');\r\n    setTimeout(() => {\r\n      this.props.history.push(\"/\");\r\n    }, 2000);\r\n  };\r\n\r\n  renderRight = () => {\r\n    const { activeTab, logo, sideImage } = this.state;\r\n    if (activeTab === 2 && logo != \"\") return <ReponsiveImage isImg={true} url={logo} />;\r\n    if (activeTab === 3 && sideImage != \"\") return <ReponsiveImage isImg={true} url={sideImage} />;\r\n    return <ReponsiveImage isAs={true} url={\"asset/mobilevab.png\"} />;\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(BONUS_CREATE);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ToolLayout>\r\n        <div className=\"row\">\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\r\n              <ButtonsGroup backUrl={this.back} download={this.onClickSave} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Club/index.js",["1188","1189","1190","1191","1192","1193","1194","1195","1196","1197","1198","1199","1200","1201","1202","1203","1204","1205","1206"],"import React, { Component } from \"react\";\r\nimport SideBar from \"./SideBar\";\r\nimport ToolUtil, { getTemplates, clubTemplate } from \"../../utils/ToolUtil\";\r\nimport Util from \"../Util\";\r\nimport Text from \"./Text\";\r\nimport CTA from \"./CTA\";\r\nimport Responders from \"../OptinForm/Responders\";\r\nimport { ToolLayout, ButtonsGroup } from \"../layout/ToolLayout\";\r\nimport { SAVE_TOOL, GET_ONE_TOOL } from \"../../actions/URLs\";\r\nimport { OTO3, VIP_BONUS } from \"../../utils/Routes\";\r\nimport RequestHandler from \"../../actions/RequestHandler\";\r\nimport { Modal } from \"antd\";\r\nimport Style from \"./Style\";\r\nimport Code from \"./Code\";\r\nimport { TemplateClubModalResponse, TemplateClubModal } from \"../utils/Modal\";\r\nimport Time from \"./Time\";\r\nimport { Preview } from \"./Preview\";\r\nimport { ReponsiveImage } from \"../comman/PreviewAble\";\r\nimport { LayoutSelector } from \"../layout/LayoutSelector\";\r\n\r\nexport default class Club extends Component {\r\n  state = {\r\n    toolName: \"\",\r\n    toolId: \"\",\r\n    preview: false,\r\n    _id: null,\r\n    activeTab: 1,\r\n    toolData: {\r\n      template: 0,\r\n      text: \"Lorem ipsum nibh amet!\",\r\n      cta: \"Buy Now\",\r\n      layout: 0,\r\n      timerType: \"DATE_AND_TIME_BASED\",\r\n      endDateTime:  new Date(),\r\n      timeZone: Util.getTimeZoneList()[0].value,\r\n      postExpiryAction: \"hide\",\r\n      ctaRedirectUrl: \"\",\r\n      redirectUrl: \"\",\r\n      days: 2,\r\n      hours: 2,\r\n      minutes: 2,\r\n      seconds: 2,\r\n      ctaAction: \"redirect\",\r\n      // redirectUrl: \"http://google.com\",\r\n      noThanks: \"No Thanks!\",\r\n      subTitle: \"Eiusmod tempor veniam incididunt labore.\",\r\n      position: \"BOTTOM\",\r\n      logo: \"box.png\",\r\n      scale: \"1.1\"\r\n    },\r\n    CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: null }] },\r\n    items: [\r\n      { index: 1, icon: \"fa fa-whatsapp\", text: \"Whatsapp\", link: \"\" },\r\n      { index: 2, icon: \"fa fa-facebook-square\", text: \"Facebook\", link: \"\" },\r\n      { index: 3, icon: \"fa fa-linkedin-square\", text: \"Linkedin\", link: \"\" },\r\n      { index: 4, icon: \"fa fa-reddit-square\", text: \"Reddit\", link: \"\" },\r\n      { index: 5, icon: \"fa fa-skype\", text: \"Skype\", link: \"\" },\r\n      { index: 6, icon: \"fa fa-vimeo-square\", text: \"Vimeo\", link: \"\" },\r\n      { index: 7, icon: \"fa fa-twitter-square\", text: \"Twitter\", link: \"\" },\r\n      { index: 8, icon: \"fa fa-telegram\", text: \"Telegram\", link: \"\" },\r\n      { index: 9, icon: \"fa fa-instagram\", text: \"Instagram\", link: \"\" },\r\n      { index: 10, icon: \"fa fa-behance-square\", text: \"Behance\", link: \"\" },\r\n      { index: 11, icon: \"fa fa-dribbble\", text: \"Dribbble\", link: \"\" },\r\n      { index: 12, icon: \"fa fa-pinterest-square\", text: \"Pinterest\", link: \"\" }\r\n    ],\r\n    AutoResponder: {\r\n      mailServer: \"MAILCHIMP\",\r\n      uid: \"\",\r\n      formData: \"\"\r\n    }\r\n  };\r\n  loaded = false;\r\n  layouts = [];\r\n  templates = null;\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        this.loaded = true;\r\n        if (res) {\r\n          Util.isRedirected = true;\r\n          const data = TemplateClubModalResponse(res);\r\n          if (data) {\r\n            this.getLayouts(data.toolData.layout);\r\n            this.layouts = clubTemplate(data.toolData.layout, data.toolId);\r\n            this.setState(data, () => {\r\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"  \" + this.getLayoutName(this.state.toolData.layout) + \"  \" + \"(\" + data.name + \")\");\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const toolId = window.gs.toolId ? window.gs.toolId : 20;\r\n      this.loaded = true;\r\n      const defLayout = window.gs.defaultLayout || 0;\r\n      this.onLayoutChange(defLayout);\r\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME, toolData: { ...this.state.toolData, layout: defLayout} });\r\n      Util.RedirectWhenCampaignEmpty(this.props);\r\n      this.getLayouts(defLayout);\r\n      this.layouts = clubTemplate(defLayout, toolId);\r\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"  \" + this.getLayoutName(defLayout) + \"  \" + \"(\" + Util.CAMPAIGNS_NAME + \")\");\r\n      setTimeout(() => {\r\n        const { toolData } = this.state;\r\n        if(toolData.layout === 2 || toolData.layout === 6 || toolData.layout === 5 || toolData.layout === 7) {\r\n          this.templateSelect(0);\r\n        }\r\n      },300);\r\n      delete window.gs.defaultLayout;\r\n      delete window.gs.toolId;\r\n    }\r\n  }\r\n\r\n  getLayouts = (typ) => {\r\n    getTemplates(typ, (templates) => {\r\n      this.templates = templates;\r\n      this.forceUpdate();\r\n    });\r\n  };\r\n\r\n  getLayoutName = (i) => {\r\n    if (i == 0) return \"Hello Bar\";\r\n    if (i == 1) return \"Hello Bar + Timer\";\r\n    if (i == 2) return \"Exit Intent\";\r\n    if (i == 3) return \"Central Timer\";\r\n    if (i == 4) return \"Dynamic Elements\";\r\n    if (i == 5) return \"Hello Bar With Optin Forms\";\r\n    if (i == 6) return \"Hello Bar + Timer With Optin Forms\";\r\n    if (i == 7) return \"Exit Intent With Optin Forms\";\r\n  };\r\n\r\n  templateSelect = (index) => {\r\n    const { toolData, _id } = this.state;\r\n    const layout = toolData.layout;\r\n    let data ;\r\n    if(!_id){\r\n      if(layout === 2) {\r\n        data = ExitIntentContent(index);\r\n      } else if(layout === 0 || layout === 1) {\r\n        data = HelloBarContent(index);\r\n      } else if(layout === 5|| layout === 6 || layout === 7) {\r\n        data = (layout === 7 ? optinExitIntentContent(index) : optinFormContent(index));\r\n      }\r\n    }\r\n    this.setState({ toolData: { ...toolData, ...data, template: index } });\r\n  };\r\n\r\n  onLayoutChange = (index) => {\r\n    const { toolData } = this.state;\r\n    this.setState({ toolData: { ...toolData, layout: index } });\r\n  };\r\n\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n\r\n  changeAutoResponder = (data) => {\r\n    this.setState({AutoResponder: { ...this.state.AutoResponder, ...data} });\r\n  }\r\n\r\n  codeChange = (data) => {\r\n    this.setState({ CODE: data });\r\n  };\r\n\r\n  onUpdate = (data) => {\r\n    const { toolData } = this.state;\r\n    this.setState({ toolData : {...toolData, ...data}});\r\n  };\r\n\r\n  updateItems = (data) => {\r\n    this.setState({ ...data });\r\n  };\r\n\r\n  renderMain = () => {\r\n    const { activeTab, toolData, CODE, items } = this.state;\r\n    let component = null;\r\n    if (!this.loaded) return null;\r\n    switch (activeTab) {\r\n      case 1:\r\n        component = <LayoutSelector isExit={toolData.layout == 2 || toolData.layout == 3 || toolData.layout == 4 || toolData.layout == 7 ? true : false} layout={toolData.layout} onLayoutSelect={this.templateSelect} selected={toolData.template} items={this.layouts}/>;\r\n        break;\r\n      case 2:\r\n        component = <Text items={items} text={toolData.text} noThanks={toolData.noThanks} subTitle={toolData.subTitle} layout={toolData.layout} selected={toolData.template} onChange={toolData.layout===4 ? this.updateItems : this.onUpdate} />;\r\n        break;\r\n      case 3:\r\n        component = <CTA cta={toolData.cta} ctaRedirectUrl={toolData.ctaRedirectUrl} ctaAction={toolData.ctaAction} position={toolData.position} layout={toolData.layout} onChange={this.onUpdate} />;\r\n        break;\r\n      case 4:\r\n        component = <Style logo={toolData.logo} onChange={this.onUpdate} layout={toolData.layout} scale={toolData.layout==3 ? toolData.scale : \"\"}/>;\r\n        break;\r\n      case 5:\r\n        component = <Code {...CODE} onChange={this.codeChange} />;\r\n        break;\r\n      case 6:\r\n        component = (\r\n          <Time\r\n            timerType={toolData.timerType}\r\n            endDateTime={toolData.endDateTime}\r\n            timeZone={toolData.timeZone}\r\n            postExpiryAction={toolData.postExpiryAction}\r\n            redirectUrl={toolData.redirectUrl}\r\n            days={toolData.days}\r\n            hours={toolData.hours}\r\n            minutes={toolData.minutes}\r\n            seconds={toolData.seconds}\r\n            onChange={this.onUpdate}\r\n          />\r\n        );\r\n        break;\r\n      case 7:\r\n        component = <Responders mailServer={this.state.AutoResponder.mailServer} onChange={this.changeAutoResponder} />;\r\n        break;\r\n      default:\r\n        component = <Text onChange={this.onUpdate} />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    const data = this.state;\r\n    if (this.state === 22) data.toolData.template = this.state.toolData.template + 10;\r\n    if(data.toolData.days === \"\") data.toolData.days = 0;\r\n    if(data.toolData.hours === \"\") data.toolData.hours = 0;\r\n    if (this.state.CODE.include[0].url !== \"\") {\r\n      RequestHandler.PostRequest(SAVE_TOOL, { toolData: TemplateClubModal(data) }, (res, err) => {\r\n        if (res) {\r\n          const data1 = res.data;\r\n          if (data1.success) {\r\n            if (data1.script) {\r\n              window.gs.setScript(data1.script);\r\n            } else {\r\n              Modal.success({\r\n                content: data1.message,\r\n              });\r\n            }\r\n            setTimeout(() => {\r\n              this.props.history.push(\"/Campaigns\");\r\n            }, 1000);\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      Modal.warning({\r\n        content: \"Should Contain atleast one trigger point\",\r\n      });\r\n    }\r\n  };\r\n\r\n  renderRight = () => {\r\n    const { toolData, activeTab } = this.state;\r\n    if (activeTab == 4 && toolData.logo != \"\") {\r\n      return <ReponsiveImage isImg={true} url={toolData.logo} />;\r\n    }\r\n    /* if (toolData.layout === 0) {\r\n      return (activeTab !== 1 ? <ReponsiveImage isAs={true} url={\"asset/hb3.png\"} /> : null);\r\n    }\r\n    if (toolData.layout === 1) {\r\n      return (activeTab !== 1 ? <ReponsiveImage isAs={true} url={\"asset/hbt3.png\"} /> : null);\r\n    } */\r\n    // if (toolData.layout === 2 || toolData.layout === 3 || toolData.layout === 7) {\r\n    //   return (activeTab !== 1 && activeTab !== 7 ? <ReponsiveImage isAs={true} url={\"asset/exit_pop_up.png\"} /> : null );\r\n    // }\r\n    // if (toolData.layout === 4) {\r\n    //   return (activeTab !== 1 && activeTab !== 2 ? <ReponsiveImage isAs={true} url={\"asset/exit_pop_up.png\"} /> : null );\r\n    // }\r\n  };\r\n\r\n  back = () => {\r\n    if (this.state.toolId == 20) this.props.history.push(OTO3);\r\n    else this.props.history.push(VIP_BONUS);\r\n  };\r\n\r\n  togglePreview = (e, type) => {\r\n    const { preview } = this.state;\r\n    if(type == \"close\") {\r\n      if(e.target.className === \"mxk_exit_close\") {\r\n        this.setState({ preview: !preview });\r\n      } else {\r\n        if (document.querySelector('.mckclub_exitIntent_wrapper') && !document.querySelector('.mckclub_exitIntent_wrapper').contains(e.target) && document.querySelector(\".mxk_exit_close\") ) {\r\n          this.setState({ preview: !preview });\r\n        }\r\n      } \r\n    } else {\r\n      this.setState({ preview: !preview });\r\n    }\r\n  };\r\n\r\n  render() { \r\n    const { preview, toolData, activeTab } = this.state;\r\n    return (\r\n      <ToolLayout>\r\n        {preview ? <Preview {...this.state} templates={this.templates} onClose={(e) => this.togglePreview(e, \"close\")} /> : null}\r\n        <div className=\"row\">\r\n          <div className={\"col-10 toolItem \".concat(toolData.layout === 3 ? \"cz_ct_timer_row\" : null)}>\r\n            <div className=\"row\">\r\n              <div className={(activeTab === 1 || activeTab === 7 ||(toolData.layout===4 && activeTab === 2) ? \"col-md-12\" : \"col-md-6\")}>{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\r\n              <ButtonsGroup backUrl={this.back} preview={(e) => this.togglePreview(e, \"open\")} save={this.onClickSave} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <SideBar layout={toolData.layout} activeTab={activeTab} selected={toolData.template} onChangeActive={this.onChangeActive}/>\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n\r\nconst ExitIntentContent = (index) => {\r\n  let data = {\r\n    text: \"Lorem ipsum nibh amet!\", \r\n    subTitle: \"Eiusmod tempor nibh veniam incididunt\",\r\n    cta: \"Get Started!\"\r\n  }\r\n  if( index === 7 || index === 8 ){\r\n    data[\"text\"] = \"Merry Christmas <br> Sale!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet consectetur adipiscing elit, sed do eiusmod tempor incidunt ut labore et dolore\";\r\n  } else if( index === 9 || index === 11 || index === 22 ){\r\n    data[\"text\"] = \"Valentine's Day Sale!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet consectetur adipiscing elit, sed do eiusmod tempor incidunt ut labore et dolore\";\r\n  } else if( (index === 10 || index === 21) ){\r\n    data[\"text\"] = \"Spring Sale!!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet consectetur adipiscing elit, sed do eiusmod tempor incidunt ut labore et dolore magna aliqua\";\r\n  } else if( index === 12 ){\r\n    data[\"text\"] = \"Lorem ipsum dolor!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet consectetur adipiscing elit, sed do eiusmod tempor incidunt ut labore  et dolore magna\";\r\n    data[\"cta\"] = \"Get Started Now!\"\r\n  } else if( index === 13 ||  index === 15 ){\r\n    data[\"text\"] = \"St.Patrick's Day Sale!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet consectetur adipiscing elit, sed do eiusmod tempor incidunt ut labore  et dolore magna\";\r\n  } else if( index === 14 ){\r\n    data[\"text\"] = \"Smile Day Sale!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet consectetur adipiscing elit, sed do eiusmod tempor incidunt ut labore  et dolore magna\";\r\n  } else if( index === 16 ){\r\n    data[\"text\"] = \"Black Friday <br> Sale!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet consectetur adipiscing elit, sed do eiusmod tempor incidunt ut labore  et dolore magna\";\r\n  } else if( index === 17 ){\r\n    data[\"text\"] = \"Autumn Sale!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet consectetur adipiscing elit, sed do eiusmod tempor incidunt ut labore  et dolore magna\";\r\n  } else if( index === 18 || index === 19 ){\r\n    data[\"text\"] = \"Cyber Monday Sale!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet consectetur adipiscing elit, sed do eiusmod tempor incidunt ut labore  et dolore magna\";\r\n  } else if( index === 20 ){\r\n    data[\"text\"] = \"New Year Sale!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet consectetur adipiscing elit, sed do eiusmod tempor incidunt ut labore  et dolore magna\";\r\n  } \r\n\r\n  return data;\r\n}\r\n\r\nconst HelloBarContent = (index) => {\r\n  let data = {\r\n    text: \"Lorem ipsum nibh amet!\", \r\n    subTitle: \"Eiusmod tempor nibh veniam incididunt\",\r\n    cta: \"Get Started!\"\r\n  }\r\n  if( index === 10 || index === 11 || index === 12 || index === 22 || index === 23 ){\r\n    data[\"text\"] = \"Lorem ipsum dolor!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ut labore et dolore magna aliqua\";\r\n    data[\"cta\"] = `Get Started ${index === 10 ? \"Now!\" : \"!\"}`;\r\n  } else if( index === 13 ){\r\n    data[\"text\"] = \"Spring Sale!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor et dolore\";\r\n  } else if( index === 14 || index === 15 || index === 26 || index === 33){\r\n    data[\"text\"] = `Valentine's Day ${index === 26 ? \"Offer!\" : \"Sale!\"}`;\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor et dolore\";\r\n  } else if( index === 16 || index === 27 ){\r\n    data[\"text\"] = `Easter Sale${index === 27 ? \"!\" : \"\"}` ;\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor et dolore.\";\r\n  } else if( index === 17 ||  index === 18 ){\r\n    data[\"text\"] = \"St.Patrick's Day Sale!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor et dolore.\";\r\n  } else if( index === 19 ){\r\n    data[\"text\"] = \"Autumn Sale!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor et dolore.\";\r\n  } else if( index === 20 || index === 21 ){\r\n    data[\"text\"] = \"Cyber Monday Sale!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor et dolore.\";\r\n  } else if( index === 24 || index === 25 ){\r\n    data[\"text\"] = index === 25 ? \"Spring Season Sale!\" : \"Black Friday Sale!!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed diam nonummy nibh euismod\";\r\n  } else if( index === 28 || index ===29 ){\r\n    data[\"text\"] = `New Year Sale${index ===28 ? \"!\":\"\"}`;\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed diam nonummy nibh euismod\";\r\n  } else if( index === 30 || index === 31 || index === 32 ){\r\n    data[\"text\"] = index === 32 ? `Smile Day Sale!`:`Merry Christmas Sale!`;\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed diam nonummy nibh euismod\";\r\n  }\r\n  return data;\r\n}\r\n\r\nconst optinFormContent = (index) => {\r\n  let data = {\r\n    text: \"Lorem ipsum nibh amet!\", \r\n    subTitle: \"Lorem ipsum dolor sit amet, consectetur\",\r\n    cta: \"Get Started!\"\r\n  }\r\n\r\n  if( index === 0 || index === 1 || index === 2 || index === 12 || index === 13 ){\r\n    data[\"text\"] = \"Lorem ipsum dolor!\";\r\n    data[\"cta\"] = `Get Started ${index === 0 ? \"Now!\" : \"!\"}`;\r\n  } else if( index === 3 ){\r\n    data[\"text\"] = \"Spring Sale!\";\r\n  } else if( index === 4 || index === 5 || index === 16 || index === 23){\r\n    data[\"text\"] = `Valentine's Day ${index === 16 ? \"Offer!\" : \"Sale!\"}`;\r\n    data[\"subTitle\"] = index === 16 ? `Lorem ipsum dolor sit amet, consectetur<br>adipiscing elit, sed diam nonummy nibh euismod.`: \"Lorem ipsum dolor sit amet, consectetur\";\r\n  } else if( index === 6 || index === 17 ){\r\n    data[\"text\"] = `Easter Sale${index === 17 ? \"!\" : \"\"}` ;\r\n  } else if( index === 7 ||  index === 8 ){\r\n    data[\"text\"] = \"St.Patrick's Day Sale!\";\r\n  } else if( index === 9 ){\r\n    data[\"text\"] = \"Autumn Sale!\";\r\n  } else if( index === 10 || index === 11 ){\r\n    data[\"text\"] = \"Cyber Monday Sale!\";\r\n  } else if( index === 14 || index === 15 ){\r\n    data[\"text\"] = index === 15 ? \"Spring Season Sale!\" : \"Black Friday Sale!!\";\r\n  } else if( index === 18 || index === 19 ){\r\n    data[\"text\"] = `New Year Sale${index === 18 ? \"!\":\"\"}`;\r\n    data[\"subTitle\"] = index === 19 ? `Lorem ipsum dolor sit amet, consectetur<br>adipiscing elit, sed diam nonummy nibh euismod.`: \"Lorem ipsum dolor sit amet, consectetur\";\r\n  } else if( index === 20 || index === 21 || index === 22 ){\r\n    data[\"text\"] = index === 22 ? `Smile Day Sale!`:`Merry Christmas Sale!`;\r\n  }\r\n  return data;\r\n}\r\n\r\nconst optinExitIntentContent = (index) => {\r\n  let data = {\r\n    text: \"Lorem ipsum nibh amet!\", \r\n    subTitle: \"Eiusmod tempor nibh veniam incididunt\",\r\n    cta: \"Get Started!\"\r\n  }\r\n  if( index === 0 || index === 1 ){\r\n    data[\"text\"] = \"Merry Christmas <br> Sale!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet consectetur adipiscing elit, sed do eiusmod tempor incidunt ut labore et dolore\";\r\n  } else if( index === 2 || index === 4 || index === 15 || index === 22 ){\r\n    data[\"text\"] = `Valentine's Day ${index === 22 ? \"Offer!\" : \"Sale!\"}`;\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet consectetur adipiscing elit, sed do eiusmod tempor incidunt ut labore et dolore\";\r\n  } else if( (index === 3 || index === 14 || index === 17 || index === 19 ) ){\r\n    data[\"text\"] = `Spring ${index === 17 || index === 19 ? \"Season Sale!\" : \"Sale!!\"}`;\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet consectetur adipiscing elit, sed do eiusmod tempor incidunt ut labore et dolore magna aliqua\";\r\n  } else if( index === 5 || index === 16 || index === 18 ){\r\n    data[\"text\"] = \"Lorem ipsum dolor!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet consectetur adipiscing elit, sed do eiusmod tempor incidunt ut labore  et dolore magna\";\r\n    data[\"cta\"] = \"Get Started Now!\"\r\n  } else if( index === 6 ||  index === 8 ){\r\n    data[\"text\"] = \"St.Patrick's Day Sale!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet consectetur adipiscing elit, sed do eiusmod tempor incidunt ut labore  et dolore magna\";\r\n  } else if( index === 7 ){\r\n    data[\"text\"] = \"Smile Day Sale!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet consectetur adipiscing elit, sed do eiusmod tempor incidunt ut labore  et dolore magna\";\r\n  } else if( index === 9 ){\r\n    data[\"text\"] = \"Black Friday <br> Sale!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet consectetur adipiscing elit, sed do eiusmod tempor incidunt ut labore  et dolore magna\";\r\n  } else if( index === 10 ){\r\n    data[\"text\"] = \"Autumn Sale!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet consectetur adipiscing elit, sed do eiusmod tempor incidunt ut labore  et dolore magna\";\r\n  } else if( index === 11 || index === 12 ){\r\n    data[\"text\"] = \"Cyber Monday Sale!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet, consectetur\";\r\n  } else if( index === 13 || index === 23 ){\r\n    data[\"text\"] = \"New Year Sale!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet consectetur adipiscing elit, sed do eiusmod tempor incidunt ut labore  et dolore magna\";\r\n  } else if ( index === 20 || index === 21 ){\r\n    data[\"text\"] = \"Easter Sale!\";\r\n    data[\"subTitle\"] = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incidunt ut labore  et dolore magna\";\r\n  }\r\n\r\n  return data;\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ReviewEngin/index.js",["1207","1208","1209","1210"],"import React, { Component } from \"react\";\r\nimport SideBar from \"./SideBar\";\r\nimport ToolUtil from \"../../utils/ToolUtil\";\r\nimport Util from \"../Util\";\r\nimport Text from \"./Text\";\r\nimport { ToolLayout, ButtonsGroup } from \"../layout/ToolLayout\";\r\nimport { SAVE_TOOL, GET_ONE_TOOL } from \"../../actions/URLs\";\r\nimport { OTO2, BONUS_CREATE } from \"../../utils/Routes\";\r\nimport RequestHandler from \"../../actions/RequestHandler\";\r\nimport { Modal } from \"antd\";\r\nimport Style from \"./Style\";\r\nimport Code from \"./Code\";\r\nimport { OptinFormModalResponse, OptinFormModal } from \"../utils/Modal\";\r\nimport { Preview } from \"./Preview\";\r\nimport { ReponsiveImage } from \"../comman/PreviewAble\";\r\n\r\nexport default class ReviewEngin extends Component {\r\n  state = {\r\n    toolName: \"\",\r\n    toolId: \"\",\r\n    preview: false,\r\n    _id: null,\r\n    activeTab: 2,\r\n    toolData: {\r\n      style: [{ name: \"Background\", id: \"backgound\", value: \"#fff3ea\" }],\r\n      items: [],\r\n      position: \"left\",\r\n    },\r\n    CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: null }] },\r\n  };\r\n  loaded = false;\r\n\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        this.loaded = true;\r\n        if (res) {\r\n          Util.isRedirected = true;\r\n          const data = OptinFormModalResponse(res);\r\n          if (data) {\r\n            this.setState(data, () => {\r\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const toolId = 21;\r\n      this.loaded = true;\r\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\r\n      Util.RedirectWhenCampaignEmpty(this.props);\r\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \" \" + \"(\" + Util.CAMPAIGNS_NAME + \")\");\r\n      delete window.gs.defaultLayout;\r\n    }\r\n  }\r\n\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n\r\n  codeChange = (data) => {\r\n    this.setState({ CODE: data });\r\n  };\r\n\r\n  onUpdate = (data) => {\r\n    const { toolData } = this.state;\r\n    this.setState({ toolData: { ...toolData, ...data } });\r\n  };\r\n\r\n  renderMain = () => {\r\n    const { activeTab, toolData, CODE } = this.state;\r\n    let component = null;\r\n    if (!this.loaded) return null;\r\n    switch (activeTab) {\r\n      case 2:\r\n        component = <Text items={toolData.items} position={toolData.position} onChange={this.onUpdate} />;\r\n        break;\r\n      case 4:\r\n        component = <Style style={toolData.style} onChange={this.onUpdate} />;\r\n        break;\r\n      case 5:\r\n        component = <Code {...CODE} onChange={this.codeChange} />;\r\n        break;\r\n      default:\r\n        component = <Text onChange={this.onUpdate} />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    if (this.state.CODE.include[0].url !== \"\") {\r\n      RequestHandler.PostRequest(SAVE_TOOL, { toolData: OptinFormModal(this.state) }, (res, err) => {\r\n        if (res) {\r\n          const data1 = res.data;\r\n          if (data1.success) {\r\n            Modal.success({\r\n              content: data1.message,\r\n            });\r\n            setTimeout(() => {\r\n              this.props.history.push(\"/Campaigns\");\r\n            }, 1000);\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      Modal.warning({\r\n        content: \"Should Contain atleast one trigger point\",\r\n      });\r\n    }\r\n  };\r\n\r\n  renderRight = () => {\r\n    // return <ReponsiveImage isAs={true} url={\"asset/hb3.png\"} />;\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(BONUS_CREATE);\r\n  };\r\n\r\n  // togglePreview = () => {\r\n  //   const { preview } = this.state;\r\n  //   this.setState({ preview: !preview });\r\n  // };\r\n\r\n  render() {\r\n    // const { preview } = this.state;\r\n    return (\r\n      <ToolLayout>\r\n        {/* {preview ? <Preview {...this.state} onClose={this.togglePreview} /> : null} */}\r\n        <div className=\"row\">\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\r\n              <ButtonsGroup backUrl={this.back} preview={this.togglePreview} save={this.onClickSave} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/SpecialBonusOptin/index.js",["1211","1212","1213","1214","1215","1216","1217","1218","1219","1220","1221","1222","1223"],"import React, { Component } from \"react\";\r\nimport SideBar from \"./SideBar\";\r\nimport ToolUtil, { generateIframeContant, getDefaultItems } from \"../../utils/ToolUtil\";\r\nimport Util, { generateFile, parseImgUrl } from \"../Util\";\r\nimport Text from \"./Text\";\r\nimport CTA from \"./CTA\";\r\nimport { ToolLayout, ButtonsGroup } from \"../layout/ToolLayout\";\r\nimport { getPath, GET_PIXEL, SAVE_TOOL, GET_ONE_TOOL } from \"../../actions/URLs\";\r\nimport { OTO2 } from \"../../utils/Routes\";\r\nimport RequestHandler from \"../../actions/RequestHandler\";\r\nimport { Modal } from \"antd\";\r\nimport { LayoutSelector } from \"../layout/LayoutSelector\";\r\nimport { OptinFormModalResponse, OptinFormModal } from \"../utils/Modal\";\r\nimport { Preview } from \"./Preview\";\r\nimport { ReponsiveImage } from \"../comman/PreviewAble\";\r\nimport Code from \"./Code\";\r\n\r\nexport default class SpecialBonusOptin extends Component {\r\n  state = {\r\n    toolName: \"\",\r\n    toolId: \"\",\r\n    preview: false,\r\n    _id: null,\r\n    activeTab: 2,\r\n    toolData: {\r\n      text: '<span style=\"font-size: 36px;\"><font color=\"#ff9c00\">Converzee</font></span>',\r\n      cta: '<font color=\"#efefef\"><span style=\"font-size: 18px;\">Buy Now</span></font>',\r\n      layout: 0,\r\n      template: 0,\r\n      style: [\r\n        { name: \"Background\", id: \"backgound\", value: \"TRANSPARENT\" },\r\n        { name: \"CTA Backgound\", id: \"ctabackgound\", value: \"#ff3a65\" },\r\n      ],\r\n      timerType: \"DATE_AND_TIME_BASED\",\r\n      endDateTime: \"\",\r\n      timeZone: Util.getTimeZoneList()[0].value,\r\n      postExpiryAction: \"hide\",\r\n      redirectUrl: \"\",\r\n      days: 2,\r\n      hours: 2,\r\n      minutes: 2,\r\n      seconds: 2,\r\n      bgImg: \"#fff\",\r\n      isBGIMG: false,\r\n      noThanks: \"No thanks\",\r\n      subTitle: \"Subtitle here\",\r\n      position: \"TOP\",\r\n      isNameInput: false,\r\n    },\r\n    CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: null }] },\r\n  };\r\n  loaded = false;\r\n  layouts = [];\r\n  templates = [];\r\n\r\n  componentWillMount() {\r\n    if (window.gs.ie) {\r\n      const ie = getDefaultItems(window.gs.ie);\r\n      let { toolData } = this.state;\r\n      this.state.toolData = { ...toolData, ...ie };\r\n      window.gs.ie = null;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        this.loaded = true;\r\n        if (res) {\r\n          Util.isRedirected = true;\r\n          const data = OptinFormModalResponse(res);\r\n          this.setTemplateslayout(this.state.toolData.layout);\r\n          if (data) {\r\n            this.setState(data, () => {\r\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"  \" + this.getLayoutName(this.state.toolData.layout) + \"  \" + \"(\" + data.name + \")\");\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const toolId = 23;\r\n      this.loaded = true;\r\n      const defLayout = window.gs.defaultLayout || 0;\r\n      this.setTemplateslayout(defLayout);\r\n      this.onLayoutChange(defLayout);\r\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\r\n      Util.RedirectWhenCampaignEmpty(this.props);\r\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"  \" + this.getLayoutName(defLayout) + \"  \" + \"(\" + Util.CAMPAIGNS_NAME + \")\");\r\n      delete window.gs.defaultLayout;\r\n    }\r\n  }\r\n  getLayoutName = (i) => {\r\n    if (i == 0) return \"Hello Bar\";\r\n    if (i == 1) return \"Hello Bar + Timer\";\r\n    if (i == 2) return \"Exit Intent\";\r\n  };\r\n\r\n  onLayoutChange = (index) => {\r\n    const { toolData } = this.state;\r\n    this.setState({ toolData: { ...toolData, layout: index } });\r\n  };\r\n\r\n  onTemplateChange = (index) => {\r\n    const { toolData } = this.state;\r\n    this.setState({ toolData: { ...toolData, template: index } });\r\n  };\r\n\r\n  setTemplateslayout = (layout) => {\r\n    if (layout == 0) {\r\n      this.templates = [\r\n        \"asset/optin-layouts/hello/h1.PNG\",\r\n        \"asset/optin-layouts/hello/h2.PNG\",\r\n        \"asset/optin-layouts/hello/h3.PNG\",\r\n        \"asset/optin-layouts/hello/h4.PNG\",\r\n        \"asset/optin-layouts/hello/h5.PNG\",\r\n      ];\r\n    } else {\r\n      this.templates = [\"asset/optin-layouts/exit/1.png\", \"asset/optin-layouts/exit/2.png\", \"asset/optin-layouts/exit/3.png\", \"asset/optin-layouts/exit/4.png\", \"asset/optin-layouts/exit/5.png\"];\r\n    }\r\n  };\r\n\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n\r\n  codeChange = (data) => {\r\n    this.setState({ CODE: data });\r\n  };\r\n\r\n  onUpdate = (data) => {\r\n    const { toolData } = this.state;\r\n    this.setState({ toolData: { ...toolData, ...data } });\r\n  };\r\n\r\n  renderMain = () => {\r\n    const { activeTab, toolData, CODE } = this.state;\r\n    let component = null;\r\n    if (!this.loaded) return null;\r\n    switch (activeTab) {\r\n      case 1:\r\n        component = <LayoutSelector isExit={toolData.layout == 2 ? true : false} onLayoutSelect={this.onTemplateChange} selected={toolData.template} items={this.templates} />;\r\n        break;\r\n      case 2:\r\n        component = <Text text={toolData.text} isNameInput={toolData.isNameInput} noThanks={toolData.noThanks} subTitle={toolData.subTitle} layout={toolData.layout} onChange={this.onUpdate} />;\r\n        break;\r\n      case 3:\r\n        component = <CTA cta={toolData.cta} position={toolData.position} layout={toolData.layout} onChange={this.onUpdate} />;\r\n        break;\r\n      case 5:\r\n        component = <Code {...CODE} onChange={this.codeChange} />;\r\n        break;\r\n      default:\r\n        component = <Text onChange={this.onUpdate} />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    if (this.state.CODE.include[0].url !== \"\") {\r\n      RequestHandler.PostRequest(SAVE_TOOL, { toolData: OptinFormModal(this.state) }, (res, err) => {\r\n        if (res) {\r\n          const data1 = res.data;\r\n          if (data1.success) {\r\n            Modal.success({\r\n              content: data1.message,\r\n            });\r\n            setTimeout(() => {\r\n              this.props.history.push(\"/Campaigns\");\r\n            }, 1000);\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      Modal.warning({\r\n        content: \"Should Contain atleast one trigger point\",\r\n      });\r\n    }\r\n  };\r\n\r\n  renderRight = () => {\r\n    const { toolData } = this.state;\r\n    if (toolData.layout === 2 && toolData.isBGIMG) {\r\n      return <ReponsiveImage isImg={true} url={toolData.bgImg} />;\r\n    }\r\n    if (toolData.layout === 0) {\r\n      return <ReponsiveImage isAs={true} url={\"asset/hb3.png\"} />;\r\n    }\r\n    if (toolData.layout === 1) {\r\n      return <ReponsiveImage isAs={true} url={\"asset/hbt3.png\"} />;\r\n    }\r\n    if (toolData.layout === 2) {\r\n      return <ReponsiveImage isAs={true} url={\"asset/exit_pop_up.png\"} />;\r\n    }\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(OTO2);\r\n  };\r\n\r\n  togglePreview = () => {\r\n    const { preview } = this.state;\r\n    this.setState({ preview: !preview });\r\n  };\r\n\r\n  render() {\r\n    const { preview } = this.state;\r\n    return (\r\n      <ToolLayout>\r\n        {preview ? <Preview {...this.state} onClose={this.togglePreview} /> : null}\r\n        <div className=\"row\">\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\r\n              <ButtonsGroup backUrl={this.back} preview={this.togglePreview} save={this.onClickSave} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <SideBar layout={this.state.toolData.layout} activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/TabMessaging/index.js",["1224","1225"],"import React, { Component } from \"react\";\r\nimport \"../../Create.css\";\r\nimport Favicon from \"./Favicon\";\r\nimport Timing from \"./Timing\";\r\nimport Code from \"../../../subpages/create/Code\";\r\nimport RequestHandler from \"../../../../actions/RequestHandler\";\r\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath } from \"../../../../actions/URLs\";\r\nimport Text from \"./Text\";\r\nimport SideBar from \"./SideBar\";\r\nimport ToolUtil from \"../../../../utils/ToolUtil\";\r\nimport Util from \"../../../Util\";\r\nimport \"./Tab.css\";\r\nimport { TabMessagingModal, TabMessagingModalResponse } from \"../../../utils/Modal\";\r\nimport { ToolLayout, ButtonsGroup } from \"../../../layout/ToolLayout\";\r\nimport { Modal } from \"antd\";\r\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\r\n\r\nconst tabMessgae = {\r\n  name: \"\",\r\n  activeTab: 1,\r\n  isImage: false,\r\n  emoji: \"🔥\",\r\n  FAVICON: \"\",\r\n  messages: [],\r\n  timeFirstMsg: 0,\r\n  timeBetweenTwoMsg: 2,\r\n  SOUND: false,\r\n  CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: \"\" }] },\r\n  randomMsg: \"\"\r\n};\r\nexport default class TabMessaging extends Component {\r\n  state = {\r\n    name: \"\",\r\n    activeTab: 1,\r\n    isImage: false,\r\n    emoji: \"🔥\",\r\n    FAVICON: \"\",\r\n    messages: [],\r\n    timeFirstMsg: 0,\r\n    timeBetweenTwoMsg: 2,\r\n    SOUND: false,\r\n    CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: \"\" }] },\r\n    randomMsg: \"\"\r\n  };\r\n  randomText = [\r\n    \"Hey \\ud83d\\udc4b, Don't Miss Out\", \r\n    \"Don’t forget…\", \r\n    \"Buy Now\",\r\n    \"Notification 👋\",\r\n    \"We have something 😻\",\r\n    \"Hey there Come back 🤝\",\r\n    \"Hellooooooooo😊\",\r\n    \"CoooooooL!😀\",\r\n    \"Reward Points About To Expire 💸\",\r\n    \"It’s Hotttttttt 🔥\",\r\n    \"SALE is on 😍\",\r\n    \"Woohoo! You did it!🤑\",\r\n    \"Become the #1 Shopper 🛍\",\r\n    \"It’s Been A While And We Miss You 🥰\",\r\n    \"Something New For You 😇\",\r\n    \"Here’s something for you 🎁\",\r\n    \"Did You Know 🤔🧐\",\r\n  ];\r\n\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        if (res) {\r\n          Util.isRedirected = true;\r\n          const data = TabMessagingModalResponse(res);\r\n          if (data) {\r\n            this.setState(data, () => {\r\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const toolId = 1;\r\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\r\n      Util.RedirectWhenCampaignEmpty(this.props);\r\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\r\n    }\r\n  }\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n  onUpdate = (index, data) => {\r\n    switch (index) {\r\n      case 1:\r\n        this.setState({ messages: data });\r\n        break;\r\n      case 2:\r\n        this.setState({ FAVICON: data });\r\n        break;\r\n      case 3:\r\n        this.setState({ TIMING: data });\r\n        break;\r\n      case 4:\r\n        this.setState({ SOUND: data });\r\n        break;\r\n      case 5:\r\n        this.setState({ CODE: data });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  updateChange = (value) => {\r\n    this.setState(value);\r\n  };\r\n  renderMain = () => {\r\n    const { activeTab, messages, isImage, emoji, FAVICON, timeFirstMsg, timeBetweenTwoMsg, TIMING, SOUND, CODE } = this.state;\r\n    let component = null;\r\n    switch (activeTab) {\r\n      case 1:\r\n        component = <Text messages={messages} randomText={this.randomText} onChange={this.updateChange} />;\r\n        break;\r\n      case 2:\r\n        component = <Favicon isImage={isImage} emoji={emoji} FAVICON={FAVICON} onChange={this.updateChange} />;\r\n        break;\r\n      case 3:\r\n        component = <Timing timeFirstMsg={timeFirstMsg} SOUND={SOUND} timeBetweenTwoMsg={timeBetweenTwoMsg} onChange={this.updateChange} />;\r\n        break;\r\n      case 5:\r\n        component = <Code {...CODE} case={5} onChange={this.onUpdate} />;\r\n        break;\r\n      default:\r\n        component = <Text messages={messages} onChange={this.onUpdate} />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    const toolData = this.state;\r\n    if (this.state.CODE.include[0].url !== \"\") {\r\n      if (!Util.isArrayEqual(tabMessgae, this.state, 3)) {\r\n        RequestHandler.PostRequest(SAVE_TOOL, { toolData: TabMessagingModal(toolData) }, (res, err) => {\r\n          if (res) {\r\n            if (res.data.success) {\r\n              Modal.success({\r\n                content: \"Campaign Save SuccessFully\",\r\n              });\r\n              this.setState({\r\n                randomMsg: \"\",\r\n                messages: [],\r\n              });\r\n              setTimeout(() => {\r\n                this.props.history.push(\"/Campaigns\");\r\n              }, 2000);\r\n            } else {\r\n              window.gs.toast(res.data.message, { position: \"bottom-right\", autoClose: true, type: window.gs.toast.TYPE.ERROR });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      Modal.warning({\r\n        content: \"Should Contain atleast one trigger point\",\r\n      });\r\n    }\r\n  };\r\n\r\n  renderRight = () => {\r\n    const { activeTab } = this.state;\r\n    return ( activeTab !== 1 ? <ReponsiveImage isAs={true} url={\"asset/tab.png\"} /> : <div className=\"sample_msg\">\r\n      <h3>Sample Messages</h3>\r\n      <ul className=\"list-group list-group-flush\">{this.randomText.map(this.renderRandomMsgList)}</ul>\r\n      </div>);\r\n  };\r\n\r\n  renderRandomMsgList = (item, index) => {\r\n    return (\r\n      <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={item + index}>\r\n        {item}\r\n        <span className=\"badge badge-success badge-pill msg_add_btn\">\r\n          <i onClick={() => { \r\n            this.setState({ randomMsg: item });\r\n            setTimeout(() => {\r\n              this.addmessage()\r\n            }, 100);\r\n          }} title=\"Remove\" className=\"fa fa-plus-circle\" aria-hidden=\"true\" />\r\n        </span>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  addmessage = () => {\r\n    const { randomMsg, messages } = this.state;\r\n    if (randomMsg !== null && randomMsg !== \"\" && !messages.includes(randomMsg)) {\r\n      messages.push(randomMsg);\r\n      this.updateChange({ messages: messages });\r\n    } else {\r\n      window.gs.toast(\"Message Should be unique\", { position: \"top-right\", type: window.gs.toast.TYPE.ERROR });\r\n    }\r\n  };\r\n\r\n  onDrawerClose = () => {\r\n    if (this.state.visible) this.setState({ visible: false });\r\n    else this.setState({ visible: true });\r\n  };\r\n\r\n  back = () => {\r\n    this.setState({ \r\n      randomMsg: \"\",\r\n      messages: [],\r\n    });\r\n    this.props.history.push(\"/Create\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ToolLayout>\r\n        <div className=\"row\">\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">{this.renderMain()}</div>\r\n              <div className=\"col-md-6\">{this.renderRight()}</div>\r\n              <ButtonsGroup backUrl={this.back} save={this.onClickSave} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/UrgencyTimer/index.js",["1226","1227","1228"],"import React, { Component } from \"react\";\r\nimport \"../../Create.css\";\r\nimport Code from \"../../../subpages/create/Code\";\r\nimport RequestHandler from \"../../../../actions/RequestHandler\";\r\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath, getBGPath } from \"../../../../actions/URLs\";\r\nimport Text from \"./Text\";\r\nimport SideBar from \"./SideBar\";\r\nimport ToolUtil from \"../../../../utils/ToolUtil\";\r\nimport Timer from \"./Timer\";\r\nimport Style from \"./Style\";\r\nimport Preview from \"./Preview\";\r\nimport Util from \"../../../Util\";\r\nimport _ from \"lodash\";\r\nimport { UrgencyTimerModal, UrgencyTimerModalResponse } from \"../../../utils/Modal\";\r\nimport { ToolLayout, ButtonsGroup } from \"../../../layout/ToolLayout\";\r\nimport { Modal } from \"antd\";\r\nconst urgency = {\r\n  activeTab: 2,\r\n  showTimer: true,\r\n  TEXT: { campaignName: \"\", redirectUrl: \"\" },\r\n  TIMER: { HH: 0, MM: 0, SS: 0 },\r\n  STYLE: {\r\n    elements: [\r\n      { name: \"timerText\", text: \"Timer Color\", color: \"\" },\r\n      { name: \"centralTimerLabel\", text: \"Label Color\", color: \"\" },\r\n    ],\r\n    selected: 0,\r\n    labelFont: 30,\r\n    timerFont: 30,\r\n    labelBold: 200,\r\n    timerBold: 200,\r\n  },\r\n  toolData: { HH: \"H\", MM: \"M\", SS: \"S\" },\r\n  CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: \"\" }] },\r\n  preview: false,\r\n};\r\nexport default class UrgencyTimer extends Component {\r\n  state = urgency;\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      Util.isRedirected = true;\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        if (res) {\r\n          const data = UrgencyTimerModalResponse(res);\r\n          if (data) {\r\n            this.setState(data, () => {\r\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const toolId = 2;\r\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\r\n      Util.RedirectWhenCampaignEmpty(this.props);\r\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\r\n    }\r\n  }\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n  onUpdate = (index, data) => {\r\n    switch (index) {\r\n      case 1:\r\n        this.setState({ TEXT: data });\r\n        break;\r\n      case 2:\r\n        this.setState({ TIMER: data });\r\n        break;\r\n      case 3:\r\n        this.setState({ STYLE: data });\r\n        break;\r\n      case 4:\r\n        this.setState({ CODE: data });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  renderMain = () => {\r\n    const { activeTab, TEXT, TIMER, STYLE, CODE, toolData } = this.state;\r\n    let component = null;\r\n    switch (activeTab) {\r\n      case 1:\r\n        component = <Text {...TEXT} toolData={toolData} onChange={this.onUpdate} />;\r\n        break;\r\n      case 2:\r\n        component = <Timer TIMER={TIMER} onChange={this.onUpdate} />;\r\n        break;\r\n      case 3:\r\n        component = <Style {...STYLE} case={3} onChange={this.onUpdate} />;\r\n        break;\r\n      case 4:\r\n        component = <Code {...CODE} case={4} onChange={this.onUpdate} />;\r\n        break;\r\n      default:\r\n        component = <Text {...TEXT} onChange={this.onUpdate} />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    const toolData = this.state;\r\n    if (this.state.CODE.include[0].url !== \"\") {\r\n      if (!Util.isArrayEqual(urgency, this.state)) {\r\n        RequestHandler.PostRequest(SAVE_TOOL, { toolData: UrgencyTimerModal(toolData) }, (res, err) => {\r\n          if (res) {\r\n            if (res.data.script) {\r\n              window.gs.setScript(res.data.script);\r\n              setTimeout(() => {\r\n                this.props.history.push(\"/Campaigns\");\r\n              }, 3000);\r\n            } else {\r\n              window.gs.toast(res.data.message, { position: \"bottom-right\", type: window.gs.toast.TYPE.FAILED });\r\n            }\r\n          } else {\r\n            console.log(err);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      Modal.warning({\r\n        content: \"Should Contain atleast one trigger point\",\r\n      });\r\n    }\r\n  };\r\n\r\n  renderRight = () => {\r\n    const { showTimer } = this.state;\r\n    return showTimer ? (\r\n      <center>\r\n        <Preview {...this.state} />\r\n      </center>\r\n    ) : (\r\n      \"\"\r\n    );\r\n  };\r\n\r\n  refreshTimer = () => {\r\n    this.setState({ showTimer: false }, () => {\r\n      this.setState({ showTimer: true });\r\n    });\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(\"/Create\");\r\n  };\r\n\r\n  render() {\r\n    const { preview } = this.state;\r\n\r\n    return (\r\n      <ToolLayout>\r\n        <div className=\"row\">\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\" style={{ minHeight: \"495px\" }}>\r\n              <div className=\"col-md-6\">{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\" style={{ backgroundSize: \"contain\", padding: \"5%\", backgroundRepeat: \"no-repeat\", backgroundImage: getBGPath(\"/asset/centralTimerBg.png\") }}>\r\n                {this.renderRight()}\r\n              </div>\r\n              <ButtonsGroup refresh={this.refreshTimer} backUrl={this.back} save={this.onClickSave} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ImagePopup/index.js",["1229"],"import React, { Component } from \"react\";\r\nimport \"../../Create.css\";\r\nimport Code from \"../../../subpages/create/Code\";\r\nimport RequestHandler from \"../../../../actions/RequestHandler\";\r\nimport { GET_ONE_TOOL, SAVE_TOOL } from \"../../../../actions/URLs\";\r\nimport Text from \"./Text\";\r\nimport SideBar from \"./SideBar\";\r\nimport ToolUtil from \"../../../../utils/ToolUtil\";\r\nimport Image from \"./Image\";\r\nimport Style from \"../../../subpages/create/Style\";\r\nimport Preview from \"./Preview\";\r\nimport Util from \"../../../Util\";\r\nimport { ImagePopupModalResponse, ImagePopupModal } from \"../../../utils/Modal\";\r\nimport { Modal } from \"antd\";\r\nimport { ButtonsGroup, ToolLayout } from \"../../../layout/ToolLayout\";\r\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\r\n\r\nconst imagePop = {\r\n  activeTab: 1,\r\n  TEXT: { campaignName: \"\" },\r\n  image: \"\",\r\n  STYLE: {\r\n    elements: [{ name: \"highlightBackground\", text: \"Highlight Background\", color: \"\" }],\r\n    selected: 0,\r\n  },\r\n  CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: \"\" }] },\r\n};\r\nexport default class ImagePopup extends Component {\r\n  state = imagePop;\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        if (res) {\r\n          Util.isRedirected = true;\r\n          const data = ImagePopupModalResponse(res);\r\n          if (data) {\r\n            this.setState(data, () => {\r\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const toolId = 4;\r\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\r\n      Util.RedirectWhenCampaignEmpty(this.props);\r\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\r\n    }\r\n  }\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n  onUpdate = (index, data) => {\r\n    switch (index) {\r\n      case 1:\r\n        this.setState({ TEXT: data });\r\n        break;\r\n      case 2:\r\n        this.setState({ image: data });\r\n        break;\r\n      case 3:\r\n        this.setState({ STYLE: data });\r\n        break;\r\n      case 4:\r\n        this.setState({ CODE: data });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  renderMain = () => {\r\n    const { activeTab, TEXT, image, STYLE, CODE } = this.state;\r\n    let component = null;\r\n    switch (activeTab) {\r\n      case 15:\r\n        component = <Text {...TEXT} onChange={this.onUpdate} />;\r\n        break;\r\n      case 1:\r\n        component = <Image image={image} onChange={this.onUpdate} />;\r\n        break;\r\n      case 2:\r\n        component = <Style {...STYLE} case={3} onChange={this.onUpdate} />;\r\n        break;\r\n      case 3:\r\n        component = <Code {...CODE} case={4} onChange={this.onUpdate} />;\r\n        break;\r\n      default:\r\n        // component = <Text {...TEXT} onChange={this.onUpdate} />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    const toolData = this.state;\r\n    if (this.state.CODE.include[0].url !== \"\") {\r\n      if (!Util.isArrayEqual(imagePop, this.state, 3)) {\r\n        RequestHandler.PostRequest(SAVE_TOOL, { toolData: ImagePopupModal(toolData) }, (res, err) => {\r\n          if (res) {\r\n            if (res.data.script) {\r\n              window.gs.setScript(res.data.script);\r\n              setTimeout(() => {\r\n                this.props.history.push(\"/Campaigns\");\r\n              }, 3000);\r\n            } else {\r\n              window.gs.toast(res.data.message, { position: \"bottom-right\", type: window.gs.toast.TYPE.FAILED });\r\n            }\r\n          } else {\r\n            console.log(err);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      Modal.warning({\r\n        content: \"Should Contain atleast one trigger point\",\r\n      });\r\n    }\r\n  };\r\n\r\n  renderRight = () => {\r\n    const { activeTab, image } = this.state;\r\n    if (activeTab === 1 && image) return <ReponsiveImage isImg={true} url={image} />;\r\n    return <ReponsiveImage isAs={true} url={\"asset/image_pop_up.png\"} />;\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(\"/Create\");\r\n  };\r\n\r\n  closePopup = () => {\r\n    this.setState({ preview: false });\r\n  };\r\n\r\n  render() {\r\n    const { preview, image } = this.state;\r\n    return (\r\n      <ToolLayout>\r\n        <div className=\"row loki\">\r\n          {preview ? <Preview {...this.state} closePopup={this.closePopup} /> : null}\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\r\n              <ButtonsGroup\r\n                preview={ image!=\"\" ? () => {\r\n                  this.setState({ preview: !preview });\r\n                } : null}\r\n                backUrl={this.back}\r\n                save={this.onClickSave}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/index.js",["1230","1231","1232"],"import React, { Component } from \"react\";\r\nimport \"../../Create.css\";\r\nimport Code from \"../../../subpages/create/Code\";\r\nimport RequestHandler from \"../../../../actions/RequestHandler\";\r\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath } from \"../../../../actions/URLs\";\r\nimport Text from \"./Text\";\r\nimport SideBar from \"./SideBar\";\r\nimport ToolUtil from \"../../../../utils/ToolUtil\";\r\nimport Style from \"./Style\";\r\nimport Video from \"./Video\";\r\nimport Preview from \"./Preview\";\r\nimport Util from \"../../../Util\";\r\nimport { VideoPopUpModalResponse, VideoPopUpModal } from \"../../../utils/Modal\";\r\nimport Image from \"./Image\";\r\nimport { ToolLayout, ButtonsGroup } from \"../../../layout/ToolLayout\";\r\nimport { Modal } from \"antd\";\r\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\r\n\r\nconst vidoPop = {\r\n  activeTab: 1,\r\n  image: \"\",\r\n  TEXT: { campaignName: \"\" },\r\n  video: { url: \"\", videoType: \"youtube\" },\r\n  STYLE: {\r\n    elements: [{ name: \"background\", text: \"Video Background\", color: \"\" }],\r\n    switchElement: false,\r\n    selected: 0,\r\n  },\r\n  CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: \"\" }] },\r\n};\r\nexport default class VideoPopup extends Component {\r\n  state = vidoPop;\r\n  loaded = false;\r\n  onVideoChange = (switchElement) => {\r\n    this.setState({ STYLE: { switchElement } });\r\n  };\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        if (res) {\r\n          this.loaded = true;\r\n          Util.isRedirected = true;\r\n          const data = VideoPopUpModalResponse(res);\r\n          if (data) {\r\n            this.setState(data, () => {\r\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const toolId = 5;\r\n      this.loaded = true;\r\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\r\n      Util.RedirectWhenCampaignEmpty(this.props);\r\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\r\n    }\r\n  }\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n  onUpdate = (index, data) => {\r\n    switch (index) {\r\n      case 1:\r\n        this.setState({ TEXT: data });\r\n        break;\r\n      case 2:\r\n        this.setState({ video: data });\r\n        break;\r\n      case 3:\r\n        this.setState({ STYLE: data });\r\n        break;\r\n      case 4:\r\n        this.setState({ CODE: data });\r\n        break;\r\n      case 5:\r\n        this.setState({ image: data });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  renderMain = () => {\r\n    const { activeTab, TEXT, video, STYLE, CODE, image } = this.state;\r\n    if (!this.loaded) return null;\r\n    let component = null;\r\n    switch (activeTab) {\r\n      case 15:\r\n        component = <Text {...TEXT} onChange={this.onUpdate} />;\r\n        break;\r\n      case 1:\r\n        component = <Video {...video} onVideoChange={this.onVideoChange} switchElement={STYLE.switchElement} onChange={this.onUpdate} />;\r\n        break;\r\n      case 2:\r\n        component = <Style {...STYLE} case={3} onChange={this.onUpdate} />;\r\n        break;\r\n      case 3:\r\n        component = <Code {...CODE} case={4} onChange={this.onUpdate} />;\r\n        break;\r\n      case 4:\r\n        component = <Image image={image} case={5} onChange={this.onUpdate} />;\r\n        break;\r\n      default:\r\n        component = <Text {...TEXT} onChange={this.onUpdate} />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    const toolData = this.state;\r\n    if (this.state.CODE.include[0].url !== \"\") {\r\n      if (!Util.isArrayEqual(vidoPop, this.state, 3)) {\r\n        if(toolData.image != \"\") {\r\n          RequestHandler.PostRequest(SAVE_TOOL, { toolData: VideoPopUpModal(toolData) }, (res, err) => {\r\n            if (res) {\r\n              if (res.data.script) {\r\n                window.gs.setScript(res.data.script);\r\n                setTimeout(() => {\r\n                  this.props.history.push(\"/Campaigns\");\r\n                }, 3000);\r\n              } else {\r\n                window.gs.toast(res.data.message, { position: \"bottom-right\", type: window.gs.toast.TYPE.FAILED });\r\n              }\r\n            } else {\r\n              console.log(err);\r\n            }\r\n          });\r\n        } else {\r\n          window.gs.toast(\"Please select thumb file.\", { position: \"bottom-right\", type: window.gs.toast.TYPE.ERROR });\r\n        }\r\n      }\r\n    } else {\r\n      Modal.warning({\r\n        content: \"Should Contain atleast one trigger point\",\r\n      });\r\n    }\r\n  };\r\n\r\n  renderRight = () => {\r\n    const { activeTab, image, video } = this.state;\r\n    if (activeTab === 1 && video.url) return <ReponsiveImage isVideo={true} url={video.url} />;\r\n    if (activeTab === 4 && image) return <ReponsiveImage isImg={true} url={`${image}`} />;\r\n    return <ReponsiveImage isAs={true} url={\"asset/video_pop_up.png\"} />;\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(\"/Create\");\r\n  };\r\n\r\n  closePopup = () => {\r\n    this.setState({ preview: false });\r\n  };\r\n\r\n  render() {\r\n    const { preview, video } = this.state;\r\n\r\n    return (\r\n      <ToolLayout>\r\n        <div className=\"row\">\r\n          {preview ? <Preview {...this.state} closePopup={this.closePopup} /> : null}\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\r\n              <ButtonsGroup\r\n                preview={ video.url!=\"\" ? () => {\r\n                  this.setState({ preview: !preview });\r\n                } : null}\r\n                backUrl={this.back}\r\n                save={this.onClickSave}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/CentralTimer/index.js",["1233","1234","1235"],"import React, { Component } from \"react\";\r\nimport \"../../Create.css\";\r\nimport Code from \"../../../subpages/create/Code\";\r\nimport RequestHandler from \"../../../../actions/RequestHandler\";\r\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath, getBGPath } from \"../../../../actions/URLs\";\r\nimport Text from \"./Text\";\r\nimport SideBar from \"./SideBar\";\r\nimport ToolUtil from \"../../../../utils/ToolUtil\";\r\nimport Style from \"./Style\";\r\nimport Timer from \"../../../subpages/create/Timer\";\r\nimport Layout from \"../../../subpages/create/Layout\";\r\nimport Util from \"../../../Util\";\r\nimport Preview from \"./Preview\";\r\nimport { CentralTimerModalResponse, CentralTimerModal } from \"../../../utils/Modal\";\r\nimport { Drawer, Modal } from \"antd\";\r\nimport { ButtonsGroup, ToolLayout } from \"../../../layout/ToolLayout\";\r\n\r\nconst centraltime = {\r\n  activeTab: 1,\r\n  TEXT: { campaignName: \"\", timerText: \"\", timerLabel: { DD: \"Days\", HH: \"Hours\", MM: \"Mintues\", SS: \"Second\" } },\r\n  timer: { timerType: \"DATE_AND_TIME_BASED\", endDateTime: new Date(), timeZone: Util.getTimeZoneList()[0].value, whenTimeExp: \"hide\", url: \"\", DD: 0, HH: 0, MM: 0, SS: 0 },\r\n  layout: 1,\r\n  STYLE: {\r\n    elements: [\r\n      { name: \"centralTimer\", text: \"Central Timer\", color: \"#000\" },\r\n      // { name: \"centralTimerTitle\", text: \"Central Timer Title\", color: \"\" },\r\n      { name: \"centralTimerLabel\", text: \"Central Timer Label\", color: \"#000\" },\r\n    ],\r\n    selected: 0,\r\n    timerFont: 30,\r\n    timerLabelFont: 20,\r\n  },\r\n  CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: \"\" }] },\r\n};\r\nexport default class CentralTimer extends Component {\r\n  state = centraltime;\r\n  loaded = false;\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        if (res) {\r\n          this.loaded = true;\r\n          Util.isRedirected = true;\r\n          const data = CentralTimerModalResponse(res);\r\n          if (data) {\r\n            this.setState(data, () => {\r\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const toolId = 6;\r\n      this.loaded = true;\r\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\r\n      Util.RedirectWhenCampaignEmpty(this.props);\r\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\r\n    }\r\n  }\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n  onUpdate = (index, data) => {\r\n    switch (index) {\r\n      case 1:\r\n        this.setState({ TEXT: data });\r\n        break;\r\n      case 2:\r\n        this.setState({ timer: data });\r\n        break;\r\n      case 3:\r\n        this.setState({ layout: data });\r\n        break;\r\n      case 4:\r\n        this.setState({ STYLE: data });\r\n        break;\r\n      case 5:\r\n        this.setState({ CODE: data });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  renderMain = () => {\r\n    const { activeTab, TEXT, timer, layout, STYLE, CODE } = this.state;\r\n    if (!this.loaded) return null;\r\n    let component = null;\r\n    switch (activeTab) {\r\n      case 1:\r\n        component = <Text {...TEXT} onChange={this.onUpdate} />;\r\n        break;\r\n      case 2:\r\n        component = <Timer case={2} {...timer} onChange={this.onUpdate} />;\r\n        break;\r\n      case 3:\r\n        component = <Layout layout={layout} case={3} onChange={this.onUpdate} />;\r\n        break;\r\n      case 4:\r\n        component = <Style {...STYLE} case={4} onChange={this.onUpdate} />;\r\n        break;\r\n      case 5:\r\n        component = <Code {...CODE} case={5} onChange={this.onUpdate} />;\r\n        break;\r\n      default:\r\n        component = <Text {...TEXT} onChange={this.onUpdate} />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    const toolData = this.state;\r\n\r\n    if (this.state.CODE.include[0].url !== \"\") {\r\n      if (!Util.isArrayEqual(centraltime, this.state, 3)) {\r\n        RequestHandler.PostRequest(SAVE_TOOL, { toolData: CentralTimerModal(toolData) }, (res, err) => {\r\n          if (res) {\r\n            if (res.data.script) {\r\n              window.gs.setScript(res.data.script);\r\n              setTimeout(() => {\r\n                this.props.history.push(\"/Campaigns\");\r\n              }, 3000);\r\n            } else {\r\n              window.gs.toast(res.data.message, { position: \"bottom-right\", type: window.gs.toast.TYPE.FAILED });\r\n            }\r\n          } else {\r\n            console.log(err);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      Modal.warning({\r\n        content: \"Should Contain atleast one trigger point\",\r\n      });\r\n    }\r\n  };\r\n\r\n  renderRight = () => {\r\n    return <Preview {...this.state} />;\r\n    // return <img src={getPath(\"/asset/Iframegraphic.png\")} class=\"img-fluid\" alt=\"Responsive image\"></img>;\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(\"/Create\");\r\n  };\r\n\r\n  render() {\r\n    const { preview } = this.state;\r\n\r\n    return (\r\n      <ToolLayout>\r\n        <div className=\"row\">\r\n          {/* {preview ? <Preview {...this.state} /> : null} */}\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\" style={{ minHeight: \"495px\" }}>\r\n              <div className=\"col-md-6\">{this.renderMain()}</div>\r\n              <div className=\"col-md-6 ct_preview\" style={{ backgroundSize: \"contain\", padding: \"5%\", backgroundRepeat: \"no-repeat\", backgroundImage: getBGPath(\"/asset/centralTimerBg.png\") }}>\r\n                {this.renderRight()}\r\n              </div>\r\n              <ButtonsGroup backUrl={this.back} save={this.onClickSave} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/GeoRedirection/index.js",["1236","1237","1238"],"import React, { Component } from \"react\";\r\nimport \"../../Create.css\";\r\nimport Code from \"../../../subpages/create/Code\";\r\nimport RequestHandler from \"../../../../actions/RequestHandler\";\r\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath } from \"../../../../actions/URLs\";\r\nimport Text from \"./Text\";\r\nimport SideBar from \"./SideBar\";\r\nimport ToolUtil from \"../../../../utils/ToolUtil\";\r\nimport Redirection from \"./Redirection\";\r\nimport Util from \"../../../Util\";\r\nimport { GeoRedirectionModal, GeoRedirectionModalResponse } from \"../../../utils/Modal\";\r\nimport SuccessPopup from \"../../../comman/SuccessPopUp\";\r\nimport { Drawer, Modal } from \"antd\";\r\nimport { ToolLayout, ButtonsGroup } from \"../../../layout/ToolLayout\";\r\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\r\n\r\nconst groRed = {\r\n  activeTab: 1,\r\n  TEXT: { campaignName: \"\" },\r\n  redirection: [{ country: \"\", redirectUrl: \"\" }],\r\n  CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: \"\" }] },\r\n};\r\nexport default class GeoRedirection extends Component {\r\n  state = groRed;\r\n  loaded = false;\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        if (res) {\r\n          this.loaded = true;\r\n          Util.isRedirected = true;\r\n          const data = GeoRedirectionModalResponse(res);\r\n          if (data) {\r\n            this.setState(data, () => {\r\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const toolId = 7;\r\n      this.loaded = true;\r\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\r\n      Util.RedirectWhenCampaignEmpty(this.props);\r\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\r\n    }\r\n  }\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n  onUpdate = (index, data) => {\r\n    switch (index) {\r\n      case 1:\r\n        this.setState({ TEXT: data });\r\n        break;\r\n      case 2:\r\n        this.setState({ redirection: data });\r\n        break;\r\n      case 3:\r\n        this.setState({ CODE: data });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  renderMain = () => {\r\n    const { activeTab, TEXT, redirection, CODE } = this.state;\r\n    let component = null;\r\n    if (!this.loaded) return null;\r\n    switch (activeTab) {\r\n      case 15:\r\n        component = <Text {...TEXT} onChange={this.onUpdate} />;\r\n        break;\r\n      case 1:\r\n        component = <Redirection redirection={redirection} case={2} onChange={this.onUpdate} />;\r\n        break;\r\n      case 2:\r\n        component = <Code {...CODE} case={3} onChange={this.onUpdate} />;\r\n        break;\r\n      default:\r\n        component = <Text {...TEXT} onChange={this.onUpdate} />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    const toolData = this.state;\r\n    if (this.state.CODE.include[0].url !== \"\") {\r\n      if (!Util.isArrayEqual(groRed, this.state, 3)) {\r\n        RequestHandler.PostRequest(SAVE_TOOL, { toolData: GeoRedirectionModal(toolData) }, (res, err) => {\r\n          if (res) {\r\n            if (res.data) {\r\n              Modal.success({\r\n                content: \"Campaign Save SuccessFully\",\r\n              });\r\n              setTimeout(() => {\r\n                this.props.history.push(\"/Campaigns\");\r\n              }, 1000);\r\n            }\r\n          } else {\r\n            console.log(err);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      Modal.warning({\r\n        content: \"Should Contain atleast one trigger point\",\r\n      });\r\n    }\r\n  };\r\n\r\n  renderRight = () => {\r\n    return <ReponsiveImage isAs={true} url={\"asset/geo.png\"} />;\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(\"/Create\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ToolLayout>\r\n        <div className=\"row\">\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\r\n              <ButtonsGroup backUrl={this.back} save={this.onClickSave} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/BreakEvenCalculator/index.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/index.js",["1239","1240","1241","1242"],"import React, { Component } from \"react\";\r\nimport \"../../Create.css\";\r\nimport Code from \"../../../subpages/create/Code\";\r\nimport RequestHandler from \"../../../../actions/RequestHandler\";\r\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath } from \"../../../../actions/URLs\";\r\nimport Text from \"./Text\";\r\nimport SideBar from \"./SideBar\";\r\nimport ToolUtil from \"../../../../utils/ToolUtil\";\r\nimport Style from \"./Style\";\r\nimport Media from \"./Media\";\r\nimport CTA from \"./CTA\";\r\nimport NoThanks from \"./NoThanks\";\r\nimport Util from \"../../../Util\";\r\nimport Preview from \"./Preview\";\r\nimport { ExitIntentModal, ExitIntentModalResponse } from \"../../../utils/Modal\";\r\nimport { ToolLayout, ButtonsGroup } from \"../../../layout/ToolLayout\";\r\nimport { Modal } from \"antd\";\r\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\r\nconst exitInt = {\r\n  activeTab: 1,\r\n  headline: \"Lorem ipsum sit amet!\",\r\n  subheadline: \"Eiusmod tempor nibh veniam incididunt\",\r\n  isInput: false,\r\n  mediaType: \"IMAGE\",\r\n  url: \"\",\r\n  ctaText: \"GET STARTED NOW\",\r\n  ctaAction: \"#\",\r\n  redirectUrl: \"\",\r\n  noThanksText: \"No Thanks\",\r\n  STYLE: {\r\n    elements: [\r\n      { name: \"popupBackgoundColor\", text: \"Popup Background Color\", color: \"\" },\r\n      { name: \"ctaBackgound\", text: \"CTA Background\", color: \"\" },\r\n    ],\r\n    height: 50,\r\n    width: 50,\r\n    selected: 0,\r\n    isbackGroundImage: false,\r\n    backgroundImage: \"\",\r\n  },\r\n  CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: \"\" }] },\r\n};\r\nexport default class ExitIntent extends Component {\r\n  state = exitInt;\r\n  loaded = false;\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        if (res) {\r\n          this.loaded = true;\r\n          Util.isRedirected = true;\r\n          const data = ExitIntentModalResponse(res);\r\n          if (data) {\r\n            this.setState(data, () => {\r\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      this.loaded = true;\r\n      const toolId = 9;\r\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\r\n      Util.RedirectWhenCampaignEmpty(this.props);\r\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\r\n    }\r\n  }\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n  onUpdate = (index, data) => {\r\n    switch (index) {\r\n      case 1:\r\n        this.setState({ TEXT: data });\r\n        break;\r\n      case 2:\r\n        this.setState({ template: data });\r\n        break;\r\n      case 3:\r\n        this.setState({ media: data });\r\n        break;\r\n      case 4:\r\n        this.setState({ cta: data });\r\n        break;\r\n      case 5:\r\n        this.setState({ noThanks: data });\r\n        break;\r\n      case 6:\r\n        this.setState({ STYLE: data });\r\n        break;\r\n      case 7:\r\n        this.setState({ CODE: data });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  updateChange = (value) => {\r\n    this.setState(value);\r\n  };\r\n  renderMain = () => {\r\n    const { activeTab, headline, subheadline, noThanksText, template, mediaType, url, ctaAction, ctaText, redirectUrl, noThanks, STYLE, CODE, isInput } = this.state;\r\n    let component = null;\r\n    if (!this.loaded) return null;\r\n    switch (activeTab) {\r\n      case 1:\r\n        component = <Text headline={headline} subheadline={subheadline} onChange={this.updateChange} />;\r\n        break;\r\n      // case 2:\r\n      //   component = <Layout layout={template} case={2} onChange={this.onUpdate} />;\r\n      //   break;\r\n      case 3:\r\n        component = <Media isInput={isInput} mediaType={mediaType} url={url} onChange={this.updateChange} />;\r\n        break;\r\n      case 4:\r\n        component = <CTA ctaAction={ctaAction} ctaText={ctaText} redirectUrl={redirectUrl} onChange={this.updateChange} />;\r\n        break;\r\n      case 5:\r\n        component = <NoThanks noThanksText={noThanksText} onChange={this.updateChange} />;\r\n        break;\r\n      case 6:\r\n        component = <Style {...STYLE} case={6} onChange={this.onUpdate} />;\r\n        break;\r\n      case 7:\r\n        component = <Code {...CODE} case={7} onChange={this.onUpdate} />;\r\n        break;\r\n      default:\r\n        component = <Text headline={headline} subheadline={subheadline} onChange={this.updateChange} />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    const toolData = this.state;\r\n    if (this.state.CODE.include[0].url !== \"\") {\r\n      if (!Util.isArrayEqual(exitInt, this.state, 3)) {\r\n        if(!toolData.url) {\r\n          toolData.url = \"box.png\";\r\n        } \r\n        RequestHandler.PostRequest(SAVE_TOOL, { toolData: ExitIntentModal(toolData) }, (res, err) => {\r\n          if (res) {\r\n            if (res.data.success) {\r\n              Modal.success({\r\n                content: \"Campaign Save SuccessFully\",\r\n              });\r\n              setTimeout(() => {\r\n                this.props.history.push(\"/Campaigns\");\r\n              }, 1000);\r\n            } else {\r\n              window.gs.toast(res.data.message, { position: \"bottom-right\", type: window.gs.toast.TYPE.FAILED });\r\n            }\r\n          } else {\r\n            console.log(err);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      Modal.warning({\r\n        content: \"Should Contain atleast one trigger point\",\r\n      });\r\n    }\r\n  };\r\n\r\n  renderRight = () => {\r\n    const { activeTab, url, mediaType, STYLE } = this.state;\r\n    if (activeTab === 3 && url) {\r\n      if (mediaType === \"IMAGE\") return <ReponsiveImage isImg={true} url={url} />;\r\n      return <ReponsiveImage isVideo={true} url={url} />;\r\n    }\r\n    if (activeTab === 6 && STYLE.isbackGroundImage) {\r\n      return <ReponsiveImage isImg={true} url={STYLE.backgroundImage} />;\r\n    }\r\n    return <ReponsiveImage isAs={true} url={\"asset/exit_pop_up.png\"} />;\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(\"/Create\");\r\n  };\r\n\r\n  closePopup = () => {\r\n    this.setState({ preview: false });\r\n  };\r\n\r\n  render() {\r\n    const { preview, url } = this.state;\r\n    // const preview = true;\r\n    return (\r\n      <ToolLayout>\r\n        <div className=\"row\">\r\n          {preview ? <Preview {...this.state} closePopup={this.closePopup} /> : null}\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\r\n              <ButtonsGroup\r\n                preview={ () => {\r\n                  this.setState({ preview: !preview });\r\n                }}\r\n                backUrl={this.back}\r\n                save={this.onClickSave}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/MobileVibrator/index.js",["1243","1244","1245","1246","1247","1248"],"import React, { Component } from \"react\";\r\nimport \"../../Create.css\";\r\nimport RequestHandler from \"../../../../actions/RequestHandler\";\r\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath } from \"../../../../actions/URLs\";\r\nimport SideBar from \"./SideBar\";\r\nimport ToolUtil from \"../../../../utils/ToolUtil\";\r\nimport Timer from \"./Timer\";\r\nimport { MobileVibratorModal, MobileVibratorModalResponse } from \"../../../utils/Modal\";\r\nimport Util from \"../../../Util\";\r\nimport { Drawer } from \"antd\";\r\nimport { ButtonsGroup, ToolLayout } from \"../../../layout/ToolLayout\";\r\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\r\n\r\nconst mobVib = {\r\n  activeTab: 1,\r\n  TEXT: { campaignName: \"\", headline: \"\", subheadline: [\"\"] },\r\n  timing: { firstVib: 0, pause: 0, secondVib: 0 },\r\n  CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: \"\" }] },\r\n};\r\nexport default class MobileVibrator extends Component {\r\n  state = mobVib;\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        if (res) {\r\n          Util.isRedirected = true;\r\n          const data = MobileVibratorModalResponse(res);\r\n          if (data) {\r\n            this.setState(data, () => {\r\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const toolId = 10;\r\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\r\n      Util.RedirectWhenCampaignEmpty(this.props);\r\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\r\n    }\r\n  }\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n  onUpdate = (index, data) => {\r\n    switch (index) {\r\n      case 1:\r\n        this.setState({ timing: data });\r\n        break;\r\n      case 2:\r\n        this.setState({ code: data });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  renderMain = () => {\r\n    const { activeTab, TEXT, timing, CODE } = this.state;\r\n    let component = null;\r\n    switch (activeTab) {\r\n      case 1:\r\n        component = <Timer {...timing} onChange={this.onUpdate} />;\r\n        break;\r\n      default:\r\n        // component = <Text {...TEXT} onChange={this.onUpdate} />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    const { timing } = this.state;\r\n    const { firstVib, pause, secondVib } = timing;\r\n    const script = genCodeMobileVibartor(firstVib * 1000, pause * 1000, secondVib * 1000);\r\n    window.gs.setScript(script);\r\n    setTimeout(() => {\r\n      this.props.history.push(\"/Campaigns\");\r\n    }, 3000);\r\n  };\r\n\r\n  renderRight = () => {\r\n    return <ReponsiveImage isAs={true} url={\"asset/mobilevab.png\"} />;\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(\"/Create\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ToolLayout>\r\n        <div className=\"row\">\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\r\n              <ButtonsGroup backUrl={this.back} save={this.onClickSave} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n\r\nfunction genCodeMobileVibartor(f, s, t) {\r\n  return `<script>document.addEventListener(\"click\",function(){navigator.vibrate([${f},${s},${t}]),document.removeEventListener(\"click\",function(){})});</script>`;\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/DynamicElements/index.js",["1249","1250","1251"],"import React, { Component } from \"react\";\r\nimport \"../../Create.css\";\r\nimport Code from \"../../../subpages/create/Code\";\r\nimport RequestHandler from \"../../../../actions/RequestHandler\";\r\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath } from \"../../../../actions/URLs\";\r\nimport Text from \"./Text\";\r\nimport SideBar from \"./SideBar\";\r\nimport ToolUtil from \"../../../../utils/ToolUtil\";\r\nimport { DynemicElementModal, DynemicElementModalResponse } from \"../../../utils/Modal\";\r\nimport Util from \"../../../Util\";\r\nimport Style from \"./Style\";\r\nimport { Drawer, Modal } from \"antd\";\r\nimport SuccessPopup from \"../../../comman/SuccessPopUp\";\r\nimport { ToolLayout, ButtonsGroup } from \"../../../layout/ToolLayout\";\r\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\r\n\r\nconst dyelement = {\r\n  activeTab: 1,\r\n  STYLE: {\r\n    elements: [\r\n      { name: \"background\", text: \"Background Color\", color: \"\" },\r\n      { name: \"textColor\", text: \"Text Color\", color: \"\" },\r\n    ],\r\n    selected: 0,\r\n    position: \"BR\",\r\n    fontSize: \"15\",\r\n  },\r\n  items: [\r\n    { index: 1, icon: \"fa fa-whatsapp\", text: \"Whatsapp\", link: \"\" },\r\n    { index: 2, icon: \"fa fa-facebook-square\", text: \"Facebook\", link: \"\" },\r\n    { index: 3, icon: \"fa fa-linkedin-square\", text: \"Linkedin\", link: \"\" },\r\n    { index: 4, icon: \"fa fa-reddit-square\", text: \"Reddit\", link: \"\" },\r\n    { index: 5, icon: \"fa fa-skype\", text: \"Skype\", link: \"\" },\r\n    { index: 6, icon: \"fa fa-vimeo-square\", text: \"Vimeo\", link: \"\" },\r\n    { index: 7, icon: \"fa fa-twitter-square\", text: \"Twitter\", link: \"\" },\r\n    { index: 8, icon: \"fa fa-telegram\", text: \"Telegram\", link: \"\" },\r\n    { index: 9, icon: \"fa fa-instagram\", text: \"Instagram\", link: \"\" },\r\n    { index: 10, icon: \"fa fa-behance-square\", text: \"Behance\", link: \"\" },\r\n    { index: 11, icon: \"fa fa-dribbble\", text: \"Dribbble\", link: \"\" },\r\n    { index: 12, icon: \"fa fa-pinterest-square\", text: \"Pinterest\", link: \"\" } \r\n  ],\r\n  CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: \"\" }] },\r\n};\r\nexport default class DynamicElement extends Component {\r\n  state = dyelement;\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        if (res) {\r\n          Util.isRedirected = true;\r\n          const data = DynemicElementModalResponse(res);\r\n          if (data) {\r\n            this.setState(data, () => {\r\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const toolId = 13;\r\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\r\n      Util.RedirectWhenCampaignEmpty(this.props);\r\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\r\n    }\r\n  }\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n  onUpdate = (index, data) => {\r\n    switch (index) {\r\n      case 1:\r\n        this.setState({ STYLE: data });\r\n        break;\r\n      case 2:\r\n        this.setState({ CODE: data });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  updateItems = (data) => {\r\n    this.setState({ ...data });\r\n  };\r\n\r\n  renderMain = () => {\r\n    const { activeTab, items, STYLE, CODE } = this.state;\r\n    let component = null;\r\n    switch (activeTab) {\r\n      case 1:\r\n        component = <Text items={items} onChange={this.updateItems} />;\r\n        break;\r\n      case 2:\r\n        component = <Style {...STYLE} case={1} onChange={this.onUpdate} />;\r\n        break;\r\n      case 3:\r\n        component = <Code {...CODE} case={2} onChange={this.onUpdate} />;\r\n        break;\r\n      default:\r\n        component = <Text items={items} onChange={this.onUpdate} />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    const toolData = this.state;\r\n    if (this.state.CODE.include[0].url !== \"\") {\r\n      if (!Util.isArrayEqual(dyelement, this.state, 3)) {\r\n        RequestHandler.PostRequest(SAVE_TOOL, { toolData: DynemicElementModal(toolData) }, (res, err) => {\r\n          if (res) {\r\n            if (res.data) {\r\n              Modal.success({\r\n                content: \"Campaign Save SuccessFully\",\r\n              });\r\n              setTimeout(() => {\r\n                this.props.history.push(\"/Campaigns\");\r\n              }, 1000);\r\n            }\r\n          } else {\r\n            console.log(err);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      Modal.warning({\r\n        content: \"Should Contain atleast one trigger point\",\r\n      });\r\n    }\r\n  };\r\n\r\n  renderRight = () => {\r\n    return (this.state.activeTab === 1 ? null : <ReponsiveImage isAs={true} url={\"asset/dynamic.png\"} />);\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(\"/Create\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ToolLayout>\r\n        <div className=\"row\">\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className={(this.state.activeTab === 1 ? \"col-md-12\" : \"col-md-6\")}>{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\r\n              <ButtonsGroup backUrl={this.back} save={this.onClickSave} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/Offeriframe/index.js",["1252","1253","1254","1255","1256","1257"],"import React, { Component } from \"react\";\r\nimport \"../../Create.css\";\r\nimport Code from \"../../../subpages/create/Code\";\r\nimport RequestHandler from \"../../../../actions/RequestHandler\";\r\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath } from \"../../../../actions/URLs\";\r\n// import Text from \"./Text\";\r\nimport SideBar from \"./SideBar\";\r\nimport ToolUtil, { generateIframeContant } from \"../../../../utils/ToolUtil\";\r\nimport Util, { generateFile } from \"../../../Util\";\r\nimport { OfferIframeModal } from \"../../../utils/Modal\";\r\nimport Text from \"./Text\";\r\nimport SuccessPopup from \"../../../comman/SuccessPopUp\";\r\nimport { Drawer, Modal } from \"antd\";\r\nimport { ToolLayout, ButtonsGroup } from \"../../../layout/ToolLayout\";\r\nexport default class OfferIframe extends Component {\r\n  state = {\r\n    activeTab: 1,\r\n    TEXT: { url: \"\", title: \"\" },\r\n  };\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        if (res) {\r\n          Util.isRedirected = true;\r\n          const data = res.data.campaigns;\r\n          Object.assign(data, { _id: id, toolName: ToolUtil.getTool(data.toolId), toolId: data.toolId, name: data.data });\r\n          this.setState({ ...data });\r\n          window.gs.navTitle(ToolUtil.getTool(data.toolId));\r\n        }\r\n      });\r\n    } else {\r\n      const toolId = 14;\r\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\r\n      Util.RedirectWhenCampaignEmpty(this.props);\r\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\r\n    }\r\n  }\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n  onUpdate = (index, data) => {\r\n    switch (index) {\r\n      case 1:\r\n        this.setState({ TEXT: data });\r\n        break;\r\n      case 2:\r\n        this.setState({ cta: data });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  renderMain = () => {\r\n    const { activeTab, TEXT } = this.state;\r\n    let component = null;\r\n    switch (activeTab) {\r\n      case 1:\r\n        component = <Text {...TEXT} onChange={this.onUpdate} />;\r\n        break;\r\n      case 2:\r\n        // component = <Timing {...template} onChange={this.onUpdate} />;\r\n        break;\r\n      case 3:\r\n        // component = <Code {...CODE} onChange={this.onUpdate} />;\r\n        break;\r\n      default:\r\n        component = <Text {...TEXT} onChange={this.onUpdate} />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    const { TEXT } = this.state;\r\n    generateFile(\"index.html\", generateIframeContant(TEXT.url, TEXT.title));\r\n    Modal.success({\r\n      content: \"File has been Donwloaded\",\r\n    });\r\n    setTimeout(() => {\r\n      this.props.history.push(\"/Create\");\r\n    }, 2000);\r\n  };\r\n\r\n  renderRight = () => {\r\n    return <img src={getPath(\"/asset/Iframegraphic.png\")} className=\"img-fluid\" alt=\"Responsive image\"></img>;\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(\"/Create\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ToolLayout>\r\n        <div className=\"row\">\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\r\n              <ButtonsGroup backUrl={this.back} download={this.onClickSave} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/BackButtonredirection/index.js",["1258"],"import React, { Component } from \"react\";\r\nimport \"../../Create.css\";\r\nimport Code from \"../../../subpages/create/Code\";\r\nimport RequestHandler from \"../../../../actions/RequestHandler\";\r\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath } from \"../../../../actions/URLs\";\r\nimport Text from \"./Text\";\r\nimport SideBar from \"./SideBar\";\r\nimport ToolUtil from \"../../../../utils/ToolUtil\";\r\nimport Util from \"../../../Util\";\r\nimport { BackButtonRedirectionModal, BackButtonRedirectionModalResponse } from \"../../../utils/Modal\";\r\nimport { Modal } from \"antd\";\r\nimport { ToolLayout, ButtonsGroup } from \"../../../layout/ToolLayout\";\r\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\r\n\r\nconst backbutton = {\r\n  activeTab: 1,\r\n  TEXT: { redirectUrl: \"\" },\r\n  CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: \"\" }] },\r\n};\r\nexport default class BackButtonRedirection extends Component {\r\n  state = backbutton;\r\n  loaded = false;\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        if (res) {\r\n          Util.isRedirected = true;\r\n          const data = BackButtonRedirectionModalResponse(res);\r\n          this.loaded = true;\r\n          if (data) {\r\n            this.setState(data, () => {\r\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const toolId = 15;\r\n      this.loaded = true;\r\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\r\n      Util.RedirectWhenCampaignEmpty(this.props);\r\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\r\n    }\r\n  }\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n  onUpdate = (index, data) => {\r\n    switch (index) {\r\n      case 1:\r\n        this.setState({ TEXT: data });\r\n        break;\r\n      case 2:\r\n        this.setState({ CODE: data });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  renderMain = () => {\r\n    const { activeTab, TEXT, CODE } = this.state;\r\n    let component = null;\r\n    if (!this.loaded) return null;\r\n    switch (activeTab) {\r\n      case 1:\r\n        component = <Text {...TEXT} onChange={this.onUpdate} />;\r\n        break;\r\n      case 2:\r\n        component = <Code case={2} {...CODE} onChange={this.onUpdate} />;\r\n        break;\r\n      default:\r\n        component = <Text {...TEXT} onChange={this.onUpdate} />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  renderRight = () => {\r\n    return <ReponsiveImage isAs={true} url={\"asset/back_button_redirect.png\"} />;\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(\"/Create\");\r\n  };\r\n\r\n  onClickSave = () => { \r\n    const toolData = this.state;\r\n    if (this.state.CODE.include[0].url !== \"\") {\r\n      if (!Util.isArrayEqual(backbutton, this.state, 3)) {\r\n        RequestHandler.PostRequest(SAVE_TOOL, { toolData: BackButtonRedirectionModal(toolData) }, (res, err) => {\r\n          if (res) {\r\n            if (res.data) {\r\n              Modal.success({\r\n                content: \"Campaign Save SuccessFully\",\r\n              });\r\n              setTimeout(() => {\r\n                this.props.history.push(\"/Campaigns\");\r\n              }, 1000);\r\n            }\r\n          } else {\r\n            console.log(err);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      Modal.warning({\r\n        content: \"Should Contain atleast one trigger point\",\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ToolLayout>\r\n        <div className=\"row\">\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\r\n              <ButtonsGroup backUrl={this.back} save={this.onClickSave} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBarTimer/index.js",["1259","1260"],"import React, { Component } from \"react\";\r\nimport \"./index.css\";\r\nimport CreateSideBar from \"./CreateSideBar\";\r\nimport CreateText from \"./CreateText\";\r\nimport Code from \"./Code\";\r\nimport Style from \"./Style\";\r\nimport Layout from \"./Layout\";\r\nimport Timer from \"./Timer\";\r\nimport CTA from \"./CTA\";\r\nimport RequestHandler from \"../../../../actions/RequestHandler\";\r\nimport { SAVE_TOOL, GET_ONE_TOOL, getPath } from \"../../../../actions/URLs\";\r\nimport ToolUtil from \"../../../../utils/ToolUtil\";\r\nimport Util from \"../../../Util\";\r\nimport Preview from \"./Preview\";\r\nimport { HelloBarTimerModalResponse, HelloBarTimerModal } from \"../../../utils/Modal\";\r\nimport { ButtonsGroup, ToolLayout } from \"../../../layout/ToolLayout\";\r\nimport { Modal } from \"antd\";\r\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\r\n\r\nconst helloBarTimerr = {\r\n  toolName: \"\",\r\n  activeTab: 4,\r\n  create: { campaignName: Util.CAMPAIGNS_NAME, helloBarPos: \"top\", textBody: \"Hurry! Coupon Expires in...\", cpCode: \"CODE\", codeText: \"\" },\r\n  cta: { ctaText: \"GET ACCESS NOW!\", ctaAction: \"redirect\", redirectUrl: \"\" },\r\n  timer: { timerType: \"DATE_AND_TIME_BASED\", endDateTime: new Date(), timeZone: Util.getTimeZoneList()[0].value, redirectUrl: \"\", whenTimeExp: \"redirect\", DD: 0, HH: 0, MM: 0, SS: 0 },\r\n  layout: 0,\r\n  STYLE: {\r\n    elements: [\r\n      { name: \"highlight\", text: \"HelloBar Background\", color: \"#420068\" },\r\n      { name: \"highlightBackground\", text: \"CTA Background\", color: \"#ffcc00\" },\r\n      { name: \"arrowBackground\", text: \"Arrow Background\", color: \"#210b45\" },\r\n      { name: \"timerBox\", text: \"Timer Box\", color: \"#000\" },\r\n      { name: \"timerTextColor\", text: \"Timer Color\", color: \"#fff\" },\r\n    ],\r\n    selected: 0,\r\n  },\r\n  CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: \"\" }] },\r\n  file: { file: [] },\r\n  toolId: 0,\r\n  status: true,\r\n  openPopUp: false,\r\n  popUpScript: \"\",\r\n  preview: false,\r\n  _id: null,\r\n  // templateType: null\r\n};\r\nexport default class HelloBar extends Component {\r\n  static CAMPAIGNS_NAME = \"\";\r\n  toolId = 0;\r\n  state = helloBarTimerr;\r\n  loaded = false;\r\n  editedData ;\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        this.loaded = true;\r\n        if (res) {\r\n          Util.isRedirected = true;\r\n          const data = HelloBarTimerModalResponse(res);\r\n          if (data) {\r\n            this.editedData = data;\r\n            this.setState(data, () => {\r\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const toolId = 17;\r\n      this.loaded = true;\r\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\r\n      Util.RedirectWhenCampaignEmpty(this.props);\r\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\r\n    }\r\n  }\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n  onUpdate = (index, data) => {\r\n    switch (index) {\r\n      case 1:\r\n        this.setState({ create: data });\r\n        break;\r\n      case 2:\r\n        this.setState({ cta: data });\r\n        break;\r\n      case 3:\r\n        this.setState({ timer: data });\r\n        break;\r\n      case 4:\r\n        this.changeHelloBarTimerSetting(data);\r\n        // this.setState({ layout: data });\r\n        break;\r\n      case 5:\r\n        this.setState({ STYLE: data });\r\n        break;\r\n      case 6:\r\n        this.setState({ CODE: data });\r\n        break;\r\n      case 7:\r\n        this.setState({ file: data });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  changeHelloBarTimerSetting = (data) => {\r\n    if(this.state._id) {\r\n      if(data === this.editedData.layout) {\r\n        this.setState({\r\n          ...this.editedData,\r\n          layout: data\r\n        })\r\n      } else {\r\n        this.changeLayoutProperties(data);\r\n      }\r\n    } else {\r\n      this.changeLayoutProperties(data);\r\n    }\r\n  }\r\n\r\n  changeLayoutProperties = (data) => {\r\n    if(data === 2 ) {\r\n      helloBarTimerr.STYLE.elements[0].color = \"#dc3747\";\r\n      helloBarTimerr.STYLE.elements[1].color = \"#000000\";\r\n      helloBarTimerr.STYLE.elements[2].color = \"#210b45\";\r\n      helloBarTimerr.create.textBody = \"Grab it right now! <br> Coupon Expires in...\";\r\n      this.setState({\r\n        ...this.state,\r\n        STYLE : helloBarTimerr.STYLE,\r\n        create : {\r\n          ...helloBarTimerr.create,\r\n          textBody : helloBarTimerr.create.textBody\r\n        },\r\n        layout: data\r\n      });\r\n    } else if(data === 1) {\r\n      helloBarTimerr.STYLE.elements[0].color = \"#006820\";\r\n      helloBarTimerr.STYLE.elements[1].color = \"#012f0f\";\r\n      helloBarTimerr.STYLE.elements[2].color = \"#012f0f\";\r\n      helloBarTimerr.create.textBody = \"Grab it right now! <br> Coupon Expires in...\";\r\n      this.setState({\r\n        ...this.state,\r\n        STYLE : helloBarTimerr.STYLE,\r\n        create : {\r\n          ...helloBarTimerr.create,\r\n          textBody : helloBarTimerr.create.textBody\r\n        },\r\n        layout: data\r\n      });\r\n    } else {\r\n      helloBarTimerr.STYLE.elements[0].color = \"#420068\";\r\n      helloBarTimerr.STYLE.elements[1].color = \"#ffcc00\";\r\n      helloBarTimerr.STYLE.elements[2].color = \"#210b44\";\r\n      helloBarTimerr.create.textBody = \"Hurry! Coupon Expires in...\";\r\n      this.setState({\r\n        ...this.state,\r\n        STYLE : helloBarTimerr.STYLE,\r\n        create : {\r\n          ...helloBarTimerr.create,\r\n          textBody : helloBarTimerr.create.textBody\r\n        },\r\n        layout: data\r\n      });\r\n    }\r\n  }\r\n\r\n  renderMain = () => {\r\n    const { activeTab, create, cta, timer, layout, STYLE, CODE, file } = this.state;\r\n    if (!this.loaded) return null;\r\n    let component = null;\r\n    switch (activeTab) {\r\n      case 1:\r\n        component = <CreateText {...create} layout={layout} cases={1} onChange={this.onUpdate} />;\r\n        break;\r\n      case 2:\r\n        component = <CTA {...cta} cases={2} onChange={this.onUpdate} />;\r\n        break;\r\n      case 3:\r\n        component = <Timer {...timer} cases={3} onChange={this.onUpdate} />;\r\n        break;\r\n      case 4:\r\n        component = <Layout layout={layout} cases={4} onChange={this.onUpdate} />;\r\n        break;\r\n      case 5:\r\n        component = <Style {...STYLE} layout={layout} cases={5} onChange={this.onUpdate} />;\r\n        break;\r\n      case 6:\r\n        component = <Code {...CODE} cases={6} onChange={this.onUpdate} />;\r\n        break;\r\n      default:\r\n        component = <CreateText {...create} onChange={this.onUpdate} />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    const toolData = this.state;\r\n    if (this.state.CODE.include[0].url !== \"\") {\r\n      if (!Util.isArrayEqual(helloBarTimerr, this.state, 3)) {\r\n        RequestHandler.PostRequest(SAVE_TOOL, { toolData: HelloBarTimerModal(toolData) }, (res, err) => {\r\n          if (res) {\r\n            if (res.data.success) {\r\n              Modal.success({\r\n                content: \"Campaign Save SuccessFully\",\r\n              });\r\n              setTimeout(() => {\r\n                this.props.history.push(\"/Campaigns\");\r\n              }, 1000);\r\n            } else {\r\n              window.gs.toast(res.data.message, { position: \"bottom-right\", type: window.gs.toast.TYPE.FAILED });\r\n            }\r\n          } else {\r\n            console.log(err);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      Modal.warning({\r\n        content: \"Should Contain atleast one trigger point\",\r\n      });\r\n    }\r\n  };\r\n\r\n  closePopup = () => {\r\n    this.setState({ openPopUp: false, success: false });\r\n    this.props.history.push(\"/\");\r\n  };\r\n  setTemplate = (i) => {\r\n    this.setState({ templateType: i });\r\n  };\r\n\r\n  onDrawerClose = () => {\r\n    if (this.state.visible) this.setState({ visible: false });\r\n    else this.setState({ visible: true });\r\n  };\r\n\r\n  renderRight = () => {\r\n    const { layout } = this.state;\r\n    if (layout === 0) return <ReponsiveImage isAs={true} url={\"asset/hbt1.png\"} />;\r\n    if (layout === 1) return <ReponsiveImage isAs={true} url={\"asset/hbt2.png\"} />;\r\n    return <ReponsiveImage isAs={true} url={\"asset/hbt3.png\"} />;\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(\"/Create\");\r\n  };\r\n\r\n  render() {\r\n    const itemId = this.props.location.state;\r\n    const { preview } = this.state;\r\n\r\n    return (\r\n      <ToolLayout>\r\n        <div className=\"row\">\r\n          {preview ? <Preview {...this.state} /> : null}\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\r\n              <ButtonsGroup\r\n                preview={() => {\r\n                  this.setState({ preview: !preview });\r\n                }}\r\n                backUrl={this.back}\r\n                save={this.onClickSave}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <CreateSideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} {...itemId} />\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/index.js",["1261","1262","1263"],"import React, { Component } from \"react\";\r\nimport \"./index.css\";\r\nimport CreateSideBar from \"./CreateSideBar\";\r\nimport CreateText from \"./CreateText\";\r\nimport Code from \"./Code\";\r\nimport Style from \"./Style\";\r\nimport Layout from \"./Layout\";\r\nimport Timer from \"./Timer\";\r\nimport CTA from \"./CTA\";\r\nimport RequestHandler from \"../../../../actions/RequestHandler\";\r\nimport { SAVE_TOOL, GET_ONE_TOOL, getPath } from \"../../../../actions/URLs\";\r\nimport ToolUtil from \"../../../../utils/ToolUtil\";\r\nimport Util from \"../../../Util\";\r\nimport Preview from \"./Preview\";\r\nimport { HELLOBARModal, HELLOBARModalResponse } from \"../../../utils/Modal\";\r\nimport { Modal } from \"antd\";\r\nimport { ButtonsGroup, ToolLayout } from \"../../../layout/ToolLayout\";\r\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\r\n\r\nconst helloBarr = {\r\n  toolName: \"\",\r\n  activeTab: 4,\r\n  create: { campaignName: Util.CAMPAIGNS_NAME, helloBarPos: \"top\", textBody: \"<span style=\\\"font-size: 12pt;\\\">Copy coupon code to get <br>$5 instant discount</span>\", cpCode: \"CODE\", codeText: \"\" },\r\n  cta: { ctaText: \"<span style=\\\"font-size: 12pt;\\\">GET ACCESS NOW!</span>\", ctaAction: \"redirect\", redirectUrl: \"\" },\r\n  timer: { timerType: \"\", endDateTime: new Date(), timeZone: Util.getTimeZoneList()[0].value, whenTimeExp: \"\" },\r\n  layout: 0,\r\n  STYLE: {\r\n    elements: [\r\n      { name: \"highlight\", text: \"Hello bar\", color: \"#420068\" },\r\n      { name: \"highlightCTA\", text: \"CTA Background\", color: \"#ffcc00\" },\r\n    ],\r\n    selected: 0,\r\n  },\r\n  CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: \"\" }] },\r\n  file: { file: [] },\r\n  toolId: 0,\r\n  status: true,\r\n  openPopUp: false,\r\n  popUpScript: \"\",\r\n  preview: false,\r\n  _id: null,\r\n  // templateType: null\r\n};\r\nexport default class HelloBar extends Component {\r\n  static CAMPAIGNS_NAME = \"\";\r\n  toolId = 0;\r\n  state = helloBarr;\r\n  templates = [\"asset/hbt4.PNG\", \"asset/hbt2.PNG\", \"asset/hbt1.PNG\"];\r\n  loaded = false;\r\n  editedData ;\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        this.loaded = true;\r\n        if (res) {\r\n          Util.isRedirected = true;\r\n          const data = HELLOBARModalResponse(res);\r\n          if (data) {\r\n            this.editedData = data;\r\n            this.setState(data, () => {\r\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const toolId = 3;\r\n      this.loaded = true;\r\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\r\n      Util.RedirectWhenCampaignEmpty(this.props);\r\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\r\n    }\r\n  }\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab, layout } = this.state;\r\n    // if (tabIndex === 2 && layout === 1) return;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n  onUpdate = (index, data) => {\r\n    switch (index) {\r\n      case 1:\r\n        this.setState({ create: data });\r\n        break;\r\n      case 2:\r\n        this.setState({ cta: data });\r\n        break;\r\n      case 3:\r\n        this.setState({ timer: data });\r\n        break;\r\n      case 4:\r\n        this.changeHelloBarSetting(data);\r\n        // this.setState({ layout: data });\r\n        break;\r\n      case 5:\r\n        this.setState({ STYLE: data });\r\n        break;\r\n      case 6:\r\n        this.setState({ CODE: data });\r\n        break;\r\n      case 7:\r\n        this.setState({ file: data });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  changeHelloBarSetting = (data) => {\r\n    if(this.state._id) {\r\n      if(data === this.editedData.layout) {\r\n        this.setState({\r\n          ...this.editedData,\r\n          layout: data\r\n        });\r\n      } else {\r\n        this.changeLayoutProperties(data);\r\n      }\r\n    } else {\r\n      this.changeLayoutProperties(data);\r\n    }    \r\n  }\r\n  \r\n  changeLayoutProperties = (data) => {\r\n    if(data === 2 ) {\r\n      helloBarr.create.textBody = \"<span style=\\\"font-size: 12pt;\\\">This is a Demo Hellobar Text <br> Grab it Now!</span>\";\r\n      helloBarr.cta.ctaText = \"<span style=\\\"font-size: 12pt;\\\">GET ACCESS NOW!</span>\";\r\n      helloBarr.STYLE.elements[0].color = \"#6635dc\";\r\n      helloBarr.STYLE.elements[1].color = \"#ffffff\";\r\n      this.setState({\r\n        ...this.state,\r\n        STYLE : helloBarr.STYLE,\r\n        create : {\r\n          ...this.state.create,\r\n          textBody : helloBarr.create.textBody\r\n        },\r\n        layout: data\r\n      });\r\n    } else if(data === 1) {\r\n      helloBarr.create.textBody = \"<span style=\\\"font-size: 12pt;\\\">This is a Demo Hellobar Text</span>\";\r\n      helloBarr.cta.ctaText = \"<span style=\\\"font-size: 12pt;\\\">BUY NOW!</span>\";\r\n      helloBarr.STYLE.elements[0].color = \"#dc3545\";\r\n      helloBarr.STYLE.elements[1].color = \"#012f0f\";\r\n      this.setState({\r\n        ...this.state,\r\n        STYLE : helloBarr.STYLE,\r\n        create : {\r\n          ...this.state.create,\r\n          textBody : helloBarr.create.textBody\r\n        },\r\n        layout: data\r\n      });\r\n    } else {\r\n      helloBarr.create.textBody = \"<span style=\\\"font-size: 12pt;\\\">Copy coupon code to get <br>$5 instant discount</span>\";\r\n      helloBarr.cta.ctaText = \"<span style=\\\"font-size: 12pt;\\\">GET ACCESS NOW!</span>\";\r\n      helloBarr.STYLE.elements[0].color = \"#420068\";\r\n      helloBarr.STYLE.elements[1].color = \"#ffcc00\";\r\n      this.setState({\r\n        ...this.state,\r\n        STYLE : helloBarr.STYLE,\r\n        create : {\r\n          ...this.state.create,\r\n          textBody : helloBarr.create.textBody\r\n        },\r\n        layout: data\r\n      });\r\n    }\r\n  }\r\n\r\n  renderMain = () => {\r\n    const { activeTab, create, cta, timer, layout, STYLE, CODE, file } = this.state;\r\n    let component = null;\r\n    if (!this.loaded) return null;\r\n    switch (activeTab) {\r\n      case 1:\r\n        component = <CreateText layout={layout} {...create} cases={1} onChange={this.onUpdate} />;\r\n        break;\r\n      case 2:\r\n        component = <CTA {...cta} cases={2} onChange={this.onUpdate} />;\r\n        break;\r\n      case 3:\r\n        component = <Timer {...timer} cases={3} onChange={this.onUpdate} />;\r\n        break;\r\n      case 4:\r\n        component = <Layout layout={layout} cases={4} onChange={this.onUpdate} />;\r\n        break;\r\n      case 5:\r\n        component = <Style layout={layout} {...STYLE} cases={5} onChange={this.onUpdate} />;\r\n        break;\r\n      case 6:\r\n        component = <Code {...CODE} cases={6} onChange={this.onUpdate} />;\r\n        break;\r\n      default:\r\n        component = <CreateText {...create} onChange={this.onUpdate} />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    const toolData = this.state;\r\n    if (this.state.CODE.include[0].url !== \"\") {\r\n      if (!Util.isArrayEqual(helloBarr, this.state, 3)) {\r\n        RequestHandler.PostRequest(SAVE_TOOL, { toolData: HELLOBARModal(toolData) }, (res, err) => {\r\n          if (res) {\r\n            if (res.data.success) {\r\n              Modal.success({\r\n                content: \"Campaign Save SuccessFully\",\r\n              });\r\n              setTimeout(() => {\r\n                this.props.history.push(\"/Campaigns\");\r\n              }, 1000);\r\n            } else {\r\n              window.gs.toast(res.data.message, { position: \"bottom-right\", type: window.gs.toast.TYPE.FAILED });\r\n            }\r\n          } else {\r\n            console.log(err);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      Modal.warning({\r\n        content: \"Should Contain atleast one trigger point\",\r\n      });\r\n    }\r\n  };\r\n\r\n  renderRight = () => {\r\n    const { layout } = this.state;\r\n    if (layout === 0) return <ReponsiveImage isAs={true} url={\"asset/hb1.png\"} />;\r\n    if (layout === 1) return <ReponsiveImage isAs={true} url={\"asset/hb2.png\"} />;\r\n    return <ReponsiveImage isAs={true} url={\"asset/hb3.png\"} />;\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(\"/Create\");\r\n  };\r\n\r\n  render() {\r\n    const itemId = this.props.location.state;\r\n    const { preview } = this.state;\r\n\r\n    return (\r\n      <ToolLayout>\r\n        <div className=\"row\">\r\n          {preview ? <Preview {...this.state} /> : null}\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\r\n              <ButtonsGroup\r\n                preview={() => {\r\n                  this.setState({ preview: !preview });\r\n                }}\r\n                backUrl={this.back}\r\n                save={this.onClickSave}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <CreateSideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} {...itemId} />\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ImageOptimization/index.js",["1264","1265"],"import React, { Component } from \"react\";\r\nimport Uploader from \"../../../comman/Uploader\";\r\nimport Util, { parseImgUrl } from \"../../../Util\";\r\nexport default class ImageOptimization extends Component {\r\n  state = { image: this.props.image };\r\n  componentWillUnmount() {\r\n    // this.props.onChange(2, this.state.image);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (Util.isRedirected) {\r\n      Util.isRedirected = false;\r\n      this.setState({ image: nextProps.image });\r\n    }\r\n  }\r\n  onUploadDone = (imageICON) => {\r\n    this.setState({ image: imageICON.image });\r\n    // this.props.onChange(2, imageICON.image);\r\n  };\r\n  render() {\r\n    const props = {\r\n      onUploadDone: this.onUploadDone,\r\n      multiple: true,\r\n    };\r\n    const { image } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        {/* {openPopUp ? <ScriptPopup {...scriptPorps} /> : null}\r\n        {preview ? (\r\n          <Preview\r\n            {...this.state}\r\n            closePopup={() => {\r\n              this.setState({ preview: !preview });\r\n            }}\r\n          />\r\n        ) : null} */}\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"create-top-bar-button\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\" style={{ paddingTop: \"35px\" }}>\r\n          <div className=\"col\">\r\n            <center>\r\n              <div className=\"create-center-main\">\r\n                <div style={{ width: \"80%\", padding: \"20px\" }}>\r\n                  <div className=\"uploadMain\">\r\n                    <Uploader {...props} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </center>\r\n          </div>\r\n          <div className=\"col col-lg-2\">{/* <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} /> */}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/AutoplayVideo/index.js",["1266","1267","1268","1269","1270","1271","1272","1273","1274"],"import React, { Component } from \"react\";\r\nimport SideBar from \"./SideBar\";\r\nimport ToolUtil, { generateIframeContant, getDefaultItems } from \"../../../../utils/ToolUtil\";\r\nimport Util, { generateFile, parseImgUrl } from \"../../../Util\";\r\nimport Text from \"./Text\";\r\nimport Script from \"./Script\";\r\nimport { ToolLayout, ButtonsGroup } from \"../../../layout/ToolLayout\";\r\nimport { getPath, GET_PIXEL, SAVE_TOOL, GET_ONE_TOOL } from \"../../../../actions/URLs\";\r\nimport RequestHandler from \"../../../../actions/RequestHandler\";\r\nimport { Modal } from \"antd\";\r\nimport { LayoutSelector } from \"../../../layout/LayoutSelector\";\r\nimport Code from \"./Code\";\r\nimport { autoplayVideoModalResponse, autoplayVideoModal } from \"../../../utils/Modal\";\r\nimport Preview from \"./Preview\";\r\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\r\nimport Video from \"./Video\";\r\nimport Image from \"../VideoPopup/Image\";\r\nimport Icons from \"./Icons\";\r\n\r\nexport default class OptinForm extends Component {\r\n  state = {\r\n    video: { url: \"\", videoType: \"youtube\" },\r\n    toolName: \"\",\r\n    toolId: \"\",\r\n    preview: false,\r\n    _id: null,\r\n    activeTab: 1,\r\n    image: \"\",\r\n    toolData: {\r\n      text: 'Click for sound',\r\n    },\r\n    STYLE: {\r\n        elements: [{ name: \"background\", text: \"Video Background\", color: \"\" }],\r\n        switchElement: false,\r\n        selected: 0,\r\n    },\r\n    CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: null }] },\r\n    icons: \"/asset/play_icon.gif\"\r\n  };\r\n  loaded = false;\r\n\r\n  componentWillMount() {\r\n    if (window.gs.ie) {\r\n      const ie = getDefaultItems(window.gs.ie);\r\n      let { toolData } = this.state;\r\n      this.state.toolData = { ...toolData, ...ie };\r\n      window.gs.ie = null;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        this.loaded = true;\r\n        if (res) {\r\n          Util.isRedirected = true;\r\n          const data = autoplayVideoModalResponse(res);\r\n          if (data) {\r\n            this.setState(data, () => {\r\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"  \" + \"(\" + data.name + \")\");\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      let toolId = 24; this.loaded = true;\r\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\r\n      Util.RedirectWhenCampaignEmpty(this.props);\r\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\r\n    }\r\n\r\n  }\r\n\r\n  onVideoChange = (switchElement) => {\r\n    this.setState({ STYLE: { switchElement } });\r\n  };\r\n\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n\r\n    onUpdate = (index, data) => {\r\n        switch (index) {\r\n        case 1:\r\n            this.setState({ toolData : { text: data} });\r\n            break;\r\n        case 2:\r\n            this.setState({ video: data });\r\n            break;\r\n        case 3:\r\n            this.setState({ icons: data });\r\n            break;\r\n        case 5:\r\n            this.setState({ image: data });\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n    };\r\n\r\n    codeUpdate = (data) => {\r\n      this.setState({ CODE: data });\r\n    }\r\n\r\n  renderMain = () => {\r\n    const { activeTab, toolData, CODE, video, STYLE, image, icons } = this.state;\r\n    let component = null;\r\n    if (!this.loaded) return null;\r\n    switch (activeTab) {\r\n        case 1:\r\n            component = <Video {...video} onVideoChange={this.onVideoChange} switchElement={STYLE.switchElement} onChange={this.onUpdate}/>;\r\n            break;\r\n        case 2:\r\n            component = <Image image={image} case={5} onChange={this.onUpdate} />;\r\n            break;\r\n        case 3:\r\n            component = <Icons icons={icons} case={3} onChange={this.onUpdate} />;\r\n            break;\r\n        case 4:\r\n            component = <Text text={toolData.text} case={1} onChange={this.onUpdate} />;\r\n            break;\r\n        case 5:\r\n            component = <Script />;\r\n            break;\r\n        default:\r\n            component = <Code {...CODE} onChange={this.codeUpdate} />\r\n            break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    if (this.state.CODE.include[0].url !== \"\") {\r\n      if(this.state.video.url !== \"\") {\r\n        var pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\r\n          '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\r\n          '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\r\n          '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\r\n          '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\r\n          '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\r\n        if(pattern.test(this.state.video.url)) {\r\n          RequestHandler.PostRequest(SAVE_TOOL, { toolData: autoplayVideoModal(this.state) }, (res, err) => {\r\n            if (res) {\r\n              const data1 = res.data;\r\n              if (data1.success) {\r\n                if (data1.script) {\r\n                  window.gs.setScript(data1.script);\r\n                } else {\r\n                  Modal.success({\r\n                    content: data1.message,\r\n                  });\r\n                }\r\n                setTimeout(() => {\r\n                  this.props.history.push(\"/Campaigns\");\r\n                }, 1000);\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          Modal.warning({\r\n            content: \"Video URL should be url.\",\r\n          });\r\n        }\r\n      } else {\r\n        Modal.warning({\r\n          content: \"Please add video url.\",\r\n        });\r\n      }\r\n    } else {\r\n      Modal.warning({\r\n        content: \"Should Contain atleast one trigger point\",\r\n      });\r\n    }\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(\"/Create\");\r\n  };\r\n\r\n  togglePreview = () => {\r\n    const { preview } = this.state;\r\n    this.setState({ preview: !preview });\r\n  };\r\n\r\n  renderRight = () => {\r\n    const { activeTab, image, video } = this.state;\r\n    if (activeTab === 1 && video.url) return <ReponsiveImage isVideo={true} url={video.url} />;\r\n    if (activeTab === 2 && image) return <ReponsiveImage isImg={true} url={`https://d257yxqteot439.cloudfront.net/static/contains/${image}`} />;\r\n    return (activeTab === 5 ? null : <ReponsiveImage isAs={true} url={\"asset/video_pop_up.png\"} />);\r\n  };\r\n\r\n  render() {\r\n    const { preview, video, toolData, activeTab  } = this.state;\r\n    return (\r\n      <ToolLayout>\r\n        {preview ? <Preview {...this.state} onClose={this.togglePreview} /> : null}\r\n        <div className=\"row\">\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className={activeTab === 5 ? \"col-md-12\" : \"col-md-6\"}>{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\r\n              <ButtonsGroup   \r\n               preview={ video.url!=\"\" ? () => {\r\n                this.setState({ preview: !preview });\r\n              } : null}\r\n              backUrl={this.back}\r\n              save={this.onClickSave} \r\n            />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <SideBar layout={toolData.layout} activeTab={activeTab} onChangeActive={this.onChangeActive} />\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ProofApp/index.js",["1275","1276","1277","1278","1279","1280","1281","1282","1283","1284","1285"],"import React, { Component } from \"react\";\r\nimport SideBar from \"./SideBar\";\r\nimport ToolUtil, { generateIframeContant, getDefaultItems } from \"../../../../utils/ToolUtil\";\r\nimport Util, { generateFile, parseImgUrl } from \"../../../Util\";\r\nimport Text from \"./Text\";\r\nimport Script from \"./Script\";\r\nimport { ToolLayout, ButtonsGroup } from \"../../../layout/ToolLayout\";\r\nimport { getPath, GET_PIXEL, SAVE_TOOL, GET_ONE_TOOL, BASE_URL } from \"../../../../actions/URLs\";\r\nimport RequestHandler from \"../../../../actions/RequestHandler\";\r\nimport { Modal } from \"antd\";\r\nimport { LayoutSelector } from \"../../../layout/LayoutSelector\";\r\nimport Code from \"./Code\";\r\nimport { proofAppModalResponse, proofAppModal } from \"../../../utils/Modal\";\r\nimport Preview from \"./Preview\";\r\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\r\nimport Style from \"./Style\";\r\nimport Display from \"./Display\";\r\n\r\nexport default class OptinForm extends Component {\r\n  state = {\r\n    toolName: \"\",\r\n    toolId: \"\",\r\n    preview: false,\r\n    _id: null,\r\n    activeTab: 1,\r\n    toolData: {\r\n      text: \"bought the product\",\r\n      subText: \"From\",\r\n      duration: 2,\r\n      position: \"bottomLeft\",\r\n      timeFirstUser: 0,\r\n      timeBetweenTwoUser: 2,\r\n    },\r\n    STYLE: {\r\n      elements: [\r\n        { name: \"titleColor\", text: \"Title\", color: \"#ed8a25\" },\r\n        { name: \"subtitleColor\", text: \"Subtitle\", color: \"#292929\" },\r\n        { name: \"logoColor\", text: \"Logo Color\", color: \"#292929\" },\r\n      ],\r\n      selected: 0,\r\n      displayFrequency:\"\"\r\n    },\r\n    CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: null }] }\r\n  };\r\n  loaded = false;\r\n\r\n  componentWillMount() {\r\n    if (window.gs.ie) {\r\n      const ie = getDefaultItems(window.gs.ie);\r\n      let { toolData } = this.state;\r\n      this.state.toolData = { ...toolData, ...ie };\r\n      window.gs.ie = null;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        this.loaded = true;\r\n        if (res) {\r\n          Util.isRedirected = true;\r\n          const data = proofAppModalResponse(res);\r\n          if (data) {\r\n            this.setState(data, () => {\r\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"  \" + \"(\" + data.name + \")\");\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      let toolId = 25; this.loaded = true;\r\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\r\n      Util.RedirectWhenCampaignEmpty(this.props);\r\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\r\n    }\r\n  }\r\n\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n\r\n  onUpdate = (index, data) => {\r\n    switch (index) {\r\n      case 1:\r\n          this.setState({ toolData : { ...this.state.toolData, ...data} });\r\n          break;\r\n      case 3:\r\n          this.setState({ toolData : { ...this.state.toolData, ...data} });\r\n          break;\r\n      case 5:\r\n          this.setState({ STYLE : data });\r\n          break;\r\n      default:\r\n          break;\r\n    }\r\n  };\r\n\r\n  codeUpdate = (data) => {\r\n    this.setState({ CODE: data });\r\n  }\r\n\r\n  renderMain = () => {\r\n    const { activeTab, toolData, CODE, STYLE } = this.state;\r\n    let component = null;\r\n    if (!this.loaded) return null;\r\n    switch (activeTab) {\r\n        case 1:\r\n            component = <Text text={toolData.text} subText={toolData.subText} timeFirstUser={toolData.timeFirstUser} timeBetweenTwoUser={toolData.timeBetweenTwoUser} cases={1} onChange={this.onUpdate} />;\r\n            break;\r\n        case 3:\r\n            component = <Display toolData={toolData} cases={3} onChange={this.onUpdate} />;\r\n            break;\r\n        case 4:\r\n            component = <Style {...STYLE} cases={5} onChange={this.onUpdate} />;\r\n            break;\r\n        default:\r\n            component = <Code {...CODE} onChange={this.codeUpdate} />\r\n            break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    if (this.state.CODE.include[0].url !== \"\") {\r\n      RequestHandler.PostRequest(SAVE_TOOL, { toolData: proofAppModal(this.state) }, (res, err) => {\r\n        if (res) {\r\n          const data1 = res.data;\r\n          if (data1.success) {\r\n            if (data1.script) {\r\n              window.gs.setScript(data1.script);\r\n            } else {\r\n              Modal.success({\r\n                content: data1.message,\r\n              });\r\n            }\r\n            setTimeout(() => {\r\n              this.props.history.push(\"/Campaigns\");\r\n            }, 1000);\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      Modal.warning({\r\n        content: \"Should Contain atleast one trigger point\",\r\n      });\r\n    }\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(\"/Create\");\r\n    window.gs.navTitle(\"Create\")\r\n  };\r\n\r\n  togglePreview = () => {\r\n    const { preview } = this.state;\r\n    this.setState({ preview: !preview });\r\n  };\r\n\r\n  // renderRight = () => {\r\n  //   const { activeTab, image, video } = this.state;\r\n  //   if (activeTab === 1 && video.url) return <ReponsiveImage isVideo={true} url={video.url} />;\r\n  //   if (activeTab === 2 && image) return <ReponsiveImage isImg={true} url={`https://d257yxqteot439.cloudfront.net/static/contains/${image}`} />;\r\n  //   return (activeTab === 5 ? null : <ReponsiveImage isAs={true} url={\"asset/video_pop_up.png\"} />);\r\n  // };\r\n\r\n  render() {\r\n    const { preview, toolData, activeTab  } = this.state;\r\n    return (\r\n      <ToolLayout>\r\n        {preview ? <Preview {...this.state} onClose={this.togglePreview} /> : null}\r\n        <div className=\"row\">\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className={activeTab === 5 ? \"col-md-12\" : \"col-md-6\"}>{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\"></div>\r\n              <ButtonsGroup   \r\n               preview={() => {\r\n                this.setState({ preview: !preview });\r\n              }}\r\n              backUrl={this.back}\r\n              save={this.onClickSave} \r\n            />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <SideBar layout={toolData.layout} activeTab={activeTab} onChangeActive={this.onChangeActive} />\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Loader.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Popup.js",["1286","1287","1288","1289","1290"],"import React, { useState, useCallback } from \"react\";\r\nimport \"./Popup.css\";\r\nimport { Modal, Result, Input, Button } from \"antd\";\r\nimport { TestAutoResponder } from \"../../utils/ToolUtil\";\r\nimport { Info } from \"./Info\";\r\nexport const Popup = function (children) {\r\n  return (\r\n    <div className=\"popup\">\r\n      <div className=\"popup_inner\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const SuccessModel = function (props) {\r\n  const isSuccess = props.isSuccess ? \"success\" : \"warning\";\r\n  const msg = props.msg !== \"\" ? props.msg : isSuccess ? \"Successfully\" : \"Error\";\r\n  return (\r\n    <Modal title=\"Success\" centered visible={props.visible} footer={[]}>\r\n      <Result status={isSuccess} title={msg} subTitle={\"\"} extra={[]} />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport const ErrorModel = function (props) {\r\n  let subtitle = \"\";\r\n  if (props.urlKeys) subtitle = <ErrorMsgUrl urlKeys={props.urlKeys} />;\r\n  return (\r\n    <Modal\r\n      title=\"Error\"\r\n      centered\r\n      visible={props.visible}\r\n      footer={[\r\n        <Button key=\"back\" className=\"closeButton\" onClick={window.gs.showErrorWithHtml}>\r\n          Close\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <Result status={\"error\"} title={props.error} subTitle={subtitle} extra={[]} />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport const CampaignNameInput = function (props) {\r\n  const [camp, setCamp] = useState(\"\");\r\n  return (\r\n    <Modal\r\n      title=\"Campaign Name\"\r\n      visible={props.visible}\r\n      className=\"campignNameModal\"\r\n      footer={[\r\n        <Button\r\n          key=\"back\"\r\n          className=\"cz_btn cz_light_btn\"\r\n          onClick={() => {\r\n            setCamp(\"\");\r\n            props.Close();\r\n          }}\r\n        >\r\n          Close\r\n        </Button>,\r\n        <Button\r\n          key=\"submit\"\r\n          className=\"nextButton cz_btn\"\r\n          disabled={camp.length < 4}\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            props.submit(camp);\r\n            setCamp(\"\");\r\n          }}\r\n        >\r\n          Next\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <div className=\"popup_input\">\r\n        <Input placeholder=\"Campaign Name\" style={{ width: \"90%\" }} value={camp} onChange={(e) => setCamp(e.target.value)} />\r\n        <Info text=\"Name should contain atleast 4 characters\" />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport const SayUpdate = function (props) {\r\n  return (\r\n    <Modal\r\n      title=\"Upgread\"\r\n      visible={props.visible}\r\n      className=\"campignNameModal\"\r\n      footer={[\r\n        <Button key=\"back\" className=\"closeButton\" onClick={props.Close}>\r\n          Close\r\n        </Button>,\r\n        props.hideButton ? null : (\r\n          <Button\r\n            key=\"submit\"\r\n            className=\"nextButton\"\r\n            onClick={() => {\r\n              console.log(props.link);\r\n              if (props.link != \"\") window.open(props.link, \"_blank\");\r\n            }}\r\n            type=\"primary\"\r\n          >\r\n            Upgrade\r\n          </Button>\r\n        ),\r\n      ]}\r\n    >\r\n      <div>{props.msg}</div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport const AddAccount = function (props) {\r\n  const [userName, setUsername] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n  return (\r\n    <Modal\r\n      title=\"Campaign Name\"\r\n      visible={props.visible}\r\n      className=\"campignNameModal\"\r\n      footer={[\r\n        <Button key=\"back\" className=\"closeButton\" onClick={props.Close}>\r\n          Close\r\n        </Button>,\r\n        <Button key=\"submit\" className=\"nextButton\" disabled={email == null || userName == null} type=\"primary\" onClick={() => props.submit(email, userName)}>\r\n          Save\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <div>\r\n        <Input placeholder=\"User Name\" value={userName} onChange={(e) => setUsername(e.target.value)} />\r\n        <div style={{ height: \"20px\" }}></div>\r\n        <Input placeholder=\"Email Address\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport const LockTool = (props) => {\r\n  return (\r\n    <div className=\"lock\" style={props.style}>\r\n      <div className=\"lock-div\">\r\n        {/* <a className=\"btn btn-sm lock-login-btn\">Login</a> */}\r\n        { !props.isLock ? <div className=\"lock_icon\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"19.25\" height=\"22\" viewBox=\"0 0 19.25 22\">\r\n            <path id=\"Icon_awesome-lock\" data-name=\"Icon awesome-lock\" d=\"M17.188,9.625H16.156V6.531a6.531,6.531,0,0,0-13.062,0V9.625H2.063A2.063,2.063,0,0,0,0,11.688v8.25A2.063,2.063,0,0,0,2.063,22H17.188a2.063,2.063,0,0,0,2.063-2.062v-8.25A2.063,2.063,0,0,0,17.188,9.625Zm-4.469,0H6.531V6.531a3.094,3.094,0,0,1,6.188,0Z\" opacity=\"0.32\"/>\r\n          </svg>\r\n        </div> :\r\n        <div>\r\n          <a \r\n            class=\"btn btn-sm lock-salespage-btn cz_btn\"\r\n            onClick={() => {\r\n              !props.isLock ? \r\n              window.gs.sayUpdate(\"To be fair to our JV partners & affiliates, your Agency access will be unlocked 1 month after your purchase\", true, \"\") : \r\n              window.open(props.preview, \"_blank\");\r\n            }}\r\n          >Preview</a>\r\n          <a \r\n            class=\"btn btn-sm lock-salespage-btn cz_btn cz_download_agency\" \r\n            href={props.path || \"#\"}\r\n            target=\"_blank\"\r\n            download \r\n          >\r\n            Download\r\n          </a>\r\n        </div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CopyScript = function (props) {\r\n  return (\r\n    <Modal\r\n      title=\"Copy code\"\r\n      visible={props.visible}\r\n      className=\"campignNameModal\"\r\n      footer={[\r\n        <Button key=\"back\" className=\"closeButton\" onClick={props.Close}>\r\n          Close\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <div className=\"main-campaing\">\r\n        <label>Script</label>\r\n        <div className=\"input-group mb-3\">\r\n          <input type=\"text\" className=\"form-control\" id=\"scriptToCopy\" value={props.script} />\r\n          <div className=\"input-group-append\">\r\n            <span className=\"input-group-text\" onClick={copyScript} style={{ cursor: \"pointer\" }}>\r\n              <i className=\"fa fa-copy\" />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport const AutoResponderConfig = (props) => {\r\n  const [region, setRegion] = useState(props.region);\r\n  const [uid, setUid] = useState(props.uid);\r\n  const [apiKey, setApiKey] = useState(props.apiKey);\r\n  const [isTest, setIsTest] = useState(false);\r\n  const checkTesting = useCallback(() => {\r\n    TestAutoResponder(uid, apiKey, (isTrue) => {\r\n      if (!isTrue) {\r\n        props.Close();\r\n      } else {\r\n        setIsTest(isTrue);\r\n      }\r\n    });\r\n  });\r\n  return (\r\n    <Modal\r\n      title=\"Auto Responder Integration\"\r\n      visible={props.visible}\r\n      className=\"campignNameModal\"\r\n      footer={[\r\n        <Button key=\"back\" className=\"closeButton\" onClick={props.Close}>\r\n          Close\r\n        </Button>,\r\n        isTest ? (\r\n          <Button key=\"Save\" className=\"nextButton\" onClick={() => props.save(region, uid, apiKey)}>\r\n            Save\r\n          </Button>\r\n        ) : (\r\n          <Button key=\"Test\" className=\"nextButton\" onClick={checkTesting}>\r\n            Test\r\n          </Button>\r\n        ),\r\n      ]}\r\n    >\r\n      <div className=\"\">\r\n        <Input placeholder=\"Mail Chimp Instance\" value={region} onChange={(e) => setRegion(e.target.value)} />\r\n        <div style={{ height: \"20px\" }}></div>\r\n        <Input placeholder=\"List Unique Id\" value={uid} onChange={(e) => setUid(e.target.value)} />\r\n        <div style={{ height: \"20px\" }}></div>\r\n        <Input placeholder=\"Api Key\" value={apiKey} onChange={(e) => setApiKey(e.target.value)} />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nfunction copyScript() {\r\n  var copyText = document.getElementById(\"scriptToCopy\");\r\n  copyText.select();\r\n  copyText.setSelectionRange(0, 99999);\r\n  document.execCommand(\"copy\");\r\n}\r\n\r\nexport const ErrorMsgUrl = (props) => {\r\n  const items = Object.keys(props.urlKeys) || [];\r\n  return (\r\n    <div>\r\n      {items.map((e, i) => (\r\n        <ErrorItem _key={e} _item={props.urlKeys[e]} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ErrorItem = function (p) {\r\n  return (\r\n    <React.Fragment>\r\n      {p._key !== \"url\" ? (\r\n        <div className=\"errorItems\">\r\n          <span>{p._key} : </span>&nbsp;&nbsp;&nbsp;\r\n          {p._item}\r\n        </div>\r\n      ) : (\r\n        <div className=\"errorItems\">\r\n          <span>{p._key} : </span>&nbsp;&nbsp;&nbsp;\r\n          <a target=\"_blank\" className=\"url\" href={p._item}>\r\n            {p._item}\r\n          </a>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nfunction fulllScreen() {\r\n  const featuredimg = document.getElementById(\"videoPopUpItem\");\r\n  if (featuredimg.requestFullscreen) {\r\n    featuredimg.requestFullscreen();\r\n  }\r\n}\r\n\r\nexport const VideoPopup = function (props) {\r\n  return (\r\n    <Modal\r\n      width={800}\r\n      title={props.name}\r\n      visible={props.visible}\r\n      className=\"videoPopupItem\"\r\n      footer={[\r\n        <Button key=\"back\" className=\"closeButton\" onClick={props.Close}>\r\n          Close\r\n        </Button>,\r\n        <Button key=\"fullScreen\" onClick={fulllScreen}>\r\n          FullScreen\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <div className=\"embed-responsive embed-responsive-21by9\">\r\n        <iframe\r\n          className=\"embed-responsive-item\"\r\n          src={\"https://player.vimeo.com/video/\" + props.url}\r\n          width=\"800\"\r\n          height=\"500\"\r\n          frameborder=\"0\"\r\n          id=\"videoPopUpItem\"\r\n          title={props.name}\r\n          webkitallowfullscreen\r\n          mozallowfullscreen\r\n          allowfullscreen\r\n        ></iframe>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Constant.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/actions/RequestHandler.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/layout/Profile.js",["1291","1292","1293","1294","1295","1296","1297","1298","1299"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Profile.css\";\r\nimport { Drawer, Avatar } from \"antd\";\r\nimport { SayUpdate, AddAccount } from \"../comman/Popup\";\r\nimport RequestHandler from \"../../actions/RequestHandler\";\r\nimport { SAVE_DEVELOPER } from \"../../actions/URLs\";\r\nimport { USER_SETTINGS } from \"../../utils/Routes\";\r\nimport ToolUtil from \"../../utils/ToolUtil\";\r\nimport { Storage } from \"../../utils/Storage\";\r\nexport default class Profile extends Component {\r\n  state = {\r\n    IMG: \"MS\",\r\n    name: \"Manish Suthar\",\r\n    MODAL: null,\r\n  };\r\n  // componentDidMount() {\r\n  //   console.log(ToolUtil.linksList)\r\n  // }\r\n\r\n  getText(text = \"\") {\r\n    let newText = \"\";\r\n    if(text !== \"\" && text) {\r\n      const arr = text.split(\" \");\r\n      arr.forEach((e) => {\r\n        newText = newText + e.substr(0, 1);\r\n      });\r\n    }\r\n    return newText;\r\n  }\r\n\r\n  onAddAccountClick = () => {\r\n    if (ToolUtil.isUpgrade1 && ToolUtil.toolsAccess.access > 30) {\r\n      this.setState({ MODAL: \"ADD\" });\r\n      return;\r\n    } else {\r\n      window.gs.sayUpdate(null, false, ToolUtil.linksList ? ToolUtil.linksList.oto2 : \"\");\r\n    }\r\n  };\r\n\r\n  closeAll = () => {\r\n    this.setState({ MODAL: null });\r\n  };\r\n\r\n  onSubmit = (email, name) => {\r\n    this.closeAll();\r\n    RequestHandler.PostRequest(SAVE_DEVELOPER, { userData: { userName: name, email } }, (res, err) => {\r\n      if (res) {\r\n        const { data } = res;\r\n        this.closeAll();\r\n        if (data.success) {\r\n          if (window.gs.accountUpdate) window.gs.accountUpdate();\r\n          window.gs.success(true, data.message);\r\n        } else {\r\n          window.gs.success(false, data.message);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  onLogout = () => {\r\n    // window.gs.logout();\r\n    Storage.removeAll();\r\n    window.location.pathname = \"/\";\r\n  }\r\n\r\n  render() {\r\n    const { IMG, name, MODAL } = this.state;\r\n    const { visible, onClose } = this.props;\r\n    return (\r\n      <Drawer placement=\"right\" closable={true} onClose={onClose} visible={visible}>\r\n        {MODAL === \"ADD\" ? <AddAccount visible={MODAL === \"ADD\" ? true : false} submit={this.onSubmit} Close={this.closeAll} /> : null}\r\n        <div className=\"row\">\r\n          <div className=\"col filter-close profile_heading\">\r\n            <span className=\"ml-4\">Your Account</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-details\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"profile-avater\">\r\n                <center>\r\n                  <Avatar size={64} style={{ backgroundColor: \"#ed8a25\", verticalAlign: \"middle\" }}>\r\n                    {this.getText(window.userName)}\r\n                  </Avatar>\r\n                </center>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 mt-2\">\r\n              <div className=\"profile-userName\">{window.userName}</div>\r\n              <div className=\"profile-email\">{window.email}</div>\r\n            </div>\r\n            <div className=\"col-12 mt-3\">\r\n              <div className=\"profile-title\">Plan</div>\r\n              <div className=\"profile-subText purchased_plan\">\r\n                {window.isUpgrade1 ? \r\n                  <span> Pro <a href=\"javascript:;\" className=\"cz_btn\">Purchased</a></span>\r\n                : null}\r\n                {window.isUpgrade2 ? \r\n                  <span> Club <a href=\"javascript:;\" className=\"cz_btn\">Purchased</a></span>\r\n                : null}\r\n                {/* {window.access >= 80 ? \r\n                  <span> Agency <a href=\"javascript:;\" className=\"cz_btn\">Purchased</a></span>\r\n                : null} */}\r\n              </div>\r\n            </div>\r\n            <div className={\"col-12\".concat(window.isUpgrade1 && window.isUpgrade2 && window.isUpgrade3 && !window.access < 80 ? \" mck_hide\" : \"\")}>\r\n              {/* <div className=\"profile-title\">Upgrade with</div> */}\r\n              <div className=\"profile-subText upgrade_plan\">\r\n                {!window.isUpgrade1 ? \r\n                  <span>Pro<a href={ToolUtil.linksList ? ToolUtil.linksList.oto2 : \"\"} className=\"cz_btn \" target=\"_blank\">Upgrade</a></span>\r\n                : null}\r\n                {!window.isUpgrade2 ? \r\n                  <span>Club<a href={ToolUtil.linksList ? ToolUtil.linksList.oto3 : \"\"} className=\"cz_btn \" target=\"_blank\">Upgrade</a></span>\r\n                : null}\r\n                {/* {!window.isUpgrade3 ? \r\n                  <span>Mobile App<a href={ToolUtil.linksList ? ToolUtil.linksList.oto4 : \"\"} className=\"cz_btn \" target=\"_blank\">Upgrade</a></span>\r\n                : null}\r\n                {window.access < 80 ? \r\n                  <span>Agency<a href={ToolUtil.linksList ? ToolUtil.linksList.oto1 : \"\"} className=\"cz_btn \" target=\"_blank\">Upgrade</a></span>\r\n                : null} */}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 mt-4\">\r\n              <div className=\"profile-title\">My Accounts</div>\r\n              <div className=\"profile-subText\">You are on {window.access === 30 ? (window.isSubuser ? \"Sub User\" : \"Developer\" ) : \"Owner\"} </div>\r\n            </div>\r\n            <div className=\"col-12 mt-3\">\r\n              <div className=\"profile-role\">\r\n                {/* <span className={window.access !== 30 ? \"\":\"active-role\"}>SB</span> */}\r\n                <span className=\"active-role\">{window.access === 30 ? (window.isSubuser ? \"Sub User\" : \"Developer\" ) : \"Owner\"}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bottom-buttons\">\r\n          <div className=\"col-12 mt-4\">\r\n            {window.access > 30 && window.isUpgrade1 && window.isDeveloperAccess ? \r\n              <button className=\"btn btn-sm addAccountBtn\" onClick={this.onAddAccountClick}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\"><path id=\"Icon_metro-user-plus\" data-name=\"Icon metro-user-plus\" d=\"M7.821,11.991a4.821,4.821,0,0,1,3.145-4.514,4,4,0,0,0,.355-1.611c0-2.175,0-3.937-2.625-3.937S6.071,3.691,6.071,5.866a3.908,3.908,0,0,0,1.75,3.252v.722c-2.968.243-5.25,1.7-5.25,3.464H8a4.8,4.8,0,0,1-.182-1.312Zm4.813-3.938a3.938,3.938,0,1,0,3.938,3.938A3.938,3.938,0,0,0,12.633,8.053Zm2.188,4.375h-1.75v1.75H12.2v-1.75h-1.75v-.875H12.2V9.8h.875v1.75h1.75Z\" transform=\"translate(-2.571 -1.928)\" fill=\"#fff\"/></svg>Add New Account\r\n              </button>\r\n              : null}\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <div className=\"bottom_btn_box\">\r\n              <span className=\"bottom_btns\">\r\n                <Link to={USER_SETTINGS} className=\"btn btn-light btn-sm\" onClick={onClose}>\r\n                  Settings\r\n                </Link>\r\n              </span>\r\n              <span className=\"bottom_btns\">\r\n                <button className=\"btn btn-light btn-sm logout-button pull-right\" onClick={this.onLogout}>\r\n                  Logout\r\n                </button>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n              \r\n      </Drawer>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/DateRangeFilter.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/config.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/DropDown.js",["1300","1301","1302","1303","1304","1305"],"import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\nimport ToolUtil from \"../../utils/ToolUtil\";\r\nexport default class DropDown extends React.Component {\r\n  static propTypes = {\r\n    classes: PropTypes.string,\r\n    options: PropTypes.array,\r\n    onChange: PropTypes.func,\r\n    disable: PropTypes.bool,\r\n    value: PropTypes.string,\r\n    index: PropTypes.number,\r\n    style: PropTypes.object,\r\n  };\r\n\r\n  static defaultProps = {\r\n    classes: \"form-control form-control-sm\",\r\n    value: \"\",\r\n    options: [],\r\n    disable: false,\r\n    style: { width: \"min-content\" },\r\n  };\r\n\r\n  onChange = (e) => {\r\n    if (this.props.index) {\r\n      this.props.onChange(e.target.value, this.props.index);\r\n    } else {\r\n      this.props.onChange(e.target.value);\r\n    }\r\n  };\r\n\r\n  renderOptions = (option, i) => {\r\n    return (\r\n      <option key={i} selected={this.props.value === option.value ? true : false} disabled={option.disable} value={option.value}>\r\n        {option.label}\r\n      </option>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes, style, options, onChange, disable, selected, index } = this.props;\r\n    return (\r\n      <select disabled={disable} onChange={this.onChange} style={style} className={classes}>\r\n        {options.map(this.renderOptions)}\r\n      </select>\r\n    );\r\n  }\r\n}\r\n\r\nexport class ToolSelectorDropDown extends React.PureComponent {\r\n  OTO1 = [\r\n    { tid: 1, selected: false, text: \"Tab Messaging\" },\r\n    { tid: 2, selected: false, text: \"Urgency Timer\" },\r\n    { tid: 5, selected: false, text: \"Video Popup\" },\r\n    { tid: 6, selected: false, text: \"Central Timer\" },\r\n    { tid: 7, selected: false, text: \"Geo Redirection\" },\r\n    { tid: 3, selected: false, text: \"HELLO BAR\" },\r\n    { tid: 4, selected: false, text: \"Image Popup\" },\r\n    { tid: 9, selected: false, text: \"Exit Intent\" },\r\n    { tid: 10, selected: false, text: \"Mobile Vibrator\" },\r\n    { tid: 13, selected: false, text: \"Dynamic Elements\" },\r\n    { tid: 14, selected: false, text: \"Offer iframe\" },\r\n    { tid: 15, selected: false, text: \"Back Button redirection\" },\r\n    { tid: 17, selected: false, text: \"HELLO BAR + Timer\" },\r\n    { tid: 24, selected: false, text: \"Autoplay Video\" }\r\n  ];\r\n  // OTO2 = [\r\n  //   { tid: 18, selected: false, text: \"Run campaign on third party site\" },\r\n  //   { tid: 19, selected: false, text: \"Optin forms\" },\r\n  // ];\r\n  // OTO3 = [];\r\n  isOTO1All = false;\r\n  isOTO2All = false;\r\n  isOTO3All = false;\r\n  selected = new Set();\r\n  state = {\r\n    open: false,\r\n  };\r\n  openToolBox = () => {\r\n    const { open } = this.state;\r\n    this.setState({ open: !open }, () => {\r\n      if (this.state.open) {\r\n        document.addEventListener(\"click\", this.onSelectionDone);\r\n      }\r\n    });\r\n  };\r\n\r\n  onSelectionDone = (e) => {\r\n    let isInsideClick = false;\r\n    e.path.forEach((ele) => {\r\n      if (ele.className === \"toolSelectorDropDown\") isInsideClick = true;\r\n    });\r\n    if (!isInsideClick) {\r\n      document.removeEventListener(\"click\", this.onSelectionDone);\r\n      this.setState({ open: false });\r\n    }\r\n  };\r\n\r\n  onChange = (item) => {\r\n    const { selected } = this;\r\n    if (selected.has(item)) {\r\n      selected.delete(item);\r\n    } else {\r\n      selected.add(item);\r\n    }\r\n    this.props.onChange(Array.from(selected));\r\n    this.forceUpdate();\r\n  };\r\n\r\n  onlySetItem = (item, isAdd) => {\r\n    const { selected } = this;\r\n    if (!isAdd) {\r\n      selected.delete(item);\r\n    } else {\r\n      selected.add(item);\r\n    }\r\n  };\r\n\r\n  onFrontEndSelectAll = () => {\r\n    this.isOTO1All = !this.isOTO1All;\r\n    this.OTO1.forEach((e) => {\r\n      e.selected = this.isOTO1All;\r\n      this.onlySetItem(e.tid, this.isOTO1All);\r\n    });\r\n    this.props.onChange(Array.from(this.selected));\r\n    this.forceUpdate();\r\n  };\r\n  onFrontEndSelect = (item, i, isTrue) => {\r\n    this.OTO1[i][\"selected\"] = !isTrue;\r\n    this.onChange(item);\r\n  };\r\n  onOTO2All = () => {\r\n    this.isOTO2All = !this.isOTO2All;\r\n    this.OTO2.forEach((e) => {\r\n      e.selected = this.isOTO2All;\r\n      this.onlySetItem(e.tid, this.isOTO2All);\r\n    });\r\n    this.props.onChange(Array.from(this.selected));\r\n    this.forceUpdate();\r\n  };\r\n  onOTO2Select = (item, i, isTrue) => {\r\n    this.OTO2[i][\"selected\"] = !isTrue;\r\n    this.onChange(item);\r\n  };\r\n  onOTO3All = () => {\r\n    this.isOTO3All = !this.isOTO3All;\r\n    this.OTO3.forEach((e) => {\r\n      e.selected = this.isOTO3All;\r\n      this.onlySetItem(e.tid, this.isOTO3All);\r\n    });\r\n    this.props.onChange(Array.from(this.selected));\r\n    this.forceUpdate();\r\n  };\r\n  onOTO3Select = (item, i, isTrue) => {\r\n    this.OTO3[i][\"selected\"] = !isTrue;\r\n    this.onChange(item);\r\n  };\r\n  render() {\r\n    const { isOTO1All, isOTO2All, isOTO3All, selected } = this;\r\n    const { open } = this.state;\r\n    return (\r\n      <div className=\"toolSelectorDropDown\" name=\"ToolSelector\">\r\n        <ElementSelected selected={selected} elementClick={this.openToolBox} />\r\n        {open ? (\r\n          <div className=\"dropdown-menu mck_dropdown-menu\">\r\n            <div className={isOTO1All ? \"dropdown-menu-title tool_menuItem_selected\" : \"dropdown-menu-title\"} onClick={this.onFrontEndSelectAll}>\r\n              Front End\r\n            </div>\r\n            {this.OTO1.map((e, i) => (\r\n              <OptionItem key={i} index={i} text={e.text} selected={e.selected} tid={e.tid} onChange={this.onFrontEndSelect} />\r\n            ))}\r\n            {/* <div className={isOTO2All ? \"dropdown-menu-title tool_menuItem_selected\" : \"dropdown-menu-title\"} onClick={this.onOTO2All}>\r\n              OTO2\r\n            </div>\r\n            {this.OTO2.map((e, i) => (\r\n              <OptionItem key={i} index={i} text={e.text} selected={e.selected} tid={e.tid} onChange={this.onOTO2Select} />\r\n            ))}\r\n            <div className={isOTO3All ? \"dropdown-menu-title tool_menuItem_selected\" : \"dropdown-menu-title\"} onClick={this.onOTO3All}>\r\n              OTO3\r\n            </div> */}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst OptionItem = (props) => {\r\n  return (\r\n    <div className={props.selected ? \"tool_menuItem tool_menuItem_selected\" : \"tool_menuItem\"} onClick={() => props.onChange(props.tid, props.index, props.selected)}>\r\n      {props.text}\r\n      <span>\r\n        <i className=\"fa fa-check\" />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ElementSelected = (props) => {\r\n  const selected = props.selected ? Array.from(props.selected) : [];\r\n  return (\r\n    <button onFocus={props.elementClick} className=\"toolDropdownItem\" style={{ width: \"100%\" }}>\r\n      <div\r\n        className=\"ant-select-selection\r\n            ant-select-selection--multiple\"\r\n      >\r\n        <ul>\r\n          {selected.map((e, i) => (\r\n            <InnerItem key={i} tid={e} />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\nconst InnerItem = function (props) {\r\n  return <li className=\"ant-select-selection__choice\">{ToolUtil.getTool(props.tid)}</li>;\r\n};\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/layout/ToolLayout.js",["1306","1307","1308","1309","1310","1311","1312","1313"],"import React from \"react\";\r\nimport \"./ToolLayout.css\";\r\nimport { LockTool } from \"../comman/Popup\";\r\nimport ToolUtil from \"../../utils/ToolUtil\";\r\nimport { getPath } from \"../../actions/URLs\";\r\nimport { isMobile } from \"../utils/ScreenUtil\";\r\nimport { Switch } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nexport const ToolLayout = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">{props.children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ButtonsGroup = (props) => {\r\n  return (\r\n    <div className=\"col-12 toolbox_bottom_btns\" style={{ marginTop: \"20px\" }}>\r\n      {\r\n        <button onClick={props.backUrl} className=\"btn btn-sm closeButton\">\r\n          Close\r\n        </button>\r\n      }\r\n      {props.download ? (\r\n        <button onClick={props.download} className=\"pull-right btn btn-sm downloadButton\">\r\n          Download\r\n        </button>\r\n      ) : null}\r\n\r\n      \r\n\r\n      {props.save ? (\r\n        <button onClick={props.save} className=\"pull-right btn btn-sm SaveButton ck_btn\">\r\n          Save\r\n        </button>\r\n      ) : null}\r\n\r\n      {props.preview ? (\r\n        <button onClick={props.preview} className=\"pull-right btn btn-sm PreviewButton ck_btn\">\r\n          Preview\r\n        </button>\r\n      ) : null}\r\n      {props.refresh ? (\r\n        <button onClick={props.refresh} className=\"pull-right btn btn-sm PreviewButton\">\r\n          Refresh\r\n        </button>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const SideButton = (props) => {\r\n  return (\r\n    <center>\r\n      <div className=\"SideBarButton\">\r\n        <span className=\"sidebar-img\">\r\n          <i className={props.class}></i>\r\n        </span>\r\n        <br />\r\n        {props.text}\r\n      </div>\r\n    </center>\r\n  );\r\n};\r\n\r\nexport const CreateItem = (props) => {\r\n  if (isMobile()) {\r\n    return <DIVElementMobile {...props} />;\r\n  } else {\r\n    return <DIVElement {...props} />;\r\n  }\r\n};\r\n\r\nconst DIVElementMobile = (props) => {\r\n  return (\r\n    <div className={\"col-lg-4 col-md-6 col-sm-12 react-item \"}>\r\n      <div className={\"rectangle mt-4 \" + props.classnm2} onClick={!props.isLock ? () => props.openTool(props.URL, props.byPass, props.params, props.ie, props.isOpenAble) : \"\"}>\r\n        {props.isLock ? <LockTool style={{ height: props.height, minWidth: \"230px\" }} /> : null}\r\n        <div className=\"row\">\r\n          <div className=\"col-8\">\r\n            <div className=\"white mt-3 mb-2 masonry-title\">{props.diaplayName}</div>\r\n            <div className=\"white description\">{props.desc}</div>\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <div className=\"col-sm-5\">{props.img ? <img className=\"img-fluid\" src={getPath(props.img)} /> : <img className=\"img-fluid\" src={getPath(ToolUtil.getImg(props.routeName))} />}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DIVElement = (props) => {\r\n  let classnm = props.classnm;\r\n  return (\r\n    <div className={\"col-lg-4 col-md-6 col-sm-12 cz_mobile_box react-item \" + classnm}>\r\n      <div\r\n        className={\"rectangle mt-4 \" + props.classnm2}\r\n        style={{ height: props.height }}\r\n        onClick={!props.isLock ? () => props.openTool(props.URL, props.byPass, props.params, props.ie, props.isOpenAble) : \"\"}\r\n      >\r\n        {props.isLock ? <LockTool style={{ height: props.height, minWidth: \"230px\" }} /> : null}\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-4\"></div>\r\n          <div className=\"col-sm-8\" style={{textAlign: 'right'}}>{props.img ? <img className=\"img-fluid\" src={getPath(props.img)} /> : <img className=\"img-fluid\" src={getPath(ToolUtil.getImg(props.routeName))} />}</div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"bottom-desc\">\r\n            <div className=\"white mt-3 mb-2 masonry-title\">{props.diaplayName}</div>\r\n            <div className=\"white description\">{props.desc}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CampignItem = (props) => {\r\n  if (isMobile()) {\r\n    return <ListItemMobile {...props} />;\r\n  } else {\r\n    return <ListItem {...props} />;\r\n  }\r\n};\r\n\r\nconst LockWithToolTip = function () {\r\n  return (\r\n    <div title=\"Upgrade to unlock\">\r\n      <span>\r\n        <i className=\"fa fa-lock\"></i>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ListItem = (item) => {\r\n  let img = \"\", layout = \"\";\r\n  if( item.toolId === 20 ) {\r\n    if(item.toolData.layout === 2) {\r\n      img = \"asset/toolIcon/exitintent.png\";\r\n    } else if(item.toolData.layout === 1) {\r\n      img = \"asset/toolIcon/hellobartimer.png\";\r\n    } else if(item.toolData.layout === 4) {\r\n      img = \"asset/toolIcon/dynamicelements.png\";\r\n    } else if(item.toolData.layout === 5) {\r\n      img = \"asset/toolIcon/hellobarwithoptin.png\";\r\n    } else if(item.toolData.layout === 6) {\r\n      img = \"asset/toolIcon/hellobartimerwithoptin.png\";\r\n    } else if(item.toolData.layout === 7) {\r\n      img = \"asset/toolIcon/exitintentwithoptin.png\";\r\n    } else if(item.toolData.layout === 3) {\r\n      layout = 3;\r\n      img = \"asset/toolIcon/centraltime.png\";\r\n    } else {\r\n      img = \"asset/toolIcon/hellobar.png\";\r\n    }\r\n  }\r\n\r\n  if( item.toolId === 19) {\r\n    if(item.toolData.layout === 0) {\r\n      img = \"asset/toolIcon/hellobarwithoptin.png\";\r\n    } else if(item.toolData.layout === 1) {\r\n      layout = 3;\r\n      img = \"asset/toolIcon/hellobartimerwithoptin.png\";\r\n    } else {\r\n      img = \"asset/toolIcon/exitintentwithoptin.png\";\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"Camp_ListItem\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 col-lg-2 col-sm-12 align-self-center\">\r\n          <center>\r\n            <img className=\"img-fluid Camp_ListItem_img\" src={img !== \"\" ? img : getPath(ToolUtil.getImg(item.toolId))} />\r\n          </center>\r\n        </div>\r\n        <div className=\"col-md-12 col-lg-4 col-sm-12 Camp_Details\">\r\n          <div className=\"row\" style={{ height: \"100%\" }}>\r\n            <div className=\"col-12\">\r\n              <div className=\"float-left Camp_label\">Name : {item.title || item.toolName} { item.copied ? ` ( Copied ${item.copied === 1 ? \"\" : item.copied-1})` : \"\"} </div>\r\n              <div>Type : {item.toolName}</div>\r\n            </div>\r\n            <div className=\"col-12\">\r\n              <div className=\"row camp_info\">\r\n                <div className=\"col\">\r\n                  <div className=\"float-left Camp_label\">Views</div>\r\n                  {item.isLock ? <LockWithToolTip /> : <div>{item.views}</div>}\r\n                </div>\r\n                { item.toolId !== 1 && item.toolId !== 6 && item.toolId !== 25 && item.toolId !== 21 ?\r\n                  (layout === 3 ? null : \r\n                    <div className=\"col\">\r\n                      <div className=\"float-left Camp_label\">Clicks</div>\r\n                      {item.isLock ? <LockWithToolTip /> : <div>{item.clicks}</div>}\r\n                    </div> )\r\n                  : null\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12 col-lg-6 col-sm-12\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <div className=\"pull-right\" style={{ display: \"grid\" }}>\r\n                <div key={item._id}>\r\n                  <Switch\r\n                    className=\"pull-right m-2\"\r\n                    onChange={() => {\r\n                      item.archiveRequest(item._id, item.toolId, \"STATUS\");\r\n                    }}\r\n                    size=\"small\"\r\n                    defaultChecked={item.status}\r\n                  />\r\n                  <span style={{ paddingTop: \"12px !important\" }} className={item.status ? \"pull-right m-2 camp-Active\" : \"pull-right m-2 camp-InActive\"}>\r\n                    {item.status ? \"Active\" : \"In-Active\"}\r\n                  </span>\r\n                </div>\r\n                <div className=\"pull-right m-2\">\r\n                  <span>{moment(item.updatedAt).format(\"DD-MMM-YYYY HH:mm:ss\")}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row Camp_Button_Grp_row\">\r\n            <div className=\"col\">\r\n              {item.toolId === 19 || item.toolId === 23 ? (\r\n                <button className=\"btn btn-sm btn-outline-success archive-btn action-button\" onClick={() => item.downloadData(item._id)}>\r\n                  <span>\r\n                    <i className=\"fa fa-down-arrow\"></i>Download\r\n                  </span>\r\n                </button>\r\n              ) : null}\r\n              <button className=\"btn btn-sm btn-outline-danger archive-btn action-button\" onClick={() => item.onClickAction(item._id, item.toolId, \"ARCHIVE\")}>\r\n                <span>\r\n                  <i className=\"fa fa-archive\"></i>Archive\r\n                </span>\r\n              </button>\r\n              <button className=\"btn btn-sm clone-btn action-button\" onClick={() => item.onClickAction(item._id, item.toolId, \"CLONE\")}>\r\n                <span>\r\n                  <i className=\"fa fa-copy\"></i>Clone\r\n                </span>\r\n              </button>\r\n              <a className={item.status ? \"btn btn-sm edit-btn action-button\" : \"btn btn-sm edit-btn action-button disabled\"} onClick={() => item.onClickAction(item._id, item.toolId, \"EDIT\")}>\r\n                <span>\r\n                  <i className=\"fa fa-edit\"></i>Edit\r\n                </span>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ListItemMobile = (item) => {\r\n  let img = \"\", layout = \"\";\r\n  if( item.toolId === 20 ) {\r\n    if(item.toolData.layout === 2) {\r\n      img = \"asset/toolIcon/exitintent.png\";\r\n    } else if(item.toolData.layout === 1) {\r\n      img = \"asset/toolIcon/hellobartimer.png\";\r\n    } else if(item.toolData.layout === 4) {\r\n      img = \"asset/toolIcon/dynamicelements.png\";\r\n    } else if(item.toolData.layout === 5) {\r\n      img = \"asset/toolIcon/hellobarwithoptin.png\";\r\n    } else if(item.toolData.layout === 6) {\r\n      img = \"asset/toolIcon/hellobartimerwithoptin.png\";\r\n    } else if(item.toolData.layout === 7) {\r\n      img = \"asset/toolIcon/exitintentwithoptin.png\";\r\n    } else if(item.toolData.layout === 3) {\r\n      layout = 3;\r\n      img = \"asset/toolIcon/centraltime.png\";\r\n    } else {\r\n      img = \"asset/toolIcon/hellobar.png\";\r\n    }\r\n  }\r\n\r\n  if( item.toolId === 19) {\r\n    if(item.toolData.layout === 0) {\r\n      img = \"asset/toolIcon/hellobarwithoptin.png\";\r\n    } else if(item.toolData.layout === 1) {\r\n      layout = 3;\r\n      img = \"asset/toolIcon/hellobartimerwithoptin.png\";\r\n    } else {\r\n      img = \"asset/toolIcon/exitintentwithoptin.png\";\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"Camp_ListItem Camp_ListItem_mob\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"d-flex\">\r\n            <div className=\"m-2\">\r\n              <img className=\"img-fluid Camp_ListItem_img_mob\" src={img !== \"\" ? img : getPath(ToolUtil.getImg(item.toolId))} />\r\n            </div>\r\n            <div>\r\n              <div className=\"float-left Camp_label Camp_label_mob\">Name : {item.title || item.toolName} { item.copied ? ` ( Copied ${item.copied === 1 ? \"\" : item.copied-1})` : \"\"} </div>\r\n              <div>Type : {item.toolName}</div>\r\n            </div>\r\n            <div>\r\n              <div className=\"pull-right\" style={{ display: \"grid\" }}>\r\n                <div key={item._id}>\r\n                  <Switch\r\n                    className=\"pull-right m-2\"\r\n                    onChange={() => {\r\n                      item.archiveRequest(item._id, item.toolId, \"STATUS\");\r\n                    }}\r\n                    size=\"small\"\r\n                    defaultChecked={item.status}\r\n                  />\r\n                  <span style={{ paddingTop: \"12px !important\" }} className={item.status ? \"pull-right m-2 camp-Active\" : \"pull-right m-2 camp-InActive\"}>\r\n                    {item.status ? \"Active\" : \"In-Active\"}\r\n                  </span>\r\n                </div>\r\n                <div className=\"pull-right m-2\">\r\n                  <span>{moment(item.updatedAt).format(\"DD-MMM-YYYY HH:mm:ss\")}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <div className=\"d-flex camp_info_mob mt-3 mb-3 p-3\">\r\n            <div className=\"col\">\r\n              <div className=\"float-left Camp_label Camp_label_mob\">Views</div>\r\n              <div>{item.isLock ? <LockWithToolTip /> : item.views}</div>\r\n            </div>\r\n            { item.toolId !== 1 && item.toolId !== 6 && item.toolId !== 25 && item.toolId !== 21 ?\r\n              (layout === 3 ? null : <div className=\"col\">\r\n                <div className=\"float-left Camp_label Camp_label_mob\">Clicks</div>\r\n                <div>{item.isLock ? <LockWithToolTip /> : item.clicks}</div>\r\n              </div>) : null\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          {item.toolId === 19 || item.toolId === 23 ? (\r\n            <button className=\"btn btn-sm btn-outline-success archive-btn action-button\" onClick={() => item.downloadData(item._id)}>\r\n              <span>\r\n                <i className=\"fa fa-down-arrow\"></i>Download\r\n              </span>\r\n            </button>\r\n          ) : null}\r\n          <button className=\"btn camp_btn_mob btn-sm btn-outline-danger archive-btn action-button\" onClick={() => item.onClickAction(item._id, item.toolId, \"ARCHIVE\")}>\r\n            <span>\r\n              <i className=\"fa fa-archive\"></i>Archive\r\n            </span>\r\n          </button>\r\n          <button className=\"btn camp_btn_mob btn-sm clone-btn action-button\" onClick={() => item.onClickAction(item._id, item.toolId, \"CLONE\")}>\r\n            <span>\r\n              <i className=\"fa fa-copy\"></i>Clone\r\n            </span>\r\n          </button>\r\n          <a\r\n            className={item.status ? \"btn camp_btn_mob btn-sm edit-btn action-button\" : \"btn btn-sm edit-btn action-button disabled\"}\r\n            onClick={() => item.onClickAction(item._id, item.toolId, \"EDIT\")}\r\n          >\r\n            <span>\r\n              <i className=\"fa fa-edit\"></i>Edit\r\n            </span>\r\n          </a>\r\n          {/* </div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/PreviewAble.js",["1314","1315","1316","1317","1318","1319","1320","1321","1322","1323","1324"],"import React from \"react\";\r\nimport { youtubeUrlParse, vimeoUrlParse, parseImgUrl } from \"../Util\";\r\nimport { getPath } from \"../../actions/URLs\";\r\n\r\nexport const ReponsiveImage = function (props) {\r\n  if (props.isImg) {\r\n    return <RepoImage url={props.url} />;\r\n  }\r\n  if (props.isVideo) {\r\n    return <VideoRepo url={props.url} />;\r\n  }\r\n  if (props.isAs) {\r\n    return <RepoImage isAs={true} url={props.url} />;\r\n  }\r\n  return <img src=\"https://d257yxqteot439.cloudfront.net/static/contains/box.png\" className=\"img-fluid\" alt=\"Responsive image\" />;\r\n};\r\n\r\nconst RepoImage = function (props) {\r\n  if (props.isAs) {\r\n    return (\r\n      <center>\r\n        <img src={window.rPath + getPath(props.url)} className=\"img-fluid\" alt=\"Responsive image\" />\r\n      </center>\r\n    );\r\n  } else if (props.url && props.url != \"\") {\r\n    return (\r\n      <center>\r\n        <img src={parseImgUrl(props.url)} className=\"img-fluid\" alt=\"Responsive image\" />\r\n      </center>\r\n    );\r\n  } else {\r\n    return (\r\n      <center>\r\n        <img src=\"https://d257yxqteot439.cloudfront.net/static/contains/box.png\" className=\"img-fluid\" alt=\"Responsive image\" />\r\n      </center>\r\n    );\r\n  }\r\n};\r\n\r\nconst VideoRepo = function (props) {\r\n  if (isUrlVideo(props.url)) {\r\n    const url = props.url;\r\n    if (url.indexOf(\"vimeo\") !== -1) {\r\n      return <iframe width=\"100%\" height=\"100%\" frameBorder=\"0\" allowFullScreen src={\"https://player.vimeo.com/video/\" + vimeoUrlParse(props.url)} frameBorder=\"0\" auto></iframe>;\r\n    } else {\r\n      return (\r\n        <iframe\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          frameBorder=\"0\"\r\n          allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n          allowfullscreen\r\n          src={\"https://www.youtube.com/embed/\" + youtubeUrlParse(props.url) + \"\"}\r\n          frameBorder=\"0\"\r\n          allowfullscreen\r\n          auto\r\n        ></iframe>\r\n      );\r\n    }\r\n  }\r\n  return <img src=\"https://d257yxqteot439.cloudfront.net/static/contains/box.png\" className=\"img-fluid\" alt=\"Responsive image\" />;\r\n};\r\n\r\nfunction isUrlVideo(url) {\r\n  if (url.indexOf(\"youtube\") !== -1 || url.indexOf(\"youtu\") !== -1 || url.indexOf(\"vimeo\") !== -1) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/TableWithData.js",["1325","1326","1327"],"import RequestHandler from \"../../actions/RequestHandler\";\r\nimport { GET_USERS } from \"../../actions/URLs\";\r\n\r\nexport function getUserList(userType = null, cb) {\r\n  const getType = userType ? GET_USERS + \"/\" + userType : GET_USERS;\r\n  // return new Promise((resolve, reject) => {\r\n  RequestHandler.PostRequest(getType, {}, (res, err) => {\r\n    if (res) cb(res.data.data, null);\r\n    else cb(null, \"Error\");\r\n  });\r\n  // });\r\n}\r\n\r\nexport const parseUserData = function(data) {\r\n  const newData = new Array();\r\n  data.forEach(e => {\r\n    newData.push({\r\n      id: e._id,\r\n      firstname: e.firstname,\r\n      email: e.email,\r\n      isActive: e.isActive,\r\n      date: e.createdAt,\r\n      logs: e.logs ? e.logs : {}\r\n    });\r\n  });\r\n  return newData;\r\n};\r\n\r\nexport const parseResellerData = function(data) {\r\n  const newData = new Array();\r\n  data.forEach(e => {\r\n    newData.push({\r\n      id: e._id,\r\n      firstname: e.firstname,\r\n      email: e.email,\r\n      isActive: e.isActive,\r\n      date: e.createdAt,\r\n      totallicence: e.totallicence,\r\n      consumeLicence: e.consumeLicence,\r\n      logs: e.logs ? e.logs : {}\r\n    });\r\n  });\r\n  return newData;\r\n};\r\n\r\nexport const parseLinkData = function(data) {\r\n  const newData = new Array();\r\n  data.forEach(e => {\r\n    newData.push({\r\n      id: e._id,\r\n      name: e.name,\r\n      url: e.url,\r\n    });\r\n  });\r\n  return newData;\r\n};","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/subpages/create/CreateSideBar.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/subpages/create/CreateText.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/subpages/create/Code.js",["1328","1329","1330","1331"],"import React, { Component } from \"react\";\r\nimport DropDown from \"../../comman/DropDown\";\r\nimport { Info } from \"../../comman/Info\";\r\nimport ToolUtil, { getCodeOptions } from \"../../../utils/ToolUtil\";\r\nexport default class Code extends Component {\r\n  options = getCodeOptions();\r\n  state = {\r\n    include: this.props.include,\r\n    exclude: (ToolUtil.isUpgrade1 && window.isAdvancedOpt) ? this.props.exclude : [],\r\n  };\r\n\r\n  onDropDownChange1 = (e, index) => {\r\n    if (!index) index = 0;\r\n    this.state.include[index].type = e;\r\n  };\r\n\r\n  onDropDownChange2 = (e, index) => {\r\n    if (!index) index = 0;\r\n    this.state.exclude[index].type = e;\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const cases = this.props.case || 1;\r\n    this.props.onChange(cases, this.state);\r\n  }\r\n\r\n  onItemChange1 = (index, e) => {\r\n    this.state.include[index].url = e.target.value;\r\n    this.setState({ include: this.state.include });\r\n  };\r\n\r\n  onItemChange2 = (index, e) => {\r\n    this.state.exclude[index].url = e.target.value;\r\n    this.setState({ exclude: this.state.exclude });\r\n  };\r\n\r\n  onAddClick = (typ) => {\r\n    const cases = this.props.case || 1;\r\n    const { include, exclude } = this.state;\r\n    if (typ === 1) {\r\n      include.push({ type: \"contains\", url: \"\" });\r\n      this.setState({ include });\r\n    } else {\r\n      exclude.push({ type: \"contains\", url: \"\" });\r\n      this.setState({ exclude });\r\n    }\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  onRemoveClick = (typ, index) => {\r\n    const cases = this.props.case || 1;\r\n    const include = this.state.include || [{ type: \"contains\", url: \"\" }];\r\n    const exclude = this.state.exclude || [{ type: \"contains\", url: \"\" }];\r\n    if (typ === 1) {\r\n      include.splice(index, 1);\r\n      this.setState({ include });\r\n    } else {\r\n      exclude.splice(index, 1);\r\n      this.setState({ exclude });\r\n    }\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  renderInClude = (item, index) => {\r\n    const { include } = this.state;\r\n    return (\r\n      <React.Fragment key={index+1}>\r\n        {index !== 0 ? <div className=\"col-2\"></div> : null}\r\n        <div className=\"col-4\">\r\n          <DropDown options={this.options} index={index} onChange={this.onDropDownChange1} value={item.type} className=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <TextInput index={index} typeN={1} onAddClick={this.onAddClick} onRemoveClick={this.onRemoveClick} size={include.length} onChange={this.onItemChange1} value={item.url} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  renderExclude = (item, index) => {\r\n    const { exclude } = this.state;\r\n    return (\r\n      <React.Fragment key={index+1}>\r\n        <div className=\"col-4\">\r\n          <DropDown options={this.options} index={index} onChange={this.onDropDownChange2} value={item.type} className=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <TextInput index={index} typeN={2} onAddClick={this.onAddClick} onRemoveClick={this.onRemoveClick} size={exclude.length} onChange={this.onItemChange2} value={item.url} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const include = this.state.include || [{ type: \"contains\", url: \"\" }];\r\n    const exclude = this.state.exclude || [{ type: \"contains\", url: \"\" }];\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div className=\"label-text\">\r\n            URL Settings*\r\n            <Info text=\"URL / Page name where campaign active\" />\r\n          </div>\r\n          <div className=\"container\">\r\n            <div className=\"label-text\">Include</div>\r\n            <div className=\"row\">{include.map(this.renderInClude)}</div>\r\n            <div className=\"w-100\"></div>\r\n            <div className=\"label-text\">Exclude</div>\r\n            {exclude.length ? (\r\n              <div className=\"row\">\r\n                {exclude.map(this.renderExclude)}\r\n                <div className=\"w-100\"></div>\r\n              </div>\r\n            ) : (\r\n              <div>You Need to Upgrade</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst TextInput = (props) => {\r\n  return (\r\n    <div className=\"code-input-block \">\r\n      <input type=\"text\" value={props.value} className=\"form-control\" onChange={(e) => props.onChange(props.index, e)} />\r\n      <div className=\"code-plusIcon\">\r\n        {props.size - 1 === props.index ? (\r\n          <i onClick={() => props.onAddClick(props.typeN)} className=\"fa fa-plus-circle\" title=\"Add Url\" aria-hidden=\"true\" />\r\n        ) : (\r\n          <i onClick={() => props.onRemoveClick(props.typeN, props.index)} className=\"fa fa-minus-circle\" title=\"remove url\" aria-hidden=\"true\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/subpages/create/Style.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ThirdParty/Text.js",["1332"],"import React, { Component } from \"react\";\r\nimport { Info } from \"../comman/Info\";\r\nexport default class Text extends Component {\r\n  state = {\r\n    url: this.props.url,\r\n    title: this.props.title,\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value }, () => {\r\n      this.props.onChange(1, this.state);\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.onChange(1, this.state);\r\n  }\r\n\r\n  render() {\r\n    const { url, title } = this.state;\r\n    return (\r\n      <div>\r\n        <div style={{ width: \"80%\", padding: \"20px\" }}>\r\n          <div className=\"form-element\">\r\n            <div className=\"label-text\">Url*</div>\r\n            <input type=\"text\" name=\"url\" placeholder=\"Enter Url\" className=\"form-control\" value={url} onChange={this.onChange} />\r\n          </div>\r\n          <div className=\"form-element\">\r\n            <div className=\"label-text\">Page Title*</div>\r\n            <input type=\"text\" name=\"title\" placeholder=\"Enter Page Title\" className=\"form-control\" value={title} onChange={this.onChange} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ThirdParty/SideBar.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Info.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Filter.js",["1333","1334"],"import React, { Component } from \"react\";\r\nimport { Drawer, Select, Input, DatePicker } from \"antd\";\r\nimport ToolUtil from \"../../utils/ToolUtil\";\r\nimport \"./Filter.css\";\r\nconst { Option } = Select;\r\n\r\nexport class Filter extends Component {\r\n  state = {\r\n    status: \"\",\r\n    campign: \"\",\r\n    startData: \"\",\r\n    endData: \"\",\r\n    sorting: 0,\r\n  };\r\n\r\n  status = [\r\n    { label: \"Active\", value: \"Active\" },\r\n    { label: \"In-Active\", value: \"In-Active\" },\r\n  ];\r\n\r\n  campign = [\r\n    { value: \"Tab Messaging\", label: \"Tab Messaging\" },\r\n    { value: \"Urgency Timer\", label: \"Urgency Timer\" },\r\n    { value: \"Video Popup\", label: \"Video Popup\" },\r\n    { value: \"Central Timer\", label: \"Central Timer\" },\r\n    { value: \"Geo Redirection\", label: \"Geo Redirection\" },\r\n    { value: \"HELLO BAR\", label: \"HELLO BAR\" },\r\n    { value: \"Image Popup\", label: \"Image Popup\" },\r\n    { value: \"Exit Intent\", label: \"Exit Intent\" },\r\n    { value: \"Mobile Vibrator\", label: \"Mobile Vibrator\" },\r\n    { value: \"Dynamic Elements\", label: \"Dynamic Elements\" },\r\n    { value: \"Offer iframe\", label: \"Offer iframe\" },\r\n    { value: \"Back Button redirection\", label: \"Back Button redirection\" },\r\n    { value: \"HELLO BAR + Timer\", label: \"HELLO BAR + Timer\" },\r\n    { value: \"Auto Play Video\", label: \"Auto Play\" },\r\n    { value: \"Proof App\", label: \"Proof App\" },\r\n  ];\r\n\r\n  componentDidMount() {\r\n    if (ToolUtil.isUpgrade1) {\r\n      this.campign.push({value: \"Optin forms\", label: \"Optin Forms\"})\r\n    }\r\n    if (ToolUtil.isUpgrade2) {\r\n      this.campign.push({value: \"Template Club\", label: \"Template Club\"})\r\n    }\r\n  }\r\n\r\n  onStatusChange = (value) => {\r\n    this.setState({ status: value });\r\n  };\r\n\r\n  onCampChange = (value) => {\r\n    this.setState({ campign: value });\r\n  };\r\n\r\n  onDateChange = (value, typ) => {\r\n    if (typ === 0) this.setState({ startData: value });\r\n    if (typ === 1) this.setState({ endData: value });\r\n  };\r\n\r\n  onSortByChnage = () => {\r\n    this.setState({ sorting: this.state.sorting === 0 ? 1 : 0 });\r\n  };\r\n\r\n  onChangeFilter = () => {\r\n    var con = {};\r\n    const filters = [];\r\n    const { status, campign, startData, endData, sorting } = this.state;\r\n    if (startData && endData) {\r\n      con[\"start_date\"] = startData;\r\n      con[\"end_date\"] = endData;\r\n    }\r\n    if (status) {\r\n      status == \"Active\" ? filters.push({ status: true }) : filters.push({ status: false });\r\n    }\r\n    if (campign) {\r\n      filters.push({ toolName: campign });\r\n    }\r\n    con[\"sorting\"] = sorting;\r\n    con[\"filters\"] = filters;\r\n    this.props.onChangeFilter(con);\r\n    this.props.onClose();\r\n  };\r\n\r\n  ClearFilter = () => {\r\n    this.setState({ status: \"\", campign: \"\", startData: \"\", endData: \"\", sorting: 0 }, () => {\r\n      this.props.onChangeFilter({});\r\n      this.props.onClose();\r\n    });\r\n  };\r\n\r\n  renderitem = (op, index) => {\r\n    return (\r\n      <Option key={index} value={op.value} label={op.label}>\r\n        {op.label}\r\n      </Option>\r\n    );\r\n  };\r\n  render() {\r\n    const { visible, onClose } = this.props;\r\n    const { status, campign, sorting } = this.state;\r\n    return (\r\n      <Drawer placement=\"right\" closable={true} onClose={onClose} visible={visible}>\r\n        <div className=\"row\">\r\n          <div className=\"col filter-close profile_heading\">\r\n            <span className=\"ml-3\">Filter</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"filter-title\">Status</div>\r\n            <div className=\"filter-dropdown\">\r\n              <Select style={{ width: \"100%\" }} placeholder=\"Select Product\" defaultValue={status} onChange={this.onStatusChange} optionLabelProp=\"label\">\r\n                {this.status.map(this.renderitem)}\r\n              </Select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 filter-item\">\r\n            <div className=\"filter-title\">Campaign Type</div>\r\n            <div className=\"filter-dropdown\">\r\n              <Select style={{ width: \"100%\" }} placeholder=\"Select Product\" defaultValue={campign} onChange={this.onCampChange} optionLabelProp=\"label\">\r\n                {this.campign.map(this.renderitem)}\r\n              </Select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 filter-item\">\r\n            <div className=\"filter-title\">Date Created</div>\r\n            <div className=\"filter-dropdown\">\r\n              <DatePicker placeholder=\"From\" onChange={(val) => this.onDateChange(val, 0)} />\r\n            </div>\r\n            <div className=\"filter-dropdown\">\r\n              <DatePicker placeholder=\"To\" onChange={(val) => this.onDateChange(val, 1)} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 filter-item\">Sort</div>\r\n          <div className=\"col-12\">\r\n            <div className=\"filter-title filter-sort-item\">\r\n              <span>Date</span>\r\n              <button className={\"sort-btn pull-right\"} onClick={this.onSortByChnage}>\r\n                {sorting ? <i className=\"fa fa-sort-amount-desc\"></i> : <i className=\"fa fa-sort-amount-asc\"></i>}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 filter-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"btn-group pull-right\">\r\n                  <button className=\"btn btn-light btn-sm filter-title\" onClick={this.ClearFilter}>\r\n                    Clear\r\n                  </button>\r\n                  <button className=\"btn btn-info btn-sm filter-title\" onClick={this.onChangeFilter}>\r\n                    Apply\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Drawer>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/subpages/create/FileUploader.js",["1335","1336"],"import React, { Component } from \"react\";\r\nimport Uploader from \"../../comman/Uploader\";\r\nimport { BASE_URL } from \"../../../actions/URLs\";\r\nimport { parseImgUrl } from \"../../Util\";\r\nexport default class FileUploader extends Component {\r\n  state = { file: this.props.file };\r\n  componentWillUnmount() {\r\n    this.props.onChange(7, this.state);\r\n  }\r\n  onUploadDone = fileName => {\r\n    const { file } = this.state;\r\n    file.push(fileName);\r\n    this.setState(file);\r\n    this.props.onChange(7, this.state);\r\n  };\r\n  render() {\r\n    const props = {\r\n      onUploadDone: this.onUploadDone\r\n    };\r\n    const { file } = this.state;\r\n    return (\r\n      <div>\r\n        <center>\r\n          <div style={{ width: \"80%\", padding: \"20px\" }}>\r\n            {file.length ? (\r\n              <div style={{ padding: \"10px\" }}>\r\n                {file.map(name => (\r\n                  <div>\r\n                    <img className=\"preview-image\" src={parseImgUrl(name.image)} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : null}\r\n            <div className=\"uploadMain\">\r\n              <Uploader {...props} />\r\n            </div>\r\n          </div>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/subpages/create/CTA.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/subpages/create/Timer.js",["1337"],"import React, { Component } from \"react\";\r\nimport DropDown from \"../../comman/DropDown\";\r\nimport Datetime from \"react-datetime\";\r\nimport Util, { dateParser } from \"../../Util\";\r\nimport moment from \"moment\";\r\n\r\nexport default class Timer extends Component {\r\n  _timerType = [\r\n    { label: \"Date and Time Based\", value: \"DATE_AND_TIME_BASED\" },\r\n    { label: \"Cookie Based\", value: \"COOKIE_BASED\" },\r\n    { label: \"Ever green\", value: \"EVERGREEN\" },\r\n  ];\r\n  // _endDateTime = [{ label: \"A\", value: \"A\" }, { label: \"B\", value: \"B\" }, { label: \"C\", value: \"C\" }, { label: \"D\", value: \"D\" }];\r\n  _timeZone = Util.getTimeZoneList();\r\n  _whenTimeExp = [\r\n    { label: \"Hide the timer\", value: \"hide\" },\r\n    { label: \"Redirect the page\", value: \"redirect\" },\r\n    { label: \"Show static central time as 00:00\", value: \"static\" },\r\n  ];\r\n\r\n  state = {\r\n    timerType: this.props.timerType,\r\n    endDateTime: this.props.endDateTime,\r\n    timeZone: this.props.timeZone,\r\n    whenTimeExp: this.props.whenTimeExp,\r\n    DD: this.props.DD,\r\n    HH: this.props.HH,\r\n    MM: this.props.MM,\r\n    SS: this.props.SS,\r\n    url: this.props.url,\r\n  };\r\n  onDropDownChange1 = (value) => {\r\n    const cases = this.props.case || 3;\r\n    this.setState({ timerType: value }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n  onDropDownChange2 = (value) => {\r\n    const cases = this.props.case || 3;\r\n    value.set({ second: 0 });\r\n    const newValu = value.format(\"YYYY-MM-DD HH:mm:ss\");\r\n    this.setState({ endDateTime: newValu }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n  onDropDownChange3 = (value) => {\r\n    const cases = this.props.case || 3;\r\n    this.setState({ timeZone: value }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n  onDropDownChange4 = (value) => {\r\n    const cases = this.props.case || 3;\r\n    this.setState({ whenTimeExp: value }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n  onChange = (e) => {\r\n    const cases = this.props.case || 3;\r\n    this.setState({ [e.target.name]: e.target.value }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n  onTextChange = (ctaText) => {\r\n    const cases = this.props.case || 3;\r\n    this.setState({ ctaText }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const cases = this.props.case || 3;\r\n    this.props.onChange(cases, this.state);\r\n  }\r\n\r\n  onTimerChange = (e) => {\r\n    const value = e.target.value ? e.target.value : 0;\r\n    this.setState({ [e.target.name]: value }, () => {\r\n      const cases = this.props.case || 3;\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { timerType, endDateTime, timeZone, whenTimeExp, DD = 0, HH = 0, MM = 0, SS = 0, url } = this.state;\r\n    let inputProps = {\r\n      placeholder: \"Select Date & Time\",\r\n      autoComplete: \"off\",\r\n      readOnly: true\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Timer Type*</div>\r\n          <DropDown options={this._timerType} onChange={this.onDropDownChange1} value={timerType} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n        {timerType === \"DATE_AND_TIME_BASED\" ? (\r\n          <div className=\"form-element\">\r\n            <div className=\"label-text\">End Date and Time*</div>\r\n            <Datetime inputProps={inputProps} defaultValue={moment(endDateTime)} onChange={this.onDropDownChange2}/>\r\n          </div>\r\n        ) : null}\r\n        {timerType !== \"DATE_AND_TIME_BASED\" ? (\r\n          <div className=\"form-element\">\r\n            <div className=\"label-text\">Timer*</div>\r\n            <div className=\"col-12\" style={{ display: \"flex\" }}>\r\n              <div className=\"col-3\">DD*</div>\r\n              <div className=\"col-3\">HH*</div>\r\n              <div className=\"col-3\">MM*</div>\r\n              <div className=\"col-3\">SS*</div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\" style={{ display: \"flex\" }}>\r\n                <div className=\"col-3\">\r\n                  <input type=\"number\" min={0} max={30} className=\"form-control\" value={DD} name=\"DD\" onChange={this.onTimerChange} />\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <input type=\"number\" min={0} max={24} className=\"form-control\" value={HH} name=\"HH\" onChange={this.onTimerChange} />\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <input type=\"number\" min={0} max={60} className=\"form-control\" value={MM} name=\"MM\" onChange={this.onTimerChange} />\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <input type=\"number\" min={0} max={60} className=\"form-control\" value={SS} name=\"SS\" onChange={this.onTimerChange} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {timerType === \"DATE_AND_TIME_BASED\" ? (\r\n          <div className=\"form-element\">\r\n            <div className=\"label-text\">Time Zone*</div>\r\n            <DropDown options={this._timeZone} onChange={this.onDropDownChange3} value={timeZone} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n          </div>\r\n        ) : null}\r\n        {timerType!== 'EVERGREEN'?<div className=\"form-element\">\r\n          <div className=\"label-text\">When Time Expires*</div>\r\n          <DropDown options={this._whenTimeExp} onChange={this.onDropDownChange4} value={whenTimeExp} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>: null}\r\n        {whenTimeExp === \"redirect\" ? (\r\n          <div className=\"form-element\">\r\n            <div className=\"label-text\">Url*</div>\r\n            <input type=\"text\" name=\"url\" className=\"form-control\" autoComplete=\"off\" value={url} onChange={this.onTimerChange} />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/subpages/create/Layout.js",["1338","1339","1340"],"import React, { Component } from \"react\";\r\nexport default class Layout extends Component {\r\n  state = {\r\n    layout: this.props.layout,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const cases = this.props.case || 1;\r\n    this.props.onChange(cases, this.state.layout);\r\n  }\r\n\r\n  onLayoutClick = (layout) => {\r\n    const cases = this.props.case || 1;\r\n    this.setState({ layout });\r\n    this.props.onChange(cases, layout);\r\n  };\r\n\r\n  render() {\r\n    const { layout } = this.state;\r\n    return (\r\n      <div>\r\n        <center>\r\n          <div style={{ width: \"80%\", padding: \"20px\" }}>\r\n            <div class=\"container\">\r\n              <div class=\"row\">\r\n                <div class=\"col\">\r\n                  <div className=\"layout-item\">\r\n                    <img src={window.rPath + \"asset/Layout1.svg\"} />\r\n                    <input type=\"radio\" checked={layout === 1 ? \"checked\" : \"\"} name=\"layout\" onChange={() => this.onLayoutClick(1)} />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div className=\"layout-item\">\r\n                    <img src={window.rPath + \"asset/Layout2.svg\"} />\r\n                    <input type=\"radio\" checked={layout === 2 ? \"checked\" : \"\"} name=\"layout\" onChange={() => this.onLayoutClick(2)} />\r\n                  </div>\r\n                </div>\r\n                <div class=\"w-100\"></div>\r\n                <div class=\"col\">\r\n                  <div className=\"layout-item\">\r\n                    <img src={window.rPath + \"asset/Layout3.svg\"} />\r\n                    <input type=\"radio\" checked={layout === 3 ? \"checked\" : \"\"} name=\"layout\" onChange={() => this.onLayoutClick(3)} />\r\n                  </div>\r\n                </div>\r\n                {/* <div class=\"col\">\r\n                  <div className=\"layout-item\">\r\n                    <img src={window.rPath+\"asset/Layout4.svg\"} />\r\n                    <input type=\"radio\" checked={layout === 4 ? \"checked\" : false} name=\"layout\" onChange={() => this.onLayoutClick(4)} />\r\n                  </div>\r\n                </div>\r\n                <div class=\"w-100\"></div>\r\n                <div class=\"col\">\r\n                  <div className=\"layout-item\">\r\n                    <img src={window.rPath+\"asset/Layout5.svg\"} />\r\n                    <input type=\"radio\" checked={layout === 5 ? \"checked\" : false} name=\"layout\" onChange={() => this.onLayoutClick(5)} />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div className=\"layout-item\">\r\n                    <img src={window.rPath+\"asset/Layout6.svg\"} />\r\n                    <input type=\"radio\" checked={layout === 6 ? \"checked\" : false} name=\"layout\" onChange={() => this.onLayoutClick(6)} />\r\n                  </div>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/actions/ResellerUtil.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/Text.js",["1341","1342"],"import React, { Component } from \"react\";\r\nimport Editor from \"../comman/Editor\";\r\nimport { Switch } from \"antd\";\r\nexport default class Text extends Component {\r\n  state = {\r\n    text: this.props.text,\r\n    subTitle: this.props.subTitle,\r\n    isNameInput: this.props.isNameInput,\r\n  };\r\n  onChange = (value) => {\r\n    this.setState({ text: value }, () => {\r\n      this.props.onChange({ text: this.state.text });\r\n    });\r\n  };\r\n\r\n  onChange1 = (value) => {\r\n    this.setState({ subTitle: value }, () => {\r\n      this.props.onChange({ subTitle: this.state.subTitle });\r\n    });\r\n  };\r\n\r\n  onToggle = () => {\r\n    this.setState({ isNameInput: !this.state.isNameInput }, () => {\r\n      this.props.onChange({ isNameInput: this.state.isNameInput });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { text, subTitle, isNameInput } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Text*</div>\r\n          <Editor value={text} name=\"text\" onChange={this.onChange} />\r\n        </div>\r\n        {(this.props.layout != 3 && this.props.layout != 4 )? (\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Name Input*</div>\r\n          <Switch className=\"m-2\" onChange={this.onToggle} size=\"small\" defaultChecked={isNameInput} />\r\n        </div>):null\r\n        }\r\n        {this.props.layout === 2 ? (\r\n          <React.Fragment>\r\n            <div className=\"form-element\">\r\n              <div className=\"label-text\">Sub Title*</div>\r\n              <Editor value={subTitle} name=\"subTitle\" onChange={this.onChange1} />\r\n            </div>\r\n          </React.Fragment>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/SideBar.js",["1343","1344"],"import React, { Component } from \"react\";\r\nimport { SideButton } from \"../layout/ToolLayout\";\r\nexport default class SideBar extends Component {\r\n  state = {\r\n    showItems: [],\r\n  };\r\n\r\n  render() {\r\n    const { activeTab } = this.props;\r\n    // const LAYOUT_IMG = activeTab === 1 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const VIDEO_IMG = activeTab === 1 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const TEXT_IMG = activeTab === 2 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const CTA_IMG = activeTab === 3 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const STYLE_IMG = activeTab === 4 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const TIG_IMG = activeTab === 5 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const TIME_IMG = activeTab === 6 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const RESPONDER_IMG = activeTab === 7 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const THUMB_IMG = activeTab === 8 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const ICONS_IMG = activeTab === 9 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.layout === 3 ? (\r\n        <div onClick={() => this.props.onChangeActive(1)} className={VIDEO_IMG}>\r\n          <SideButton class={\"fa fa-video-camera\"} text=\"Video\" />\r\n        </div>):null\r\n        }\r\n        {this.props.layout === 3 ? (\r\n        <div onClick={() => this.props.onChangeActive(8)} className={THUMB_IMG}>\r\n          <SideButton class={\"fa fa-paint-brush\"} text=\"Thumbnail\"/>\r\n        </div>):null\r\n        }\r\n        {this.props.layout === 3 ? (\r\n        <div onClick={() => this.props.onChangeActive(9)} className={ICONS_IMG}>\r\n          <SideButton class={\"fa fa-play-circle-o\"} text=\"Icons\"/>\r\n        </div>):null\r\n        }\r\n        <div onClick={() => this.props.onChangeActive(2)} className={TEXT_IMG}>\r\n          <SideButton class={\"fa fa-text-width\"} text=\"Text\" />\r\n        </div>\r\n        {this.props.layout === 1 ? (\r\n          <div onClick={() => this.props.onChangeActive(6)} className={TIME_IMG}>\r\n            <SideButton class={\"fa fa-clock-o\"} text=\"Timer\" />\r\n          </div>\r\n        ) : null}\r\n        {this.props.layout != 3 ? (\r\n        <div onClick={() => this.props.onChangeActive(3)} className={CTA_IMG}>\r\n          <SideButton class={\"fa fa-outdent\"} text=\"CTA\" />\r\n        </div>\r\n        ) : null}\r\n        <div onClick={() => this.props.onChangeActive(4)} className={STYLE_IMG}>\r\n          <SideButton class={\"fa fa-paint-brush\"} text=\"Style\" />\r\n        </div>\r\n        {this.props.layout != 3 ? (\r\n        <div onClick={() => this.props.onChangeActive(7)} className={RESPONDER_IMG}>\r\n          <SideButton class={\"fa fa-envelope\"} text=\"Auto responders\" />\r\n        </div>\r\n        ) : null}\r\n        <div onClick={() => this.props.onChangeActive(5)} className={TIG_IMG}>\r\n          <SideButton class={\"fa fa-code\"} text=\"Trigger\" />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/Responders.js",["1345","1346","1347","1348"],"import React, { Component } from \"react\";\r\nimport Editor from \"../comman/Editor\";\r\nimport { Switch } from \"antd\";\r\nimport RequestHandler from \"../../actions/RequestHandler\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {\r\n  GET_AUTO_RESPONDER,\r\n  GET_LIST_FROM_AUTORESPONDER,\r\n  SAVE_LIST_ID\r\n} from \"../../actions/URLs\";\r\n\r\nexport default class Responders extends Component {\r\n  state = {\r\n    auto_data : [\r\n      {\r\n        id : 1,\r\n        name : 'Mailchimp',\r\n        serverName : 'MAILCHIMP',\r\n        icon : '/asset/auto/mailchimp.png',\r\n        stateName : \"mailChimp\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 2,\r\n        name : 'Active Campaign',\r\n        serverName : 'ACTIVE_CAMPAIGN',\r\n        icon : '/asset/auto/activecampaign.png',\r\n        stateName : \"activeCampaign\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 3,\r\n        name : 'Aweber',\r\n        serverName : 'AWEBER',\r\n        icon : '/asset/auto/aweber.png',\r\n        stateName : \"aweber\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 4,\r\n        name : 'Constant Contact',\r\n        serverName : 'CONSTANT_CONTACT',\r\n        icon : 'asset/auto/constant_contact.png',\r\n        stateName : \"constantContact\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 5,\r\n        name : 'Convert Kit',\r\n        serverName : 'CONVERT_KIT',\r\n        icon : 'asset/auto/convertkit.png',\r\n        stateName : \"convertKit\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 6,\r\n        name : 'Infusion Soft',\r\n        serverName : 'INFUSION_SOFT',\r\n        icon : 'asset/auto/infusionsoft.png',\r\n        stateName : \"infusionSoft\",\r\n        active: false\r\n      },\r\n      \r\n      {\r\n        id : 7,\r\n        name : 'Sendiio',\r\n        serverName : 'SENDIIO',\r\n        icon : 'asset/auto/sendiio.png',\r\n        stateName : \"sendiio\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 8,\r\n        name : 'Mailvio',\r\n        serverName : 'MAILVIO',\r\n        icon : 'asset/auto/mailvio.png',\r\n        stateName : \"mailVio\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 9,\r\n        name : 'Getresponse',\r\n        serverName : 'GETRESPONSE',\r\n        icon : 'asset/auto/getresponse.png',\r\n        stateName : \"getResponse\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 10,\r\n        name : 'Sendlane',\r\n        serverName : 'SENDLANE',\r\n        icon : 'asset/auto/sendlane.png',\r\n        stateName : \"sendlane\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 11,\r\n        name : 'Custom',\r\n        serverName : 'CUSTOM',\r\n        icon : 'asset/auto/custom_html.png',\r\n        stateName : \"custom\",\r\n        active: false\r\n      }\r\n    ],\r\n    lists: [],\r\n    uid: \"\",\r\n    mailServer: \"\",\r\n    isLists: false,\r\n    customList: [],\r\n    ctAr: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    RequestHandler.PostRequest(GET_AUTO_RESPONDER, {} ,(res, err) => {\r\n      if(res.data.success) {\r\n        let auto_data = this.state.auto_data, autoresponderData = res.data.autoResponder, newFormData = res.data.displayData, arList = []; \r\n        if(autoresponderData.length > 0 ) {\r\n          for(let i=0; i<auto_data.length; i++) {\r\n            for(let j=0; j<autoresponderData.length; j++) {\r\n              this.setState({\r\n                mailServer: autoresponderData[0].mailServer\r\n              })\r\n              if(auto_data[i].serverName === autoresponderData[j].mailServer) {\r\n                auto_data[i].active = true;\r\n              }\r\n            }\r\n          }\r\n          this.getListFromAutoResponder(autoresponderData[0].mailServer, '');\r\n        } \r\n        if(newFormData.length>0) {\r\n          auto_data[auto_data.length-1].active = true;\r\n          for(let k=0; k<newFormData.length; k++) {\r\n            arList.push({\r\n              id: newFormData[k]._id, \r\n              name: newFormData[k].name,\r\n              formData: newFormData[k].formData\r\n            });\r\n          }\r\n        }\r\n        this.setState({\r\n          auto_data : auto_data,\r\n          isLists: newFormData.length > 0 || autoresponderData.length > 0 ? true : false,\r\n          customList: arList\r\n        })\r\n        \r\n      } else {\r\n        window.gs.success(false, \"Something Went Wrong\");\r\n      }\r\n    });\r\n  }\r\n\r\n  getListFromAutoResponder(mailServer, e) {\r\n    if(mailServer === \"CUSTOM\") {\r\n      this.setState({ctAr : true} , () => {});\r\n    } else {\r\n      let data = {\r\n        action : \"getList\", \r\n        responder : mailServer\r\n      }\r\n  \r\n      RequestHandler.PostRequest(GET_LIST_FROM_AUTORESPONDER, data, (res,err) => {\r\n        if (res) {\r\n          let respData = res.data;\r\n          if(respData.lists) {\r\n            let auto_data = this.state.auto_data;\r\n            auto_data.forEach( el => {\r\n              if(el.serverName === mailServer) {\r\n                this.setState({\r\n                  lists: respData.lists,\r\n                  mailServer: mailServer,\r\n                  ctAr : false\r\n                });\r\n              }\r\n            })\r\n          } else {\r\n            window.gs.success(false, res.data.message);\r\n          }\r\n        } else {\r\n          window.gs.success(false, \"Something Went Wrong\");\r\n        }\r\n      });\r\n    }\r\n    this.props.onChange({mailServer : mailServer}, e)\r\n  }  \r\n  \r\n  onSave = () => {\r\n    const mailData = {\r\n      uid: this.state.uid,\r\n      mailServer: this.state.mailServer\r\n    }\r\n\r\n    RequestHandler.PostRequest(SAVE_LIST_ID, { userData: { ...mailData } }, (res, err) => {\r\n      if (res) {\r\n        if (res.data.success) {\r\n          window.gs.success(true, \"Autoresponder Save Successfully\");\r\n        } else {\r\n          window.gs.success(false, res.data.message);\r\n        }\r\n      } else {\r\n        window.gs.success(false, \"Something Went Wrong\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { auto_data, lists, isLists, customList, ctAr } = this.state;\r\n    return ( isLists ? \r\n        <div className=\"cz_radio_parent row\">\r\n          <div className=\"col-6\">\r\n            {auto_data.map((item, index) =>{\r\n            return ( item.active ? \r\n                  <div className=\"cz_custom_radio\" key={index}>\r\n                    <label key={index} onChange={(e) => this.getListFromAutoResponder(item.serverName, e)}>\r\n                        {/* <input type=\"checkbox\" name=\"responder\"/> */}\r\n                        <input type=\"radio\" className=\"form-check-input\" name=\"responder\" defaultChecked={this.props.mailServer === item.serverName ? true : false}/>\r\n                        <span className=\"form-check-label\" key={index}>\r\n                            {item.name}\r\n                        </span>\r\n                    </label>\r\n                </div> : null\r\n            )\r\n          })}\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <form className=\"cz_responders_column\">\r\n              <div className=\"form-elements\">\r\n                <label>Select Unique Id</label>\r\n                <select className=\"cz_custom_input\" onChange={(e)=> {\r\n                  this.setState({uid: e.target.value});\r\n                  this.props.onChange({uid: e.target.value}, e); \r\n                  customList.filter((cc) => {\r\n                    if(cc.id == e.target.value) {\r\n                      this.props.onChange({formData: cc.formData}, e);\r\n                    }\r\n                  })\r\n                }}>\r\n                  <option>Select List</option>\r\n                  { !ctAr ? lists.map((list, i) => {\r\n                    return(<option key={i+1} value={list.id}>{list.name}</option>)\r\n                  }) : customList.map((cl, i) => {\r\n                    return(<option key={i+1} value={cl.id}>{cl.name}</option>)\r\n                  })}\r\n                </select>\r\n              </div>\r\n              {/* <div className=\"cz_responder_btns\">\r\n                <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                    this.onSave()}\r\n                  }\r\n                >Submit</button>\r\n              </div> */}\r\n            </form> \r\n          </div>\r\n        </div>\r\n        : <div className=\"cz_empty_box\">\r\n          <h2>No AutoResponder available right now</h2>\r\n          <p>You have not added any AutoResponder so far. Click on the button below to add the AutoResponder.</p>\r\n          <Link className=\"cz_btn cz_orange_btn\" to=\"/AUTO_RESPONDER\">Add AutoResponder</Link>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/CTA.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/Style.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/Code.js",["1349","1350","1351","1352","1353","1354","1355"],"import React, { Component } from \"react\";\r\nimport DropDown from \"../comman/DropDown\";\r\nimport { Info } from \"../comman/Info\";\r\nimport ToolUtil, { getCodeOptions } from \"../../utils/ToolUtil\";\r\nexport default class Code extends Component {\r\n  options = getCodeOptions();\r\n  state = {\r\n    include: this.props.include,\r\n    exclude: (ToolUtil.isUpgrade1 && window.isAdvancedOpt) ? this.props.exclude : [],\r\n  };\r\n\r\n  onDropDownChange1 = (e, index) => {\r\n    if (!index) index = 0;\r\n    this.state.include[index].type = e;\r\n  };\r\n\r\n  onDropDownChange2 = (e, index) => {\r\n    if (!index) index = 0;\r\n    this.state.exclude[index].type = e;\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const cases = this.props.cases || 1;\r\n    this.props.onChange(this.state);\r\n  }\r\n\r\n  onItemChange1 = (index, e) => {\r\n    this.state.include[index].url = e.target.value;\r\n    this.setState({ include: this.state.include });\r\n  };\r\n\r\n  onItemChange2 = (index, e) => {\r\n    this.state.exclude[index].url = e.target.value;\r\n    this.setState({ exclude: this.state.exclude });\r\n  };\r\n\r\n  onAddClick = (typ) => {\r\n    const cases = this.props.case || 1;\r\n    const { include, exclude } = this.state;\r\n    if (typ === 1) {\r\n      include.push({ type: \"contains\", url: \"\" });\r\n      this.setState({ include });\r\n    } else {\r\n      exclude.push({ type: \"contains\", url: \"\" });\r\n      this.setState({ exclude });\r\n    }\r\n    this.props.onChange(this.state);\r\n  };\r\n\r\n  onRemoveClick = (typ, index) => {\r\n    const cases = this.props.case || 1;\r\n    const include = this.state.include || [{ type: \"contains\", url: \"\" }];\r\n    const exclude = this.state.exclude || [{ type: \"contains\", url: \"\" }];\r\n    if (typ === 1) {\r\n      include.splice(index, 1);\r\n      this.setState({ include });\r\n    } else {\r\n      exclude.splice(index, 1);\r\n      this.setState({ exclude });\r\n    }\r\n    this.props.onChange(this.state);\r\n  };\r\n\r\n  renderInClude = (item, index) => {\r\n    const { include } = this.state;\r\n    return (\r\n      <React.Fragment key={index}>\r\n        <div className=\"col-4\">\r\n          <DropDown options={this.options} index={index} onChange={this.onDropDownChange1} value={item.type} className=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <TextInput index={index} typeN={1} onAddClick={this.onAddClick} onRemoveClick={this.onRemoveClick} size={include.length} onChange={this.onItemChange1} value={item.url} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  renderExclude = (item, index) => {\r\n    const { exclude } = this.state;\r\n    return (\r\n      <React.Fragment key={index}>\r\n        <div className=\"col-4\">\r\n          <DropDown options={this.options} index={index} onChange={this.onDropDownChange2} value={item.type} className=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <TextInput index={index} typeN={2} onAddClick={this.onAddClick} onRemoveClick={this.onRemoveClick} size={exclude.length} onChange={this.onItemChange2} value={item.url} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const include = this.state.include || [{ type: \"contains\", url: \"\" }];\r\n    const exclude = this.state.exclude || [{ type: \"contains\", url: \"\" }];\r\n    return (\r\n      <div>\r\n        <div className=\"label-text\">\r\n          URL Settings*\r\n          <Info text=\"Enter url for trigger Campaign\" />\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"label-text\">Include</div>\r\n          <div className=\"row\">{include.map(this.renderInClude)}</div>\r\n          <div className=\"w-100\"></div>\r\n          <div className=\"label-text\">Exclude</div>\r\n          {exclude.length ? (\r\n            <div className=\"row\">\r\n              {exclude.map(this.renderExclude)}\r\n              <div className=\"w-100\"></div>\r\n            </div>\r\n          ) : (\r\n            <div>You Need to Upgrade</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst TextInput = (props) => {\r\n  return (\r\n    <div className=\"code-input-block \">\r\n      <input type=\"text\" value={props.value ? props.value : \"\"} className=\"form-control\" onChange={(e) => props.onChange(props.index, e)} />\r\n      <div className=\"code-plusIcon\">\r\n        {props.size - 1 === props.index ? (\r\n          <i onClick={() => props.onAddClick(props.typeN)} className=\"fa fa-plus-circle\" aria-hidden=\"true\" />\r\n        ) : (\r\n          <i onClick={() => props.onRemoveClick(props.typeN, props.index)} className=\"fa fa-minus-circle\" aria-hidden=\"true\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/utils/Modal.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/Time.js",["1356","1357"],"import React, { Component } from \"react\";\r\nimport DropDown from \"../comman/DropDown\";\r\nimport Datetime from \"react-datetime\";\r\nimport moment from \"moment\";\r\nimport Util from \"../Util\";\r\nimport { Info } from \"../comman/Info\";\r\n\r\nexport default class Timer extends Component {\r\n  _timerType = [\r\n    { label: \"Date and Time Based\", value: \"DATE_AND_TIME_BASED\" },\r\n    { label: \"Cookie Based\", value: \"COOKIE_BASED\" },\r\n    { label: \"Ever green\", value: \"EVERGREEN\" },\r\n  ];\r\n  _timeZone = Util.getTimeZoneList();\r\n  _whenTimeExp = [\r\n    { label: \"Hide the timer\", value: \"hide\" },\r\n    { label: \"Redirect the page\", value: \"redirect\" },\r\n    { label: \"Show static central time as 00:00\", value: \"static\" },\r\n  ];\r\n  state = {\r\n    timerType: this.props.timerType,\r\n    endDateTime: this.props.endDateTime,\r\n    timeZone: this.props.timeZone,\r\n    postExpiryAction: this.props.postExpiryAction,\r\n    redirectUrl: this.props.redirectUrl,\r\n    days: this.props.days,\r\n    hours: this.props.hours,\r\n    minutes: this.props.minutes,\r\n    seconds: this.props.seconds,\r\n  };\r\n\r\n  onDropDownChange = (value, name) => {\r\n    if (name == \"TIMETYPE\") {\r\n      this.setState({ timerType: value }, () => {\r\n        this.props.onChange({ timerType: this.state.timerType });\r\n      });\r\n    } else if (name == \"TIMEZONE\") {\r\n      this.setState({ timeZone: value }, () => {\r\n        this.props.onChange({ timeZone: this.state.timeZone });\r\n      });\r\n    } else {\r\n      this.setState({ postExpiryAction: value }, () => {\r\n        this.props.onChange({ postExpiryAction: this.state.postExpiryAction });\r\n      });\r\n    }\r\n  };\r\n\r\n  onTimerChange = (value) => {\r\n    value.set({ second: 0 });\r\n    const newValu = value.format(\"YYYY-MM-DD HH:mm:ss\");\r\n    this.setState({ endDateTime: newValu }, () => {\r\n      this.props.onChange({ endDateTime: this.state.endDateTime });\r\n    });\r\n  };\r\n\r\n  onTimeDataChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({ [name]: value }, () => {\r\n      this.props.onChange({ [name]: value });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { timerType, endDateTime, timeZone, postExpiryAction, redirectUrl, days = 0, hours = 0, minutes = 0, seconds = 0 } = this.state;\r\n    let inputProps = {\r\n      placeholder: \"Select Date & Time\",\r\n      autoComplete: \"off\",\r\n      readOnly: true\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            Timer Type* <Info text=\"Select timer type for different action\" />\r\n          </div>\r\n          <DropDown options={this._timerType} onChange={(value) => this.onDropDownChange(value, \"TIMETYPE\")} value={timerType} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n        {timerType === \"DATE_AND_TIME_BASED\" ? (\r\n          <div className=\"form-element\">\r\n            <div className=\"label-text\">\r\n              End Date and Time* <Info text=\"Select your end date & time of timer\" />\r\n            </div>\r\n            <Datetime inputProps={inputProps} defaultValue={moment(endDateTime)} onChange={this.onTimerChange} />\r\n          </div>\r\n        ) : null}\r\n        {timerType !== \"DATE_AND_TIME_BASED\" ? (\r\n          <div className=\"form-element\">\r\n            <div className=\"label-text\">\r\n              Timer* <Info text=\"Enter your time in hour, minute and second whenever you want to stop your timer\" />\r\n            </div>\r\n            <div className=\"col-12\" style={{ display: \"flex\" }}>\r\n              <div className=\"col-3\">DD*</div>\r\n              <div className=\"col-3\">HH*</div>\r\n              <div className=\"col-3\">MM*</div>\r\n              <div className=\"col-3\">SS*</div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\" style={{ display: \"flex\" }}>\r\n                <div className=\"col-3\">\r\n                  <input type=\"number\" min={0} max={30} className=\"form-control\" value={days} name=\"days\" onChange={this.onTimeDataChange} />\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <input type=\"number\" min={0} max={24} className=\"form-control\" value={hours} name=\"hours\" onChange={this.onTimeDataChange} />\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <input type=\"number\" min={0} max={60} className=\"form-control\" value={minutes} name=\"minutes\" onChange={this.onTimeDataChange} />\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <input type=\"number\" min={0} max={60} className=\"form-control\" value={seconds} name=\"seconds\" onChange={this.onTimeDataChange} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {timerType === \"DATE_AND_TIME_BASED\" ? (\r\n          <div className=\"form-element\">\r\n            <div className=\"label-text\">\r\n              Time Zone* <Info text=\"Select timezone to set the timer in particular timezone.\" />\r\n            </div>\r\n            <DropDown options={this._timeZone} onChange={(value) => this.onDropDownChange(value, \"TIMEZONE\")} value={timeZone} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n          </div>\r\n        ) : null}\r\n        {timerType!== 'EVERGREEN' ? <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            When Time Expires* <Info text=\"Select the action when time is up.\" />\r\n          </div>\r\n          {/* <input type=\"text\" name=\"whenTimeExp\" className=\"form-control\" value={whenTimeExp} onChange={this.onChange} /> */}\r\n          <DropDown options={this._whenTimeExp} onChange={(value) => this.onDropDownChange(value, \"ACTION\")} value={postExpiryAction} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div> : null}\r\n        {postExpiryAction === \"redirect\" ? (\r\n          <div className=\"form-element\">\r\n            <div className=\"label-text\">\r\n              Url* <Info text=\"Enter the url for redirect the page after the time is up.\" />\r\n            </div>\r\n            <input type=\"text\" name=\"redirectUrl\" className=\"form-control\" value={redirectUrl} onChange={this.onTimeDataChange} />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/Preview.js",["1358","1359","1360","1361","1362","1363"],"import React, { Component } from \"react\";\r\nimport Portal from \"../comman/Portal\";\r\nimport TimeCounter from \"../comman/TimeCounter\";\r\nimport \"./Preview.css\";\r\nexport class Preview extends Component {\r\n  setPosition() {\r\n    const element = document.getElementsByClassName(\"mck_optForm_container_HELLOBAR\")[0];\r\n    if (element && this.props.toolData.position !== \"BOTTOM\") {\r\n      const body = document.getElementsByTagName(\"body\")[0];\r\n      body.style = \"margin-top:\" + element.offsetHeight + \"px;\";\r\n    } else if (element) {\r\n      const body = document.getElementsByTagName(\"body\")[0];\r\n      body.style = \"margin-bottom:\" + element.offsetHeight + \"px;\";\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { toolData } = this.props;\r\n    const { layout } = toolData;\r\n    if (layout === 0 || layout === 1) {\r\n      this.setPosition();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const body = document.getElementsByTagName(\"body\")[0];\r\n    body.style = \"\";\r\n  }\r\n\r\n  componentDidUpdate(newProps) {\r\n    const { toolData } = this.props;\r\n    const { position } = toolData;\r\n    if (position !== newProps.toolData.position) {\r\n      this.setPosition();\r\n    }\r\n  }\r\n  getcolor(element, key) {\r\n    let color = \"\";\r\n    element.forEach((value) => {\r\n      if (value.id === key) {\r\n        color = value.value;\r\n      }\r\n    });\r\n    return color;\r\n  }\r\n  render() {\r\n    const { toolData, onClose } = this.props;\r\n    const { layout, position } = toolData;\r\n    const bgColor = this.getcolor(toolData.style, \"backgound\");\r\n    const ctaBackGround = this.getcolor(toolData.style, \"ctabackgound\");\r\n    return (\r\n      <Portal defaultOpen={true} closeOnEsc={true} closeOnOutsideClick={true}>\r\n        <div className=\"cz_optin_preview\" style={getStyle(layout, position)}>\r\n          {layout === 0 ? <HelloBar {...toolData} bgColor={bgColor} ctaBackGround={ctaBackGround} /> : null}\r\n          {layout === 1 ? <HelloBarTimer {...toolData} bgColor={bgColor} ctaBackGround={ctaBackGround} /> : null}\r\n          {layout === 2 ? <ExitIntent onClose={onClose} bgColor={bgColor} ctaBackGround={ctaBackGround} {...toolData} /> : null}\r\n        </div>\r\n      </Portal>\r\n    );\r\n  }\r\n}\r\n\r\nconst HelloBar = function (props) {\r\n  const { text, bgColor, ctaBackGround, cta, isNameInput } = props;\r\n  return (\r\n    <div>\r\n      <div className=\"mck_row mck_optForm_container_HELLOBAR\" style={{ backgroundColor: bgColor }}>\r\n        <div className=\"mck_col-md-4 mck_col-lg-4 mck_col-sm-12\">\r\n          <div className=\"mck_optForm_HELLOBAR\" dangerouslySetInnerHTML={{ __html: text }}></div>\r\n        </div>\r\n        <div className=\"cz_input_helloBar_box mck_col-md-8 mck_col-lg-8 mck_col-sm-12\">\r\n        {!isNameInput ? (\r\n          <div className=\"hellobar_input\">\r\n            <input placeholder=\"Email\" className=\"mck--optForm-input_HELLOBAR\" />\r\n          </div>\r\n        ) : (\r\n          <React.Fragment>\r\n            <div className=\"hellobar_input\">\r\n              <input placeholder=\"Email\" className=\"mck--optForm-input_HELLOBAR\" />\r\n            </div>\r\n            <div className=\"hellobar_input\">\r\n              <input placeholder=\"Name\" className=\"mck--optForm-input_HELLOBAR\" />\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n        <div className=\"hellobar_cta\">\r\n          <div className=\"mck_optForm_cta_HELLOBAR\">\r\n            <a className=\"mck_BuyNowBtn_HELLOBAR\" style={{ backgroundColor: ctaBackGround }} dangerouslySetInnerHTML={{ __html: cta }}></a>\r\n          </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst HelloBarTimer = function (props) {\r\n  const { text, bgColor, ctaBackGround, cta, endDateTime, isNameInput } = props;\r\n  return (\r\n    <div>\r\n      <div className=\"mck_row mck_optForm_container_HELLOBAR\" style={{ backgroundColor: bgColor }}>\r\n        <div className=\"mck_optForm_HELLOBAR\" dangerouslySetInnerHTML={{ __html: text }}></div>\r\n        <div className=\"mck_hellobar_timer\">\r\n          <div className=\"mck_optForm_HELLOBAR\">\r\n            <TimeCounter timerType={\"normal\"} date={endDateTime} />\r\n          </div>\r\n        </div>\r\n        <div className=\"cz_input_helloBar_box\">\r\n          {!isNameInput ? (\r\n            <div className=\"hellobar_input\">\r\n              <input placeholder=\"Email\" className=\"mck--optForm-input_HELLOBAR\" />\r\n            </div>\r\n          ) : (\r\n            <React.Fragment>\r\n              <div className=\"hellobar_input\">\r\n                <input placeholder=\"Email\" className=\"mck--optForm-input_HELLOBAR\" />\r\n              </div>\r\n              <div className=\"hellobar_input\">\r\n                <input placeholder=\"Name\" className=\"mck--optForm-input_HELLOBAR\" />\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n          <div className=\"hellobar_cta\">\r\n            <div className=\"mck_optForm_cta_HELLOBAR\">\r\n              <a className=\"mck_BuyNowBtn_HELLOBAR\" style={{ backgroundColor: ctaBackGround }} dangerouslySetInnerHTML={{ __html: cta }}></a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ExitIntent = function (props) {\r\n  const { isBGIMG, bgImg, bgColor, cta, subTitle, text, ctaBackGround, onClose, isNameInput } = props;\r\n  var background = isBGIMG\r\n    ? { backgroundImage: \"url('\" + bgImg + \"')\", backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\", backgroundPosition: \"center\", backgroundSize: \"cover\" }\r\n    : { backgroundColor: bgImg };\r\n\r\n  return (\r\n    <div class=\"mckoptin_exitIntent hide_club\">\r\n      <div class=\"mck_exit_club_handler mckoptin_exitIntent_wrapper\" style={{ backgroundColor: bgColor }}>\r\n        <div class=\"MCK_OPTIN_exitbutton\">\r\n          <img class=\"mxk_exit_close\" onClick={onClose} src=\"http://d257yxqteot439.cloudfront.net/static/templateclub/exitbg/1/Close.png\" />\r\n        </div>\r\n        <div class=\"MCK_OPTIN_EXIT_T8\">\r\n          <div class=\"MCK_OPTIN_EXIT_CONTAINER_T9\">\r\n            <div class=\"MCK_OPTIN_EXIT_CONTAINER_ICON_T9\">\r\n              <img style={{ height: \"auto\", width: \"100%\" }} src=\"http://d257yxqteot439.cloudfront.net/static/templateclub/exitbg/9/Icon.png\" />\r\n            </div>\r\n            <div style={{ width: \"100%\", textAlign: \"center\" }} dangerouslySetInnerHTML={{ __html: text }}></div>\r\n          </div>\r\n          <div class=\"MCK_OPTINEXIT_SUBTEXT_T9\" dangerouslySetInnerHTML={{ __html: subTitle }}></div>\r\n\r\n          {!isNameInput ? (\r\n            <div class=\"MCK_OPTIN_EXIT_HEADER_T9\">\r\n              <div>\r\n                <p>\r\n                  <input type=\"text\" class=\"OPTION_FORM_INPUT_5f24fb36f2089c211c630ca1\" name=\"email\" placeholder=\"Email\" defaultValue=\"\" autoFocus=\"\" />{\" \"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div class=\"MCK_OPTIN_EXIT_HEADER_T9\">\r\n              <div>\r\n                <p>\r\n                  <input type=\"text\" class=\"OPTION_FORM_INPUT_5f24fb36f2089c211c630ca1\" name=\"email\" placeholder=\"Email\" defaultValue=\"\" autoFocus=\"\" />{\" \"}\r\n                </p>\r\n                <p>\r\n                  <input type=\"text\" class=\"OPTION_FORM_INPUT_5f24fb36f2089c211c630ca1\" name=\"name\" defaultValue=\"\" placeholder=\"Name\" autoFocus=\"\" />{\" \"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {/* <div className=\"MCK_OPTIN_TIMER\">\r\n            <div>\r\n              <TimeCounter timerType={\"normal\"}  />\r\n            </div>\r\n          </div> */}\r\n          <div class=\"MCK_OPTINEXIT_CTA_T9\">\r\n            <center>\r\n              <div style={{ backgroundColor: ctaBackGround }} dangerouslySetInnerHTML={{ __html: cta }}></div>\r\n            </center>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction getStyle(layout, isTop) {\r\n  if (layout === 2) return { position: \"fixed\", zIndex: \"1\", top: \"0px\", left: \"0px\", width: \"100%\", height: \"100%\", backgroundColor: \"#fff\" };\r\n  if (isTop === \"TOP\") return { position: \"fixed\", top: \"0px\", left: \"0px\", width: \"100%\" };\r\n  return { position: \"fixed\", bottom: \"0px\", left: \"0px\", width: \"100%\" };\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/Icons.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/Image.js",["1364","1365","1366"],"import React, { Component } from \"react\";\r\nimport Uploader from \"../../../comman/Uploader\";\r\nimport Util, { parseImgUrl } from \"../../../Util\";\r\nexport default class Image extends Component {\r\n  state = { image: this.props.image, disabled: false };\r\n\r\n  componentDidMount() {\r\n    this.setState({ image: this.props.image })\r\n  }\r\n  componentWillMount() {\r\n    if (this.props.image !== \"\") this.state.disabled = true;\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (Util.isRedirected) {\r\n      Util.isRedirected = false;\r\n      this.setState({ image: nextProps.image, disabled: true });\r\n    }\r\n  }\r\n  onUploadDone = (imageICON) => {\r\n    let imageName = imageICON.image;\r\n    this.setState({ image: imageName, disabled: true });\r\n    this.props.onChange(5, imageName);\r\n  };\r\n\r\n  onReset = () => {\r\n    this.setState({ image: \"\" }, () => {\r\n      this.props.onChange(5, this.state.image);\r\n    });\r\n  };\r\n  render() {\r\n    const props = {\r\n      onUploadDone: this.onUploadDone,\r\n    };\r\n    const { image, disabled } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"col-12\" style={{padding:0}}>\r\n          <Uploader {...props} onReset={this.onReset} />\r\n        </div>\r\n\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Image*</div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"image\"\r\n            className=\"form-control\"\r\n            value={image}\r\n            onChange={(e) => {\r\n              this.setState({ image: e.target.value });\r\n              this.props.onChange(5, e.target.value);\r\n            }}\r\n            autoComplete=\"off\" \r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/Video.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/BonusUpsell/SideBar.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ProofApp/Display.js",["1367"],"import React, { Component } from \"react\";\r\n/* import Util from \"../../../Util\";\r\nimport Switch1 from \"../../../comman/Switch\"; */\r\nimport { getPath } from \"../../../../actions/URLs\";\r\nexport default class Icons extends Component {\r\n  state = { \r\n    duration : this.props.toolData.duration,\r\n    position : this.props.toolData.position\r\n  } \r\n \r\n  changeValue = (e) => {\r\n    const { cases } = this.props;\r\n    this.setState({[e.target.name]: e.target.value}, () => {\r\n      this.props.onChange( cases, this.state );\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { duration, position } = this.state;\r\n    return (\r\n      <div className=\"video_icons_list\">\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Display Duration</div>\r\n          <input className=\"form-control\" type=\"number\" name=\"duration\" value={duration} onChange={this.changeValue}/>\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Display Position</div>\r\n          <select className=\"form-control\" name=\"position\" value={position} onChange={this.changeValue}>\r\n            <option value=\"bottomLeft\">Bottom Left</option>\r\n            <option value=\"bottomRight\">Bottom Right</option>\r\n          </select>\r\n        </div>\r\n\r\n        {/* <div className=\"proofapp_preview\">\r\n          <div className=\"proofapp_preview_box\">\r\n            <img class=\"proof_close\" src=\"http://d257yxqteot439.cloudfront.net/static/templateclub/exitbg/1/Close.png\"/>\r\n            <div className=\"proofapp_preview_logo\">R</div>\r\n            <div className=\"proofapp_preview_text\">\r\n              <h2>Rahul Thakur Just Signed Up</h2>\r\n              <p className=\"proofapp_place\">From India <span>(10 min ago)</span></p>\r\n              <p className=\"proofapp_by\">By Converzee</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"proofapp_preview_box\">\r\n            <img class=\"proof_close\" src=\"http://d257yxqteot439.cloudfront.net/static/templateclub/exitbg/1/Close.png\"/>\r\n            <div className=\"proofapp_preview_logo\">S</div>\r\n            <div className=\"proofapp_preview_text\">\r\n              <h2>Sarika Singh Just Purchased</h2>\r\n              <p className=\"proofapp_place\">From India <span>(20 min ago)</span></p>\r\n              <p className=\"proofapp_by\">By Converzee</p>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// Icon-awesome-check-circle","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ProofApp/Style.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ProofApp/Preview.js",["1368","1369","1370","1371","1372","1373","1374","1375","1376"],"import React, { Component } from \"react\";\r\nimport \"./Preview.css\";\r\nimport { parseImgUrl, youtubeUrlParse, vimeoUrlParse } from \"../../../Util\";\r\nimport Portal from \"../../../comman/Portal\";\r\nimport { getPath, BASE_URL } from \"../../../../actions/URLs\";\r\nexport default class Preview extends Component {\r\n  state = {\r\n    count: 0\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.setPosition();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    \r\n  }\r\n\r\n  setPosition() {\r\n    const element = document.getElementsByClassName(\"sk-top\")[0];\r\n    if (element && this.props.create.helloBarPos !== \"bottom\") {\r\n      const body = document.getElementsByTagName(\"body\")[0];\r\n      body.style = \"margin-top:\" + element.offsetHeight + \"px;\";\r\n    } else if (element) {\r\n      const body = document.getElementsByTagName(\"body\")[0];\r\n      body.style = \"margin-bottom:\" + element.offsetHeight + \"px;\";\r\n    }\r\n  }\r\n\r\n  getStyle = () => {\r\n    const { elements } = this.props.STYLE;\r\n    const style = {};\r\n    Object.assign(style, { background: this.getcolor(elements, \"background\") });\r\n    return style;\r\n  };\r\n  getcolor(element, key) {\r\n    let color = \"#fff\";\r\n    element.forEach((value) => {\r\n      if (value.name === key) {\r\n        color = value.color;\r\n      }\r\n    });\r\n    return color;\r\n  }\r\n\r\n  render() {\r\n    const { text, subText, position, hours, displayData } = this.props.toolData;\r\n    const elements = this.props.STYLE.elements;\r\n    const titleColor = this.getcolor(elements, \"titleColor\");\r\n    const subtitleColor = this.getcolor(elements, \"subtitleColor\");\r\n    const logoColor = this.getcolor(elements, \"logoColor\");\r\n\r\n    return (\r\n        <div className={\"proofapp_preview\".concat(\" proof_app_\"+position)}>\r\n          <div className=\"proofapp_preview_box\">\r\n            <img className=\"proof_close\" src=\"http://d257yxqteot439.cloudfront.net/static/templateclub/exitbg/1/Close.png\" onClick={(e) => this.props.onClose(e, \"close\")}/>\r\n            <div className=\"proofapp_preview_logo\" style={{backgroundColor: logoColor}}>D</div>\r\n            {/* <img src={getPath(\"/asset/logo_white_small.svg\")} /> */}\r\n            <div className=\"proofapp_preview_text\">\r\n              <h2 style={{color: titleColor}}>{\"{name}\"}  {text}</h2>\r\n              <p className=\"proofapp_place\" style={{color: subtitleColor}}><span>{subText} {\"{country_name}\"} </span></p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ProofApp/Code.js",["1377","1378","1379","1380","1381","1382","1383"],"import React, { Component } from \"react\";\r\nimport DropDown from \"../../../comman/DropDown\";\r\nimport { Info } from \"../../../comman/Info\";\r\nimport ToolUtil, { getCodeOptions } from \"../../../../utils/ToolUtil\";\r\nexport default class Code extends Component {\r\n  options = getCodeOptions();\r\n  state = {\r\n    include: this.props.include,\r\n    exclude: ToolUtil.isUpgrade1 ? this.props.exclude : [],\r\n  };\r\n\r\n  onDropDownChange1 = (e, index) => {\r\n    if (!index) index = 0;\r\n    this.state.include[index].type = e;\r\n  };\r\n\r\n  onDropDownChange2 = (e, index) => {\r\n    if (!index) index = 0;\r\n    this.state.exclude[index].type = e;\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const cases = this.props.cases || 1;\r\n    this.props.onChange(this.state);\r\n  }\r\n\r\n  onItemChange1 = (index, e) => {\r\n    this.state.include[index].url = e.target.value;\r\n    this.setState({ include: this.state.include });\r\n    this.props.onChange(this.state);\r\n  };\r\n\r\n  onItemChange2 = (index, e) => {\r\n    this.state.exclude[index].url = e.target.value;\r\n    this.setState({ exclude: this.state.exclude });\r\n    this.props.onChange(this.state);\r\n  };\r\n\r\n  onAddClick = (typ) => {\r\n    const cases = this.props.case || 1;\r\n    const { include, exclude } = this.state;\r\n    if (typ === 1) {\r\n      include.push({ type: \"contains\", url: \"\" });\r\n      this.setState({ include });\r\n    } else {\r\n      exclude.push({ type: \"contains\", url: \"\" });\r\n      this.setState({ exclude });\r\n    }\r\n    this.props.onChange(this.state);\r\n  };\r\n\r\n  onRemoveClick = (typ, index) => {\r\n    const cases = this.props.case || 1;\r\n    const include = this.state.include || [{ type: \"contains\", url: \"\" }];\r\n    const exclude = this.state.exclude || [{ type: \"contains\", url: \"\" }];\r\n    if (typ === 1) {\r\n      include.splice(index, 1);\r\n      this.setState({ include });\r\n    } else {\r\n      exclude.splice(index, 1);\r\n      this.setState({ exclude });\r\n    }\r\n    this.props.onChange(this.state);\r\n  };\r\n\r\n  renderInClude = (item, index) => {\r\n    const { include } = this.state;\r\n    return (\r\n      <React.Fragment key={index}>\r\n        <div className=\"col-4\">\r\n          <DropDown options={this.options} index={index} onChange={this.onDropDownChange1} value={item.type} className=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <TextInput index={index} typeN={1} onAddClick={this.onAddClick} onRemoveClick={this.onRemoveClick} size={include.length} onChange={this.onItemChange1} value={item.url} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  renderExclude = (item, index) => {\r\n    const { exclude } = this.state;\r\n    return (\r\n      <React.Fragment key={index}>\r\n        <div className=\"col-4\">\r\n          <DropDown options={this.options} index={index} onChange={this.onDropDownChange2} value={item.type} className=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <TextInput index={index} typeN={2} onAddClick={this.onAddClick} onRemoveClick={this.onRemoveClick} size={exclude.length} onChange={this.onItemChange2} value={item.url} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const include = this.state.include || [{ type: \"contains\", url: \"\" }];\r\n    const exclude = this.state.exclude || [{ type: \"contains\", url: \"\" }];\r\n    return (\r\n      <div>\r\n        <div className=\"label-text\">\r\n          URL Settings*\r\n          <Info text=\"Enter url for trigger Campaign\" />\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"label-text\">Include</div>\r\n          <div className=\"row\">{include.map(this.renderInClude)}</div>\r\n          <div className=\"w-100\"></div>\r\n          <div className=\"label-text\">Exclude</div>\r\n          {exclude.length ? (\r\n            <div className=\"row\">\r\n              {exclude.map(this.renderExclude)}\r\n              <div className=\"w-100\"></div>\r\n            </div>\r\n          ) : (\r\n            <div>You Need to Upgrade</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst TextInput = (props) => {\r\n  return (\r\n    <div className=\"code-input-block \">\r\n      <input type=\"text\" value={props.value ? props.value : \"\"} className=\"form-control\" onChange={(e) => props.onChange(props.index, e)} />\r\n      <div className=\"code-plusIcon\">\r\n        {props.size - 1 === props.index ? (\r\n          <i onClick={() => props.onAddClick(props.typeN)} className=\"fa fa-plus-circle\" aria-hidden=\"true\" />\r\n        ) : (\r\n          <i onClick={() => props.onRemoveClick(props.typeN, props.index)} className=\"fa fa-minus-circle\" aria-hidden=\"true\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/layout/LayoutSelector.js",["1384"],"import React from \"react\";\r\nimport \"./LayoutSelector.css\";\r\nimport { getPath } from \"../../actions/URLs\";\r\n\r\nexport const LayoutSelector = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={\"cz_hellobar_timer_layout\".concat(props.isExit ? \" cz_club_exit_layout\".concat(props.layout === 4 ? \" cz_dynamic_layouts\": \"\") : \"\").concat(props.layout === 3 ? \" cz_ct_layouts\": \"\")}>\r\n        <p>Select Layout</p>\r\n        {props.items.map((e, i) => (\r\n          <TemplateView isExit={props.isExit} isText={props.isText} key={\"TEMP_\" + i} index={i} onClick={props.onLayoutSelect} checkedIndex={props.selected} img={e} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TemplateView = (props) => {\r\n  return (\r\n    <div className=\"template_item\" onClick={() => props.onClick(props.index)}>\r\n      {props.checkedIndex === props.index ? (\r\n        <span className=\"Icon-awesome-check-circle\">\r\n          <i className=\"fa fa-check-circle\"></i>\r\n        </span>\r\n      ) : (\r\n        <span className=\"Icon-awesome-uncheck-circle\">\r\n          <i className=\"fa fa-circle-o\"></i>\r\n        </span>\r\n      )}\r\n      {props.isText ? <span>{props.img}</span> : <img className={props.isExit ? \"layoutSelector_img layoutSelector_img_height\" : \"layoutSelector_img \"} src={window.rPath+getPath(props.img)} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ColorSelector = (props) => {\r\n  return (\r\n    <div onClick={() => props.onClick(props.index)} className={props.selectedIndex === props.index ? \"layout-color-selected layout_colors_boxes\" : \" layout_colors_boxes\"}>\r\n      <h3>{props.showName ? props.name : props.text}</h3>\r\n      <div className={props.selectedIndex === props.index ? \"layout-color-box layout-color-box-selected\" : \"layout-color-box\"} style={{ backgroundColor: props.value || props.color }}></div>\r\n    </div>\r\n  );\r\n};\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ProofApp/Script.js",["1385","1386","1387","1388"],"import React, { Component } from \"react\";\r\nimport Editor from \"../../../comman/Editor\";\r\nimport DropDown from \"../../../comman/DropDown\";\r\nexport default class Script extends Component {\r\n  state = {\r\n    cta: this.props.cta,\r\n    position: this.props.position,\r\n  };\r\n\r\n  onChange = (value) => {\r\n    this.setState({ cta: value }, () => {\r\n      this.props.onChange({ cta: this.state.cta });\r\n    });\r\n  };\r\n\r\n  onPositionChange = (value) => {\r\n    this.setState({ position: value }, () => {\r\n      this.props.onChange({ position: this.state.position });\r\n    });\r\n  };\r\n\r\n  copyScript = () => {\r\n    var copyText = document.querySelector(\".iframe_script\");\r\n    copyText.select();\r\n    copyText.setSelectionRange(0, 99999);\r\n    document.execCommand(\"copy\");\r\n    window.gs.toast(\"Copied\", { position: \"top-center\", type: window.gs.toast.TYPE.INFO });\r\n  }\r\n\r\n  render() {\r\n    const { cta, position } = this.state;\r\n    return (\r\n      <div className=\"cz_autoplay_script\">\r\n        {/* <div className=\"cz_script_box\">\r\n          <h2>Script</h2>\r\n          <p>Place the script above the closing body tag on the page where your video is already placed. Playboost will automatically detect your video and apply your customizations.</p>\r\n          <textarea readOnly value='<script class=\"playboost-js\" src=\"https://playboost.co/remote/play.js?q=2831\"></script>'></textarea>\r\n          <button className=\"cz_btn\">Copy</button>\r\n        </div> */}\r\n        <div className=\"cz_script_box\">\r\n          <h2>Iframe</h2>\r\n          <p>Use this iframe code as your installation step if you are using a page builder. If you this, you won't need to use the other playboost installation script. Place this iframe code anywhere where you want your playboost campaign to be displayed inside your page builder (if you have an existing embed video, replace it with this iframe code). Please note: this iframe code this will not track clicks and views. If you want to track those metrics, you'll need to use the other installation script.</p>\r\n          <textarea className=\"iframe_script\" readOnly value='<iframe class=\"converzee_auto_play\" frameborder=\"0\" scrolling=\"no\" allow=\"autoplay; fullscreen\" width=\"560\" height=\"315\" ></iframe>'></textarea>\r\n          <button className=\"cz_btn\" onClick={this.copyScript}>Copy</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ProofApp/Text.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ProofApp/SideBar.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/AutoplayVideo/Icons.js",["1389","1390"],"import React, { Component } from \"react\";\r\n/* import Util from \"../../../Util\";\r\nimport Switch1 from \"../../../comman/Switch\"; */\r\nimport { getPath } from \"../../../../actions/URLs\";\r\nexport default class Icons extends Component {\r\n  state = {\r\n    icons : [\r\n      {\r\n        image : \"/asset/play_icon.gif\"\r\n      },\r\n      {\r\n        image : \"/asset/play_icon2.gif\"\r\n      },\r\n      {\r\n        image : \"/asset/play_icon3.gif\"\r\n      },\r\n      {\r\n        image : \"/asset/play_icon4.gif\"\r\n      },\r\n      {\r\n        image : \"/asset/play_icon5.gif\"\r\n      },\r\n    ],\r\n    selectedIcon: 0\r\n  } \r\n\r\n  selectIcon = (e, index) => {\r\n    const { icons } = this.state;\r\n\r\n    let getElem = document.getElementsByClassName(\"play_icons\");\r\n    icons.map((el, i) => {\r\n      if(i === index) {\r\n        getElem[i].childNodes[0].classList.add(\"Icon-awesome-check-circle\");\r\n        this.setState({selectedIcon : el.image})\r\n        this.props.onChange(3, el.image)\r\n      } else {\r\n        getElem[i].childNodes[0].classList.remove(\"Icon-awesome-check-circle\")\r\n      }\r\n    });\r\n  }\r\n \r\n  render() {\r\n    const { icons, selectedIcon } = this.state;\r\n    return (\r\n      <div className=\"video_icons_list\">\r\n        <h1>Video Play Icons</h1>\r\n        <ul>\r\n        {/* <li><div class=\"play_icons\"><span class=\"Icon-awesome-check-circle\"><i class=\"fa fa-check-circle\"></i></span><img src=\"/asset/play_icon.gif\"/></div></li> */}\r\n          {icons.map((icon, index) => {\r\n            return <li key={index} onClick={(e) => this.selectIcon(e, index)}><div class=\"play_icons\" data-label={index}><span class={selectedIcon === index ? \"Icon-awesome-check-circle\":\"\"}><i class=\"fa fa-check-circle\"></i></span><img src={getPath(icon.image)}/></div></li>\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// Icon-awesome-check-circle","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/AutoplayVideo/Video.js",["1391","1392","1393"],"import React, { Component } from \"react\";\r\nimport Util from \"../../../Util\";\r\nimport Switch1 from \"../../../comman/Switch\";\r\nexport default class Video extends Component {\r\n  state = { url: this.props.url, videoType: this.props.videoType };\r\n  componentWillUnmount() {\r\n    this.props.onChange(2, this.state);\r\n  }\r\n//   componentWillReceiveProps(nextProps) {\r\n//       console.log(\"nextProps\", nextProps);\r\n//     if (Util.isRedirected) {\r\n//       Util.isRedirected = false;\r\n//       this.setState({ url: nextProps.url, videoType: nextProps.videoType });\r\n//     }\r\n//   }\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value }, () => {\r\n      this.props.onChange(2, this.state);\r\n    });\r\n  };\r\n\r\n  onCheckBoxClick = (value) => {\r\n    this.setState({ videoType: value }, () => {\r\n      this.props.onChange(2, this.state);\r\n    });\r\n  };\r\n  render() {\r\n    const { url, videoType } = this.state;\r\n    const switchElement = this.props.switchElement;\r\n    \r\n    return (\r\n      <div>\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 cz_radio_parent\">\r\n              <div className=\"cz_custom_radio\" onClick={() => this.onCheckBoxClick(\"youtube\")}>\r\n                <label>\r\n                  <input class=\"form-check-input\" type=\"radio\" name=\"videoUrlType\" value=\"youtube\" checked={videoType === \"youtube\"} />\r\n                  <span class=\"form-check-label\">Youtube</span>\r\n                </label>\r\n              </div>\r\n              <div className=\"cz_custom_radio\" onClick={() => this.onCheckBoxClick(\"viemo\")}>\r\n                <label>\r\n                  <input class=\"form-check-input \" type=\"radio\" name=\"videoUrlType\" value=\"viemo\" checked={videoType === \"viemo\"} />\r\n                  <span class=\"form-check-label\">Viemo</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{marginBottom:'30px'}}> \r\n          <div className=\"form-element\">\r\n            <div className=\"label-text\">URL*</div>\r\n            <input type=\"text\" name=\"url\" className=\"form-control\" value={url} onChange={this.onChange} />\r\n          </div>\r\n        </div>\r\n        {/* <div>\r\n          <div className=\"form-element\">\r\n            <div className=\"label-text\">Autoplay*</div>\r\n            <Switch1 onChange={this.props.onVideoChange} isChecked={switchElement} />\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/AutoplayVideo/Preview.js",["1394","1395","1396"],"import React, { Component } from \"react\";\r\nimport \"./Preview.css\";\r\nimport { parseImgUrl, youtubeUrlParse, vimeoUrlParse } from \"../../../Util\";\r\nimport Portal from \"../../../comman/Portal\";\r\nimport { getPath } from \"../../../../actions/URLs\";\r\nexport default class Preview extends Component {\r\n  getStyle = () => {\r\n    const { elements } = this.props.STYLE;\r\n    const style = {};\r\n    Object.assign(style, { background: this.getcolor(elements, \"background\") });\r\n    return style;\r\n  };\r\n  getcolor(element, key) {\r\n    let color = \"#fff\";\r\n    element.forEach((value) => {\r\n      if (value.name === key) {\r\n        color = value.color;\r\n      }\r\n    });\r\n    return color;\r\n  }\r\n  isUrlVideo = (url) => {\r\n    if (url.indexOf(\"youtube\") !== -1 || url.indexOf(\"youtu\") !== -1 || url.indexOf(\"viemo\") !== -1) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  getVideoURL(url) {\r\n    return parseImgUrl(url);\r\n  }\r\n\r\n  hideOverlayData = () => {\r\n    let autoplayOverlay = document.querySelector(\".cz_autoplay_overlay\");\r\n    autoplayOverlay.style.display = \"none\";\r\n    let getIframeData = document.querySelector(\".iframe_autoplay\");\r\n    let src = getIframeData.src\r\n    if(src.includes(\"?\")) {\r\n        getIframeData.src = src.split(\"?\")[0];\r\n    } else {\r\n        getIframeData.src += \"?autoplay=1\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const video = this.props.video.url || \"\";\r\n    const style = {}; //this.getStyle();\r\n    const text = this.props.toolData.text;\r\n    const icons = this.props.icons;\r\n    return (\r\n        <Portal defaultOpen={true} closeOnEsc={true} closeOnOutsideClick={true}>\r\n            <div className=\"image-popup\" style={style}>\r\n            <div className=\"image-preview\">\r\n                <div className=\"popUpTitlebar\"></div>\r\n                <center>\r\n                <div className=\"image-main-preview autoplay_video_preview\">\r\n                      <div\r\n                          onClick={() => {\r\n                          this.props.onClose();\r\n                          }}\r\n                          className=\"popupCloseButton\"\r\n                          style={{ position: \"relative\" }}\r\n                      >\r\n                          <i className=\"fa fa-close\" style={{ paddingLeft: \"102%\" }} />\r\n                      </div>\r\n                    <div className=\"cz_autoplay_vidoe_box\">\r\n                      <div className=\"cz_autoplay_overlay\" onClick={this.hideOverlayData}>\r\n                        <img src={getPath(icons)}/>\r\n                        <h2 dangerouslySetInnerHTML={{ __html: text }}></h2>\r\n                      </div>\r\n                      {this.isUrlVideo(video) ? (\r\n                          <iframe\r\n                          className=\"iframe_autoplay\"\r\n                          width=\"100%\"\r\n                          height=\"100%\"\r\n                          frameBorder=\"0\"\r\n                          allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                          allowfullscreen\r\n                          auto\r\n                          src={\"https://www.youtube.com/embed/\" + youtubeUrlParse(video)}\r\n                          ></iframe>\r\n                      ) : (\r\n                          <iframe\r\n                          className=\"iframe_autoplay\"\r\n                          width=\"100%\"\r\n                          height=\"100%\"\r\n                          frameBorder=\"0\"\r\n                          allowfullscreen\r\n                          auto\r\n                          src={\"https://player.vimeo.com/video/\" + vimeoUrlParse(video)}\r\n                          ></iframe>\r\n                      )}\r\n                    </div>\r\n\r\n                    {/* <img src={BASE_URL + parseImgUrl(video)} /> */}\r\n                </div>\r\n                </center>\r\n            </div>\r\n            </div>\r\n        </Portal>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/AutoplayVideo/Code.js",["1397","1398","1399","1400","1401","1402","1403"],"import React, { Component } from \"react\";\r\nimport DropDown from \"../../../comman/DropDown\";\r\nimport { Info } from \"../../../comman/Info\";\r\nimport ToolUtil, { getCodeOptions } from \"../../../../utils/ToolUtil\";\r\nexport default class Code extends Component {\r\n  options = getCodeOptions();\r\n  state = {\r\n    include: this.props.include,\r\n    exclude: (ToolUtil.isUpgrade1 && window.isAdvancedOpt) ? this.props.exclude : [],\r\n  };\r\n\r\n  onDropDownChange1 = (e, index) => {\r\n    if (!index) index = 0;\r\n    this.state.include[index].type = e;\r\n  };\r\n\r\n  onDropDownChange2 = (e, index) => {\r\n    if (!index) index = 0;\r\n    this.state.exclude[index].type = e;\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const cases = this.props.cases || 1;\r\n    this.props.onChange(this.state);\r\n  }\r\n\r\n  onItemChange1 = (index, e) => {\r\n    this.state.include[index].url = e.target.value;\r\n    this.setState({ include: this.state.include });\r\n    this.props.onChange(this.state);\r\n  };\r\n\r\n  onItemChange2 = (index, e) => {\r\n    this.state.exclude[index].url = e.target.value;\r\n    this.setState({ exclude: this.state.exclude });\r\n    this.props.onChange(this.state);\r\n  };\r\n\r\n  onAddClick = (typ) => {\r\n    const cases = this.props.case || 1;\r\n    const { include, exclude } = this.state;\r\n    if (typ === 1) {\r\n      include.push({ type: \"contains\", url: \"\" });\r\n      this.setState({ include });\r\n    } else {\r\n      exclude.push({ type: \"contains\", url: \"\" });\r\n      this.setState({ exclude });\r\n    }\r\n    this.props.onChange(this.state);\r\n  };\r\n\r\n  onRemoveClick = (typ, index) => {\r\n    const cases = this.props.case || 1;\r\n    const include = this.state.include || [{ type: \"contains\", url: \"\" }];\r\n    const exclude = this.state.exclude || [{ type: \"contains\", url: \"\" }];\r\n    if (typ === 1) {\r\n      include.splice(index, 1);\r\n      this.setState({ include });\r\n    } else {\r\n      exclude.splice(index, 1);\r\n      this.setState({ exclude });\r\n    }\r\n    this.props.onChange(this.state);\r\n  };\r\n\r\n  renderInClude = (item, index) => {\r\n    const { include } = this.state;\r\n    return (\r\n      <React.Fragment key={index}>\r\n        <div className=\"col-4\">\r\n          <DropDown options={this.options} index={index} onChange={this.onDropDownChange1} value={item.type} className=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <TextInput index={index} typeN={1} onAddClick={this.onAddClick} onRemoveClick={this.onRemoveClick} size={include.length} onChange={this.onItemChange1} value={item.url} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  renderExclude = (item, index) => {\r\n    const { exclude } = this.state;\r\n    return (\r\n      <React.Fragment key={index}>\r\n        <div className=\"col-4\">\r\n          <DropDown options={this.options} index={index} onChange={this.onDropDownChange2} value={item.type} className=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <TextInput index={index} typeN={2} onAddClick={this.onAddClick} onRemoveClick={this.onRemoveClick} size={exclude.length} onChange={this.onItemChange2} value={item.url} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const include = this.state.include || [{ type: \"contains\", url: \"\" }];\r\n    const exclude = this.state.exclude || [{ type: \"contains\", url: \"\" }];\r\n    return (\r\n      <div>\r\n        <div className=\"label-text\">\r\n          URL Settings*\r\n          <Info text=\"Enter url for trigger Campaign\" />\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"label-text\">Include</div>\r\n          <div className=\"row\">{include.map(this.renderInClude)}</div>\r\n          <div className=\"w-100\"></div>\r\n          <div className=\"label-text\">Exclude</div>\r\n          {exclude.length ? (\r\n            <div className=\"row\">\r\n              {exclude.map(this.renderExclude)}\r\n              <div className=\"w-100\"></div>\r\n            </div>\r\n          ) : (\r\n            <div>You Need to Upgrade</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst TextInput = (props) => {\r\n  return (\r\n    <div className=\"code-input-block \">\r\n      <input type=\"text\" value={props.value ? props.value : \"\"} className=\"form-control\" onChange={(e) => props.onChange(props.index, e)} />\r\n      <div className=\"code-plusIcon\">\r\n        {props.size - 1 === props.index ? (\r\n          <i onClick={() => props.onAddClick(props.typeN)} className=\"fa fa-plus-circle\" aria-hidden=\"true\" />\r\n        ) : (\r\n          <i onClick={() => props.onRemoveClick(props.typeN, props.index)} className=\"fa fa-minus-circle\" aria-hidden=\"true\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/AutoplayVideo/Script.js",["1404","1405","1406","1407"],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/AutoplayVideo/Text.js",["1408"],"import React, { Component } from \"react\";\r\nimport Editor from \"../../../comman/Editor\";\r\nimport { Switch } from \"antd\";\r\nexport default class Text extends Component {\r\n  state = {\r\n    text: this.props.text\r\n  };\r\n\r\n  onChange = (value) => {\r\n    this.setState({ text: value }, () => {\r\n      this.props.onChange(1, this.state.text);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { text } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Text*</div>\r\n          <Editor value={text} name=\"text\" onChange={this.onChange} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/AutoplayVideo/SideBar.js",["1409","1410"],"import React, { Component } from \"react\";\r\nimport { SideButton } from \"../../../layout/ToolLayout\";\r\nexport default class SideBar extends Component {\r\n  state = {\r\n    showItems: [],\r\n  };\r\n\r\n  render() {\r\n    const { activeTab } = this.props;\r\n    // const LAYOUT_IMG = activeTab === 1 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const VIDEO_IMG = activeTab === 1 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const THUMB_IMG = activeTab === 2 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const ICONS_IMG = activeTab === 3 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const TEXT_IMG = activeTab === 4 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const INSTALL_SCRIPT = activeTab === 5 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const TIG_IMG = activeTab === 6 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div onClick={() => this.props.onChangeActive(1)} className={VIDEO_IMG}>\r\n          <SideButton class={\"fa fa-video-camera\"} text=\"Video\" />\r\n        </div>\r\n        {/* <div onClick={() => this.props.onChangeActive(2)} className={THUMB_IMG}>\r\n          <SideButton class={\"fa fa-paint-brush\"} text=\"Thumbnail\"/>\r\n        </div> */}\r\n        <div onClick={() => this.props.onChangeActive(3)} className={ICONS_IMG}>\r\n          <SideButton class={\"fa fa-play-circle-o\"} text=\"Icons\"/>\r\n        </div>\r\n        <div onClick={() => this.props.onChangeActive(4)} className={TEXT_IMG}>\r\n          <SideButton class={\"fa fa-text-width\"} text=\"Text\" />\r\n        </div>\r\n        {/* <div onClick={() => this.props.onChangeActive(5)} className={INSTALL_SCRIPT}>\r\n          <SideButton class={\"fa fa-envelope\"} text=\"Install Script\" />\r\n        </div> */}\r\n        <div onClick={() => this.props.onChangeActive(6)} className={TIG_IMG}>\r\n          <SideButton class={\"fa fa-code\"} text=\"Trigger\" />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Uploader.js",["1411","1412"],"import React from \"react\";\r\n// import { Upload, Icon, message } from \"antd\";\r\nimport { Upload, message, Button, Icon, Progress } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./Uploader.css\";\r\nimport { BASE_URL, IMAGE_UPLOAD_LINK, IMAGE_OPTI_UPLOAD } from \"../../actions/URLs\";\r\nfunction vaildateFile(file) {\r\n  if (file) {\r\n    if (file.type.indexOf(\"image\")) return false;\r\n    return true;\r\n  }\r\n}\r\nlet progress = 0, pgShow = \"none\";\r\nconst Uploader = (prop) => {\r\n  const props = {\r\n    name: \"photo\",\r\n    multiple: prop.multiple ? prop.multiple : false,\r\n    action: BASE_URL + (prop.multiple ? IMAGE_OPTI_UPLOAD : IMAGE_UPLOAD_LINK),\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n      if (status !== \"uploading\") {\r\n        prop.onUploadDone(info.fileList[info.fileList.length-1].response);\r\n      } else {\r\n        if(info.event) {\r\n          progress = (info.event.type === \"progress\") ? info.event.percent : 0;\r\n        }\r\n      }\r\n\r\n      if (status === \"done\") {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        setTimeout(() => {\r\n          pgShow = \"none\";\r\n          progress = 0;\r\n          document.querySelector(\".ant-progress-text\").innerHTML = \"0%\" ;\r\n          document.querySelector(\".ant-progress-text\").setAttribute(\"title\", \"0%\");\r\n          document.querySelector(\".ant-progress-show-info\").style.display = \"none\";\r\n        },1000);\r\n      } else if (status === \"error\") {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n    beforeUpload: (file) => {\r\n      if (!vaildateFile(file)) {\r\n        message.error(`${file.name} file failed. Select A valid Image to upload`);\r\n      }\r\n      pgShow = \"block\";\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-10\">\r\n        <Upload {...props}>\r\n          <div className=\"uploader-default\">\r\n            <center>\r\n              <i className=\"fa fa-cloud-upload\"></i>\r\n              <div>Select File to Upload</div>\r\n            </center>\r\n          </div>\r\n        </Upload>\r\n        <Progress percent={progress} status=\"active\" style={{ display: pgShow}}/>\r\n      </div>\r\n      <div className=\"col-2\">\r\n        {prop.onReset ? (\r\n          <div className=\"row\">\r\n            <div className=\"pull-right\">\r\n              <button className=\"btn btn-sm btn-danger\" style={{ position: \"absolute\", top: \"0px\", right: \"8px\" }} onClick={prop.onReset}>\r\n                Reset\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Uploader;\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/Preview.js",["1413"],"import React, { Component } from \"react\";\r\nimport \"./Preview.css\";\r\nimport \"./style.css\";\r\nimport Portal from \"../../../comman/Portal\";\r\nexport default class Preview extends Component {\r\n  componentDidMount() {\r\n    this.setPosition();\r\n  }\r\n\r\n  setPosition() {\r\n    const element = document.getElementsByClassName(\"sk-top\")[0];\r\n    if (element && this.props.create.helloBarPos !== \"bottom\") {\r\n      const body = document.getElementsByTagName(\"body\")[0];\r\n      body.style = \"margin-top:\" + element.offsetHeight + \"px;\";\r\n    } else if (element) {\r\n      const body = document.getElementsByTagName(\"body\")[0];\r\n      body.style = \"margin-bottom:\" + element.offsetHeight + \"px;\";\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(newProps) {\r\n    const { helloBarPos } = this.props.create;\r\n    if (helloBarPos !== newProps.create.helloBarPos) {\r\n      this.setPosition();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const body = document.getElementsByTagName(\"body\")[0];\r\n    body.style = \"\";\r\n  }\r\n  renderCTA = (text) => {\r\n    return (\r\n      <div style={{ overflowWrap: \"break-word\" }}>\r\n        <button className=\"btn btn-primary btn-preview\" dangerouslySetInnerHTML={{ __html: text }}></button>\r\n      </div>\r\n    );\r\n  };\r\n  renderText = (text, style = {}) => {\r\n    const { elements } = this.props.STYLE;\r\n    Object.assign(style, { backgroundColor: this.getcolor(elements, \"highlight\"), overflowWrap: \"break-word\" });\r\n    return (\r\n      <div className=\"horDiv\">\r\n        <div style={style} dangerouslySetInnerHTML={{ __html: text }}></div>\r\n      </div>\r\n    );\r\n  };\r\n  getPos = () => {\r\n    const { helloBarPos } = this.props.create;\r\n    if (helloBarPos === \"bottom\") {\r\n      return { bottom: \"0px\" };\r\n    }\r\n    return { top: \"0px\" };\r\n  };\r\n\r\n  getcolor(element, key) {\r\n    let color = \"\";\r\n    element.forEach((value) => {\r\n      if (value.name === key) {\r\n        color = value.color;\r\n      }\r\n    });\r\n    return color;\r\n  }\r\n  getText(text) {\r\n    return (\r\n      <div className=\"leadengagr--smart-bar-padding\">\r\n        <div className=\"leadengagr-element-message\" style={{ color: \"rgb(255, 255, 255)\", opacity: 1, transform: \" translateY(0%)\" }} dangerouslySetInnerHTML={{ __html: text }}></div>\r\n      </div>\r\n    );\r\n  }\r\n  getCTA(text, bgColor) {\r\n    return (\r\n      <div className=\"leadengagr--smart-bar-padding\">\r\n        <a href=\"https:/app.getleadengagr.com/sign-up\" target=\"_blank\" className=\"leadengagr-button-url\">\r\n          <button type=\"button\" className=\"leadengagr-element__btn-custom leadengagr-element__send-button fix-positon\" style={{ backgroundColor: bgColor }}>\r\n            <span className=\"leadengagr-element__send-btn-text\" style={{ color: \"rgb(0, 0, 0)\" }} dangerouslySetInnerHTML={{ __html: text }}></span>\r\n          </button>\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getTempalte = (templateType, layout, text, bgColor, ctaText, colorBg) => {\r\n    templateType = layout;\r\n    layout = 0;\r\n    switch (templateType) {\r\n      case 0:\r\n        return (\r\n          <div className=\"hellobar1\" style={{ backgroundColor: colorBg }}>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4 col-sm-6 align-self-center\">\r\n                  <div className=\"hellobar1-text1\" dangerouslySetInnerHTML={{ __html: text }}></div>\r\n                </div>\r\n                <div className=\"col-md-4 col-sm-6 align-self-center\">\r\n                  <div className=\"text-center\">\r\n                    <center>\r\n                      <p>{this.props.create.codeText}</p>\r\n                      <div className=\"hellobar1-code-box\">\r\n                        <div className=\"hellobar1-code\">\r\n                          <p>{this.props.create.cpCode}</p>\r\n                        </div>\r\n                        <div className=\"hellobar1-copy-button\">\r\n                          <p>Copy Code</p>\r\n                        </div>\r\n                      </div>\r\n                    </center>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4 col-sm-12 align-self-center\">\r\n                  <div className=\"text-center\">\r\n                    <div className=\"hellobar1-button\" style={{ backgroundColor: bgColor, color: colorBg }} dangerouslySetInnerHTML={{ __html: ctaText }}></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      case 1:\r\n        return (\r\n          <div className=\"hellobar3\" style={{ backgroundColor: colorBg }}>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-12 align-self-center\">\r\n                  <div className=\"text-center\">\r\n                    <div className=\"hellobar3-text1\" style={{ color: \"#fff\" }}>\r\n                      <span dangerouslySetInnerHTML={{ __html: text }}></span>\r\n                      <span style={{fontWeight: 600}} dangerouslySetInnerHTML={{ __html: ` <u>${ctaText}</u>` }}></span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      case 2:\r\n        return (\r\n          <div className=\"hellobar4\" style={{ backgroundColor: colorBg, color: \"#fff\" }}>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-1 col-md-12 col-sm-12 align-self-center\"></div>\r\n                <div className=\"col-lg-5 col-md-6 col-sm-6 align-self-center\">\r\n                  <div className=\"hellobar4-text1\" dangerouslySetInnerHTML={{ __html: text }}></div>\r\n                </div>\r\n                <div className=\"col-lg-5 col-md-6 col-sm-6 align-self-center\">\r\n                  <div className=\"text-center\">\r\n                    <div className=\"hellobar4-button\" style={{ backgroundColor: bgColor, color: colorBg }} dangerouslySetInnerHTML={{ __html: ctaText }}></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const style = { background: \"#3a3abd\" };\r\n    const elements = this.props.STYLE.elements;\r\n    Object.assign(style, this.getPos());\r\n    const layout = this.props.layout;\r\n    const text = this.props.create.textBody;\r\n    const buttonText = this.props.cta.ctaText;\r\n    const color = this.getcolor(elements, \"highlightCTA\");\r\n    console.log(\"color\", color);\r\n    const backgroundColor = this.getcolor(elements, \"highlight\");\r\n    const templateType = this.props.templateType;\r\n    return (\r\n      <Portal defaultOpen={true} closeOnEsc={true} closeOnOutsideClick={true}>\r\n        <div className=\"sk-fixed-height sk-top\" style={style}>\r\n          {/* {layout === 1 ? (\r\n              <React.Fragment>\r\n                {this.getText(text)}\r\n                {this.getCTA(buttonText, color)}\r\n              </React.Fragment>\r\n            ) : null} */}\r\n          {this.getTempalte(templateType, layout, text, color, buttonText, backgroundColor)}\r\n        </div>\r\n      </Portal>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/CTA.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/Timer.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/Style.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/Code.js",["1414","1415","1416","1417"],"import React, { Component } from \"react\";\r\nimport DropDown from \"../../../comman/DropDown\";\r\nimport { Info } from \"../../../comman/Info\";\r\nimport ToolUtil, { getCodeOptions } from \"../../../../utils/ToolUtil\";\r\nexport default class Code extends Component {\r\n  options = getCodeOptions();\r\n  state = {\r\n    include: this.props.include,\r\n    exclude: (ToolUtil.isUpgrade1 && window.isAdvancedOpt) ? this.props.exclude : [],\r\n  };\r\n\r\n  onDropDownChange1 = (e, index) => {\r\n    if (!index) index = 0;\r\n    this.state.include[index].type = e;\r\n  };\r\n\r\n  onDropDownChange2 = (e, index) => {\r\n    if (!index) index = 0;\r\n    this.state.exclude[index].type = e;\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const cases = this.props.cases || 1;\r\n    this.props.onChange(cases, this.state);\r\n  }\r\n\r\n  onItemChange1 = (index, e) => {\r\n    this.state.include[index].url = e.target.value;\r\n    this.setState({ include: this.state.include });\r\n  };\r\n\r\n  onItemChange2 = (index, e) => {\r\n    this.state.exclude[index].url = e.target.value;\r\n    this.setState({ exclude: this.state.exclude });\r\n  };\r\n\r\n  onAddClick = (typ) => {\r\n    const cases = this.props.case || 1;\r\n    const { include, exclude } = this.state;\r\n    if (typ === 1) {\r\n      include.push({ type: \"contains\", url: \"\" });\r\n      this.setState({ include });\r\n    } else {\r\n      exclude.push({ type: \"contains\", url: \"\" });\r\n      this.setState({ exclude });\r\n    }\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  onRemoveClick = (typ, index) => {\r\n    const cases = this.props.case || 1;\r\n    const include = this.state.include || [{ type: \"contains\", url: \"\" }];\r\n    const exclude = this.state.exclude || [{ type: \"contains\", url: \"\" }];\r\n    if (typ === 1) {\r\n      include.splice(index, 1);\r\n      this.setState({ include });\r\n    } else {\r\n      exclude.splice(index, 1);\r\n      this.setState({ exclude });\r\n    }\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  renderInClude = (item, index) => {\r\n    const { include } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        {index !== 0 ? <div className=\"\"></div> : null}\r\n        <div className=\"col-4\">\r\n          <DropDown options={this.options} index={index} onChange={this.onDropDownChange1} value={item.type} className=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <TextInput index={index} typeN={1} onAddClick={this.onAddClick} onRemoveClick={this.onRemoveClick} size={include.length} onChange={this.onItemChange1} value={item.url} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  renderExclude = (item, index) => {\r\n    const { exclude } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"col-4\">\r\n          <DropDown options={this.options} index={index} onChange={this.onDropDownChange2} value={item.type} className=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <TextInput index={index} typeN={2} onAddClick={this.onAddClick} onRemoveClick={this.onRemoveClick} size={exclude.length} onChange={this.onItemChange2} value={item.url} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const include = this.state.include || [{ type: \"contains\", url: \"\" }];\r\n    const exclude = this.state.exclude || [{ type: \"contains\", url: \"\" }];\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div className=\"label-text\">\r\n            URL Settings*\r\n            <Info text=\"Enter url for trigger Campaign\" />\r\n          </div>\r\n          <div className=\"container\">\r\n            <div className=\"label-text\">Include</div>\r\n            <div className=\"row\">{include.map(this.renderInClude)}</div>\r\n            <div className=\"w-100\"></div>\r\n            <div className=\"label-text\">Exclude</div>\r\n            {exclude.length ? (\r\n              <div className=\"row\">\r\n                {exclude.map(this.renderExclude)}\r\n                <div className=\"w-100\"></div>\r\n              </div>\r\n            ) : (\r\n              <div>You Need to Upgrade</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst TextInput = (props) => {\r\n  return (\r\n    <div className=\"code-input-block \">\r\n      <input type=\"text\" autoComplete=\"off\" value={props.value} className=\"form-control\" onChange={(e) => props.onChange(props.index, e)} />\r\n      <div className=\"code-plusIcon\">\r\n        {props.size - 1 === props.index ? (\r\n          <i onClick={() => props.onAddClick(props.typeN)} className=\"fa fa-plus-circle\" aria-hidden=\"true\" />\r\n        ) : (\r\n          <i onClick={() => props.onRemoveClick(props.typeN, props.index)} className=\"fa fa-minus-circle\" aria-hidden=\"true\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/CreateText.js",["1418","1419"],"import React, { Component } from \"react\";\r\nimport DropDown from \"../../../comman/DropDown\";\r\nimport Editor from \"../../../comman/Editor\";\r\nimport Util from \"../../../Util\";\r\nimport { Info } from \"../../../comman/Info\";\r\nexport default class CreateText extends Component {\r\n  options = [\r\n    { label: \"Top\", value: \"top\" },\r\n    { label: \"Bottom\", value: \"bottom\" },\r\n  ];\r\n  state = {\r\n    campaignName: this.props.campaignName || \"\",\r\n    helloBarPos: this.props.helloBarPos || \"\",\r\n    textBody: this.props.textBody || \"\",\r\n    cpCode: this.props.cpCode || \"\",\r\n    codeText: this.props.codeText || \"\",\r\n  };\r\n  componentWillReceiveProps(nextProps) {\r\n    if (Util.isRedirected) {\r\n      Util.isRedirected = false;\r\n      const { helloBarPos, textBody } = nextProps;\r\n      this.setState({ helloBarPos, textBody });\r\n    }\r\n  }\r\n  onDropDownChange = (value) => {\r\n    const { cases } = this.props;\r\n    this.setState({ helloBarPos: value }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n  onChange = (e) => {\r\n    const { cases } = this.props;\r\n    this.setState({ [e.target.name]: e.target.value }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n  onTextChange = (textBody) => {\r\n    const { cases } = this.props;\r\n    this.setState({ textBody }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const { cases } = this.props;\r\n    this.props.onChange(cases, this.state);\r\n  }\r\n\r\n  render() {\r\n    const { campaignName, helloBarPos, textBody, cpCode, codeText } = this.state;\r\n    const { layout } = this.props;\r\n    return (\r\n      <div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            Hellobar Text* <Info text=\"Enter text to show on hello bar.\" />\r\n          </div>\r\n          <div>\r\n            <Editor value={textBody} name=\"textBody\" onChange={this.onTextChange} />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            Hellobar Position* <Info text=\"Select position on screen like top or bottom.\" />\r\n          </div>\r\n          <DropDown options={this.options} onChange={this.onDropDownChange} value={helloBarPos} className=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n        {layout === 0 ? (\r\n          <React.Fragment>\r\n            <div className=\"form-element\">\r\n              <div className=\"label-text\">\r\n                Coupon Code* <Info text=\"Enter Coupon code text to be applied.\" />\r\n              </div>\r\n              <input type=\"text\" name=\"cpCode\" className=\"form-control\" value={cpCode} onChange={this.onChange} />\r\n            </div>\r\n          </React.Fragment>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/CreateSideBar.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBarTimer/Preview.js",["1420"],"import React, { Component } from \"react\";\r\nimport \"./Preview.css\";\r\nimport \"./style.css\";\r\nimport TimeCounter from \"../../../comman/TimeCounter\";\r\nimport Portal from \"../../../comman/Portal\";\r\nexport default class Preview extends Component {\r\n  componentDidMount() {\r\n    this.setPosition();\r\n  }\r\n\r\n  setPosition() {\r\n    const element = document.getElementsByClassName(\"main-Preview\")[0];\r\n    if (element && this.props.create.helloBarPos !== \"bottom\") {\r\n      const body = document.getElementsByTagName(\"body\")[0];\r\n      body.style = \"margin-top:\" + element.offsetHeight + \"px;\";\r\n    } else if (element) {\r\n      const body = document.getElementsByTagName(\"body\")[0];\r\n      body.style = \"margin-bottom:\" + element.offsetHeight + \"px;\";\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(newProps) {\r\n    const { helloBarPos } = this.props.create;\r\n    if (helloBarPos !== newProps.create.helloBarPos) {\r\n      this.setPosition();\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    const body = document.getElementsByTagName(\"body\")[0];\r\n    body.style = \"\";\r\n  }\r\n  renderCTA = (text) => {\r\n    return (\r\n      <div style={{ overflowWrap: \"break-word\" }}>\r\n        <button className=\"btn btn-primary btn-preview\" dangerouslySetInnerHTML={{ __html: text }}></button>\r\n      </div>\r\n    );\r\n  };\r\n  renderText = (text, style = {}) => {\r\n    const { elements } = this.props.STYLE;\r\n    Object.assign(style, { backgroundColor: this.getcolor(elements, \"highlight\"), overflowWrap: \"break-word\" });\r\n    return (\r\n      <div className=\"horDiv\">\r\n        <div style={style} dangerouslySetInnerHTML={{ __html: text }}></div>\r\n      </div>\r\n    );\r\n  };\r\n  getPos = () => {\r\n    const { helloBarPos } = this.props.create;\r\n    if (helloBarPos == \"bottom\") {\r\n      return { bottom: \"0px\" };\r\n    }\r\n    return { top: \"0px\" };\r\n  };\r\n\r\n  getcolor(element, key) {\r\n    let color = \"\";\r\n    element.forEach((value) => {\r\n      if (value.name === key) {\r\n        color = value.color;\r\n      }\r\n    });\r\n    return color;\r\n  }\r\n  renderTimer = () => {\r\n    const timerType = this.props.layout === 3 ? \"BOX\" : \"normal\";\r\n    const { elements } = this.props.STYLE;\r\n    const color = this.getcolor(elements, \"timerBox\");\r\n    const timerTextColor = this.getcolor(this.props.STYLE.elements, \"timerTextColor\");\r\n    return <TimeCounter textcolor={timerTextColor} color={color} timerType={timerType} date={this.props.timer.endDateTime} />;\r\n  };\r\n\r\n  getTempalte = (templateType, layout, text, bgColor, buttonText, color) => {\r\n    templateType = layout;\r\n    const arrowColor = this.getcolor(this.props.STYLE.elements, \"arrowBackground\");\r\n    const timercolor = this.getcolor(this.props.STYLE.elements, \"timerBox\");\r\n    const timerTextColor = this.getcolor(this.props.STYLE.elements, \"timerTextColor\");\r\n    switch (templateType) {\r\n      case 0:\r\n        return (\r\n          <div className=\"hellobartimer1\" style={{ backgroundColor: bgColor }}>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <style dangerouslySetInnerHTML={{ __html: \".hellobartimer1-arrow:before{border-left: 20px solid \" + arrowColor + \";}\" }}></style>\r\n                <div className=\"col-md-3 col-sm-6 order-md-0 order-sm-12 align-self-center\">\r\n                  <div className=\"text-center\">\r\n                    <p className=\"hellobartimer1-text1\">{this.props.create.codeText}</p>\r\n                    <div className=\"hellobartimer1-code-box\">\r\n                      <div className=\"hellobartimer1-code\">\r\n                        <p id=\"scriptToCopy\">{this.props.create.cpCode}</p>\r\n                      </div>\r\n                      <div className=\"hellobartimer1-copy-button\">\r\n                        <p>Copy Code</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-3 col-sm-6 align-self-center\">\r\n                  <div className=\"hellobartimer1-arrow\" style={{ backgroundColor: arrowColor, borderLeftColor: arrowColor, color: timerTextColor, marginTop: \"unset\" }} dangerouslySetInnerHTML={{ __html: text }}></div>\r\n                </div>\r\n                <div className=\"col-md-3 col-sm-6 align-self-center\">{this.renderTimer()}</div>\r\n                <div className=\"col-md-3 col-sm-6 order-md-0 order-sm-1 align-self-center\">\r\n                  <div className=\"text-center\">\r\n                    <div className=\"hellobartimer1-button cst_hello_bar_btn\" style={{ backgroundColor: color, color: bgColor, marginTop: \"unset\", fontWeight: 600 }} dangerouslySetInnerHTML={{ __html: buttonText }}></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 1:\r\n        return (\r\n          <div className=\"hellobartimer2\" style={{ backgroundColor: bgColor }}>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <style dangerouslySetInnerHTML={{ __html: \".hellobartimer2-arrow:before{border-left: 40px solid \" + arrowColor + \";} .text-center:{color: #ffffff;}\" }}></style>\r\n                <div className=\"col-md-4 col-sm-12 align-self-center\">\r\n                  <div>\r\n                    <div style={{ margin: \"auto\", color: \"#fff\" }} dangerouslySetInnerHTML={{ __html: text }}></div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4 col-sm-6 align-self-center\">\r\n                  <div className=\"text-center\">{this.renderTimer()}</div>\r\n                </div>\r\n                <div className=\"col-md-4 col-sm-6 align-self-center\">\r\n                  <div className=\"text-center\">\r\n                    <div className=\"hellobartimer2-button cst_hello_bar_btn\" style={{ backgroundColor: color, color: \"#fff\", fontWeight: 600 }} dangerouslySetInnerHTML={{ __html: buttonText }}></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 2:\r\n        return (\r\n          <div className=\"hellobartimer3\" style={{ backgroundColor: bgColor }}>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4 col-sm-12 align-self-center\">\r\n                  <div className=\"hellobartimer3-text1\" style={{ color: \"#fff\" }} dangerouslySetInnerHTML={{ __html: text }}></div>\r\n                </div>\r\n                <div className=\"col-md-4 col-sm-6 align-self-center\">\r\n                  <div className=\"text-center hellobartimer3-bg\" style={{ backgroundColor: timercolor }}>\r\n                    {this.renderTimer()}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4 col-sm-6 align-self-center\">\r\n                  <div className=\"text-center\">\r\n                    <div className=\"hellobartimer3-button cst_hello_bar_btn\" style={{ backgroundColor: color, color: \"#fff\", fontWeight: 600 }} dangerouslySetInnerHTML={{ __html: buttonText }}></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 3:\r\n        return (\r\n          <div className=\"hellobartimer4\" style={{ backgroundColor: bgColor }}>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4 col-sm-12 align-self-center\">\r\n                  <div className=\"hellobartimer4-text1\" dangerouslySetInnerHTML={{ __html: text }}></div>\r\n                </div>\r\n                <div className=\"col-md-4 col-sm-6 align-self-center\">\r\n                  <div className=\"text-center hellobartimer4-bg\">{this.renderTimer()}</div>\r\n                </div>\r\n                <div className=\"col-md-4 col-sm-6 align-self-center\">\r\n                  <div className=\"text-center\">\r\n                    <div className=\"hellobartimer4-button cst_hello_bar_btn\" style={{ backgroundColor: color }} dangerouslySetInnerHTML={{ __html: buttonText }}></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return (\r\n          <div className=\"hellobartimer4\" style={{ backgroundColor: bgColor }}>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4 col-sm-12 align-self-center\">\r\n                  <div className=\"hellobartimer4-text1\" dangerouslySetInnerHTML={{ __html: text }}></div>\r\n                </div>\r\n                <div className=\"col-md-4 col-sm-6 align-self-center\">\r\n                  <div className=\"text-center hellobartimer4-bg\">{this.renderTimer()}</div>\r\n                </div>\r\n                <div className=\"col-md-4 col-sm-6 align-self-center\">\r\n                  <div className=\"text-center\">\r\n                    <div className=\"hellobartimer4-button cst_hello_bar_btn\" style={{ backgroundColor: color }} dangerouslySetInnerHTML={{ __html: buttonText }}></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const style = { background: \"#3a3abd\" };\r\n    const elements = this.props.STYLE.elements;\r\n    Object.assign(style, this.getPos());\r\n    // Object.assign(style, { backgroundColor: this.getcolor(elements, \"highlightBackground\") });\r\n    const layout = this.props.layout;\r\n    const text = this.props.create.textBody;\r\n    const buttonText = this.props.cta.ctaText;\r\n    const templateType = this.props.templateType;\r\n    const color = this.getcolor(elements, \"highlight\");\r\n    const backgroundColor = this.getcolor(elements, \"highlightBackground\");\r\n    return (\r\n      <Portal defaultOpen={true} closeOnEsc={true} closeOnOutsideClick={true}>\r\n        <div className=\"main-Preview pull-right\" style={style}>\r\n          {this.getTempalte(templateType, layout, text, color, buttonText, backgroundColor)}\r\n        </div>\r\n      </Portal>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBarTimer/CTA.js",["1421"],"import React, { Component } from \"react\";\r\nimport DropDown from \"../../../comman/DropDown\";\r\nimport Editor from \"../../../comman/Editor\";\r\nimport { Info } from \"../../../comman/Info\";\r\nexport default class CTA extends Component {\r\n  options = [\r\n    { label: \"Redirect\", value: \"redirect\" },\r\n    { label: \"Redirect in new tab\", value: \"redirectInNewTab\" },\r\n    { label: \"Scroll\", value: \"scroll\" },\r\n  ];\r\n  state = {\r\n    ctaText: this.props.ctaText,\r\n    ctaAction: this.props.ctaAction,\r\n    redirectUrl: this.props.redirectUrl,\r\n  };\r\n  onDropDownChange = (value) => {\r\n    const { cases } = this.props;\r\n    this.setState({ ctaAction: value }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n  onChange = (e) => {\r\n    const { cases } = this.props;\r\n    this.setState({ [e.target.name]: e.target.value }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n  onTextChange = (ctaText) => {\r\n    const { cases } = this.props;\r\n    this.setState({ ctaText }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const { cases } = this.props;\r\n    this.props.onChange(cases, this.state);\r\n  }\r\n\r\n  render() {\r\n    const { redirectUrl, ctaAction, ctaText, cpCode } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            CTA Text* <Info text=\"Enter CTA text\" />\r\n          </div>\r\n          <div>\r\n            <Editor value={ctaText} name=\"textBody\" onChange={this.onTextChange} />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            CTA Action* <Info text=\"Select CTA action type\" />\r\n          </div>\r\n          <DropDown options={this.options} onChange={this.onDropDownChange} value={ctaAction} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n        <div className=\"form-element\">\r\n          {ctaAction === \"scroll\" ? (\r\n            <div className=\"label-text\">\r\n              Scroll To* <Info text=\"Follow Select Scroll Position by bookmark\" />\r\n            </div>\r\n          ) : (\r\n            <div className=\"label-text\">\r\n              Redirect URL* <Info text=\"Enter URL to trigger on CTA action button\" />\r\n            </div>\r\n          )}\r\n          <input type=\"text\" autoComplete=\"off\" name=\"redirectUrl\" className=\"form-control\" value={redirectUrl} onChange={this.onChange}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBarTimer/Timer.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBarTimer/Layout.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBarTimer/Style.js",["1422","1423"],"import React, { Component } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\n\r\nimport \"react-color-picker/index.css\";\r\nimport { ColorSelector } from \"../../../layout/LayoutSelector\";\r\nexport default class Style extends Component {\r\n  state = {\r\n    elements: this.props.elements,\r\n    selected: this.props.selected,\r\n  };\r\n\r\n  onClickElement = (i) => {\r\n    const { cases } = this.props;\r\n    this.setState({ selected: i });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const { cases } = this.props;\r\n    this.props.onChange(cases, this.state);\r\n  }\r\n\r\n  onColorChange = (color) => {\r\n    const { cases } = this.props;\r\n    const { elements, selected } = this.state;\r\n    elements[selected].color = color.hex;\r\n    this.setState({ elements });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  renderElements = (ele, i) => {\r\n    const { selected } = this.state;\r\n    const selectedDiv = selected === i ? \"element-div-active\" : \"\";\r\n    const selectedText = selected === i ? \"element-text-active\" : \"\";\r\n    const { layout } = this.props;\r\n    let dTemp = false;\r\n    if (layout !== 0 && ele.name == \"arrowBackground\") dTemp = true;\r\n    if (layout !== 2 && ele.name == \"timerBox\") dTemp = true;\r\n    return (\r\n      <div className={\"element-list\"} style={dTemp ? { display: \"none\" } : {}} onClick={() => this.onClickElement(i)}>\r\n        <div className={\"element-list-text \" + selectedText}>{ele.text}</div>\r\n        <div className={\"element-list-div \" + selectedDiv} style={{ backgroundColor: ele.color }}></div>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    const { elements, selected } = this.state;\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-4\">\r\n          {elements.map((e, i) => (\r\n            <ColorSelector {...e} selectedIndex={selected} onClick={this.onClickElement} index={i} key={i} />\r\n          ))}\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <SketchPicker defaultValue=\"#452135\" color={elements[selected].color} onChangeComplete={this.onColorChange} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBarTimer/Code.js",["1424","1425","1426","1427"],"import React, { Component } from \"react\";\r\nimport DropDown from \"../../../comman/DropDown\";\r\nimport { Info } from \"../../../comman/Info\";\r\nimport ToolUtil, { getCodeOptions } from \"../../../../utils/ToolUtil\";\r\nexport default class Code extends Component {\r\n  options = getCodeOptions();\r\n  state = {\r\n    include: this.props.include,\r\n    exclude: (ToolUtil.isUpgrade1 && window.isAdvancedOpt) ? this.props.exclude : [],\r\n  };\r\n\r\n  onDropDownChange1 = (e, index) => {\r\n    if (!index) index = 0;\r\n    this.state.include[index].type = e;\r\n  };\r\n\r\n  onDropDownChange2 = (e, index) => {\r\n    if (!index) index = 0;\r\n    this.state.exclude[index].type = e;\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const cases = this.props.cases || 1;\r\n    this.props.onChange(cases, this.state);\r\n  }\r\n\r\n  onItemChange1 = (index, e) => {\r\n    this.state.include[index].url = e.target.value;\r\n    this.setState({ include: this.state.include });\r\n  };\r\n\r\n  onItemChange2 = (index, e) => {\r\n    this.state.exclude[index].url = e.target.value;\r\n    this.setState({ exclude: this.state.exclude });\r\n  };\r\n\r\n  onAddClick = (typ) => {\r\n    const cases = this.props.cases || 1;\r\n    const { include, exclude } = this.state;\r\n    if (typ === 1) {\r\n      include.push({ type: \"contains\", url: \"\" });\r\n      this.setState({ include });\r\n    } else {\r\n      exclude.push({ type: \"contains\", url: \"\" });\r\n      this.setState({ exclude });\r\n    }\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  onRemoveClick = (typ, index) => {\r\n    const cases = this.props.cases || 1;\r\n    const include = this.state.include || [{ type: \"contains\", url: \"\" }];\r\n    const exclude = this.state.exclude || [{ type: \"contains\", url: \"\" }];\r\n    if (typ === 1) {\r\n      include.splice(index, 1);\r\n      this.setState({ include });\r\n    } else {\r\n      exclude.splice(index, 1);\r\n      this.setState({ exclude });\r\n    }\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  renderInClude = (item, index) => {\r\n    const { include } = this.state;\r\n    return (\r\n      <React.Fragment key={index}>\r\n        {index !== 0 ? <div className=\"col-2\"></div> : null}\r\n        <div className=\"col-4\">\r\n          <DropDown options={this.options} index={index} onChange={this.onDropDownChange1} value={item.type} className=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <TextInput index={index} typeN={1} onAddClick={this.onAddClick} onRemoveClick={this.onRemoveClick} size={include.length} onChange={this.onItemChange1} value={item.url} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  renderExclude = (item, index) => {\r\n    const { exclude } = this.state;\r\n    return (\r\n      <React.Fragment key={index}>\r\n        <div className=\"col-4\">\r\n          <DropDown options={this.options} index={index} onChange={this.onDropDownChange2} value={item.type} className=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <TextInput index={index} typeN={2} onAddClick={this.onAddClick} onRemoveClick={this.onRemoveClick} size={exclude.length} onChange={this.onItemChange2} value={item.url} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const include = this.state.include || [{ type: \"contains\", url: \"\" }];\r\n    const exclude = this.state.exclude || [{ type: \"contains\", url: \"\" }];\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div className=\"label-text\">\r\n            URL Settings*\r\n            <Info text=\"Enter url for trigger Campaign\" />\r\n          </div>\r\n          <div className=\"container\">\r\n            <div className=\"label-text\">Include</div>\r\n            <div className=\"row\">{include.map(this.renderInClude)}</div>\r\n            <div className=\"w-100\"></div>\r\n            <div className=\"label-text\">Exclude</div>\r\n            {exclude.length ? (\r\n              <div className=\"row\">\r\n                {exclude.map(this.renderExclude)}\r\n                <div className=\"w-100\"></div>\r\n              </div>\r\n            ) : (\r\n              <div>You Need to Upgrade</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst TextInput = (props) => {\r\n  return (\r\n    <div className=\"code-input-block \">\r\n      <input type=\"text\" value={props.value} className=\"form-control\" onChange={(e) => props.onChange(props.index, e)} autoComplete=\"off\" />\r\n      <div className=\"code-plusIcon\">\r\n        {props.size - 1 === props.index ? (\r\n          <i onClick={() => props.onAddClick(props.typeN)} className=\"fa fa-plus-circle\" aria-hidden=\"true\" />\r\n        ) : (\r\n          <i onClick={() => props.onRemoveClick(props.typeN, props.index)} className=\"fa fa-minus-circle\" aria-hidden=\"true\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBarTimer/CreateText.js",["1428","1429"],"import React, { Component } from \"react\";\r\nimport DropDown from \"../../../comman/DropDown\";\r\nimport Editor from \"../../../comman/Editor\";\r\nimport Util from \"../../../Util\";\r\nimport { Info } from \"../../../comman/Info\";\r\nexport default class CreateText extends Component {\r\n  options = [\r\n    { label: \"Top\", value: \"top\" },\r\n    { label: \"Bottom\", value: \"bottom\" },\r\n  ];\r\n  state = {\r\n    campaignName: this.props.campaignName || \"\",\r\n    helloBarPos: this.props.helloBarPos,\r\n    textBody: this.props.textBody || \"\",\r\n    cpCode: this.props.cpCode || \"\",\r\n    codeText: this.props.codeText || \"\",\r\n  };\r\n  componentWillReceiveProps(nextProps) {\r\n    if (Util.isRedirected) {\r\n      Util.isRedirected = false;\r\n      const { helloBarPos, textBody, cpCode, codeText } = nextProps;\r\n      this.setState({ helloBarPos, textBody, cpCode, codeText });\r\n    }\r\n  }\r\n  onDropDownChange = (value) => {\r\n    const { cases } = this.props;\r\n    this.setState({ helloBarPos: value }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n  onChange = (e) => {\r\n    const { cases } = this.props;\r\n    this.setState({ [e.target.name]: e.target.value }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n  onTextChange = (textBody) => {\r\n    const { cases } = this.props;\r\n    this.setState({ textBody }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const { cases } = this.props;\r\n    this.props.onChange(cases, this.state);\r\n  }\r\n\r\n  render() {\r\n    const { campaignName, helloBarPos, textBody, cpCode, codeText } = this.state;\r\n    const { layout } = this.props;\r\n    return (\r\n      <div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            Hellobar Text*\r\n            <Info text=\"Hello bar text to display\" />\r\n          </div>\r\n          <div >\r\n            <Editor value={textBody} name=\"textBody\" onChange={this.onTextChange} />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            Hellobar Position*\r\n            <Info text=\"Hello Bar position\" />\r\n          </div>\r\n          <DropDown options={this.options} onChange={this.onDropDownChange} value={helloBarPos} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n        {layout === 0 ? (\r\n          <div className=\"form-element\">\r\n            <div className=\"label-text\">\r\n              Coupon Code*\r\n              <Info text=\"Coupon Code to copy\" />\r\n            </div>\r\n            <input type=\"text\" name=\"cpCode\" className=\"form-control\" value={cpCode} onChange={this.onChange} />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/Layout.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBarTimer/CreateSideBar.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/BackButtonredirection/SideBar.js",["1430"],"import React, { Component } from \"react\";\r\nimport Util from \"../../../Util\";\r\nimport { SideButton } from \"../../../layout/ToolLayout\";\r\nexport default class SideBar extends Component {\r\n  state = {\r\n    showItems: [],\r\n  };\r\n\r\n  render() {\r\n    const { activeTab } = this.props;\r\n    const TextImg = activeTab === 1 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const CodeImg = activeTab === 2 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n\r\n    return (\r\n      <div>\r\n        <div onClick={() => this.props.onChangeActive(1)} className={TextImg}>\r\n          <SideButton class={\"fa fa-text-width\"} text=\"Link\" />\r\n        </div>\r\n        <div onClick={() => this.props.onChangeActive(2)} className={CodeImg}>\r\n          <SideButton class={\"fa fa-code\"} text=\"Trigger\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/BackButtonredirection/Text.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Editor.js",["1431","1432","1433"],"import React, { createRef, useEffect, useState } from \"react\";\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n// import ReactSummernote from \"react-summernote\";\r\n// import \"react-summernote/dist/react-summernote.css\";\r\nimport \"bootstrap/js/dist/modal\";\r\nimport \"bootstrap/js/dist/dropdown\";\r\nimport \"bootstrap/js/dist/tooltip\";\r\nimport \"./Editor.css\";\r\n\r\nimport tinymce from 'tinymce/tinymce';\r\n\r\n// Theme\r\nimport 'tinymce/themes/silver';\r\n// Toolbar icons\r\nimport 'tinymce/icons/default';\r\n// Editor styles\r\nimport 'tinymce/skins/ui/oxide/skin.min.css';\r\n\r\n// importing the plugin js.\r\nimport 'tinymce/plugins/advlist';\r\nimport 'tinymce/plugins/autolink';\r\nimport 'tinymce/plugins/link';\r\nimport 'tinymce/plugins/image';\r\nimport 'tinymce/plugins/lists';\r\nimport 'tinymce/plugins/charmap';\r\nimport 'tinymce/plugins/hr';\r\nimport 'tinymce/plugins/anchor';\r\nimport 'tinymce/plugins/searchreplace';\r\nimport 'tinymce/plugins/wordcount';\r\nimport 'tinymce/plugins/code';\r\nimport 'tinymce/plugins/fullscreen';\r\nimport 'tinymce/plugins/insertdatetime';\r\nimport 'tinymce/plugins/media';\r\nimport 'tinymce/plugins/nonbreaking';\r\nimport 'tinymce/plugins/table';\r\nimport 'tinymce/plugins/template';\r\nimport 'tinymce/plugins/help';\r\n\r\n  // Content styles, including inline UI like fake cursors\r\n  /* eslint import/no-webpack-loader-syntax: off */\r\n  // import contentCss from '!!raw-loader!tinymce/skins/content/default/content.min.css';\r\n  // import contentUiCss from '!!raw-loader!tinymce/skins/ui/oxide/content.min.css';\r\n\r\nexport default class TextEditor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      content: props.value,\r\n      type: props.type\r\n    };\r\n    this.editorRef = createRef(null);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { value } = this.props;\r\n    if (value) {\r\n      this.setState({ content: value });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onChange(this.state.content);\r\n  }\r\n  onChange = (value) => {\r\n    this.props.onChange(value);\r\n  };\r\n\r\n  ValidateCharacterLength = (count)=> {\r\n    var max = 50;\r\n    if (count > max) {\r\n      alert(\"Maximum \" + max + \" characters allowed.\")\r\n      return false;\r\n    }\r\n    return;\r\n  }\r\n\r\n  render() {\r\n    const { content } = this.state;\r\n    return (\r\n      <div style={{ wordBreak: \"break-all\" }}>\r\n        <Editor\r\n          onInit={(evt, editor) => this.editorRef.current = editor}\r\n          initialValue={content}\r\n          init={{\r\n            menubar : false,\r\n            toolbar: ' fontselect fontsizeselect | bold italic | underline strikethrough | alignleft aligncenter alignright alignjustify |  numlist bullist | forecolor backcolor | pagebreak',\r\n            content_css: 'default',\r\n            font_formats : \"Andale Mono=andale mono,times; Arial=arial,helvetica,sans-serif; Arial Black=arial black,avant garde; Book Antiqua=book antiqua,palatino; Comic Sans MS=comic sans ms,sans-serif; Courier New=courier new,courier; Georgia=georgia,palatino; Helvetica=helvetica; Impact=impact,chicago; Symbol=symbol; Tahoma=tahoma,arial,helvetica,sans-serif; Terminal=terminal,monaco; Times New Roman=times new roman,times; Trebuchet MS=trebuchet ms,geneva; Verdana=verdana,geneva; Webdings=webdings; Wingdings=wingdings,zapf dingbats;Quicksand=Quicksand, sans-serif;Open Sans=Open Sans, sans-serif;Montserrat=Montserrat, sans-serif;Raleway=Raleway, sans-serif;Roboto=Roboto, sans-serif;PT Sans=PT Sans, sans-serif;Hahmlet=Hahmlet, serif;Andada Pro=Andada Pro, serif;Encode Sans=Encode Sans, sans-serif;Manrope=Manrope, sans-serif;Lora=Lora, serif;BioRhyme=BioRhyme, serif;Playfair Display=Playfair Display, serif;Archivo=Archivo, sans-serif;Ubuntu=Ubuntu, sans-serif;Rubik=Rubik, sans-serif;Lato=Lato, sans-serif;Old Standard TT=Old Standard TT, serif;Oswald=Oswald, sans-serif;Nunito=Nunito, sans-serif;Source Sans Pro=Source Sans Pro, sans-serif;\",\r\n            content_style: \"@import url('https://fonts.googleapis.com/css2?family=Andada+Pro:wght@400;700&family=Archivo:wght@400;700&family=BioRhyme:wght@300;700&family=Encode+Sans:wght@400;700&family=Hahmlet:wght@400;700&family=Lato:wght@400;700&family=Lora:wght@400;700&family=Manrope:wght@400;700&family=Montserrat:wght@400;700&family=Nunito:wght@400;700&family=Old+Standard+TT:wght@400;700&family=Open+Sans:wght@400;700&family=Oswald:wght@400;700&family=PT+Sans:wght@400;700&family=Playfair+Display:wght@400;700&family=Quicksand:wght@400;700&family=Raleway:wght@400;700&family=Roboto:wght@400;700&family=Rubik:wght@400;700&family=Source+Sans+Pro:wght@400;700&family=Ubuntu:wght@400;700&display=swap');\",\r\n            block_formats: 'Paragraph=p; Header 1=h1; Header 2=h2; Header 3=h3',\r\n            branding: false,\r\n            forced_root_block : false,\r\n            statusbar: false,\r\n          }}     \r\n          onEditorChange={(newValue) => this.onChange(newValue)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/SuccessPopUp.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/Offeriframe/Text.js",["1434","1435"],"import React, { Component } from \"react\";\r\nimport DropDown from \"../../../comman/DropDown\";\r\nimport Editor from \"../../../comman/Editor\";\r\nimport { Info } from \"../../../comman/Info\";\r\nexport default class Text extends Component {\r\n  state = {\r\n    url: this.props.url,\r\n    title: this.props.title,\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value }, ()=> {\r\n      this.props.onChange(1, this.state);\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.onChange(1, this.state);\r\n  }\r\n\r\n  render() {\r\n    const { url, title } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            Url*\r\n            <Info text=\"Enter Url for Offer Iframe \" />\r\n          </div>\r\n          <input type=\"text\" name=\"url\" className=\"form-control\" value={url} onChange={this.onChange} />\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            Page Title*\r\n            <Info text=\"Title of page \" />\r\n          </div>\r\n          <input type=\"text\" name=\"title\" className=\"form-control\" value={title} onChange={this.onChange} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/Offeriframe/SideBar.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/DynamicElements/Style.js",["1436","1437","1438","1439","1440"],"import React, { Component } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\n\r\nimport \"react-color-picker/index.css\";\r\nimport DropDown from \"../../../comman/DropDown\";\r\nimport { Info } from \"../../../comman/Info\";\r\nimport { ColorSelector } from \"../../../layout/LayoutSelector\";\r\nexport default class Style extends Component {\r\n  options = [\r\n    /* { label: \"Top-left\", value: \"TL\" },\r\n    { label: \"Top-Right\", value: \"TR\" }, */\r\n    { label: \"Bottom-left\", value: \"BL\" },\r\n    { label: \"Bottom-Right\", value: \"BR\" },\r\n  ];\r\n  state = {\r\n    elements: this.props.elements,\r\n    selected: this.props.selected,\r\n    position: this.props.position,\r\n    // fontSize: this.props.fontSize\r\n  };\r\n\r\n  onClickElement = (i) => {\r\n    const cases = this.props.case || 1;\r\n    this.setState({ selected: i });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const cases = this.props.case || 1;\r\n    this.props.onChange(cases, this.state);\r\n  }\r\n\r\n  onColorChange = (color) => {\r\n    const cases = this.props.case || 1;\r\n    const { elements, selected } = this.state;\r\n    elements[selected].color = color.hex;\r\n    this.setState({ elements }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n\r\n  onFontChange = (e) => {\r\n    const cases = this.props.case || 1;\r\n    this.setState({ [e.target.name]: e.target.value }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n\r\n  renderElements = (ele, i) => {\r\n    const { selected } = this.state;\r\n    const selectedDiv = selected === i ? \"element-div-active\" : \"\";\r\n    const selectedText = selected === i ? \"element-text-active\" : \"\";\r\n    return (\r\n      <div className={\"element-list\"} onClick={() => this.onClickElement(i)}>\r\n        <div className={\"element-list-text \" + selectedText}>{ele.text}</div>\r\n        <div className={\"element-list-div \" + selectedDiv} style={{ backgroundColor: ele.color }}></div>\r\n      </div>\r\n    );\r\n  };\r\n  onChangeStyle = (e) => {\r\n    const cases = this.props.case || 1;\r\n    this.setState({ [e.target.name]: parseInt(e.target.value || 0) }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n  onDropDownChange = (value) => {\r\n    const cases = this.props.case || 1;\r\n    this.setState({ position: value }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n  render() {\r\n    const { elements, selected, position, fontSize } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          {/* <div className=\"col-md-4 col-sm-12 order-sm-2\">\r\n            {elements.map((e, i) => (\r\n              <ColorSelector {...e} selectedIndex={selected} onClick={this.onClickElement} index={i} key={i} />\r\n            ))}\r\n          </div>\r\n          <div className=\"col-md-8 col-sm-12\">\r\n            <SketchPicker defaultValue=\"#452135\" color={elements[selected].color} onChangeComplete={this.onColorChange} />\r\n          </div> */}\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"form-element\">\r\n              <div className=\"label-text\">\r\n                Position*\r\n                <Info text=\"Select dynemic element position \" />\r\n              </div>\r\n              <DropDown options={this.options} onChange={this.onDropDownChange} value={position} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/DynamicElements/SideBar.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/DynamicElements/Text.js",["1441","1442","1443"],"import React, { Component } from \"react\";\r\nimport Util from \"../../../Util\";\r\nimport Icon from \"./Icon\";\r\nimport { Info } from \"../../../comman/Info\";\r\nimport UrlInput from \"../../../comman/UrlInput\";\r\nexport default class Text extends Component {\r\n  state = {\r\n    items: this.props.items,\r\n    iconActive: false,\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (Util.isRedirected) {\r\n      Util.isRedirected = false;\r\n      this.setState({ items: nextProps.items },()=> {});\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onChange({ items: this.state.items });\r\n  }\r\n\r\n  onAddClick = () => {\r\n    const { items } = this.state;\r\n    items.push({ icon: \"\", text: \"\", link: \"\" });\r\n    this.setState({ items });\r\n  };\r\n\r\n  removeClick = (index) => {\r\n    const { items } = this.state;\r\n    items.splice(index, 1);\r\n    this.setState({ items });\r\n    this.props.onChange({ items });\r\n  };\r\n\r\n  onChange = (value, index, field) => {\r\n    let { items } = this.state;\r\n    items[index][field] = value;\r\n    this.setState({ items });\r\n    this.props.onChange({ items });\r\n  };\r\n\r\n  selectIcon = (index) => {\r\n    this.setState({ iconActive: index + 1 });\r\n  };\r\n\r\n  onSelection = (icon) => {\r\n    let { items, iconActive } = this.state;\r\n    items[iconActive - 1][\"icon\"] = icon;\r\n    this.setState({ items, iconActive: 0 });\r\n  };\r\n\r\n\r\n  onTextChange = (value, index, field) => {\r\n    let { items } = this.state;\r\n    items[index][field] = value;\r\n    this.setState({ items });\r\n    this.props.onChange({ items });\r\n  };\r\n\r\n  renderList = (item, index) => {\r\n    return (\r\n        <div className=\"col-lg-6 col-md-12 col-sm-12\" key={index}>\r\n          <div className=\"cz_dynamic_element_box\">\r\n            <div className=\"form-element\">\r\n              <div className=\"label-text\">{item.text} \r\n                <span className=\"sidebar-img\">\r\n                  <i className={item.icon}></i>\r\n                </span>\r\n              </div>\r\n              <UrlInput type=\"text\" isTab={false} className=\"form-control\" onChange={(e) => this.onTextChange(e.target.value, index, \"link\")} value={item.link} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { items, iconActive } = this.state;\r\n    return (\r\n      <div>\r\n        {/* {iconActive ? <Icon onClose={() => this.setState({ iconActive: 0 })} onSelectionDone={this.onSelection} /> : null}\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"dynamic_elements_add\">\r\n              <h3>Add New elements</h3>\r\n              <button onClick={() => this.onAddClick()} className=\"btn float-right btn-sm btn-success\">\r\n                ADD\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n        <div className=\"row\">{items.map(this.renderList)}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/MobileVibrator/SideBar.js",["1444","1445"],"import React, { Component } from \"react\";\r\nimport { SideButton } from \"../../../layout/ToolLayout\";\r\nexport default class SideBar extends Component {\r\n  state = {\r\n    showItems: [],\r\n  };\r\n\r\n  render() {\r\n    const { activeTab } = this.props;\r\n    const TextImg = activeTab === 1 ? \"active-side-button\" : \"\";\r\n    const TimingImg = activeTab === 1 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const CodeImg = activeTab === 2 ? \"active-side-button\" : \"\";\r\n\r\n    return (\r\n      <div>\r\n        {/* <div onClick={() => this.props.onChangeActive(1)} className={\"create-side-button \" + TextImg}>\r\n          <i class=\"fa fa-text-width\" aria-hidden=\"true\"></i>\r\n          <div>Text</div>\r\n        </div> */}\r\n        <div onClick={() => this.props.onChangeActive(1)} className={TimingImg}>\r\n          <SideButton class={\"fa fa-code\"} text=\"Time\" />\r\n        </div>\r\n        {/* <div onClick={() => this.props.onChangeActive(2)} className={\"create-side-button \" + CodeImg}>\r\n          <i class=\"fa fa-code\" aria-hidden=\"true\"></i>\r\n          <div>Trigger</div>\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/MobileVibrator/Timer.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/Preview.js",["1446","1447","1448","1449","1450","1451","1452","1453","1454","1455","1456","1457","1458"],"import React, { Component } from \"react\";\r\nimport \"./Preview.css\";\r\nimport { parseImgUrl, youtubeUrlParse, getcolor, vimeoUrlParse } from \"../../../Util\";\r\nimport Portal from \"../../../comman/Portal\";\r\nexport default class Preview extends Component {\r\n  getStyle = () => {\r\n    const { elements } = this.props.STYLE;\r\n    const style = {};\r\n    Object.assign(style, { background: this.getcolor(elements, \"background\") });\r\n    return style;\r\n  };\r\n  getColor = (key) => {\r\n    return getcolor(this.props.STYLE.elements, key);\r\n  };\r\n\r\n  isUrlVideo = (url) => {\r\n    try {\r\n      if (url.indexOf(\"youtube\") !== -1 || url.indexOf(\"youtu\") !== -1 || url.indexOf(\"viemo\") !== -1) {\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (e) {\r\n      window.gs.toast(\"Error in Video URL , Please input a valid Url\", { position: \"bottom-right\", type: window.gs.toast.TYPE.FAILED });\r\n    }\r\n  };\r\n  getVideoURL(url) {\r\n    return parseImgUrl(url);\r\n  }\r\n  getPopUpstyle = () => {\r\n    return { height: \"100%\", width: \"100%\" };\r\n    // const { height, width } = this.props.STYLE;\r\n    // return { width: width + \"px\" };\r\n    // return { width: width + \"px\", height: height + \"px\" };\r\n  }; \r\n  renderImgVideo = () => {\r\n    const { mediaType, url, isInput } = this.props;\r\n    const { height, width } = this.props.STYLE;\r\n    if (isInput) {\r\n      return (\r\n        <React.Fragment>\r\n          <input type=\"text\" name=\"leadengagr_exit_intent_input\" style={{ width: \"30%\" }} placeholder=\"Name\" className=\"Input-text form-item\" id=\"leadengagr_exit_intent_input\" />\r\n          <br></br>\r\n          <input type=\"text\" name=\"leadengagr_exit_intent_input\" style={{ width: \"30%\" }} placeholder=\"Email\" className=\"Input-text form-item\" id=\"leadengagr_exit_intent_input\" />\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    if (mediaType === \"IMAGE\" && !this.isUrlVideo(url)) {\r\n      if(url) {\r\n        return <img src={parseImgUrl(url)} style={{ height: \"auto\", width: width + \"%\" }} />;\r\n      }\r\n      return <img src={parseImgUrl(\"box.png\")} style={{ height: \"auto\", width: width + \"%\" }} />;\r\n      //return <div className=\"popup-background\" style={{ backgroundImage: \"url( \" + parseImgUrl(url) + \")\", height: this.props.STYLE.height - 10 + \"px\", width: \"100%\" }}></div>;\r\n    } else {\r\n      if (this.isUrlVideo(url)) {\r\n        return (\r\n          <iframe\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            frameborder=\"0\"\r\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowfullscreen\r\n            src={\"https://www.youtube.com/embed/\" + youtubeUrlParse(url) + \"?autoplay=1\"}\r\n            frameborder=\"0\"\r\n            allowfullscreen\r\n            auto\r\n            style={{ height: height, width: width + \"px\" }}\r\n          ></iframe>\r\n        );\r\n      } else {\r\n        return (\r\n          <iframe\r\n            style={{ height: height, width: width + \"px\" }}\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            frameborder=\"0\"\r\n            allowfullscreen\r\n            src={\"https://player.vimeo.com/video/\" + vimeoUrlParse(url) + \"?autoplay=1\"}\r\n            frameborder=\"0\"\r\n            allowfullscreen\r\n            auto\r\n          ></iframe>\r\n        );\r\n      }\r\n    }\r\n  };\r\n  getBackGroundStyle = () => {\r\n    if (this.props.STYLE.isbackGroundImage) {\r\n      return { backgroundImage: \"url(\" + parseImgUrl(this.props.STYLE.backgroundImage) + \")\", backgroundSize: \"cover\" };\r\n    }\r\n    return { backgroundColor: this.getColor(\"popupBackgoundColor\") };\r\n  };\r\n  renderContant = () => {\r\n    const { headline, subheadline, ctaText, noThanksText } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <h2 dangerouslySetInnerHTML={{ __html: headline }}></h2>\r\n        <p dangerouslySetInnerHTML={{ __html: subheadline }}></p>\r\n        <div className=\"popup-button\">\r\n          <a\r\n            className=\"popup-cta-button btn btn-sm btn-success\"\r\n            style={{ backgroundColor: this.getColor(\"ctaBackgound\") }}\r\n            dangerouslySetInnerHTML={{ __html: ctaText }}\r\n            style={{ backgroundColor: this.getColor(\"ctaBackgound\") }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    const layout = 1;\r\n    const style = this.getBackGroundStyle();\r\n    const popUpStyle = this.getPopUpstyle();\r\n    const isInput = this.props.isInput;\r\n    return (\r\n      <Portal defaultOpen={true} closeOnEsc={true} closeOnOutsideClick={true}>\r\n        <div className=\"image-popup cz_exit_intent_pop\">\r\n          <div className=\"image-preview exit_intent_popup content-center\" style={Object.assign(popUpStyle, style)}>\r\n            <div className=\"popUpTitlebar\" style={{marginTop:\"30px\"}}>\r\n              <div\r\n                onClick={() => {\r\n                  this.props.closePopup();\r\n                }}\r\n                className=\"popupCloseButton\"\r\n              >\r\n                <img style={{ width: \"30px\" ,marginTop:\"-30px\"}} src={window.rPath + \"asset/close.png\"} />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <center>\r\n                <h2 dangerouslySetInnerHTML={{ __html: this.props.headline }} ></h2>\r\n                <p dangerouslySetInnerHTML={{ __html: this.props.subheadline }}></p>\r\n                <div style={{margin:\"30px 0\"}}>{this.renderImgVideo()}</div>\r\n                {isInput ? (\r\n                  <button className=\"btn btn-sm btn-success\" style={{ backgroundColor: this.getColor(\"ctaBackgound\"), border: \"none\" }}>\r\n                    Subscribe Now\r\n                  </button>\r\n                ) : (\r\n                  <button className=\"btn btn-sm\" dangerouslySetInnerHTML={{ __html: this.props.ctaText }} style={{ backgroundColor: this.getColor(\"ctaBackgound\") }} />\r\n                )}\r\n\r\n                <div className=\"nothanks\"><p dangerouslySetInnerHTML={{ __html: this.props.noThanksText }} ></p></div> \r\n              </center>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Portal>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/NoThanks.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/CTA.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/Media.js",["1459"],"import React, { Component } from \"react\";\r\nimport Uploader from \"../../../comman/Uploader\";\r\nimport { parseImgUrl } from \"../../../Util\";\r\nimport Switch1 from \"../../../comman/Switch\";\r\nexport default class Media extends Component {\r\n  state = { url: this.props.url, mediaType: this.props.mediaType };\r\n  componentWillUnmount() {\r\n    this.props.onChange({ url: this.state.url, mediaType: this.state.mediaType });\r\n  }\r\n  onUploadDone = (image) => {\r\n    this.setState({ url: image.image }, () => {\r\n      this.props.onChange({ url: this.state.url });\r\n    });\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({ url: e.target.value }, () => {\r\n      this.props.onChange({ url: this.state.url });\r\n    });\r\n  };\r\n  isImg = () => {\r\n    return this.props.mediaType === \"IMAGE\";\r\n  };\r\n  onReset = () => {\r\n    this.setState({ url: \"\" }, () => {\r\n      this.props.onChange({ url: this.state.url });\r\n    });\r\n  };\r\n  render() {\r\n    const props = {\r\n      onUploadDone: this.onUploadDone,\r\n    };\r\n    const { url } = this.state;\r\n    const { mediaType, isInput } = this.props;\r\n    return (\r\n      <div>\r\n        <div className=\"col-12\" style={{padding:0}}>\r\n          {!isInput ? <label>{mediaType === \"IMAGE\" ? \"Image\" : \"Video\"}</label> : null}\r\n          {!isInput ? (\r\n            <Switch1\r\n              isChecked={this.props.mediaType === \"IMAGE\"}\r\n              onChange={(status) => {\r\n                this.setState({ mediaType: status ? \"IMAGE\" : \"VIDEO\" }, () => {\r\n                  this.props.onChange({ mediaType: this.state.mediaType });\r\n                });\r\n              }}\r\n            />\r\n          ) : null}\r\n        </div>\r\n        {!isInput ? (\r\n          <React.Fragment>\r\n            <div className=\"col-12\" style={mediaType === \"IMAGE\" ? { padding:0 } : { padding:0 , pointerEvents: \"none\" }}>\r\n              <Uploader {...props} onReset={this.onReset} />\r\n            </div>\r\n            <div className=\"form-element\">\r\n              <div className=\"label-text\">URL*</div>\r\n              <input type=\"text\" name=\"url\" className=\"form-control\" value={url} onChange={this.onChange} />\r\n            </div>\r\n          </React.Fragment>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/Style.js",["1460","1461"],"import React, { Component } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport Switch1 from \"../../../comman/Switch\";\r\nimport Uploader from \"../../../comman/Uploader\";\r\nimport { parseImgUrl } from \"../../../Util\";\r\nimport \"react-color-picker/index.css\";\r\nimport { Info } from \"../../../comman/Info\";\r\nimport { ColorSelector } from \"../../../layout/LayoutSelector\";\r\nexport default class Style extends Component {\r\n  state = {\r\n    elements: this.props.elements,\r\n    selected: this.props.selected,\r\n    height: this.props.height,\r\n    width: this.props.width,\r\n    isbackGroundImage: this.props.isbackGroundImage,\r\n    backgroundImage: this.props.backgroundImage,\r\n  };\r\n\r\n  onUploadDone = (image) => {\r\n    this.setState({ backgroundImage: image.image }, () => {\r\n      const cases = this.props.case || 1;\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n\r\n  onClickElement = (i) => {\r\n    const cases = this.props.case || 1;\r\n    this.setState({ selected: i });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const cases = this.props.case || 1;\r\n    this.props.onChange(cases, this.state);\r\n  }\r\n\r\n  onColorChange = (color) => {\r\n    const cases = this.props.case || 1;\r\n    const { elements, selected } = this.state;\r\n    elements[selected].color = color.hex;\r\n    this.setState({ elements });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  onChangeStyle = (e) => {\r\n    const cases = this.props.case || 1;\r\n    this.setState({ [e.target.name]: parseInt(e.target.value || 0) }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n\r\n  onBgOptionChange = (isbackGroundImage) => {\r\n    this.setState({ isbackGroundImage }, () => {\r\n      const cases = this.props.case || 1;\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n\r\n  onReset = () => {\r\n    this.setState({ backgroundImage: \"\" }, () => {\r\n      const cases = this.props.case || 1;\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { elements, selected, height, width, isbackGroundImage, backgroundImage } = this.state;\r\n    const props = {\r\n      onUploadDone: this.onUploadDone,\r\n    };\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <label>\r\n              Background Image <Info text=\"Add Background image for exit entent.\" />\r\n            </label>\r\n            <Switch1 isChecked={isbackGroundImage} onChange={this.onBgOptionChange} />\r\n          </div>\r\n          {isbackGroundImage ? (\r\n            <div className=\"col-12\">\r\n              <Uploader {...props} onReset={this.onReset} />\r\n            </div>\r\n          ) : null}\r\n          <div className=\"col-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-4\">\r\n                {elements.map((e, i) => (\r\n                  <ColorSelector {...e} selectedIndex={selected} onClick={this.onClickElement} index={i} key={i} />\r\n                ))}\r\n              </div>\r\n              <div className=\"col-8\">\r\n                <SketchPicker defaultValue=\"#452135\" color={elements[selected].color} onChangeComplete={this.onColorChange} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-6 form-element\" style={{marginTop:'30px'}}>\r\n            <div className=\"label-text\">\r\n              Height* <Info text=\"Enter the height of exit intent.\" />\r\n            </div>\r\n            <input type=\"number\" className=\"form-control\" name=\"height\" value={height} onChange={this.onChangeStyle} />\r\n          </div>\r\n          <div className=\"col-6 form-element\">\r\n            <div className=\"label-text\">\r\n              Width* <Info text=\"Enter the width of exit intent.\" />\r\n            </div>\r\n            <input type=\"number\" className=\"form-control\" name=\"width\" value={width} onChange={this.onChangeStyle} />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/SideBar.js",["1462"],"import React, { Component } from \"react\";\r\nimport { SideButton } from \"../../../layout/ToolLayout\";\r\nexport default class SideBar extends Component {\r\n  state = {\r\n    showItems: [],\r\n  };\r\n\r\n  render() {\r\n    const { activeTab } = this.props;\r\n    const TextImg = activeTab === 1 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const MediaImg = activeTab === 3 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const CTAImg = activeTab === 4 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const NoThanksImg = activeTab === 5 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const StyleImg = activeTab === 6 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const CodeImg = activeTab === 7 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n\r\n    return (\r\n      <div>\r\n        <div onClick={() => this.props.onChangeActive(1)} className={TextImg}>\r\n          <SideButton class={\"fa fa-text-width\"} text=\"Text\" />\r\n        </div>\r\n        {/* <div onClick={() => this.props.onChangeActive(2)} className={TemplateImg}>\r\n          <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\r\n          <div>Template</div>\r\n        </div> */}\r\n        <div onClick={() => this.props.onChangeActive(3)} className={MediaImg}>\r\n          <SideButton class={\"fa fa-picture-o\"} text=\"Media\" />\r\n        </div>\r\n        <div onClick={() => this.props.onChangeActive(4)} className={CTAImg}>\r\n          <SideButton class={\"fa fa-crosshairs\"} text=\"CTA\" />\r\n        </div>\r\n        {/* <div onClick={() => this.props.onChangeActive(5)} className={NoThanksImg}>\r\n          <SideButton class={\"fa fa-thumbs-down\"} text=\"No Thanks\" />\r\n        </div> */}\r\n        <div onClick={() => this.props.onChangeActive(6)} className={StyleImg}>\r\n          <SideButton class={\"fa fa-paint-brush\"} text=\"Style\" />\r\n        </div>\r\n        <div onClick={() => this.props.onChangeActive(7)} className={CodeImg}>\r\n          <SideButton class={\"fa fa-code\"} text=\"Trigger\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/Text.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/BreakEvenCalculator/Result.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/BreakEvenCalculator/Number.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/BreakEvenCalculator/SideBar.js",["1463"],"import React, { Component } from \"react\";\r\nimport Util from \"../../../Util\";\r\nexport default class SideBar extends Component {\r\n  state = {\r\n    showItems: []\r\n  };\r\n\r\n  render() {\r\n    const { activeTab } = this.props;\r\n    const NumberImg = activeTab === 1 ? \"active-side-button\" : \"\";\r\n    const ResultImg = activeTab === 2 ? \"active-side-button\" : \"\";\r\n\r\n    return (\r\n      <div>\r\n        <div onClick={() => this.props.onChangeActive(1)} className={\"create-side-button \" + NumberImg}>\r\n          <i class=\"fa fa-calculator\" aria-hidden=\"true\"></i>\r\n          <div>Number</div>\r\n        </div>\r\n        <div onClick={() => this.props.onChangeActive(2)} className={\"create-side-button \" + ResultImg}>\r\n          <i class=\"fa fa-align-center\" aria-hidden=\"true\"></i>\r\n          <div>Result</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/GeoRedirection/Redirection.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/GeoRedirection/SideBar.js",["1464"],"import React, { Component } from \"react\";\r\nimport Util from \"../../../Util\";\r\nimport { SideButton } from \"../../../layout/ToolLayout\";\r\nexport default class SideBar extends Component {\r\n  state = {\r\n    showItems: [],\r\n  };\r\n\r\n  render() {\r\n    const { activeTab } = this.props;\r\n    const TextImg = activeTab === 1 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const CodeImg = activeTab === 2 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n\r\n    return (\r\n      <div>\r\n        {/* <div onClick={() => this.props.onChangeActive(1)} className={\"create-side-button \" + TextImg}>\r\n          <i class=\"fa fa-text-width\" aria-hidden=\"true\"></i>\r\n          <div>Text</div>\r\n        </div> */}\r\n        <div onClick={() => this.props.onChangeActive(1)} className={TextImg}>\r\n          <SideButton class={\"fa fa-file-image-o\"} text=\"Location\" />\r\n        </div>\r\n        <div onClick={() => this.props.onChangeActive(2)} className={CodeImg}>\r\n          <SideButton class={\"fa fa-code\"} text=\"Trigger\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/GeoRedirection/Text.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Portal.js",["1465"],"//@flow\r\nimport React from \"react\";\r\nimport { PortalWithState, PortalFunctionParams } from \"react-portal\";\r\nexport default class Portal extends React.Component {\r\n  portalId;\r\n  static portalCounter = 0;\r\n  constructor(props) {\r\n    super(props);\r\n    this.portalId = Portal.portalCounter++;\r\n  }\r\n\r\n  getChilder = params => {\r\n    return params ? params.portal(this.props.children) : undefined;\r\n  };\r\n\r\n  onClose = () => {\r\n    if (this.props.onClose) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  onOpen = () => {\r\n    if (this.props.onOpen) {\r\n      this.props.onOpen();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    //const { children } = this.props;\r\n    return (\r\n      <PortalWithState\r\n        closeOnEsc={this.props.closeOnEsc}\r\n        // closeOnOutsideClick={this.props.closeOnOutsideClick}\r\n        onClose={this.onClose}\r\n        onOpen={this.onOpen}\r\n        defaultOpen={this.props.defaultOpen}\r\n      >\r\n        {this.getChilder}\r\n      </PortalWithState>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/TimeCounter.js",["1466","1467","1468"],"import React from \"react\";\r\nimport \"./TimeCounter.css\";\r\nexport default class TimeCounter extends React.Component {\r\n  constructor() {\r\n    super();\r\n    let someDate = new Date();\r\n    let numberOfDaysToAdd = 6;\r\n    someDate.setDate(someDate.getDate() + numberOfDaysToAdd);\r\n    this.state = { time: {}, seconds: 5000000 };\r\n    this.timer = 0;\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.countDown = this.countDown.bind(this);\r\n  }\r\n\r\n  secondsToTime(secs) {\r\n    const difference = +(new Date(this.props.date) || new Date().setHours(5)) - +new Date();\r\n    let timeLeft = {};\r\n    if (difference > 0) {\r\n      timeLeft = {\r\n        d: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n        h: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n        m: Math.floor((difference / 1000 / 60) % 60),\r\n        s: Math.floor((difference / 1000) % 60),\r\n      };\r\n    } else {\r\n      timeLeft = {\r\n        d: 0,\r\n        h: 0,\r\n        m: 0,\r\n        s: 0,\r\n      };\r\n    }\r\n\r\n    return timeLeft;\r\n    // let days = Math.floor(secs / (24 * 60 * 60 * 1000));\r\n    // let divisor_for_hours = secs % 24;\r\n    // let hours = Math.floor(divisor_for_hours / 60);\r\n\r\n    // let divisor_for_minutes = secs % (60 * 60);\r\n    // let minutes = Math.floor(divisor_for_minutes / 60);\r\n\r\n    // let divisor_for_seconds = divisor_for_minutes % 60;\r\n    // let seconds = Math.ceil(divisor_for_seconds);\r\n\r\n    // let obj = {\r\n    //   d: days,\r\n    //   h: hours,\r\n    //   m: minutes,\r\n    //   s: seconds\r\n    // };\r\n    // return obj;\r\n  }\r\n\r\n  componentDidMount() {\r\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\r\n    this.setState({ time: timeLeftVar });\r\n    this.startTimer();\r\n  }\r\n\r\n  startTimer() {\r\n    if (this.timer == 0 && this.state.seconds > 0) {\r\n      this.timer = setInterval(this.countDown, 1000);\r\n    }\r\n  }\r\n\r\n  countDown() {\r\n    // Remove one second, set state so a re-render happens.\r\n    let seconds = this.state.seconds - 1;\r\n    this.setState({\r\n      time: this.secondsToTime(seconds),\r\n      seconds: seconds,\r\n    });\r\n\r\n    // Check if we're at zero.\r\n    if (seconds == 0) {\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { d, h, m, s } = this.state.time;\r\n    const { timerType, color, textcolor } = this.props;\r\n    const textFontcolor = textcolor ? { color: textcolor } : {};\r\n    return (\r\n      <div>\r\n        {/* m: {this.state.time.m} s: {this.state.time.s} */}\r\n        {timerType == \"BOX\" ? (\r\n          <div className=\"hellobartimer1-timer\" style={textcolor ? { color: textcolor } : {}}>\r\n            <li className=\"blockTimer\" style={{ backgroundColor: color, color: textcolor }}>\r\n              {d}<div>Days</div>\r\n            </li>\r\n            <li className=\"blockTimer\" style={{ backgroundColor: color, color: textcolor }}>\r\n              {h}<div>Hours</div>\r\n            </li>\r\n            <li className=\"blockTimer\" style={{ backgroundColor: color, color: textcolor }}>\r\n              {m}<div>Minutes</div>\r\n            </li>\r\n            <li className=\"blockTimer\" style={{ backgroundColor: color, color: textcolor }}>\r\n              {s} <div>Seconds</div>\r\n            </li>\r\n          </div>\r\n        ) : (\r\n          <div className=\"hellobartimer1-timer\">\r\n            <li style={textFontcolor}>\r\n              {d}\r\n              <br />\r\n              <span>Days</span>\r\n            </li>\r\n            <li style={textFontcolor}>\r\n              {h}\r\n              <br />\r\n              <span>Hours</span>\r\n            </li>\r\n            <li style={textFontcolor}>\r\n              {m}\r\n              <br />\r\n              <span>Minutes</span>\r\n            </li>\r\n            <li style={textFontcolor}>\r\n              {s}\r\n              <br />\r\n              <span>Seconds</span>\r\n            </li>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Switch.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/UrlInput.js",["1469","1470","1471","1472","1473","1474","1475","1476","1477"],"import React, { Component } from \"react\";\r\nimport { Input, Select } from \"antd\";\r\n\r\nconst { Option } = Select;\r\nexport default class UrlInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: this.props.value,\r\n      prefix: \"https://\",\r\n      parentValue: this.props.value,\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.handleDropDown();\r\n    this.setState({ value: this.props.value },()=> {});\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({ value: nextProps.value },()=> {});\r\n  }\r\n\r\n  handleDropDown = () => {\r\n    const { parentValue } = this.state;\r\n    let value = \"\";\r\n    if (parentValue.indexOf(\"https\") != -1) {\r\n      value = parentValue.replace(\"https://\", \"\");\r\n      this.setState({ prefix: \"https://\", value });\r\n    } else if (parentValue.indexOf(\"http\") != -1) {\r\n      value = parentValue.replace(\"http://\", \"\");\r\n      this.setState({ prefix: \"http://\", value });\r\n    } else if (parentValue.indexOf(\"mailto:\") != -1) {\r\n      value = parentValue.replace(\"mailto:\", \"\");\r\n      this.setState({ prefix: \"mailto:\", value });\r\n    } else if (parentValue.indexOf(\"tel:\") != -1) {\r\n      value = parentValue.replace(\"tel:\", \"\");\r\n      this.setState({ prefix: \"tel:\", value });\r\n    }\r\n  };\r\n\r\n  onChange = (e) => {\r\n    const data = e.target.value;\r\n    let value = \"\";\r\n    if(data.indexOf(\"https\") != -1) {\r\n      value = data;\r\n    } else if(data.indexOf(\"http\") != -1) {\r\n      value = data;\r\n    } else if(data.indexOf(\"mailto\") != -1) {\r\n      value = data;\r\n    } else if(data.indexOf(\"tel\") != -1) {\r\n      value = data;\r\n    } else {\r\n      value = this.state.prefix + data;\r\n    }\r\n    \r\n    // console.log(\"value\", value);\r\n    this.setState({ parentValue: value, value: data }, () => {\r\n      const event = { target: { name: \"\", value: \"\" } };\r\n      event[\"target\"][\"name\"] = this.props.name;\r\n      event[\"target\"][\"value\"] = this.state.parentValue;\r\n      \r\n      this.props.onChange(event);\r\n    });\r\n  };\r\n\r\n  onDropDownChange = (value) => {\r\n    this.setState({ prefix: value }, () => {\r\n      const event = { target: { name: \"\", value: \"\" } };\r\n      event[\"target\"][\"name\"] = this.props.name;\r\n      event[\"target\"][\"value\"] = this.state.parentValue;\r\n      this.props.onChange(event);\r\n    });\r\n  };\r\n\r\n  selectBefore = () => {\r\n    const { isTab } = this.props;\r\n    if (!isTab) {\r\n      return (\r\n        <Select defaultValue={this.state.prefix} onChange={this.onDropDownChange} className=\"select-before\">\r\n          <Option value=\"http://\">http://</Option>\r\n          <Option value=\"https://\">https://</Option>\r\n        </Select>\r\n      );\r\n    }\r\n    return (\r\n      <Select defaultValue={this.state.prefix} onChange={this.onDropDownChange} className=\"select-before\">\r\n        <Option value=\"http://\">http://</Option>\r\n        <Option value=\"https://\">https://</Option>\r\n        <Option value=\"mailto:\">mail to</Option>\r\n        <Option value=\"tel:\">Call</Option>\r\n      </Select>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { prefix, value } = this.state;\r\n    console.log(\"value render\", value);\r\n    return (\r\n      <div className=\"form-group\">\r\n        <div style={{ marginBottom: 16 }}>\r\n          <Input addonBefore={this.selectBefore()} onChange={this.onChange} value={value} autoComplete=\"off\"/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/DynamicElements/Icon.js",["1478"],"import React, { Component } from \"react\";\r\nimport Portal from \"../../../comman/Portal\";\r\nimport \"./icon.css\";\r\nexport default class Icon extends Component {\r\n  iconItems = [\r\n    { icon: \"fa fa-glass\" },\r\n    { icon: \"fa fa-music\" },\r\n    { icon: \"fa fa-search\" },\r\n    { icon: \"fa fa-envelope-o\" },\r\n    { icon: \"fa fa-heart\" },\r\n    { icon: \"fa fa-star\" },\r\n    { icon: \"fa fa-star-o\" },\r\n    { icon: \"fa fa-user\" },\r\n    { icon: \"fa fa-film\" },\r\n    { icon: \"fa fa-th-large\" },\r\n    { icon: \"fa fa-th\" },\r\n    { icon: \"fa fa-th-list\" },\r\n    { icon: \"fa fa-check\" },\r\n    { icon: \"fa fa-times\" },\r\n    { icon: \"fa fa-search-plus\" },\r\n    { icon: \"fa fa-search-minus\" },\r\n    { icon: \"fa fa-power-off\" },\r\n    { icon: \"fa fa-signal\" },\r\n    { icon: \"fa fa-cog\" },\r\n    { icon: \"fa fa-trash-o\" },\r\n    { icon: \"fa fa-home\" },\r\n    { icon: \"fa fa-file-o\" },\r\n    { icon: \"fa fa-clock-o\" },\r\n    { icon: \"fa fa-road\" },\r\n    { icon: \"fa fa-download\" },\r\n    { icon: \"fa fa-arrow-circle-o-down\" },\r\n    { icon: \"fa fa-arrow-circle-o-up\" },\r\n    { icon: \"fa fa-inbox\" },\r\n    { icon: \"fa fa-play-circle-o\" },\r\n    { icon: \"fa fa-repeat\" },\r\n    { icon: \"fa fa-refresh\" },\r\n    { icon: \"fa fa-list-alt\" },\r\n    { icon: \"fa fa-lock\" },\r\n    { icon: \"fa fa-flag\" },\r\n    { icon: \"fa fa-headphones\" },\r\n    { icon: \"fa fa-volume-off\" },\r\n    { icon: \"fa fa-volume-down\" },\r\n    { icon: \"fa fa-volume-up\" },\r\n    { icon: \"fa fa-qrcode\" },\r\n    { icon: \"fa fa-barcode\" },\r\n    { icon: \"fa fa-tag\" },\r\n    { icon: \"fa fa-tags\" },\r\n    { icon: \"fa fa-book\" },\r\n    { icon: \"fa fa-bookmark\" },\r\n    { icon: \"fa fa-print\" },\r\n    { icon: \"fa fa-camera\" },\r\n    { icon: \"fa fa-font\" },\r\n    { icon: \"fa fa-bold\" },\r\n    { icon: \"fa fa-italic\" },\r\n    { icon: \"fa fa-text-height\" },\r\n    { icon: \"fa fa-text-width\" },\r\n    { icon: \"fa fa-align-left\" },\r\n    { icon: \"fa fa-align-center\" },\r\n    { icon: \"fa fa-align-right\" },\r\n    { icon: \"fa fa-align-justify\" },\r\n    { icon: \"fa fa-list\" },\r\n    { icon: \"fa fa-outdent\" },\r\n    { icon: \"fa fa-indent\" },\r\n    { icon: \"fa fa-video-camera\" },\r\n    { icon: \"fa fa-picture-o\" },\r\n    { icon: \"fa fa-pencil\" },\r\n    { icon: \"fa fa-map-marker\" },\r\n    { icon: \"fa fa-adjust\" },\r\n    { icon: \"fa fa-tint\" },\r\n    { icon: \"fa fa-pencil-square-o\" },\r\n    { icon: \"fa fa-share-square-o\" },\r\n    { icon: \"fa fa-check-square-o\" },\r\n    { icon: \"fa fa-arrows\" },\r\n    { icon: \"fa fa-step-backward\" },\r\n    { icon: \"fa fa-fast-backward\" },\r\n    { icon: \"fa fa-backward\" },\r\n    { icon: \"fa fa-play\" },\r\n    { icon: \"fa fa-pause\" },\r\n    { icon: \"fa fa-stop\" },\r\n    { icon: \"fa fa-forward\" },\r\n    { icon: \"fa fa-fast-forward\" },\r\n    { icon: \"fa fa-step-forward\" },\r\n    { icon: \"fa fa-eject\" },\r\n    { icon: \"fa fa-chevron-left\" },\r\n    { icon: \"fa fa-chevron-right\" },\r\n    { icon: \"fa fa-plus-circle\" },\r\n    { icon: \"fa fa-minus-circle\" },\r\n    { icon: \"fa fa-times-circle\" },\r\n    { icon: \"fa fa-check-circle\" },\r\n    { icon: \"fa fa-question-circle\" },\r\n    { icon: \"fa fa-info-circle\" },\r\n    { icon: \"fa fa-crosshairs\" },\r\n    { icon: \"fa fa-times-circle-o\" },\r\n    { icon: \"fa fa-check-circle-o\" },\r\n    { icon: \"fa fa-ban\" },\r\n    { icon: \"fa fa-arrow-left\" },\r\n    { icon: \"fa fa-arrow-right\" },\r\n    { icon: \"fa fa-arrow-up\" },\r\n    { icon: \"fa fa-arrow-down\" },\r\n    { icon: \"fa fa-share\" },\r\n    { icon: \"fa fa-expand\" },\r\n    { icon: \"fa fa-compress\" },\r\n    { icon: \"fa fa-plus\" },\r\n    { icon: \"fa fa-minus\" },\r\n    { icon: \"fa fa-asterisk\" },\r\n    { icon: \"fa fa-exclamation-circle\" },\r\n    { icon: \"fa fa-gift\" },\r\n    { icon: \"fa fa-leaf\" },\r\n    { icon: \"fa fa-fire\" },\r\n    { icon: \"fa fa-eye\" },\r\n    { icon: \"fa fa-eye-slash\" },\r\n    { icon: \"fa fa-exclamation-triangle\" },\r\n    { icon: \"fa fa-plane\" },\r\n    { icon: \"fa fa-calendar\" },\r\n    { icon: \"fa fa-random\" },\r\n    { icon: \"fa fa-comment\" },\r\n    { icon: \"fa fa-magnet\" },\r\n    { icon: \"fa fa-chevron-up\" },\r\n    { icon: \"fa fa-chevron-down\" },\r\n    { icon: \"fa fa-retweet\" },\r\n    { icon: \"fa fa-shopping-cart\" },\r\n    { icon: \"fa fa-folder\" },\r\n    { icon: \"fa fa-folder-open\" },\r\n    { icon: \"fa fa-arrows-v\" },\r\n    { icon: \"fa fa-arrows-h\" },\r\n    { icon: \"fa fa-bar-chart\" },\r\n    { icon: \"fa fa-twitter-square\" },\r\n    { icon: \"fa fa-facebook-square\" },\r\n    { icon: \"fa fa-camera-retro\" },\r\n    { icon: \"fa fa-key\" },\r\n    { icon: \"fa fa-cogs\" },\r\n    { icon: \"fa fa-comments\" },\r\n    { icon: \"fa fa-thumbs-o-up\" },\r\n    { icon: \"fa fa-thumbs-o-down\" },\r\n    { icon: \"fa fa-star-half\" },\r\n    { icon: \"fa fa-heart-o\" },\r\n    { icon: \"fa fa-sign-out\" },\r\n    { icon: \"fa fa-linkedin-square\" },\r\n    { icon: \"fa fa-thumb-tack\" },\r\n    { icon: \"fa fa-external-link\" },\r\n    { icon: \"fa fa-sign-in\" },\r\n    { icon: \"fa fa-trophy\" },\r\n    { icon: \"fa fa-github-square\" },\r\n    { icon: \"fa fa-upload\" },\r\n    { icon: \"fa fa-lemon-o\" },\r\n    { icon: \"fa fa-phone\" },\r\n    { icon: \"fa fa-square-o\" },\r\n    { icon: \"fa fa-bookmark-o\" },\r\n    { icon: \"fa fa-phone-square\" },\r\n    { icon: \"fa fa-twitter\" },\r\n    { icon: \"fa fa-facebook\" },\r\n    { icon: \"fa fa-github\" },\r\n    { icon: \"fa fa-unlock\" },\r\n    { icon: \"fa fa-credit-card\" },\r\n    { icon: \"fa fa-rss\" },\r\n    { icon: \"fa fa-hdd-o\" },\r\n    { icon: \"fa fa-bullhorn\" },\r\n    { icon: \"fa fa-bell\" },\r\n    { icon: \"fa fa-certificate\" },\r\n    { icon: \"fa fa-hand-o-right\" },\r\n    { icon: \"fa fa-hand-o-left\" },\r\n    { icon: \"fa fa-hand-o-up\" },\r\n    { icon: \"fa fa-hand-o-down\" },\r\n    { icon: \"fa fa-arrow-circle-left\" },\r\n    { icon: \"fa fa-arrow-circle-right\" },\r\n    { icon: \"fa fa-arrow-circle-up\" },\r\n    { icon: \"fa fa-arrow-circle-down\" },\r\n    { icon: \"fa fa-globe\" },\r\n    { icon: \"fa fa-wrench\" },\r\n    { icon: \"fa fa-tasks\" },\r\n    { icon: \"fa fa-filter\" },\r\n    { icon: \"fa fa-briefcase\" },\r\n    { icon: \"fa fa-arrows-alt\" },\r\n    { icon: \"fa fa-users\" },\r\n    { icon: \"fa fa-link\" },\r\n    { icon: \"fa fa-cloud\" },\r\n    { icon: \"fa fa-flask\" },\r\n    { icon: \"fa fa-scissors\" },\r\n    { icon: \"fa fa-files-o\" },\r\n    { icon: \"fa fa-paperclip\" },\r\n    { icon: \"fa fa-floppy-o\" },\r\n    { icon: \"fa fa-square\" },\r\n    { icon: \"fa fa-bars\" },\r\n    { icon: \"fa fa-list-ul\" },\r\n    { icon: \"fa fa-list-ol\" },\r\n    { icon: \"fa fa-strikethrough\" },\r\n    { icon: \"fa fa-underline\" },\r\n    { icon: \"fa fa-table\" },\r\n    { icon: \"fa fa-magic\" },\r\n    { icon: \"fa fa-truck\" },\r\n    { icon: \"fa fa-pinterest\" },\r\n    { icon: \"fa fa-pinterest-square\" },\r\n    { icon: \"fa fa-google-plus-square\" },\r\n    { icon: \"fa fa-google-plus\" },\r\n    { icon: \"fa fa-money\" },\r\n    { icon: \"fa fa-caret-down\" },\r\n    { icon: \"fa fa-caret-up\" },\r\n    { icon: \"fa fa-caret-left\" },\r\n    { icon: \"fa fa-caret-right\" },\r\n    { icon: \"fa fa-columns\" },\r\n    { icon: \"fa fa-sort\" },\r\n    { icon: \"fa fa-sort-desc\" },\r\n    { icon: \"fa fa-sort-asc\" },\r\n    { icon: \"fa fa-envelope\" },\r\n    { icon: \"fa fa-linkedin\" },\r\n    { icon: \"fa fa-undo\" },\r\n    { icon: \"fa fa-gavel\" },\r\n    { icon: \"fa fa-tachometer\" },\r\n    { icon: \"fa fa-comment-o\" },\r\n    { icon: \"fa fa-comments-o\" },\r\n    { icon: \"fa fa-bolt\" },\r\n    { icon: \"fa fa-sitemap\" },\r\n    { icon: \"fa fa-umbrella\" },\r\n    { icon: \"fa fa-clipboard\" },\r\n    { icon: \"fa fa-lightbulb-o\" },\r\n    { icon: \"fa fa-exchange\" },\r\n    { icon: \"fa fa-cloud-download\" },\r\n    { icon: \"fa fa-cloud-upload\" },\r\n    { icon: \"fa fa-user-md\" },\r\n    { icon: \"fa fa-stethoscope\" },\r\n    { icon: \"fa fa-suitcase\" },\r\n    { icon: \"fa fa-bell-o\" },\r\n    { icon: \"fa fa-coffee\" },\r\n    { icon: \"fa fa-cutlery\" },\r\n    { icon: \"fa fa-file-text-o\" },\r\n    { icon: \"fa fa-building-o\" },\r\n    { icon: \"fa fa-hospital-o\" },\r\n    { icon: \"fa fa-ambulance\" },\r\n    { icon: \"fa fa-medkit\" },\r\n    { icon: \"fa fa-fighter-jet\" },\r\n    { icon: \"fa fa-beer\" },\r\n    { icon: \"fa fa-h-square\" },\r\n    { icon: \"fa fa-plus-square\" },\r\n    { icon: \"fa fa-angle-double-left\" },\r\n    { icon: \"fa fa-angle-double-right\" },\r\n    { icon: \"fa fa-angle-double-up\" },\r\n    { icon: \"fa fa-angle-double-down\" },\r\n    { icon: \"fa fa-angle-left\" },\r\n    { icon: \"fa fa-angle-right\" },\r\n    { icon: \"fa fa-angle-up\" },\r\n    { icon: \"fa fa-angle-down\" },\r\n    { icon: \"fa fa-desktop\" },\r\n    { icon: \"fa fa-laptop\" },\r\n    { icon: \"fa fa-tablet\" },\r\n    { icon: \"fa fa-mobile\" },\r\n    { icon: \"fa fa-circle-o\" },\r\n    { icon: \"fa fa-quote-left\" },\r\n    { icon: \"fa fa-quote-right\" },\r\n    { icon: \"fa fa-spinner\" },\r\n    { icon: \"fa fa-circle\" },\r\n    { icon: \"fa fa-reply\" },\r\n    { icon: \"fa fa-github-alt\" },\r\n    { icon: \"fa fa-folder-o\" },\r\n    { icon: \"fa fa-folder-open-o\" },\r\n    { icon: \"fa fa-smile-o\" },\r\n    { icon: \"fa fa-frown-o\" },\r\n    { icon: \"fa fa-meh-o\" },\r\n    { icon: \"fa fa-gamepad\" },\r\n    { icon: \"fa fa-keyboard-o\" },\r\n    { icon: \"fa fa-flag-o\" },\r\n    { icon: \"fa fa-flag-checkered\" },\r\n    { icon: \"fa fa-terminal\" },\r\n    { icon: \"fa fa-code\" },\r\n    { icon: \"fa fa-reply-all\" },\r\n    { icon: \"fa fa-star-half-o\" },\r\n    { icon: \"fa fa-location-arrow\" },\r\n    { icon: \"fa fa-crop\" },\r\n    { icon: \"fa fa-code-fork\" },\r\n    { icon: \"fa fa-chain-broken\" },\r\n    { icon: \"fa fa-question\" },\r\n    { icon: \"fa fa-info\" },\r\n    { icon: \"fa fa-exclamation\" },\r\n    { icon: \"fa fa-superscript\" },\r\n    { icon: \"fa fa-subscript\" },\r\n    { icon: \"fa fa-eraser\" },\r\n    { icon: \"fa fa-puzzle-piece\" },\r\n    { icon: \"fa fa-microphone\" },\r\n    { icon: \"fa fa-microphone-slash\" },\r\n    { icon: \"fa fa-shield\" },\r\n    { icon: \"fa fa-calendar-o\" },\r\n    { icon: \"fa fa-fire-extinguisher\" },\r\n    { icon: \"fa fa-rocket\" },\r\n    { icon: \"fa fa-maxcdn\" },\r\n    { icon: \"fa fa-chevron-circle-left\" },\r\n    { icon: \"fa fa-chevron-circle-right\" },\r\n    { icon: \"fa fa-chevron-circle-up\" },\r\n    { icon: \"fa fa-chevron-circle-down\" },\r\n    { icon: \"fa fa-html5\" },\r\n    { icon: \"fa fa-css3\" },\r\n    { icon: \"fa fa-anchor\" },\r\n    { icon: \"fa fa-unlock-alt\" },\r\n    { icon: \"fa fa-bullseye\" },\r\n    { icon: \"fa fa-ellipsis-h\" },\r\n    { icon: \"fa fa-ellipsis-v\" },\r\n    { icon: \"fa fa-rss-square\" },\r\n    { icon: \"fa fa-play-circle\" },\r\n    { icon: \"fa fa-ticket\" },\r\n    { icon: \"fa fa-minus-square\" },\r\n    { icon: \"fa fa-minus-square-o\" },\r\n    { icon: \"fa fa-level-up\" },\r\n    { icon: \"fa fa-level-down\" },\r\n    { icon: \"fa fa-check-square\" },\r\n    { icon: \"fa fa-pencil-square\" },\r\n    { icon: \"fa fa-external-link-square\" },\r\n    { icon: \"fa fa-share-square\" },\r\n    { icon: \"fa fa-compass\" },\r\n    { icon: \"fa fa-caret-square-o-down\" },\r\n    { icon: \"fa fa-caret-square-o-up\" },\r\n    { icon: \"fa fa-caret-square-o-right\" },\r\n    { icon: \"fa fa-eur\" },\r\n    { icon: \"fa fa-gbp\" },\r\n    { icon: \"fa fa-usd\" },\r\n    { icon: \"fa fa-inr\" },\r\n    { icon: \"fa fa-jpy\" },\r\n    { icon: \"fa fa-rub\" },\r\n    { icon: \"fa fa-krw\" },\r\n    { icon: \"fa fa-btc\" },\r\n    { icon: \"fa fa-file\" },\r\n    { icon: \"fa fa-file-text\" },\r\n    { icon: \"fa fa-sort-alpha-asc\" },\r\n    { icon: \"fa fa-sort-alpha-desc\" },\r\n    { icon: \"fa fa-sort-amount-asc\" },\r\n    { icon: \"fa fa-sort-amount-desc\" },\r\n    { icon: \"fa fa-sort-numeric-asc\" },\r\n    { icon: \"fa fa-sort-numeric-desc\" },\r\n    { icon: \"fa fa-thumbs-up\" },\r\n    { icon: \"fa fa-thumbs-down\" },\r\n    { icon: \"fa fa-youtube-square\" },\r\n    { icon: \"fa fa-youtube\" },\r\n    { icon: \"fa fa-xing\" },\r\n    { icon: \"fa fa-xing-square\" },\r\n    { icon: \"fa fa-youtube-play\" },\r\n    { icon: \"fa fa-dropbox\" },\r\n    { icon: \"fa fa-stack-overflow\" },\r\n    { icon: \"fa fa-instagram\" },\r\n    { icon: \"fa fa-flickr\" },\r\n    { icon: \"fa fa-adn\" },\r\n    { icon: \"fa fa-bitbucket\" },\r\n    { icon: \"fa fa-bitbucket-square\" },\r\n    { icon: \"fa fa-tumblr\" },\r\n    { icon: \"fa fa-tumblr-square\" },\r\n    { icon: \"fa fa-long-arrow-down\" },\r\n    { icon: \"fa fa-long-arrow-up\" },\r\n    { icon: \"fa fa-long-arrow-left\" },\r\n    { icon: \"fa fa-long-arrow-right\" },\r\n    { icon: \"fa fa-apple\" },\r\n    { icon: \"fa fa-windows\" },\r\n    { icon: \"fa fa-android\" },\r\n    { icon: \"fa fa-linux\" },\r\n    { icon: \"fa fa-dribbble\" },\r\n    { icon: \"fa fa-skype\" },\r\n    { icon: \"fa fa-foursquare\" },\r\n    { icon: \"fa fa-trello\" },\r\n    { icon: \"fa fa-female\" },\r\n    { icon: \"fa fa-male\" },\r\n    { icon: \"fa fa-gratipay\" },\r\n    { icon: \"fa fa-sun-o\" },\r\n    { icon: \"fa fa-moon-o\" },\r\n    { icon: \"fa fa-archive\" },\r\n    { icon: \"fa fa-bug\" },\r\n    { icon: \"fa fa-vk\" },\r\n    { icon: \"fa fa-weibo\" },\r\n    { icon: \"fa fa-renren\" },\r\n    { icon: \"fa fa-pagelines\" },\r\n    { icon: \"fa fa-stack-exchange\" },\r\n    { icon: \"fa fa-arrow-circle-o-right\" },\r\n    { icon: \"fa fa-arrow-circle-o-left\" },\r\n    { icon: \"fa fa-caret-square-o-left\" },\r\n    { icon: \"fa fa-dot-circle-o\" },\r\n    { icon: \"fa fa-wheelchair\" },\r\n    { icon: \"fa fa-vimeo-square\" },\r\n    { icon: \"fa fa-try\" },\r\n    { icon: \"fa fa-plus-square-o\" },\r\n    { icon: \"fa fa-space-shuttle\" },\r\n    { icon: \"fa fa-slack\" },\r\n    { icon: \"fa fa-envelope-square\" },\r\n    { icon: \"fa fa-wordpress\" },\r\n    { icon: \"fa fa-openid\" },\r\n    { icon: \"fa fa-university\" },\r\n    { icon: \"fa fa-graduation-cap\" },\r\n    { icon: \"fa fa-yahoo\" },\r\n    { icon: \"fa fa-google\" },\r\n    { icon: \"fa fa-reddit\" },\r\n    { icon: \"fa fa-reddit-square\" },\r\n    { icon: \"fa fa-stumbleupon-circle\" },\r\n    { icon: \"fa fa-stumbleupon\" },\r\n    { icon: \"fa fa-delicious\" },\r\n    { icon: \"fa fa-digg\" },\r\n    { icon: \"fa fa-pied-piper\" },\r\n    { icon: \"fa fa-pied-piper-alt\" },\r\n    { icon: \"fa fa-drupal\" },\r\n    { icon: \"fa fa-joomla\" },\r\n    { icon: \"fa fa-language\" },\r\n    { icon: \"fa fa-fax\" },\r\n    { icon: \"fa fa-building\" },\r\n    { icon: \"fa fa-child\" },\r\n    { icon: \"fa fa-paw\" },\r\n    { icon: \"fa fa-spoon\" },\r\n    { icon: \"fa fa-cube\" },\r\n    { icon: \"fa fa-cubes\" },\r\n    { icon: \"fa fa-behance\" },\r\n    { icon: \"fa fa-behance-square\" },\r\n    { icon: \"fa fa-steam\" },\r\n    { icon: \"fa fa-steam-square\" },\r\n    { icon: \"fa fa-recycle\" },\r\n    { icon: \"fa fa-car\" },\r\n    { icon: \"fa fa-taxi\" },\r\n    { icon: \"fa fa-tree\" },\r\n    { icon: \"fa fa-spotify\" },\r\n    { icon: \"fa fa-deviantart\" },\r\n    { icon: \"fa fa-soundcloud\" },\r\n    { icon: \"fa fa-database\" },\r\n    { icon: \"fa fa-file-pdf-o\" },\r\n    { icon: \"fa fa-file-word-o\" },\r\n    { icon: \"fa fa-file-excel-o\" },\r\n    { icon: \"fa fa-file-powerpoint-o\" },\r\n    { icon: \"fa fa-file-image-o\" },\r\n    { icon: \"fa fa-file-archive-o\" },\r\n    { icon: \"fa fa-file-audio-o\" },\r\n    { icon: \"fa fa-file-video-o\" },\r\n    { icon: \"fa fa-file-code-o\" },\r\n    { icon: \"fa fa-vine\" },\r\n    { icon: \"fa fa-codepen\" },\r\n    { icon: \"fa fa-jsfiddle\" },\r\n    { icon: \"fa fa-life-ring\" },\r\n    { icon: \"fa fa-circle-o-notch\" },\r\n    { icon: \"fa fa-rebel\" },\r\n    { icon: \"fa fa-empire\" },\r\n    { icon: \"fa fa-git-square\" },\r\n    { icon: \"fa fa-git\" },\r\n    { icon: \"fa fa-hacker-news\" },\r\n    { icon: \"fa fa-tencent-weibo\" },\r\n    { icon: \"fa fa-qq\" },\r\n    { icon: \"fa fa-weixin\" },\r\n    { icon: \"fa fa-paper-plane\" },\r\n    { icon: \"fa fa-paper-plane-o\" },\r\n    { icon: \"fa fa-history\" },\r\n    { icon: \"fa fa-circle-thin\" },\r\n    { icon: \"fa fa-header\" },\r\n    { icon: \"fa fa-paragraph\" },\r\n    { icon: \"fa fa-sliders\" },\r\n    { icon: \"fa fa-share-alt\" },\r\n    { icon: \"fa fa-share-alt-square\" },\r\n    { icon: \"fa fa-bomb\" },\r\n    { icon: \"fa fa-futbol-o\" },\r\n    { icon: \"fa fa-tty\" },\r\n    { icon: \"fa fa-binoculars\" },\r\n    { icon: \"fa fa-plug\" },\r\n    { icon: \"fa fa-slideshare\" },\r\n    { icon: \"fa fa-twitch\" },\r\n    { icon: \"fa fa-yelp\" },\r\n    { icon: \"fa fa-newspaper-o\" },\r\n    { icon: \"fa fa-wifi\" },\r\n    { icon: \"fa fa-calculator\" },\r\n    { icon: \"fa fa-paypal\" },\r\n    { icon: \"fa fa-google-wallet\" },\r\n    { icon: \"fa fa-cc-visa\" },\r\n    { icon: \"fa fa-cc-mastercard\" },\r\n    { icon: \"fa fa-cc-discover\" },\r\n    { icon: \"fa fa-cc-amex\" },\r\n    { icon: \"fa fa-cc-paypal\" },\r\n    { icon: \"fa fa-cc-stripe\" },\r\n    { icon: \"fa fa-bell-slash\" },\r\n    { icon: \"fa fa-bell-slash-o\" },\r\n    { icon: \"fa fa-trash\" },\r\n    { icon: \"fa fa-copyright\" },\r\n    { icon: \"fa fa-at\" },\r\n    { icon: \"fa fa-eyedropper\" },\r\n    { icon: \"fa fa-paint-brush\" },\r\n    { icon: \"fa fa-birthday-cake\" },\r\n    { icon: \"fa fa-area-chart\" },\r\n    { icon: \"fa fa-pie-chart\" },\r\n    { icon: \"fa fa-line-chart\" },\r\n    { icon: \"fa fa-lastfm\" },\r\n    { icon: \"fa fa-lastfm-square\" },\r\n    { icon: \"fa fa-toggle-off\" },\r\n    { icon: \"fa fa-toggle-on\" },\r\n    { icon: \"fa fa-bicycle\" },\r\n    { icon: \"fa fa-bus\" },\r\n    { icon: \"fa fa-ioxhost\" },\r\n    { icon: \"fa fa-angellist\" },\r\n    { icon: \"fa fa-cc\" },\r\n    { icon: \"fa fa-ils\" },\r\n    { icon: \"fa fa-meanpath\" },\r\n    { icon: \"fa fa-buysellads\" },\r\n    { icon: \"fa fa-connectdevelop\" },\r\n    { icon: \"fa fa-dashcube\" },\r\n    { icon: \"fa fa-forumbee\" },\r\n    { icon: \"fa fa-leanpub\" },\r\n    { icon: \"fa fa-sellsy\" },\r\n    { icon: \"fa fa-shirtsinbulk\" },\r\n    { icon: \"fa fa-simplybuilt\" },\r\n    { icon: \"fa fa-skyatlas\" },\r\n    { icon: \"fa fa-cart-plus\" },\r\n    { icon: \"fa fa-cart-arrow-down\" },\r\n    { icon: \"fa fa-diamond\" },\r\n    { icon: \"fa fa-ship\" },\r\n    { icon: \"fa fa-user-secret\" },\r\n    { icon: \"fa fa-motorcycle\" },\r\n    { icon: \"fa fa-street-view\" },\r\n    { icon: \"fa fa-heartbeat\" },\r\n    { icon: \"fa fa-venus\" },\r\n    { icon: \"fa fa-mars\" },\r\n    { icon: \"fa fa-mercury\" },\r\n    { icon: \"fa fa-transgender\" },\r\n    { icon: \"fa fa-transgender-alt\" },\r\n    { icon: \"fa fa-venus-double\" },\r\n    { icon: \"fa fa-mars-double\" },\r\n    { icon: \"fa fa-venus-mars\" },\r\n    { icon: \"fa fa-mars-stroke\" },\r\n    { icon: \"fa fa-mars-stroke-v\" },\r\n    { icon: \"fa fa-mars-stroke-h\" },\r\n    { icon: \"fa fa-neuter\" },\r\n    { icon: \"fa fa-facebook-official\" },\r\n    { icon: \"fa fa-pinterest-p\" },\r\n    { icon: \"fa fa-whatsapp\" },\r\n    { icon: \"fa fa-server\" },\r\n    { icon: \"fa fa-user-plus\" },\r\n    { icon: \"fa fa-user-times\" },\r\n    { icon: \"fa fa-bed\" },\r\n    { icon: \"fa fa-viacoin\" },\r\n    { icon: \"fa fa-train\" },\r\n    { icon: \"fa fa-subway\" },\r\n    { icon: \"fa fa-medium\" }\r\n  ];\r\n\r\n  getIconList = (item, i) => {\r\n    return (\r\n      <li key={i} onDoubleClick={() => this.onDoubleClick(item.icon)}>\r\n        <a>\r\n          <span className={item.icon}></span>\r\n        </a>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  onDoubleClick = icon => {\r\n    this.props.onSelectionDone(icon);\r\n  };\r\n  render() {\r\n    return (\r\n      <Portal defaultOpen={true} closeOnEsc={true} closeOnOutsideClick={true}>\r\n        <div className=\"icon-popup\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-body\">\r\n                <div>\r\n                  <ul className=\"icon-picker-list\">{this.iconItems.map(this.getIconList)}</ul>\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button onClick={this.props.onClose} className=\"btn btn-default\" data-dismiss=\"modal\">\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Portal>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/CentralTimer/Preview.js",["1479","1480","1481","1482","1483","1484","1485","1486","1487","1488","1489","1490","1491"],"import React, { Component } from \"react\";\r\nimport { getcolor } from \"../../../Util\";\r\nimport \"./Preview.css\";\r\nimport FlipClock from \"../../../comman/FlipClock\";\r\nexport default class Preview extends Component {\r\n  state = {\r\n    millsecond: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n    total: 0,\r\n    endtime: new Date(Date.parse(new Date()) + 15 * 24 * 60 * 60 * 1000),\r\n  };\r\n  intervalHandler = null;\r\n  initializeClock = (endtime) => {\r\n    if (this.intervalHandler) clearInterval(this.intervalHandler);\r\n    this.updateClock(endtime);\r\n    this.intervalHandler = setInterval(this.updateClock, 1000);\r\n  };\r\n\r\n  componentDidMount() {\r\n    //this.setState({ endtime: new Date(Date.parse(this.props.timer.endDateTime)) });\r\n\r\n    this.setTimer();\r\n  }\r\n\r\n  setTimer(nextProps = null) {\r\n    const { DD, HH, MM, SS } = nextProps ? nextProps.timer : this.props.timer;\r\n    const newtimerType = nextProps ? nextProps.timer.timerType : this.props.timer.timerType;\r\n    if (newtimerType !== \"DATE_AND_TIME_BASED\") {\r\n      let time = new Date();\r\n      time.setDate(time.getDate() + parseInt(DD));\r\n      time.setHours(time.getHours() + parseInt(HH));\r\n      time.setMinutes(time.getMinutes() + parseInt(MM));\r\n      time.setSeconds(time.getSeconds() + parseInt(SS));\r\n      this.setState({ endtime: time }, () => {\r\n        this.initializeClock(this.state.endtime);\r\n      });\r\n    } else {\r\n      const time = nextProps ? nextProps.timer.endDateTime : this.props.timer.endDateTime;\r\n      this.setState({ endtime: new Date(Date.parse(time)) }, () => {\r\n        this.initializeClock(this.state.endtime);\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setTimer(nextProps);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalHandler);\r\n  }\r\n\r\n  updateClock = () => {\r\n    var t = getTimeRemaining(this.state.endtime);\r\n    this.setState({ days: t.days, hours: t.hours, minutes: t.minutes, seconds: t.seconds });\r\n    if (t.total <= 0) {\r\n      clearInterval(this.intervalHandler);\r\n      this.setState({ days: 0, hours: 0, minutes: 0, seconds: 0 });\r\n    }\r\n  };\r\n\r\n  getColor = (key) => {\r\n    return getcolor(this.props.STYLE.elements, key);\r\n  };\r\n\r\n  getLabelStyle = () => {\r\n    const color = this.getColor(\"centralTimerLabel\");\r\n    const backgroundColor = \"\"; //this.getColor(\"highlightBackground\");\r\n    if (this.props.layout == 2) return { color: color, backgroundColor: backgroundColor, fontSize: parseInt(this.props.STYLE.timerLabelFont) };\r\n    else if (this.props.layout == 1) return { color: color, fontSize: parseInt(this.props.STYLE.timerLabelFont) };\r\n    else return { color: this.getColor(\"centralTimerLabel\"), backgroundColor: this.getColor(\"highlight\") };\r\n  };\r\n\r\n  getTimerStyle = () => {\r\n    const color = this.getColor(\"centralTimer\");\r\n    const backgroundColor = this.getColor(\"highlight\");\r\n    if (this.props.layout == 2 || this.props.layout == 3) return { color: color, backgroundColor: backgroundColor, fontSize: parseInt(this.props.STYLE.timerFont) };\r\n    else return { color: color, fontSize: parseInt(this.props.STYLE.timerFont) };\r\n  };\r\n\r\n  getLabelStyleTemp() {\r\n    const color = this.getColor(\"centralTimer\");\r\n    const backgroundColor = this.getColor(\"highlight\");\r\n    if (this.props.layout == 2) return { color: color, backgroundColor: backgroundColor, fontSize: parseInt(this.props.STYLE.timerFont) };\r\n    else return { color: color, fontSize: parseInt(this.props.STYLE.timerFont) };\r\n  }\r\n\r\n  getTemplate = () => {\r\n    const layout = this.props.layout;\r\n    const labelStyle = this.getLabelStyle();\r\n    const timerStyle = this.getTimerStyle();\r\n    let { days, hours, minutes, seconds } = this.state;\r\n    days = (\"0\" + days).slice(-2);\r\n    hours = (\"0\" + hours).slice(-2);\r\n    minutes = (\"0\" + minutes).slice(-2);\r\n    seconds = (\"0\" + seconds).slice(-2);\r\n    const { DD = \"Days\", HH = \"Hours\", MM = \"Mintues\", SS = \"Second\" } = this.props.TEXT; //.timerLabel;\r\n    if (layout == 2) {\r\n      return (\r\n        <div id=\"clockdiv\" style={this.getLabelStyleTemp()}>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"days\" style={timerStyle}>\r\n              {days}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {DD}\r\n            </div>\r\n          </div>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"hours\" style={timerStyle}>\r\n              {hours}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {HH}\r\n            </div>\r\n          </div>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"minutes\" style={timerStyle}>\r\n              {minutes}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {MM}\r\n            </div>\r\n          </div>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"seconds\" style={timerStyle}>\r\n              {seconds}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {SS}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (layout == 1) {\r\n      return (\r\n        <div id=\"clockdiv\" style={this.getLabelStyleTemp()}>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"days\" style={timerStyle}>\r\n              {days}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {DD}\r\n            </div>\r\n          </div>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"hours\" style={timerStyle}>\r\n              {hours}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {HH}\r\n            </div>\r\n          </div>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"minutes\" style={timerStyle}>\r\n              {minutes}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {MM}\r\n            </div>\r\n          </div>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"seconds\" style={timerStyle}>\r\n              {seconds}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {SS}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div id=\"clockdiv\" style={this.getLabelStyleTemp()}>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"days\" style={timerStyle}>\r\n              {days}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {DD}\r\n            </div>\r\n          </div>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"hours\" style={timerStyle}>\r\n              {hours}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {HH}\r\n            </div>\r\n          </div>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"minutes\" style={timerStyle}>\r\n              {minutes}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {MM}\r\n            </div>\r\n          </div>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"seconds\" style={timerStyle}>\r\n              {seconds}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {SS}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    //else if (layout == 2) {\r\n    // } else if (layout == 3) {\r\n    // } else if (layout == 4) {\r\n    //   return (\r\n    //     <div id=\"clockdiv\" style={timerStyle}>\r\n    //       <div className=\"objdivTimer\">\r\n    //         <span className=\"days\" style={timerStyle}>\r\n    //           {days}\r\n    //         </span>\r\n    //         <div style={labelStyle} className=\"smalltext\">\r\n    //           {DD}\r\n    //         </div>\r\n    //       </div>\r\n    //       <div className=\"objdivTimer\">\r\n    //         <span className=\"hours\" style={timerStyle}>\r\n    //           {hours}\r\n    //         </span>\r\n    //         <div style={labelStyle} className=\"smalltext\">\r\n    //           {HH}\r\n    //         </div>\r\n    //       </div>\r\n    //       <div className=\"objdivTimer\">\r\n    //         <span className=\"minutes\" style={timerStyle}>\r\n    //           {minutes}\r\n    //         </span>\r\n    //         <div style={labelStyle} className=\"smalltext\">\r\n    //           {MM}\r\n    //         </div>\r\n    //       </div>\r\n    //       <div className=\"objdivTimer\">\r\n    //         <span className=\"seconds\" style={timerStyle}>\r\n    //           {seconds}\r\n    //         </span>\r\n    //         <div style={labelStyle} className=\"smalltext\">\r\n    //           {SS}\r\n    //         </div>\r\n    //       </div>\r\n    //     </div>\r\n    //   );\r\n    // } else {\r\n    //   return <FlipClock timer={20000} />;\r\n    // }\r\n  };\r\n\r\n  render() {\r\n    // const { isStop, millsecond } = this.state;\r\n    // const style = this.getStyle();\r\n    const layout = this.props.layout;\r\n    let { days, hours, minutes, seconds } = this.state;\r\n    return (\r\n      <center>\r\n        {/* <div className=\"previewPortal\"><Countdown date={Date.now() + millsecond} /></div> */}\r\n        <div className=\"previewPortal\" style={{ backgroundColor: \"#fcfcfc00\", left: layout == 5 ? \"15%\" : \"\" }}>\r\n         {/* { (days == 0 && hours == 0 && minutes == 0 && seconds == 0) ? null : */}\r\n          <center>\r\n            <div dangerouslySetInnerHTML={{ __html: this.props.TEXT.timerText }}></div>\r\n          </center>\r\n          {/* } */}\r\n          {this.getTemplate()}\r\n        </div>\r\n      </center>\r\n    );\r\n  }\r\n}\r\n\r\nfunction getTimeRemaining(endtime) {\r\n  var t = Date.parse(endtime) - Date.parse(new Date());\r\n  var seconds = Math.floor((t / 1000) % 60);\r\n  var minutes = Math.floor((t / 1000 / 60) % 60);\r\n  var hours = Math.floor((t / (1000 * 60 * 60)) % 24);\r\n  var days = Math.floor(t / (1000 * 60 * 60 * 24));\r\n  return {\r\n    total: t,\r\n    days: days,\r\n    hours: hours,\r\n    minutes: minutes,\r\n    seconds: seconds,\r\n  };\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/CentralTimer/Style.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/CentralTimer/SideBar.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/CentralTimer/Text.js",["1492","1493","1494","1495"],"import React, { Component } from \"react\";\r\nimport Editor from \"../../../comman/Editor\";\r\nimport Util from \"../../../Util\";\r\nimport { Info } from \"../../../comman/Info\";\r\nexport default class Text extends Component {\r\n  state = {\r\n    DD: \"Days\",\r\n    HH: \"Hours\",\r\n    MM: \"Mintues\",\r\n    SS: \"Second\",\r\n    timerText: this.props.timerText,\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (Util.isRedirected) {\r\n      Util.isRedirected = false;\r\n      const { DD, HH, MM, SS, timerText } = nextProps;\r\n      this.setState({ DD, HH, MM, SS, timerText });\r\n    }\r\n  }\r\n\r\n  onChange = (value) => {\r\n    this.setState({ timerText: value }, () => {\r\n      const { DD, HH, MM, SS, timerText } = this.state;\r\n      const obj = { DD, HH, MM, SS };\r\n      Object.assign(obj, { timerLabel: { DD, HH, MM, SS }, timerText });\r\n      this.props.onChange(1, obj);\r\n    });\r\n  };\r\n\r\n  onLabelChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value }, () => {\r\n      const { DD, HH, MM, SS, timerText } = this.state;\r\n      const obj = {};\r\n      Object.assign(obj, { timerLabel: { DD, HH, MM, SS }, timerText });\r\n      this.props.onChange(1, obj);\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const { DD, HH, MM, SS, timerText } = this.state;\r\n    const obj = {};\r\n    Object.assign(obj, { timerLabel: { DD, HH, MM, SS }, timerText });\r\n    this.props.onChange(1, obj);\r\n  }\r\n\r\n  render() {\r\n    const { timerText, DD, HH, MM, SS } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            Timer Text*\r\n            <Info text=\"Timer text to display as view \" />\r\n          </div>\r\n          <Editor value={timerText} onChange={this.onChange} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/Preview.js",["1496","1497","1498","1499","1500","1501"],"import React, { Component } from \"react\";\r\nimport \"./Preview.css\";\r\nimport { parseImgUrl, youtubeUrlParse, vimeoUrlParse } from \"../../../Util\";\r\nimport Portal from \"../../../comman/Portal\";\r\nexport default class Preview extends Component {\r\n  getStyle = () => {\r\n    const { elements } = this.props.STYLE;\r\n    const style = {};\r\n    Object.assign(style, { background: this.getcolor(elements, \"background\") });\r\n    return style;\r\n  };\r\n  getcolor(element, key) {\r\n    let color = \"#fff\";\r\n    element.forEach((value) => {\r\n      if (value.name === key) {\r\n        color = value.color;\r\n      }\r\n    });\r\n    return color;\r\n  }\r\n  isUrlVideo = (url) => {\r\n    if (url.indexOf(\"youtube\") !== -1 || url.indexOf(\"youtu\") !== -1 || url.indexOf(\"vimeo\") !== -1) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  getVideoURL(url) {\r\n    return parseImgUrl(url);\r\n  }\r\n  render() {\r\n    const video = this.props.video.url || \"\";\r\n    const style = {}; //this.getStyle();\r\n    const autoPlayvideo = this.props.STYLE.switchElement || false;\r\n    return (\r\n      <Portal defaultOpen={true} closeOnEsc={true} closeOnOutsideClick={true}>\r\n        <div className=\"image-popup\" style={style}>\r\n          <div className=\"image-preview\">\r\n            <div className=\"popUpTitlebar\"></div>\r\n            <center>\r\n              <div className=\"image-main-preview\">\r\n                <div style={{ height: \"700px\", width: \"70%\" }}>\r\n                  <div\r\n                    onClick={() => {\r\n                      this.props.closePopup();\r\n                    }}\r\n                    className=\"popupCloseButton\"\r\n                    style={{ position: \"relative\" }}\r\n                  >\r\n                    <i className=\"fa fa-close\" style={{ paddingLeft: \"102%\" }} />\r\n                  </div>\r\n                  {this.isUrlVideo(video) ? (\r\n                    <iframe\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                      frameborder=\"0\"\r\n                      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                      allowfullscreen\r\n                      src={\"https://www.youtube.com/embed/\" + youtubeUrlParse(video) + (autoPlayvideo ? \"?autoplay=1\" : \"\")}\r\n                      frameborder=\"0\"\r\n                      allowfullscreen\r\n                      auto\r\n                    ></iframe>\r\n                  ) : (\r\n                    <iframe\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                      frameborder=\"0\"\r\n                      allowfullscreen\r\n                      src={\"https://player.vimeo.com/video/\" + vimeoUrlParse(video) + (autoPlayvideo ? \"?autoplay=1\" : \"\")}\r\n                      frameborder=\"0\"\r\n                      allowfullscreen\r\n                      auto\r\n                    ></iframe>\r\n                  )}\r\n                </div>\r\n\r\n                {/* <img src={BASE_URL + parseImgUrl(video)} /> */}\r\n              </div>\r\n            </center>\r\n          </div>\r\n        </div>\r\n      </Portal>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/Style.js",["1502","1503","1504"],"import React, { Component } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\n\r\nimport \"react-color-picker/index.css\";\r\nimport Switch1 from \"../../../comman/Switch\";\r\nexport default class Style extends Component {\r\n  state = {\r\n    elements: this.props.elements,\r\n    switchElement: this.props.switchElement,\r\n    selected: this.props.selected\r\n  };\r\n\r\n  onClickElement = i => {\r\n    const cases = this.props.case || 1;\r\n    this.setState({ selected: i });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const cases = this.props.case || 1;\r\n    this.props.onChange(cases, this.state);\r\n  }\r\n\r\n  onColorChange = color => {\r\n    const cases = this.props.case || 1;\r\n    const { elements, selected } = this.state;\r\n    elements[selected].color = color.hex;\r\n    this.setState({ elements }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n  onChange = value => {\r\n    const cases = this.props.case || 1;\r\n    this.setState({ switchElement: value }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n  renderElements = (ele, i) => {\r\n    const { selected } = this.state;\r\n    const selectedDiv = selected === i ? \"element-div-active\" : \"\";\r\n    const selectedText = selected === i ? \"element-text-active\" : \"\";\r\n    return (\r\n      <div className={\"element-list\"} onClick={() => this.onClickElement(i)}>\r\n        <div className={\"element-list-text \" + selectedText}>{ele.text}</div>\r\n        <div className={\"element-list-div \" + selectedDiv} style={{ backgroundColor: ele.color }}></div>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    const { elements, selected, switchElement } = this.state;\r\n    return (\r\n      <div>\r\n        <center>\r\n          <div style={{ width: \"80%\", padding: \"20px\" }}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\" style={{ paddingBottom: \"5px\" }}>\r\n                <div className=\"form-element\">\r\n                  <div className=\"label-text\">Autoplay*</div>\r\n                  <Switch1 onChange={this.onChange} isChecked={switchElement} />\r\n                </div>\r\n              </div>\r\n              {/* <div className=\"col-md-6\">\r\n                <SketchPicker defaultValue=\"#452135\" color={elements[selected].color} onChangeComplete={this.onColorChange} />\r\n              </div> */}\r\n              {/* <div className=\"col-md-6\">{elements.map(this.renderElements)}</div> */}\r\n            </div>\r\n          </div>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/SideBar.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/Text.js",["1505"],"import React, { Component } from \"react\";\r\nexport default class Text extends Component {\r\n  state = {\r\n    campaignName: this.props.campaignName\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    this.props.onChange(1, this.state);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.onChange(1, this.state);\r\n  }\r\n\r\n  render() {\r\n    const { campaignName, redirectUrl } = this.state;\r\n    return (\r\n      <div>\r\n        <center>\r\n          <div style={{ width: \"80%\", padding: \"20px\" }}>\r\n            <div className=\"form-element\">\r\n              <div className=\"label-text\">Campaign Name*</div>\r\n              <input type=\"text\" name=\"campaignName\" className=\"form-control\" value={campaignName} onChange={this.onChange} />\r\n            </div>\r\n          </div>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ImagePopup/Preview.js",["1506","1507","1508"],"import React, { Component } from \"react\";\r\nimport \"./Preview.css\";\r\nimport { parseImgUrl } from \"../../../Util\";\r\nimport { BASE_URL } from \"../../../../actions/URLs\";\r\nimport Portal from \"../../../comman/Portal\";\r\nexport default class Preview extends Component {\r\n  getStyle = () => {\r\n    const { elements } = this.props.STYLE;\r\n    const style = {};\r\n    Object.assign(style, { background: this.getcolor(elements, \"highlightBackground\") });\r\n    return style;\r\n  };\r\n  getcolor(element, key) {\r\n    let color = \"#fff\";\r\n    element.forEach((value) => {\r\n      if (value.name === key) {\r\n        color = value.color;\r\n      }\r\n    });\r\n    return color;\r\n  }\r\n  render() {\r\n    const image = this.props.image || \"\";\r\n    const style = {}; //this.getStyle();\r\n    return (\r\n      <Portal defaultOpen={true} closeOnOutsideClick={true}>\r\n        <div className=\"image-popup\">\r\n          <div className=\"image-preview align-self-center\" style={{ height: \"100%\" }}>\r\n            <div className=\"popUpTitlebar\" style={{ height: \"unset\" }}>\r\n              <div\r\n                onClick={() => {\r\n                  this.props.closePopup();\r\n                }}\r\n                className=\"popupCloseButton\"\r\n              >\r\n                <i className=\"fa fa-close\" />\r\n              </div>\r\n            </div>\r\n            {/* <center> */}\r\n            <div className=\"image-main-preview container-item align-self-center\" style={{ backgroundColor: \"unset\" }}>\r\n              <img className=\"img-class\" src={parseImgUrl(image)} />\r\n            </div>\r\n            {/* </center> */}\r\n          </div>\r\n        </div>\r\n      </Portal>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ImagePopup/Image.js",["1509","1510","1511"],"import React, { Component } from \"react\";\r\nimport Uploader from \"../../../comman/Uploader\";\r\nimport { BASE_URL } from \"../../../../actions/URLs\";\r\nimport Util, { parseImgUrl } from \"../../../Util\";\r\nexport default class image extends Component {\r\n  state = { image: this.props.image };\r\n  componentWillMount() {\r\n    if (this.props.image !== \"\") this.state.disabled = true;\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.onChange(2, this.state.image);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (Util.isRedirected) {\r\n      Util.isRedirected = false;\r\n      this.setState({ image: nextProps.image, disabled: true });\r\n    }\r\n  }\r\n  onUploadDone = (imageICON) => {\r\n    this.setState({ image: imageICON.image, disabled: true });\r\n    this.props.onChange(2, imageICON.image);\r\n  };\r\n\r\n  onReset = () => {\r\n    this.setState({ image: \"\" }, () => {\r\n      this.props.onChange(2, this.state.image);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const props = {\r\n      onUploadDone: this.onUploadDone,\r\n    };\r\n    return (\r\n      <div className=\"col-12\">\r\n        <Uploader {...props} onReset={this.onReset} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ImagePopup/SideBar.js",["1512"],"import React, { Component } from \"react\";\r\nimport Util from \"../../../Util\";\r\nimport { SideButton } from \"../../../layout/ToolLayout\";\r\nexport default class SideBar extends Component {\r\n  state = {\r\n    showItems: [],\r\n  };\r\n\r\n  render() {\r\n    const { activeTab } = this.props;\r\n    // const TextImg = activeTab === 1 ? \"active-side-button\" : \"\";\r\n    const TimerImg = activeTab === 1 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const CodeImg = activeTab === 3 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div onClick={() => this.props.onChangeActive(1)} className={TimerImg}>\r\n          <SideButton class={\"fa fa-file-image-o\"} text=\"Image\" />\r\n        </div>\r\n        <div onClick={() => this.props.onChangeActive(3)} className={CodeImg}>\r\n          <SideButton class={\"fa fa-code\"} text=\"Trigger\" />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ImagePopup/Text.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/UrgencyTimer/Preview.js",["1513","1514","1515","1516","1517"],"import React, { Component } from \"react\";\r\nimport { getcolor } from \"../../../Util\";\r\nimport \"./Preview.css\";\r\nexport default class Preview extends Component {\r\n  state = {\r\n    millsecond: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n    total: 0,\r\n    //endtime: new Date(Date.parse(new Date()) + 15 * 24 * 60 * 60 * 1000)\r\n  };\r\n  intervalHandler = null;\r\n  initializeClock = (endtime) => {\r\n    if (this.intervalHandler) clearInterval(this.intervalHandler);\r\n    this.updateClock(endtime);\r\n    this.intervalHandler = setInterval(this.updateClock, 1000);\r\n  };\r\n\r\n  getTimeData = () => {\r\n    const timer = new Date();\r\n    timer.setHours(timer.getHours() + parseInt(this.props.TIMER.HH || 0));\r\n    timer.setMinutes(timer.getMinutes() + parseInt(this.props.TIMER.MM || 0));\r\n    timer.setSeconds(timer.getSeconds() + parseInt(this.props.TIMER.SS || 0));\r\n    // timer.setMinutes(timer.getMinutes() + parseInt(50 || 0));\r\n    // timer.setSeconds(timer.getSeconds() + parseInt(50 || 0));\r\n    return timer;\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ endtime: this.getTimeData() });\r\n    this.initializeClock(this.getTimeData());\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalHandler);\r\n  }\r\n\r\n  updateClock = () => {\r\n    var t = getTimeRemaining(this.state.endtime);\r\n    this.setState({ days: t.days, hours: t.hours, minutes: t.minutes, seconds: t.seconds });\r\n    if (t.total <= 0) {\r\n      clearInterval(this.intervalHandler);\r\n      this.setState({ days: 0, hours: 0, minutes: 0, seconds: 0 });\r\n    }\r\n  };\r\n\r\n  getColor = (key) => {\r\n    return getcolor(this.props.STYLE.elements, key);\r\n  };\r\n\r\n  getLabelStyle = () => {\r\n    const color = this.getColor(\"centralTimerLabel\");\r\n    const backgroundColor = this.getColor(\"highlightBackground\");\r\n    return { color: color, fontWeight: parseInt(this.props.STYLE.labelBold), backgroundColor: \"#ffffff00\", fontSize: parseInt(this.props.STYLE.labelFont) };\r\n  };\r\n\r\n  getTimerStyle = () => {\r\n    const color = this.getColor(\"timerText\");\r\n    const backgroundColor = this.getColor(\"highlight\");\r\n    return { color: color, fontWeight: parseInt(this.props.STYLE.timerBold), backgroundColor: \"#ffffff00\", fontSize: parseInt(this.props.STYLE.timerFont) };\r\n  };\r\n\r\n  render() {\r\n    // const { isStop, millsecond } = this.state;\r\n    // const style = this.getStyle();\r\n    const labelStyle = this.getLabelStyle();\r\n    const timerStyle = this.getTimerStyle();\r\n    const { hours, minutes, seconds } = this.state;\r\n    const { HH, MM, SS } = this.props.toolData;\r\n    return (\r\n      <center>\r\n        {/* <div className=\"previewPortal\"><Countdown date={Date.now() + millsecond} /></div> */}\r\n        <div className=\"previewPortal\" style={{ backgroundColor: \"#ffffff00\" }}>\r\n          <div className=\"urgencyMain\">\r\n            <div style={timerStyle} className=\"urgency_timer\">\r\n              {hours}\r\n              <div style={labelStyle}>H</div>\r\n            </div>\r\n\r\n            <div style={timerStyle} className=\"urgency_timer\">\r\n              {minutes}\r\n              <div style={labelStyle}>M</div>\r\n            </div>\r\n            <div style={timerStyle} className=\"urgency_timer\">\r\n              {seconds}\r\n              <div style={labelStyle}>S</div>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"objdivTimer\">\r\n              <span class=\"days\" style={timerStyle}>\r\n                {days}\r\n              </span>\r\n              <div style={labelStyle} class=\"smalltext\">\r\n                {DD}\r\n              </div>\r\n            </div> */}\r\n          {/* <div className=\"objdivTimer\">\r\n              <span class=\"hours\" style={timerStyle}>\r\n                {hours}\r\n              </span>\r\n              <div style={labelStyle} class=\"smalltext\">\r\n                {HH}\r\n              </div>\r\n            </div>\r\n            <div className=\"objdivTimer\">\r\n              <span class=\"minutes\" style={timerStyle}>\r\n                {minutes}\r\n              </span>\r\n              <div style={labelStyle} class=\"smalltext\">\r\n                {MM}\r\n              </div>\r\n            </div>\r\n            <div className=\"objdivTimer\">\r\n              <span class=\"seconds\" style={timerStyle}>\r\n                {seconds}\r\n              </span>\r\n              <div style={labelStyle} class=\"smalltext\">\r\n                {SS}\r\n              </div>\r\n            </div> */}\r\n        </div>\r\n      </center>\r\n    );\r\n  }\r\n}\r\n\r\nfunction getTimeRemaining(endtime) {\r\n  var t = Date.parse(endtime) - Date.parse(new Date());\r\n  var seconds = Math.floor((t / 1000) % 60);\r\n  var minutes = Math.floor((t / 1000 / 60) % 60);\r\n  var hours = Math.floor((t / (1000 * 60 * 60)) % 24);\r\n  var days = Math.floor(t / (1000 * 60 * 60 * 24));\r\n  return {\r\n    total: t,\r\n    days: days,\r\n    hours: hours,\r\n    minutes: minutes,\r\n    seconds: seconds,\r\n  };\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/UrgencyTimer/Style.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/UrgencyTimer/Timer.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/UrgencyTimer/SideBar.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/UrgencyTimer/Text.js",["1518"],"import React, { Component } from \"react\";\r\n// import Editor from \"../../../comman/Editor\";\r\nimport Util from \"../../../Util\";\r\nexport default class Text extends Component {\r\n  state = {\r\n    HH: this.props.toolData.HH,\r\n    MM: this.props.toolData.MM,\r\n    SS: this.props.toolData.SS,\r\n    timerText: this.props.timerText,\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (Util.isRedirected) {\r\n      Util.isRedirected = false;\r\n      const { HH, MM, SS, timerText } = nextProps;\r\n      this.setState({ HH, MM, SS, timerText });\r\n    }\r\n  }\r\n\r\n  onChange = (value) => {\r\n    this.setState({ timerText: value }, () => {\r\n      const { DD, HH, MM, SS, timerText } = this.state;\r\n      const obj = {};\r\n      Object.assign(obj, { timerLabel: { DD, HH, MM, SS }, timerText });\r\n      this.props.onChange(1, obj);\r\n    });\r\n  };\r\n\r\n  onLabelChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value }, () => {\r\n      const { DD, HH, MM, SS, timerText } = this.state;\r\n      const obj = {};\r\n      Object.assign(obj, { timerLabel: { DD, HH, MM, SS }, timerText });\r\n      this.props.onChange(1, obj);\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const { DD, HH, MM, SS, timerText } = this.state;\r\n    const obj = {};\r\n    Object.assign(obj, { timerLabel: { DD, HH, MM, SS }, timerText });\r\n    this.props.onChange(1, obj);\r\n  }\r\n\r\n  render() {\r\n    const { timerText, HH, MM, SS } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"label-text\">Timer Label Text*</div>\r\n          <div className=\"col-md-12\" style={{ display: \"flex\" }}>\r\n            <div className=\"col-3\">\r\n              <input type=\"text\" placeholder=\"Hours\" min={0} max=\"60\" className=\"form-control\" value={HH} name=\"HH\" onChange={this.onLabelChange} />\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <input type=\"text\" placeholder=\"Minutes\" min={0} max=\"60\" className=\"form-control\" value={MM} name=\"MM\" onChange={this.onLabelChange} />\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <input type=\"text\" placeholder=\"Seconds\" min={0} max=\"60\" className=\"form-control\" value={SS} name=\"SS\" onChange={this.onLabelChange} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/TabMessaging/SideBar.js",["1519"],"import React, { Component } from \"react\";\r\nimport Util from \"../../../Util\";\r\nimport { SideButton } from \"../../../layout/ToolLayout\";\r\nexport default class SideBar extends Component {\r\n  render() {\r\n    const { activeTab } = this.props;\r\n    const TextImg = activeTab === 1 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const FaviconImg = activeTab === 2 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const TimeImg = activeTab === 3 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const CodeImg = activeTab === 5 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div onClick={() => this.props.onChangeActive(1)} className={TextImg}>\r\n          <SideButton class={\"fa fa-text-width\"} text=\"Text\" />\r\n        </div>\r\n        <div onClick={() => this.props.onChangeActive(2)} className={FaviconImg}>\r\n          <SideButton class={\"fa fa-fire\"} text=\"Favicon\" />\r\n        </div>\r\n        <div onClick={() => this.props.onChangeActive(3)} className={TimeImg}>\r\n          <SideButton class={\"fa fa-clock-o\"} text=\"Timing\" />\r\n        </div>\r\n        <div onClick={() => this.props.onChangeActive(5)} className={CodeImg}>\r\n          <SideButton class={\"fa fa-code\"} text=\"Trigger\" />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/TabMessaging/Text.js",["1520"],"import React, { Component } from \"react\";\r\nimport Util from \"../../../Util\";\r\nimport { Info } from \"../../../comman/Info\";\r\nexport default class Text extends Component {\r\n  state = {\r\n    messages: this.props.messages,\r\n    randomMsg: \"\"\r\n  };\r\n  randomText = this.props.randomText;\r\n  i = 0;\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (Util.isRedirected) {\r\n      Util.isRedirected = false;\r\n      this.setState({ messages: nextProps.messages });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  addmessage = () => {\r\n    const { randomMsg, messages } = this.state;\r\n    if (randomMsg !== null && randomMsg !== \"\" && !messages.includes(randomMsg)) {\r\n      messages.push(randomMsg);\r\n      this.setState({ messages }, () => {\r\n        // const newObj = { messages: this.state.messages };\r\n        this.props.onChange({ messages: this.state.messages });\r\n      });\r\n      this.setState({randomMsg : \"\"})\r\n    } else {\r\n      window.gs.toast(\"Message Should be unique\", { position: \"top-right\", type: window.gs.toast.TYPE.ERROR });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.onChange({ messages: this.state.messages });\r\n  }\r\n\r\n  renderMsgList = (item, index) => {\r\n    return (\r\n      <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={item + index}>\r\n        {item}\r\n        <span className=\"badge badge-danger badge-pill msg_add_btn\">\r\n          <i onClick={() => this.removeListItem(index)} title=\"Remove\" className=\"fa fa-minus-circle\" aria-hidden=\"true\" />\r\n        </span>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  removeListItem = (index) => {\r\n    const { messages } = this.state;\r\n    messages.splice(index, 1);\r\n    this.setState({ messages }, () => {\r\n      const newObj = this.state.messages;\r\n      this.props.onChange({ messages: newObj });\r\n    });\r\n  };\r\n\r\n  randomClick = () => {\r\n    if (this.i === this.randomText.length - 1) this.i = 0;\r\n    else this.i++;\r\n    this.setState({ randomMsg: this.randomText[this.i] });\r\n  };\r\n\r\n  render() {\r\n    const { randomMsg, messages } = this.state;\r\n    return (\r\n      <div className=\"sample_msg\">\r\n        <div className=\"col-auto\">\r\n          <div className=\"input-group mb-2 cz_messaging_input\">\r\n            <h5>Custom Message*</h5>\r\n            <input type=\"text\" className=\"form-control\" name=\"randomMsg\" value={randomMsg} onChange={this.onChange} />\r\n            <div className=\"input-group-append\">\r\n              <span className=\"input-group-text\" style={{ cursor: \"pointer\" }} onClick={this.addmessage}>\r\n                Add\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"label-text\"><h3>Selected Message*</h3></div>\r\n          {/* <div style={{ textAlign: \"end\", cursor: \"pointer\",fontWeight: 600 }}>\r\n            <span onClick={this.randomClick}>Random Message</span>\r\n          </div> */}\r\n        </div>\r\n        <div>\r\n          {messages.length ? \r\n          <ul className=\"list-group list-group-flush\">{messages.map(this.renderMsgList)}</ul>\r\n          : <p>Message has not been selected.</p>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/TabMessaging/Timing.js",["1521","1522"],"import React, { Component } from \"react\";\r\nimport Switch1 from \"../../../comman/Switch\";\r\nimport { Info } from \"../../../comman/Info\";\r\nimport { getPath } from \"../../../../actions/URLs\";\r\nexport default class Timing extends Component {\r\n  state = {\r\n    timeFirstMsg: this.props.timeFirstMsg,\r\n    timeBetweenTwoMsg: this.props.timeBetweenTwoMsg,\r\n    Sound: this.props.SOUND,\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    this.props.onChange({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSoundChange = (Sound) => {\r\n    this.setState({ Sound }, () => {\r\n      this.props.onChange({ SOUND: Sound });\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const { timeFirstMsg, timeBetweenTwoMsg } = this.state;\r\n    this.props.onChange({ timeFirstMsg, timeBetweenTwoMsg });\r\n  }\r\n\r\n  render() {\r\n    const { timeFirstMsg, timeBetweenTwoMsg, Sound } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            Time for the First Message* <Info text=\"Enter the start time in seconds for getting 1st tab message.\" />\r\n          </div>\r\n          <input type=\"number\" name=\"timeFirstMsg\" className=\"form-control\" value={timeFirstMsg} onChange={this.onChange} />\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            Time between two messages*\r\n            <Info text=\"Enter the time in seconds between two messages\" />\r\n          </div>\r\n          <input type=\"number\" name=\"timeBetweenTwoMsg\" className=\"form-control\" value={timeBetweenTwoMsg} onChange={this.onChange} />\r\n        </div>\r\n        <div className=\"form-element\" onClick={() => this.onSoundChange(!Sound)}>\r\n          <div className=\"label-text\">\r\n            Sound*\r\n            <Info text=\"Click on the Icon to enable or disable sound.\" />\r\n          </div>\r\n          {Sound ? <i className=\"fa fa-volume-up sound-icon\"></i> : <img className=\"sound-icon\" src={getPath(\"/asset/mute.svg\")} />}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/TabMessaging/Favicon.js",["1523","1524"],"import React, { Component } from \"react\";\r\nimport Uploader from \"../../../comman/Uploader\";\r\nimport { parseImgUrl } from \"../../../Util\";\r\nimport Emoji from \"../../../comman/Emoji\";\r\nimport Switch1 from \"../../../comman/Switch\";\r\nimport { Info } from \"../../../comman/Info\";\r\nexport default class Favicon extends Component {\r\n  state = { FAVICON: this.props.FAVICON, isImage: this.props.isImage, emoji: this.props.emoji, showEmojiSelecter: false };\r\n  componentWillUnmount() {\r\n    const { FAVICON, isImage, emoji } = this.state;\r\n    this.props.onChange({ isImage, emoji, FAVICON });\r\n  }\r\n  onUploadDone = (FAVICONICON) => {\r\n    this.setState({ FAVICON: FAVICONICON.image }, () => {\r\n      const { FAVICON, isImage, emoji } = this.state;\r\n      this.props.onChange({ isImage, emoji, FAVICON });\r\n    });\r\n  };\r\n  onEmojiSelect = (emoji) => {\r\n    this.setState({ emoji: emoji }, () => {\r\n      const { FAVICON, isImage, emoji } = this.state;\r\n      this.props.onChange({ isImage, emoji, FAVICON });\r\n    });\r\n  };\r\n  render() {\r\n    const props = {\r\n      onUploadDone: this.onUploadDone,\r\n    };\r\n    const { FAVICON, emoji, isImage } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div\r\n            className=\"col-5\"\r\n            style={{ textAlign: \"end\" }}\r\n            onClick={() => {\r\n              this.setState({ isImage: true });\r\n            }}\r\n          >\r\n            <Info text=\"Select Image to upload as a favicon\" />\r\n            <div className=\"favicon-preview-main cz_fav_preview_box\">\r\n                <div className=\"favicon-preview\">\r\n                  {isImage ? (\r\n                    <div>\r\n                      {FAVICON && FAVICON !== null ? (\r\n                        <div className=\"cz_fav_image\">\r\n                          <img className=\"preview-image\" src={parseImgUrl(FAVICON)} />\r\n                        </div>\r\n                      ) : null} \r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"cz_fav_emoji\">\r\n                      {emoji}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n            </div>\r\n            <div>\r\n              <div className=\"uploadMain cz_uploader\">\r\n                <Uploader {...props} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 cz_or_bar\">\r\n            <div className=\"span-hr\" />\r\n            <div>OR</div>\r\n            <div className=\"span-hr\" />\r\n          </div>\r\n          <div\r\n            className=\"col-5\"\r\n            onClick={() => {\r\n              this.setState({ isImage: false });\r\n            }}\r\n          >\r\n            <div className=\"cz_tab_emoji_box\">\r\n              <Emoji onSelectionDone={this.onEmojiSelect} />\r\n            </div>\r\n          </div>\r\n          <Info text=\"Double click on Icon to select Emoji\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/SpecialBonusOptin/Code.js",["1525","1526","1527","1528","1529","1530","1531"],"import React, { Component } from \"react\";\r\nimport DropDown from \"../comman/DropDown\";\r\nimport { Info } from \"../comman/Info\";\r\nimport ToolUtil, { getCodeOptions } from \"../../utils/ToolUtil\";\r\nexport default class Code extends Component {\r\n  options = getCodeOptions();\r\n  state = {\r\n    include: this.props.include,\r\n    exclude: (ToolUtil.isUpgrade1 && window.isAdvancedOpt) ? this.props.exclude : [],\r\n  };\r\n\r\n  onDropDownChange1 = (e, index) => {\r\n    if (!index) index = 0;\r\n    this.state.include[index].type = e;\r\n  };\r\n\r\n  onDropDownChange2 = (e, index) => {\r\n    if (!index) index = 0;\r\n    this.state.exclude[index].type = e;\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const cases = this.props.cases || 1;\r\n    this.props.onChange(this.state);\r\n  }\r\n\r\n  onItemChange1 = (index, e) => {\r\n    this.state.include[index].url = e.target.value;\r\n    this.setState({ include: this.state.include });\r\n  };\r\n\r\n  onItemChange2 = (index, e) => {\r\n    this.state.exclude[index].url = e.target.value;\r\n    this.setState({ exclude: this.state.exclude });\r\n  };\r\n\r\n  onAddClick = (typ) => {\r\n    const cases = this.props.case || 1;\r\n    const { include, exclude } = this.state;\r\n    if (typ === 1) {\r\n      include.push({ type: \"contains\", url: \"\" });\r\n      this.setState({ include });\r\n    } else {\r\n      exclude.push({ type: \"contains\", url: \"\" });\r\n      this.setState({ exclude });\r\n    }\r\n    this.props.onChange(this.state);\r\n  };\r\n\r\n  onRemoveClick = (typ, index) => {\r\n    const cases = this.props.case || 1;\r\n    const include = this.state.include || [{ type: \"contains\", url: \"\" }];\r\n    const exclude = this.state.exclude || [{ type: \"contains\", url: \"\" }];\r\n    if (typ === 1) {\r\n      include.splice(index, 1);\r\n      this.setState({ include });\r\n    } else {\r\n      exclude.splice(index, 1);\r\n      this.setState({ exclude });\r\n    }\r\n    this.props.onChange(this.state);\r\n  };\r\n\r\n  renderInClude = (item, index) => {\r\n    const { include } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"col-4\">\r\n          <DropDown options={this.options} index={index} onChange={this.onDropDownChange1} value={item.type} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <TextInput index={index} typeN={1} onAddClick={this.onAddClick} onRemoveClick={this.onRemoveClick} size={include.length} onChange={this.onItemChange1} value={item.url} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  renderExclude = (item, index) => {\r\n    const { exclude } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"col-4\">\r\n          <DropDown options={this.options} index={index} onChange={this.onDropDownChange2} value={item.type} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <TextInput index={index} typeN={2} onAddClick={this.onAddClick} onRemoveClick={this.onRemoveClick} size={exclude.length} onChange={this.onItemChange2} value={item.url} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const include = this.state.include || [{ type: \"contains\", url: \"\" }];\r\n    const exclude = this.state.exclude || [{ type: \"contains\", url: \"\" }];\r\n    return (\r\n      <div>\r\n        <div className=\"label-text\">\r\n          URL Settings*\r\n          <Info text=\"Enter url for trigger Campaign\" />\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"label-text\">Include</div>\r\n          <div className=\"row\">{include.map(this.renderInClude)}</div>\r\n          <div class=\"w-100\"></div>\r\n          <div className=\"label-text\">Exclude</div>\r\n          {exclude.length ? (\r\n            <div className=\"row\">\r\n              {exclude.map(this.renderExclude)}\r\n              <div class=\"w-100\"></div>\r\n            </div>\r\n          ) : (\r\n            <div>You Need to Upgrade</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst TextInput = (props) => {\r\n  return (\r\n    <div className=\"code-input-block \">\r\n      <input type=\"text\" value={props.value} className=\"form-control\" onChange={(e) => props.onChange(props.index, e)} />\r\n      <div className=\"code-plusIcon\">\r\n        {props.size - 1 === props.index ? (\r\n          <i onClick={() => props.onAddClick(props.typeN)} className=\"fa fa-plus-circle\" aria-hidden=\"true\" />\r\n        ) : (\r\n          <i onClick={() => props.onRemoveClick(props.typeN, props.index)} className=\"fa fa-minus-circle\" aria-hidden=\"true\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/SpecialBonusOptin/Preview.js",["1532","1533","1534","1535","1536","1537","1538","1539","1540","1541"],"import React, { Component } from \"react\";\r\nimport Portal from \"../comman/Portal\";\r\nimport TimeCounter from \"../comman/TimeCounter\";\r\nimport \"./Preview.css\";\r\nexport class Preview extends Component {\r\n  setPosition() {\r\n    const element = document.getElementsByClassName(\"mck_optForm_container_HELLOBAR\")[0];\r\n    if (element && this.props.toolData.position !== \"bottom\") {\r\n      const body = document.getElementsByTagName(\"body\")[0];\r\n      body.style = \"margin-top:\" + element.offsetHeight + \"px;\";\r\n    } else if (element) {\r\n      const body = document.getElementsByTagName(\"body\")[0];\r\n      body.style = \"margin-bottom:\" + element.offsetHeight + \"px;\";\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { toolData } = this.props;\r\n    const { layout } = toolData;\r\n    if (layout === 0 || layout === 1) {\r\n      this.setPosition();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const body = document.getElementsByTagName(\"body\")[0];\r\n    body.style = \"\";\r\n  }\r\n\r\n  componentDidUpdate(newProps) {\r\n    const { toolData } = this.props;\r\n    const { position } = toolData;\r\n    if (position !== newProps.toolData.position) {\r\n      this.setPosition();\r\n    }\r\n  }\r\n  getcolor(element, key) {\r\n    let color = \"\";\r\n    element.forEach((value) => {\r\n      if (value.id === key) {\r\n        color = value.value;\r\n      }\r\n    });\r\n    return color;\r\n  }\r\n  render() {\r\n    const { toolData, onClose } = this.props;\r\n    const { layout } = toolData;\r\n    const bgColor = this.getcolor(toolData.style, \"backgound\");\r\n    const ctaBackGround = this.getcolor(toolData.style, \"ctabackgound\");\r\n    return (\r\n      <Portal defaultOpen={true} closeOnEsc={true} closeOnOutsideClick={true}>\r\n        <div style={getStyle(layout)}>\r\n          {layout === 0 ? <HelloBar {...toolData} ctaBackGround={ctaBackGround} /> : null}\r\n          {layout === 2 ? <ExitIntent onClose={onClose} bgColor={bgColor} ctaBackGround={ctaBackGround} {...toolData} /> : null}\r\n        </div>\r\n      </Portal>\r\n    );\r\n  }\r\n}\r\n\r\nconst HelloBar = function (props) {\r\n  const { text, bgColor, template, ctaBackGround, cta, isNameInput } = props;\r\n  return (\r\n    <div>\r\n      <div className={\"mck_row mck_optForm_container_HELLOBAR OPTIN_HELLOBAR-T\" + template}>\r\n        <div className=\"mck_col-md-4 mck_col-lg-4 mck_col-sm-12\">\r\n          <div className=\"mck_optForm_HELLOBAR\" dangerouslySetInnerHTML={{ __html: text }}></div>\r\n        </div>\r\n        {!isNameInput ? (\r\n          <div className=\"mck_col-md-4 mck_col-lg-4 mck_col-sm-8\">\r\n            <input placeholder=\"Email\" className=\"mck--optForm-input_HELLOBAR\" />\r\n          </div>\r\n        ) : (\r\n          <React.Fragment>\r\n            <div className=\"mck_col-md-2 mck_col-lg-2 mck_col-sm-8\">\r\n              <input placeholder=\"Email\" className=\"mck--optForm-input_HELLOBAR\" />\r\n            </div>\r\n            <div className=\"mck_col-md-2 mck_col-lg-2 mck_col-sm-8\">\r\n              <input placeholder=\"Name\" className=\"mck--optForm-input_HELLOBAR\" />\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n        <div className=\"mck_col-md-4 mck_col-lg-4 mck_col-sm-2\">\r\n          <div className=\"mck_optForm_cta_HELLOBAR\">\r\n            <a className=\"mck_BuyNowBtn_HELLOBAR\" style={{ backgroundColor: ctaBackGround }} dangerouslySetInnerHTML={{ __html: cta }}></a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ExitIntent = function (props) {\r\n  const { isBGIMG, bgImg, bgColor, noThanks, cta, subTitle, text, ctaBackgound, template, onClose, isNameInput } = props;\r\n  var background = isBGIMG\r\n    ? { backgroundImage: \"url('\" + bgImg + \"')\", backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\", backgroundPosition: \"center\", backgroundSize: \"cover\" }\r\n    : { backgroundColor: bgImg };\r\n  return (\r\n    <div class=\"mckoptin_exitIntent hide_club\">\r\n      <div class={\"mck_exit_club_handler mckoptin_exitIntent_wrapper MCK_OPTIN_EXIT_MAIN_T\" + template}>\r\n        <div class=\"MCK_OPTIN_exitbutton\">\r\n          <img class=\"mxk_exit_close\" onClick={onClose} src=\"http://d257yxqteot439.cloudfront.net/static/templateclub/exitbg/1/Close.png\" />\r\n        </div>\r\n        <div class=\"MCK_OPTIN_EXIT_T8\">\r\n          <div class=\"MCK_OPTIN_EXIT_CONTAINER_T9\">\r\n            <div class=\"MCK_OPTIN_EXIT_CONTAINER_ICON_T9\">\r\n              <img style={{ height: \"auto\", width: \"100%\" }} src=\"http://d257yxqteot439.cloudfront.net/static/templateclub/exitbg/9/Icon.png\" />\r\n            </div>\r\n            <div style={{ width: \"100%\", textAlign: \"center\", paddingTop: \"24px\" }} dangerouslySetInnerHTML={{ __html: text }}></div>\r\n          </div>\r\n          <div class=\"MCK_OPTINEXIT_SUBTEXT_T9\" dangerouslySetInnerHTML={{ __html: subTitle }}></div>\r\n          <div class=\"MCK_OPTIN_EXIT_HEADER_T9\">\r\n            <div>\r\n              <p>\r\n                <input type=\"text\" class=\"OPTION_FORM_INPUT_5f24fb36f2089c211c630ca1\" name=\"email\" placeholder=\"Email\" value=\"\" autofocus=\"\" />{\" \"}\r\n              </p>\r\n              <p>\r\n                <input type=\"text\" class=\"OPTION_FORM_INPUT_5f24fb36f2089c211c630ca1\" name=\"name\" value=\"\" placeholder=\"Name\" autofocus=\"\" />{\" \"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div class=\"MCK_OPTINEXIT_CTA_T9\">\r\n            <center>\r\n              <div dangerouslySetInnerHTML={{ __html: cta }}></div>\r\n            </center>\r\n          </div>\r\n          <div class=\"MCK_OPTIN_EXIT_nothanks\" dangerouslySetInnerHTML={{ __html: noThanks }}></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction getStyle(layout, isTop) {\r\n  if (layout === 2) return { position: \"fixed\", zIndex: \"1\", top: \"0px\", left: \"0px\", width: \"100%\", height: \"100%\", backgroundColor: \"#fff\" };\r\n  if (!isTop) return { position: \"fixed\", top: \"0px\", left: \"0px\", width: \"100%\" };\r\n  return { position: \"fixed\", bottom: \"0px\", left: \"0px\", width: \"100%\" };\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/SpecialBonusOptin/CTA.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/SpecialBonusOptin/Text.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/SpecialBonusOptin/SideBar.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ReviewEngin/Preview.js",["1542","1543","1544","1545"],"import React, { Component } from \"react\";\r\nimport Portal from \"../comman/Portal\";\r\nimport TimeCounter from \"../comman/TimeCounter\";\r\nimport \"./Preview.css\";\r\nexport class Preview extends Component {\r\n  setPosition() {\r\n    const element = document.getElementsByClassName(\"mck_optForm_container_HELLOBAR\")[0];\r\n    if (element && this.props.toolData.position !== \"bottom\") {\r\n      const body = document.getElementsByTagName(\"body\")[0];\r\n      body.style = \"margin-top:\" + element.offsetHeight + \"px;\";\r\n    } else if (element) {\r\n      const body = document.getElementsByTagName(\"body\")[0];\r\n      body.style = \"margin-bottom:\" + element.offsetHeight + \"px;\";\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { toolData } = this.props;\r\n    const { layout } = toolData;\r\n    if (layout === 0 || layout === 1) {\r\n      this.setPosition();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const body = document.getElementsByTagName(\"body\")[0];\r\n    body.style = \"\";\r\n  }\r\n\r\n  componentDidUpdate(newProps) {\r\n    const { toolData } = this.props;\r\n    const { position } = toolData;\r\n    if (position !== newProps.toolData.position) {\r\n      this.setPosition();\r\n    }\r\n  }\r\n  getcolor(element, key) {\r\n    let color = \"\";\r\n    element.forEach((value) => {\r\n      if (value.id === key) {\r\n        color = value.value;\r\n      }\r\n    });\r\n    return color;\r\n  }\r\n  render() {\r\n    const { toolData, onClose } = this.props;\r\n    const { layout } = toolData;\r\n    const bgColor = this.getcolor(toolData.style, \"backgound\");\r\n    const ctaBackGround = this.getcolor(toolData.style, \"ctabackgound\");\r\n    return (\r\n      <Portal defaultOpen={true} closeOnEsc={true} closeOnOutsideClick={true}>\r\n        <div style={getStyle(layout)}>\r\n          {layout === 0 ? <HelloBar {...toolData} bgColor={bgColor} ctaBackGround={ctaBackGround} /> : null}\r\n          {layout === 1 ? <HelloBarTimer {...toolData} bgColor={bgColor} ctaBackGround={ctaBackGround} /> : null}\r\n          {layout === 2 ? <ExitIntent onClose={onClose} bgColor={bgColor} ctaBackGround={ctaBackGround} {...toolData} /> : null}\r\n        </div>\r\n      </Portal>\r\n    );\r\n  }\r\n}\r\n\r\nconst HelloBar = function (props) {\r\n  const { text, bgColor, ctaBackGround, cta, isNameInput } = props;\r\n  return (\r\n    <div>\r\n      <div className=\"mck_row mck_optForm_container_HELLOBAR\" style={{ backgroundColor: bgColor }}>\r\n        <div className=\"mck_col-md-4 mck_col-lg-4 mck_col-sm-12\">\r\n          <div className=\"mck_optForm_HELLOBAR\" dangerouslySetInnerHTML={{ __html: text }}></div>\r\n        </div>\r\n        {!isNameInput ? (\r\n          <div className=\"mck_col-md-4 mck_col-lg-4 mck_col-sm-8\">\r\n            <input placeholder=\"Email\" className=\"mck--optForm-input_HELLOBAR\" />\r\n          </div>\r\n        ) : (\r\n          <React.Fragment>\r\n            <div className=\"mck_col-md-2 mck_col-lg-2 mck_col-sm-8\">\r\n              <input placeholder=\"Email\" className=\"mck--optForm-input_HELLOBAR\" />\r\n            </div>\r\n            <div className=\"mck_col-md-2 mck_col-lg-2 mck_col-sm-8\">\r\n              <input placeholder=\"Name\" className=\"mck--optForm-input_HELLOBAR\" />\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n        <div className=\"mck_col-md-4 mck_col-lg-4 mck_col-sm-2\">\r\n          <div className=\"mck_optForm_cta_HELLOBAR\">\r\n            <a className=\"mck_BuyNowBtn_HELLOBAR\" style={{ backgroundColor: ctaBackGround }} dangerouslySetInnerHTML={{ __html: cta }}></a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst HelloBarTimer = function (props) {\r\n  const { text, bgColor, ctaBackGround, cta, endDateTime, isNameInput } = props;\r\n  return (\r\n    <div>\r\n      <div className=\"mck_row mck_optForm_container_HELLOBAR\" style={{ backgroundColor: bgColor }}>\r\n        <div className=\"mck_col-md-4 mck_col-lg-4 mck_col-sm-12\">\r\n          <div className=\"mck_optForm_HELLOBAR\">\r\n            <TimeCounter timerType={\"normal\"} date={endDateTime} />\r\n          </div>\r\n        </div>\r\n        {!isNameInput ? (\r\n          <div className=\"mck_col-md-4 mck_col-lg-4 mck_col-sm-8\">\r\n            <input placeholder=\"Email\" className=\"mck--optForm-input_HELLOBAR\" />\r\n          </div>\r\n        ) : (\r\n          <React.Fragment>\r\n            <div className=\"mck_col-md-2 mck_col-lg-2 mck_col-sm-8\">\r\n              <input placeholder=\"Email\" className=\"mck--optForm-input_HELLOBAR\" />\r\n            </div>\r\n            <div className=\"mck_col-md-2 mck_col-lg-2 mck_col-sm-8\">\r\n              <input placeholder=\"Name\" className=\"mck--optForm-input_HELLOBAR\" />\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n        <div className=\"mck_col-md-4 mck_col-lg-4 mck_col-sm-2\">\r\n          <div className=\"mck_optForm_cta_HELLOBAR\">\r\n            <a className=\"mck_BuyNowBtn_HELLOBAR\" style={{ backgroundColor: ctaBackGround }} dangerouslySetInnerHTML={{ __html: cta }}></a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ExitIntent = function (props) {\r\n  const { isBGIMG, bgImg, bgColor, noThanks, cta, subTitle, text, ctaBackgound, onClose, isNameInput } = props;\r\n  var background = isBGIMG\r\n    ? { backgroundImage: \"url('\" + bgImg + \"')\", backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\", backgroundPosition: \"center\", backgroundSize: \"cover\" }\r\n    : { backgroundColor: bgImg };\r\n  return (\r\n    <div className=\"OPTIN_EXIT_INTENT\" style={background}>\r\n      <div id=\"OPTIN_EXIT_INTENT\">\r\n        <div className=\"OPTIN_EXIT_WRAPPER\">\r\n          <div id=\"OPTIN_EXIT_INTENT_close\" onClick={onClose}></div>\r\n          <div className=\"OPTIN_EXIT_CONTENT\" style={{ backgroundColor: bgColor }}>\r\n            <h2 dangerouslySetInnerHTML={{ __html: text }}></h2> <p style={{ marginBottom: \"20px !important\" }} dangerouslySetInnerHTML={{ __html: subTitle }}></p>\r\n            <form className=\"signup-form\" id=\"signup-form\">\r\n              {!isNameInput ? (\r\n                <p>\r\n                  <input type=\"text\" name=\"email\" value=\"\" autofocus />\r\n                </p>\r\n              ) : (\r\n                <React.Fragment>\r\n                  <p>\r\n                    <input type=\"text\" name=\"email\" value=\"\" autofocus />\r\n                  </p>\r\n                  <p>\r\n                    <input type=\"text\" name=\"name\" value=\"\" autofocus />\r\n                  </p>\r\n                </React.Fragment>\r\n              )}\r\n\r\n              <p className=\"button\" style={{ marginTop: \"20px\" }}>\r\n                <button type=\"button\" dangerouslySetInnerHTML={{ __html: cta }} style={{ backgroundColor: ctaBackgound }}></button>\r\n              </p>\r\n            </form>\r\n            <p className=\"footnote\" dangerouslySetInnerHTML={{ __html: noThanks }}></p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction getStyle(layout, isTop) {\r\n  if (layout === 2) return { position: \"fixed\", zIndex: \"1\", top: \"0px\", left: \"0px\", width: \"100%\", height: \"100%\", backgroundColor: \"#fff\" };\r\n  if (!isTop) return { position: \"fixed\", top: \"0px\", left: \"0px\", width: \"100%\" };\r\n  return { position: \"fixed\", bottom: \"0px\", left: \"0px\", width: \"100%\" };\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ReviewEngin/Code.js",["1546","1547","1548","1549","1550","1551","1552"],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ReviewEngin/Style.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ReviewEngin/Text.js",["1553","1554"],"import React, { Component } from \"react\";\r\nimport DropDown from \"../comman/DropDown\";\r\nexport default class Text extends Component {\r\n  state = {\r\n    items: this.props.items,\r\n    reviewName: \"\",\r\n    msg: \"\",\r\n    position: this.props.position,\r\n  };\r\n  options = [\r\n    { label: \"Left\", value: \"left\" },\r\n    { label: \"Right\", value: \"right\" },\r\n  ];\r\n\r\n  onDropDownChange = (value) => {\r\n    this.setState({ position: value }, () => {\r\n      this.props.onChange({ position: this.state.position });\r\n    });\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onAdd = () => {\r\n    const { reviewName, msg, items } = this.state;\r\n    if (reviewName != \"\" && msg != \"\") {\r\n      const newItems = [...items];\r\n      newItems.push({ name: reviewName, msg: msg });\r\n      this.setState({ items: newItems }, () => {\r\n        this.props.onChange({ items: this.state.items });\r\n      });\r\n    }\r\n  };\r\n\r\n  renderMsgList = (item, index) => {\r\n    return (\r\n      <tr className=\"\" key={index}>\r\n        <td>{item.name}</td>\r\n        <td>{item.msg}</td>\r\n        <td>\r\n          <span class=\"badge badge-primary badge-pill\">\r\n            <i onClick={() => this.removeListItem(index)} title=\"Remove\" className=\"fa fa-minus-circle\" aria-hidden=\"true\" />\r\n          </span>\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  removeListItem = (index) => {\r\n    const { items } = this.state;\r\n    const newItems = [...items];\r\n    newItems.splice(index, 1);\r\n    this.setState({ items: newItems }, () => {\r\n      this.props.onChange({ items: this.state.items });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { reviewName, msg, items, position } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Position*</div>\r\n          <DropDown options={this.options} onChange={this.onDropDownChange} value={position} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Name*</div>\r\n          <input type=\"text\" className=\"form-control\" name=\"reviewName\" value={reviewName} onChange={this.onChange} />\r\n        </div>\r\n\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Message*</div>\r\n          <input type=\"text\" className=\"form-control\" name=\"msg\" value={msg} onChange={this.onChange} />\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <button className=\"btn btn-sm btn-primary\" onClick={this.onAdd}>\r\n            Add\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <td>Name</td>\r\n                <td>Message</td>\r\n                <td>Action</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{items.map(this.renderMsgList)}</tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ReviewEngin/SideBar.js",["1555","1556"],"import React, { Component } from \"react\";\r\nimport { SideButton } from \"../layout/ToolLayout\";\r\nexport default class SideBar extends Component {\r\n  state = {\r\n    showItems: [],\r\n  };\r\n\r\n  render() {\r\n    const { activeTab } = this.props;\r\n    // const LAYOUT_IMG = activeTab === 1 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const TEXT_IMG = activeTab === 2 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const CTA_IMG = activeTab === 3 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const STYLE_IMG = activeTab === 4 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const TIG_IMG = activeTab === 5 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n    const TIME_IMG = activeTab === 6 ? \"sideButton activeSideButton\" : \"sideButton\";\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div onClick={() => this.props.onChangeActive(2)} className={TEXT_IMG}>\r\n          <SideButton class={\"fa fa-text-width\"} text=\"Text\" />\r\n        </div>\r\n        <div onClick={() => this.props.onChangeActive(4)} className={STYLE_IMG}>\r\n          <SideButton class={\"fa fa-paint-brush\"} text=\"Style\" />\r\n        </div>\r\n        <div onClick={() => this.props.onChangeActive(5)} className={TIG_IMG}>\r\n          <SideButton class={\"fa fa-code\"} text=\"Trigger\" />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Club/Preview.js",["1557","1558","1559","1560","1561","1562","1563","1564","1565","1566","1567","1568","1569","1570"],"import React, { Component, useEffect } from \"react\";\r\nimport Portal from \"../comman/Portal\";\r\nimport TimeCounter from \"../comman/TimeCounter\";\r\nimport \"./Preview.css\";\r\nimport \"./dynamicElements.css\";\r\nimport \"./clubOptinForm.css\";\r\nimport \"./centralTimer.css\";\r\nimport { parseImgUrl } from \"../Util\";\r\n// import FlipClock from \"./flipClock\";\r\nimport CircularClock from \"./circularClock\";\r\n\r\nexport class Preview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      endDateTime: props.toolData.endDateTime,\r\n      timeZone: props.toolData.timeZone\r\n    }\r\n    this.flipClockScriptCalled = this.flipClockScriptCalled.bind(this);\r\n  }\r\n\r\n  setPosition() {\r\n    const element = document.getElementsByClassName(\"mck_optForm_container_HELLOBAR\")[0];\r\n    if (element && this.props.toolData.position !== \"bottom\") {\r\n      const body = document.getElementsByTagName(\"body\")[0];\r\n      body.style = \"margin-top:\" + element.offsetHeight + \"px;\";\r\n    } else if (element) {\r\n      const body = document.getElementsByTagName(\"body\")[0];\r\n      body.style = \"margin-bottom:\" + element.offsetHeight + \"px;\";\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { toolData } = this.props;\r\n    const { layout, endDateTime, timeZone } = toolData;\r\n    \r\n    if(document.querySelector(\".timerClassdefault\")){\r\n      window.clockTimerChange(new Date(endDateTime ), timeZone);\r\n    }\r\n    \r\n    if(layout === 3){\r\n      this.flipClockScriptCalled();\r\n    }\r\n    if (layout === 0 || layout === 1) {\r\n      this.setPosition();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const body = document.getElementsByTagName(\"body\")[0];\r\n    body.style = \"\";\r\n  }\r\n\r\n  componentDidUpdate(newProps) {\r\n    const { toolData } = this.props;\r\n    const { position } = toolData;\r\n    if (position !== newProps.toolData.position) {\r\n      this.setPosition();\r\n    }\r\n  }\r\n  getcolor(element, key) {\r\n    let color = \"\";\r\n    element.forEach((value) => {\r\n      if (value.id === key) {\r\n        color = value.value;\r\n      }\r\n    });\r\n    return color;\r\n  }\r\n\r\n  flipClockScriptCalled = () => {\r\n    const { endDateTime, timeZone } = this.state;\r\n    var time = `\"${new Date(endDateTime)}\"`;\r\n\r\n    if(document.getElementById('flipclock-1')) {\r\n      window.FlipClock({ endDate: new Date(time), timeZone : timeZone}); \r\n    }\r\n\r\n    if(document.querySelector('.circular_timer')) {\r\n      window.CircularTimer(new Date(time), timeZone);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { toolData, onClose, templates, toolId, items } = this.props;\r\n    const { layout } = toolData;\r\n    let { template } = toolData;\r\n    if (toolId === 22) template = template + 10;\r\n\r\n    return (\r\n      <Portal defaultOpen={true} closeOnEsc={true} closeOnOutsideClick={true}>\r\n        {layout === 0 ? <HelloBar onClose={onClose} {...toolData} ps={templates[template]} /> : null}\r\n        {layout === 1 ? <HelloBarTimer onClose={onClose} {...toolData} ps={templates[template]} /> : null}\r\n        {layout === 2 ? <ExitIntent onClose={onClose} {...toolData} ps={templates[template]} /> : null}\r\n        {layout === 3 ? <CentralTimer onClose={onClose} {...toolData} ps={templates[template]} /> : null}\r\n        {layout === 4 ? <DynamicElement onClose={onClose} {...toolData} items={items} ps={templates[template]}/> : null}\r\n        {layout === 5 ? <HelloBarWithOptin onClose={onClose} {...toolData} ps={templates[template]}/> : null}\r\n        {layout === 6 ? <HelloBarTimerWithOptin onClose={onClose} {...toolData} ps={templates[template]}/> : null}\r\n        {layout === 7 ? <ExitIntentWithOptin onClose={onClose} {...toolData} ps={templates[template]}/> : null}\r\n      </Portal>\r\n    );\r\n  }\r\n}\r\n\r\nconst HelloBar = function (props) {\r\n  const { ps, logo, cta, text, subTitle } = props;\r\n  const newLogo = parseImgUrl(logo);  \r\n  let str = `${ps}`;\r\n  let bb = str.replace(`onclick=\"toggleclub();\"`, \"\");\r\n  let replaced = replaceItemByObj(bb, { MCKTEXT: text, MCKCTA: cta, MCKSUBTITLE: subTitle, MCKLOGO: newLogo });\r\n  return <div className={\"mck_clubPos-bottom mck_club_parent\"} onClick={(e) => props.onClose(e, \"close\")} dangerouslySetInnerHTML={{ __html: replaced }}></div>;\r\n};\r\n\r\nconst HelloBarTimer = function (props) {\r\n  const { ps, logo, cta, text, subTitle, noThanks, endDateTime } = props;\r\n  const newLogo = parseImgUrl(logo);\r\n  const timer = `<div class=\"MCK_CLUB_CLOCK\"><div class=\"hellobartimer3-timer timerClassdefault\"><li data-label=\"Days\">00<span>Days</span></li><li data-label=\"Hours\">03<span>Hours</span></li><li data-label=\"Minutes\">55<span>Minutes</span></li><li data-label=\"Seconds\">41<span>Seconds</span></li></div></div>`;\r\n  \r\n  let str = `${ps}`;\r\n  let bb = str.replace(`onclick=\"toggleclub();\"`, \"\");\r\n\r\n  let replaced = replaceItemByObj(bb, { \r\n    MCKTEXT: text, \r\n    MCKCTA: cta, \r\n    MCKSUBTITLE: subTitle, \r\n    MCKLOGO: newLogo, \r\n    MCKTIMER: timer, \r\n    MCKNOTHANKS: noThanks\r\n  });\r\n  return <div className={\"mck_clubPos-bottom mck_club_parent\"} onClick={(e) => props.onClose(e, \"close\")} dangerouslySetInnerHTML={{ __html: replaced }}></div>;\r\n};\r\n\r\nconst ExitIntent = function (props) {\r\n  const { ps, logo, cta, noThanks, subTitle, text, endDateTime } = props;\r\n  const newLogo = parseImgUrl(logo);\r\n  const timer = `<div class=\"MCK_CLUB_CLOCK\"><div class=\"hellobartimer3-timer timerClassdefault\"><li data-label=\"Days\">00<span>Days</span></li><li data-label=\"Hours\">03<span>Hours</span></li><li data-label=\"Minutes\">55<span>Minutes</span></li><li data-label=\"Seconds\">41<span>Seconds</span></li></div></div>`;\r\n  \r\n  let str = `${ps}`;\r\n  let bb = str.replace(`onclick=\"toggleclub();\"`, \"\");\r\n\r\n  let replaced = replaceItemByObj(bb, {\r\n    MCKTEXT: text,\r\n    MCKTEXT1: text,\r\n    MCKCTA: cta,\r\n    MCKSUBTITLE: subTitle,\r\n    MCKSUBTITLE1: subTitle,\r\n    MCKIMAGELOGO: newLogo,\r\n    MCKTIMER: timer,\r\n    MCKNOTHANKS: noThanks,\r\n  });\r\n  return <div className=\"mck_club_parent\" onClick={(e) => props.onClose(e, \"close\")} dangerouslySetInnerHTML={{ __html: replaced }}></div>;\r\n};\r\n\r\nconst CentralTimer = function (props) {\r\n  const { ps, template, timeZone, endDateTime } = props;\r\n  const timer = `<div class=\"MCK_CLUB_CLOCK\"><div class=\"timerClassdefault\"><li data-label=\"Days\">00<span>Days</span></li><li data-label=\"Hours\">03<span>Hours</span></li><li data-label=\"Minutes\">55<span>Minutes</span></li><li data-label=\"Seconds\">41<span>Seconds</span></li></div></div>`;\r\n  \r\n  let replaced = replaceItemByObj(ps, { \r\n    MCKTIMER: timer\r\n  });\r\n\r\n  return ( \r\n    <div className=\"mck_club_parent mckclub_exitIntent\" onClick={(e) => props.onClose(e, \"close\")}  dangerouslySetInnerHTML={{ __html: replaced }}></div> \r\n  )\r\n}\r\n\r\nconst DynamicElement = function (props) {\r\n  const { ps, items } = props;\r\n\r\n  return <div className=\"mck_club_parent\" onClick={(e) => props.onClose(e, \"close\")} dangerouslySetInnerHTML={{ __html: ps }}></div>;\r\n}\r\n\r\nconst HelloBarWithOptin = function (props) {\r\n  const { ps, logo, cta, subTitle, text } = props;\r\n  const newLogo = parseImgUrl(logo); \r\n  \r\n  let str = `${ps}`;\r\n  let bb = str.replace(`onclick=\"toggleclub();\"`, \"\");\r\n\r\n  let replaced = replaceItemByObj(bb, {\r\n    MCKTEXT: text,\r\n    MCKCTA: cta,\r\n    MCKSUBTITLE: subTitle,\r\n    MCKIMAGELOGO: newLogo,\r\n  });\r\n\r\n  return <div className=\"mck_club_parent\" onClick={(e) => props.onClose(e, \"close\")} dangerouslySetInnerHTML={{ __html: replaced }}></div>;\r\n}\r\n\r\nconst HelloBarTimerWithOptin = function (props) {\r\n  const { ps, logo, cta, noThanks, subTitle, text, endDateTime } = props;\r\n  const newLogo = parseImgUrl(logo); \r\n  const timer = `<div class=\"MCK_CLUB_CLOCK\"><div class=\"timerClassdefault\"><li data-label=\"Days\">00<span>Days</span></li><li data-label=\"Hours\">03<span>Hours</span></li><li data-label=\"Minutes\">55<span>Minutes</span></li><li data-label=\"Seconds\">41<span>Seconds</span></li></div></div>`;\r\n\r\n  let str = `${ps}`;\r\n  let bb = str.replace(`onclick=\"toggleclub();\"`, \"\");\r\n\r\n  let replaced = replaceItemByObj(bb, {\r\n    MCKTEXT: text,\r\n    MCKCTA: cta,\r\n    MCKSUBTITLE: subTitle,\r\n    MCKIMAGELOGO: newLogo,\r\n    MCKTIMER: timer\r\n  });\r\n\r\n  return <div className=\"mck_club_parent\" onClick={(e) => props.onClose(e, \"close\")} dangerouslySetInnerHTML={{ __html: replaced }}></div>;\r\n}\r\n\r\nconst ExitIntentWithOptin = function (props) {\r\n  const { ps, logo, cta, noThanks, subTitle, text, endDateTime } = props;\r\n  const newLogo = parseImgUrl(logo);\r\n  const timer = `<div class=\"MCK_CLUB_CLOCK\"><div class=\"timerClassdefault\"><li data-label=\"Days\">00<span>Days</span></li><li data-label=\"Hours\">03<span>Hours</span></li><li data-label=\"Minutes\">55<span>Minutes</span></li><li data-label=\"Seconds\">41<span>Seconds</span></li></div></div>`;\r\n\r\n  let str = `${ps}`;\r\n  let bb = str.replace(`onclick=\"toggleclub();\"`, \"\");\r\n\r\n  let replaced = replaceItemByObj(bb, {\r\n    MCKTEXT: text,\r\n    MCKTEXT1: text,\r\n    MCKCTA: cta,\r\n    MCKSUBTITLE: subTitle,\r\n    MCKSUBTITLE1: subTitle,\r\n    MCKIMAGELOGO: newLogo,\r\n    MCKTIMER: timer\r\n  });\r\n\r\n  return <div className=\"mck_club_parent\" onClick={(e) => props.onClose(e, \"close\")} dangerouslySetInnerHTML={{ __html: replaced }}></div>;\r\n}\r\n\r\n\r\nfunction getStyle(layout, isTop) {\r\n  if (layout === 2) return { position: \"fixed\", zIndex: \"1\", top: \"0px\", left: \"0px\", width: \"100%\", height: \"100%\", backgroundColor: \"#fff\" };\r\n  if (!isTop) return { position: \"fixed\", top: \"0px\", left: \"0px\", width: \"100%\" };\r\n  return { position: \"fixed\", bottom: \"0px\", left: \"0px\", width: \"100%\" };\r\n}\r\n\r\nfunction replaceItemByObj(str = \"\", obj) {\r\n  var keys = Object.keys(obj);\r\n  keys.forEach((e) => {\r\n    str = str.replace(e, obj[e]);\r\n  });\r\n  return str;\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Club/Time.js",["1571","1572"],"import React, { Component } from \"react\";\r\nimport DropDown from \"../comman/DropDown\";\r\nimport Datetime from \"react-datetime\";\r\nimport moment from \"moment\";\r\nimport Util from \"../Util\";\r\nimport { Info } from \"../comman/Info\";\r\n\r\nexport default class Timer extends Component {\r\n  _timerType = [\r\n    { label: \"Date and Time Based\", value: \"DATE_AND_TIME_BASED\" },\r\n    { label: \"Cookie Based\", value: \"COOKIE_BASED\" },\r\n    { label: \"Ever green\", value: \"EVERGREEN\" },\r\n  ];\r\n  _timeZone = Util.getTimeZoneList();\r\n  _whenTimeExp = [\r\n    { label: \"Hide the timer\", value: \"hide\" },\r\n    { label: \"Redirect the page\", value: \"redirect\" },\r\n    { label: \"Show static central time as 00:00\", value: \"static\" },\r\n  ];\r\n  state = {\r\n    timerType: this.props.timerType,\r\n    endDateTime: this.props.endDateTime,\r\n    timeZone: this.props.timeZone,\r\n    postExpiryAction: this.props.postExpiryAction,\r\n    redirectUrl: this.props.redirectUrl,\r\n    days: this.props.days,\r\n    hours: this.props.hours,\r\n    minutes: this.props.minutes,\r\n    seconds: this.props.seconds,\r\n  };\r\n\r\n  onDropDownChange = (value, name) => {\r\n    if (name == \"TIMETYPE\") {\r\n      this.setState({ timerType: value }, () => {\r\n        this.props.onChange({ timerType: this.state.timerType });\r\n      });\r\n    } else if (name == \"TIMEZONE\") {\r\n      this.setState({ timeZone: value }, () => {\r\n        this.props.onChange({ timeZone: this.state.timeZone });\r\n      });\r\n    } else {\r\n      this.setState({ postExpiryAction: value }, () => {\r\n        this.props.onChange({ postExpiryAction: this.state.postExpiryAction });\r\n      });\r\n    }\r\n  };\r\n\r\n  onTimerChange = (value) => {\r\n    value.set({ second: 0 });\r\n    const newValu = value.format(\"YYYY-MM-DD HH:mm:ss\");\r\n    this.setState({ endDateTime: newValu }, () => {\r\n      this.props.onChange({ endDateTime: this.state.endDateTime });\r\n    });\r\n  };\r\n\r\n  onTimeDataChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({ [name]: value }, () => {\r\n      this.props.onChange({ [name]: value });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { timerType, endDateTime, timeZone, postExpiryAction, redirectUrl, days = 0, hours = 0, minutes = 0, seconds = 0 } = this.state;\r\n    let inputProps = {\r\n      placeholder: \"Select Date & Time\",\r\n      autoComplete: \"off\",\r\n      readOnly: true\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            Timer Type* <Info text=\"Select timer type for different action\" />\r\n          </div>\r\n          <DropDown options={this._timerType} onChange={(value) => this.onDropDownChange(value, \"TIMETYPE\")} value={timerType} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n        {timerType === \"DATE_AND_TIME_BASED\" ? (\r\n          <div className=\"form-element\">\r\n            <div className=\"label-text\">\r\n              End Date and Time* <Info text=\"Select your end date & time of timer\" />\r\n            </div>\r\n            <Datetime inputProps={inputProps} defaultValue={moment(endDateTime)} onChange={this.onTimerChange} />\r\n          </div>\r\n        ) : null}\r\n        {timerType !== \"DATE_AND_TIME_BASED\" ? (\r\n          <div className=\"form-element\">\r\n            <div className=\"label-text\">\r\n              Timer* <Info text=\"Enter your time in hour, minute and second whenever you want to stop your timer\" />\r\n            </div>\r\n            <div className=\"col-12\" style={{ display: \"flex\" }}>\r\n              <div className=\"col-3\">DD*</div>\r\n              <div className=\"col-3\">HH*</div>\r\n              <div className=\"col-3\">MM*</div>\r\n              <div className=\"col-3\">SS*</div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\" style={{ display: \"flex\" }}>\r\n                <div className=\"col-3\">\r\n                  <input type=\"number\" min={0} max={30} className=\"form-control\" value={days} name=\"days\" onChange={this.onTimeDataChange} />\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <input type=\"number\" min={0} max={24} className=\"form-control\" value={hours} name=\"hours\" onChange={this.onTimeDataChange} />\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <input type=\"number\" min={0} max={60} className=\"form-control\" value={minutes} name=\"minutes\" onChange={this.onTimeDataChange} />\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <input type=\"number\" min={0} max={60} className=\"form-control\" value={seconds} name=\"seconds\" onChange={this.onTimeDataChange} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {timerType === \"DATE_AND_TIME_BASED\" ? (\r\n          <div className=\"form-element\">\r\n            <div className=\"label-text\">\r\n              Time Zone* <Info text=\"Select timezone to set the timer in particular timezone.\" />\r\n            </div>\r\n            <DropDown options={this._timeZone} onChange={(value) => this.onDropDownChange(value, \"TIMEZONE\")} value={timeZone} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n          </div>\r\n        ) : null}\r\n       {timerType!== 'EVERGREEN'  ? <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            When Time Expires* <Info text=\"Select the action when time is up.\" />\r\n          </div>\r\n          {/* <input type=\"text\" name=\"whenTimeExp\" className=\"form-control\" value={whenTimeExp} onChange={this.onChange} /> */}\r\n          <DropDown options={this._whenTimeExp} onChange={(value) => this.onDropDownChange(value, \"ACTION\")} value={postExpiryAction} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>:null}\r\n        {postExpiryAction === \"redirect\" ? (\r\n          <div className=\"form-element\">\r\n            <div className=\"label-text\">\r\n              Url* <Info text=\"Enter the url for redirect the page after the time is up.\" />\r\n            </div>\r\n            <input type=\"text\" name=\"redirectUrl\" className=\"form-control\" autoComplete=\"off\" value={redirectUrl} onChange={this.onTimeDataChange} />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Club/Code.js",["1573","1574","1575","1576","1577","1578","1579"],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Club/Style.js",["1580","1581","1582","1583","1584","1585","1586","1587","1588"],"import React, { Component } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { ColorSelector } from \"../layout/LayoutSelector\";\r\nimport Uploader from \"../comman/Uploader\";\r\nimport { Switch } from \"antd\";\r\nexport default class Style extends Component {\r\n  state = {\r\n    logo: this.props.logo,\r\n    scale: this.props.scale\r\n  };\r\n\r\n  onUploadDone = (image) => {\r\n    this.setState({ logo: image.image }, () => {\r\n      this.props.onChange({ logo: this.state.logo });\r\n    });\r\n  };\r\n\r\n\r\n  onReset = () => {\r\n    this.setState({ logo: \"\" }, () => {\r\n      this.props.onChange({ logo: this.state.logo });\r\n    });\r\n  };\r\n\r\n  onChangeActive = (e) => {\r\n    if(e.target.innerHTML === \"1x\") {\r\n      this.setState({ scale: \"1.1\" }, () => {\r\n        this.props.onChange({ scale: this.state.scale });\r\n      })\r\n    } else if(e.target.innerHTML === \"2x\") {\r\n      this.setState({ scale: \"1.2\" }, () => {\r\n        this.props.onChange({ scale: this.state.scale });\r\n      })\r\n    } else if(e.target.innerHTML === \"3x\") {\r\n      this.setState({ scale: \"1.3\" }, () => {\r\n        this.props.onChange({ scale: this.state.scale });\r\n      })\r\n    } else if(e.target.innerHTML === \"4x\") {\r\n      this.setState({ scale: \"1.4\" }, () => {\r\n        this.props.onChange({ scale: this.state.scale });\r\n      })\r\n    } else {\r\n      this.setState({ scale: \"1.5\" }, () => {\r\n        this.props.onChange({ scale: this.state.scale });\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    const { scale } = this.state;\r\n    const props = {\r\n      onUploadDone: this.onUploadDone,\r\n    };\r\n    return (\r\n      <div className=\"row \">\r\n        <div className=\"col-12 \">\r\n        {this.props.layout != 3 ?\r\n          <Uploader {...props} onReset={this.onReset} />:null\r\n        }\r\n          {this.props.layout === 3 ?\r\n          <div className=\"cz_timer_scale\">\r\n            <h3>Scale timer size</h3>\r\n            <ul onClick={this.onChangeActive}>\r\n              <li className={scale == \"1.1\" ? \"active\" : \"\"}>1x</li>\r\n              <li className={scale == \"1.2\" ? \"active\" : \"\"}>2x</li>\r\n              <li className={scale == \"1.3\" ? \"active\" : \"\"}>3x</li>\r\n              <li className={scale == \"1.4\" ? \"active\" : \"\"}>4x</li>\r\n              <li className={scale == \"1.5\" ? \"active\" : \"\"}>5x</li>\r\n            </ul>\r\n          </div>\r\n          : null\r\n          }\r\n        </div>\r\n        {/* ) : null} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Club/CTA.js",["1589","1590"],"import React, { Component } from \"react\";\r\nimport Editor from \"../comman/Editor\";\r\nimport DropDown from \"../comman/DropDown\";\r\nimport UrlInput from \"../comman/UrlInput\";\r\nimport { Info } from \"../comman/Info\";\r\nexport default class CTA extends Component {\r\n  options =  [\r\n    { label: \"Redirect\", value: \"redirect\" },\r\n    { label: \"Redirect in new tab\", value: \"redirectInNewTab\" }\r\n  ];\r\n\r\n  state = {\r\n    cta: this.props.cta,\r\n    ctaAction: this.props.ctaAction,\r\n    ctaRedirectUrl: this.props.ctaRedirectUrl,\r\n    layout: this.props.layout,\r\n    options: this.options\r\n  };\r\n\r\n  componentDidMount() {\r\n    if(this.state.layout !== (5 || 6 || 7)) {\r\n      this.options.push({ label: \"Scroll\", value: \"scroll\" }); \r\n      this.setState({ options: this.options });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    let value = e.target.value;\r\n    this.setState({ cta: value }, () => {\r\n      this.props.onChange({ cta: this.state.cta });\r\n    });\r\n  };\r\n\r\n  onCtaAction = (value) => {\r\n    this.setState({ ctaAction: value }, () => {\r\n      this.props.onChange({ ctaAction: this.state.ctaAction });\r\n    });\r\n  };\r\n\r\n  onActionChange = (e) => {\r\n    this.setState({ ctaRedirectUrl: e.target.value }, () => {\r\n      this.props.onChange({ ctaRedirectUrl: this.state.ctaRedirectUrl });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { cta, ctaAction, ctaRedirectUrl, options } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">CTA*</div>\r\n          <input type=\"text\" className=\"form-control\" name=\"cta\" value={cta} onChange={this.onChange} />\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            CTA Action* <Info text=\"Select CTA action type\" />\r\n          </div>\r\n          <DropDown options={options} onChange={this.onCtaAction} value={ctaAction} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n        <div className=\"form-element\">\r\n          {ctaAction === \"scroll\" ? (\r\n            <div className=\"label-text\">\r\n              Scroll To* <Info text=\"Follow Select Scroll Position by bookmark\" />\r\n            </div>\r\n          ) : (\r\n            <div className=\"label-text\">\r\n              Redirect URL* <Info text=\"Enter URL to trigger on CTA action button\" />\r\n            </div>\r\n          )}\r\n          <input type=\"text\" name=\"redirectUrl\" className=\"form-control\" value={ctaRedirectUrl} onChange={this.onActionChange} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Club/Text.js",["1591"],"import React, { Component } from \"react\";\r\nimport UrlInput from \"../comman/UrlInput\";\r\nimport { SideButton } from \"../layout/ToolLayout\";\r\n\r\nexport default class Text extends Component {\r\n  state = {\r\n    text: this.props.text,\r\n    noThanks: this.props.noThanks,\r\n    subTitle: this.props.subTitle,\r\n    templateIndex: this.props.selected,\r\n    items : this.props.items,\r\n    showItems : []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.addShowListItemsList();\r\n  }\r\n\r\n  onChange = (e) => {\r\n    let value = e.target.value;\r\n    this.setState({ text: value }, () => {\r\n      this.props.onChange({ text: this.state.text });\r\n    });\r\n  };\r\n\r\n  onChange1 = (e) => {\r\n    let value = e.target.value;\r\n    this.setState({ subTitle: value }, () => {\r\n      this.props.onChange({ subTitle: this.state.subTitle });\r\n    });\r\n  };\r\n  onChange2 = (e) => {\r\n    let value = e.target.value;\r\n    this.setState({ noThanks: value }, () => {\r\n      this.props.onChange({ noThanks: this.state.noThanks });\r\n    });\r\n  };\r\n\r\n  onTextChange = (value, index, field) => {\r\n    let { items } = this.state;\r\n    items[index][field] = value;\r\n    this.setState({ items });\r\n    this.props.onChange({ items });\r\n  };\r\n\r\n  addShowListItemsList = () => {\r\n    const { templateIndex } = this.state;\r\n    let index;\r\n    if( templateIndex === 0 || templateIndex === 1 || templateIndex === 12 ) {\r\n      index = [1, 12, 7, 3, 2];\r\n      this.setState({ showItems: index})\r\n    } else if( templateIndex === 2 || templateIndex === 3 || templateIndex === 11 ) {\r\n      index = [7, 12, 11, 10, 5, 6];\r\n      this.setState({ showItems: index})\r\n    } else if( templateIndex === 4 || templateIndex === 6 ) {\r\n      index = [12, 2, 3, 4, 7, 6];\r\n      this.setState({ showItems: index})\r\n    } else if( templateIndex === 5 || templateIndex === 9 || templateIndex === 10 ) {\r\n      index = [4, 12, 11, 10, 7, 8, 3];\r\n      this.setState({ showItems: index})\r\n    } else if( templateIndex === 7 || templateIndex === 8 || templateIndex === 13 ) {\r\n      index = [12, 7, 9, 2, 1];\r\n      this.setState({ showItems: index})\r\n    } else if( templateIndex === 14 ) {\r\n      index = [2, 3, 4, 7, 6];\r\n      this.setState({ showItems: index})\r\n    } else if( templateIndex === 15 || templateIndex === 16) {\r\n      index = [7, 1, 8, 12, 5];\r\n      this.setState({ showItems: index})\r\n    }\r\n  }\r\n\r\n  renderList = (item, index) => {\r\n    const { showItems } = this.state;\r\n    return (\r\n      showItems.length ? showItems.map(el => { \r\n        return (el === item.index ?\r\n        <div className=\"col-6\" key={index}>\r\n          <div className=\"cz_dynamic_element_box\">\r\n            <div className=\"form-element\">\r\n              <div className=\"label-text\">{item.text} \r\n                <span class=\"sidebar-img\">\r\n                  <i class={item.icon}></i>\r\n                </span>\r\n              </div>\r\n              <UrlInput type=\"text\" isTab={false} className=\"form-control\" onChange={(e) => this.onTextChange(e.target.value, index, \"link\")} value={item.link} />\r\n            </div>\r\n          </div>\r\n        </div> : null )\r\n      }) : null \r\n    )\r\n  };\r\n\r\n  render() {\r\n    const { text, subTitle, noThanks, templateIndex, items } = this.state;\r\n    return ( this.props.layout === 4 ? \r\n      <div className=\"row\">{items.map(this.renderList)}</div>\r\n      :\r\n      <div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Text*</div>\r\n          <input className=\"form-control\" type=\"text\" name=\"text\" value={text} onChange={this.onChange} />\r\n        </div>\r\n          <React.Fragment>\r\n          {(this.props.layout === 0 && templateIndex !== 2) || (this.props.layout === 1 && templateIndex !== 2) || this.props.layout === 2 || this.props.layout === 6 || this.props.layout === 5 || this.props.layout === 7 ? \r\n            <div className=\"form-element\">\r\n              <div className=\"label-text\">Sub Title*</div>\r\n              <input className=\"form-control\" type=\"text\" value={subTitle} name=\"subTitle\" onChange={this.onChange1} />\r\n            </div> : null\r\n          }\r\n          {(this.props.layout === 2 && (templateIndex === 7 || templateIndex === 8 || templateIndex === 9)) || (this.props.layout === 1 && templateIndex === 2) ?\r\n            <div className=\"form-element\">\r\n              <div className=\"label-text\">No Thanks*</div>\r\n              <input className=\"form-control\" type=\"text\" value={noThanks} name=\"noThanks\" onChange={this.onChange2} />\r\n            </div> : null\r\n          }\r\n        </React.Fragment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Club/SideBar.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/BonusUpsell/Style.js",["1592","1593"],"import React, { Component } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\n\r\nimport \"react-color-picker/index.css\";\r\nimport { ColorSelector } from \"../layout/LayoutSelector\";\r\nexport default class Style extends Component {\r\n  state = {\r\n    elements: this.props.elements,\r\n    selected: this.props.selected,\r\n  };\r\n\r\n  onClickElement = (i) => {\r\n    const { cases } = this.props;\r\n    this.setState({ selected: i });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const { cases } = this.props;\r\n    this.props.onChange(cases, this.state);\r\n  }\r\n\r\n  onColorChange = (color) => {\r\n    const { cases } = this.props;\r\n    const { elements, selected } = this.state;\r\n    elements[selected].color = color.hex;\r\n    this.setState({ elements });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  renderElements = (ele, i) => {\r\n    const { selected } = this.state;\r\n    const selectedDiv = selected === i ? \"element-div-active\" : \"\";\r\n    const selectedText = selected === i ? \"element-text-active\" : \"\";\r\n    const { layout } = this.props;\r\n    let dTemp = false;\r\n    if (layout !== 0 && ele.name == \"arrowBackground\") dTemp = true;\r\n    if (layout !== 2 && ele.name == \"timerBox\") dTemp = true;\r\n    return (\r\n      <div className={\"element-list\"} style={dTemp ? { display: \"none\" } : {}} onClick={() => this.onClickElement(i)}>\r\n        <div className={\"element-list-text \" + selectedText}>{ele.text}</div>\r\n        <div className={\"element-list-div \" + selectedDiv} style={{ backgroundColor: ele.color }}></div>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    const { elements, selected } = this.state;\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-4\">\r\n          {elements.map((e, i) => (\r\n            <ColorSelector {...e} selectedIndex={selected} onClick={this.onClickElement} index={i} key={i} />\r\n          ))}\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <SketchPicker defaultValue=\"#452135\" color={elements[selected].color} onChangeComplete={this.onColorChange} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/BonusUpsell/Image.js",["1594"],"import React, { Component } from \"react\";\r\nimport Uploader from \"../comman/Uploader\";\r\nimport Util from \"../Util\";\r\nexport default class ImageUp extends Component {\r\n  state = { image: this.props.image };\r\n  componentWillMount() {\r\n    if (this.props.image !== \"\") this.state.disabled = true;\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.onChange(2, this.state.image);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (Util.isRedirected) {\r\n      Util.isRedirected = false;\r\n      this.setState({ image: nextProps.image, disabled: true });\r\n    }\r\n  }\r\n  onUploadDone = (imageICON) => {\r\n    this.setState({ image: imageICON.image, disabled: true });\r\n    this.props.onChange(2, imageICON.image);\r\n  };\r\n\r\n  onReset = () => {\r\n    this.setState({ image: \"\" }, () => {\r\n      this.props.onChange(2, this.state.image);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const props = {\r\n      onUploadDone: this.onUploadDone,\r\n    };\r\n    return (\r\n      <div className=\"col-12\">\r\n        <Uploader {...props} onReset={this.onReset} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/BonusUpsell/Text.js",["1595"],"import React, { Component } from \"react\";\r\nimport DropDown from \"../comman/DropDown\";\r\nimport Editor from \"../comman/Editor\";\r\nimport { Input } from \"antd\";\r\nexport default class Text extends Component {\r\n  state = {\r\n    url: this.props.url,\r\n    footer: this.props.footer,\r\n    title: this.props.title,\r\n  };\r\n  onUrlChange = (e) => {\r\n    this.setState({ url: e.target.value }, () => {\r\n      this.props.onChange(1, this.state);\r\n    });\r\n  };\r\n\r\n  onTitleChange = (e) => {\r\n    this.setState({ title: e.target.value }, () => {\r\n      this.props.onChange(1, this.state);\r\n    });\r\n  };\r\n\r\n  onFooterChange = (value) => {\r\n    this.setState({ footer: value }, () => {\r\n      this.props.onChange(1, this.state);\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.onChange(1, this.state);\r\n  }\r\n\r\n  render() {\r\n    const { url, footer, title } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Url*</div>\r\n          <Input name=\"url\" onChange={this.onUrlChange} value={url} />\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Title*</div>\r\n          <Input name=\"title\" onChange={this.onTitleChange} value={title} />\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Footer Text</div>\r\n          <Editor value={footer} name=\"textBody\" onChange={this.onFooterChange} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/BonusUpsell/SideImage.js",["1596"],"import React, { Component } from \"react\";\r\nimport Uploader from \"../comman/Uploader\";\r\nimport Util from \"../Util\";\r\nexport default class SideImage extends Component {\r\n  state = { image: this.props.image };\r\n  componentWillMount() {\r\n    if (this.props.image !== \"\") this.state.disabled = true;\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.onChange(3, this.state.image);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (Util.isRedirected) {\r\n      Util.isRedirected = false;\r\n      this.setState({ image: nextProps.image, disabled: true });\r\n    }\r\n  }\r\n  onUploadDone = (imageICON) => {\r\n    this.setState({ image: imageICON.image, disabled: true });\r\n    this.props.onChange(3, imageICON.image);\r\n  };\r\n\r\n  onReset = () => {\r\n    this.setState({ image: \"\" }, () => {\r\n      this.props.onChange(3, this.state.image);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const props = {\r\n      onUploadDone: this.onUploadDone,\r\n    };\r\n    return (\r\n      <div className=\"col-12\">\r\n        <Uploader {...props} onReset={this.onReset} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/FlipClock.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Emoji.js",[],"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Club/circularClock.js",[],{"ruleId":"1597","severity":1,"message":"1598","line":5,"column":13,"nodeType":"1599","messageId":"1600","endLine":5,"endColumn":26},{"ruleId":"1597","severity":1,"message":"1601","line":2,"column":50,"nodeType":"1599","messageId":"1600","endLine":2,"endColumn":58},{"ruleId":"1597","severity":1,"message":"1602","line":12,"column":10,"nodeType":"1599","messageId":"1600","endLine":12,"endColumn":17},{"ruleId":"1597","severity":1,"message":"1603","line":41,"column":3,"nodeType":"1599","messageId":"1600","endLine":41,"endColumn":13},{"ruleId":"1597","severity":1,"message":"1604","line":51,"column":3,"nodeType":"1599","messageId":"1600","endLine":51,"endColumn":11},{"ruleId":"1597","severity":1,"message":"1605","line":56,"column":3,"nodeType":"1599","messageId":"1600","endLine":56,"endColumn":17},{"ruleId":"1606","severity":1,"message":"1607","line":162,"column":33,"nodeType":"1608","messageId":"1609","endLine":162,"endColumn":35},{"ruleId":"1610","severity":1,"message":"1611","line":42,"column":80,"nodeType":"1608","messageId":"1612","endLine":42,"endColumn":81},{"ruleId":"1610","severity":1,"message":"1611","line":67,"column":81,"nodeType":"1608","messageId":"1612","endLine":67,"endColumn":82},{"ruleId":"1597","severity":1,"message":"1613","line":1,"column":28,"nodeType":"1599","messageId":"1600","endLine":1,"endColumn":37},{"ruleId":"1606","severity":1,"message":"1607","line":49,"column":38,"nodeType":"1608","messageId":"1609","endLine":49,"endColumn":40},{"ruleId":"1614","severity":1,"message":"1615","line":601,"column":83,"nodeType":"1616","messageId":"1617","endLine":601,"endColumn":84,"suggestions":"1618"},{"ruleId":"1614","severity":1,"message":"1619","line":601,"column":85,"nodeType":"1616","messageId":"1617","endLine":601,"endColumn":86,"suggestions":"1620"},{"ruleId":"1606","severity":1,"message":"1607","line":603,"column":35,"nodeType":"1608","messageId":"1609","endLine":603,"endColumn":37},{"ruleId":"1614","severity":1,"message":"1621","line":607,"column":84,"nodeType":"1616","messageId":"1617","endLine":607,"endColumn":85,"suggestions":"1622"},{"ruleId":"1623","severity":1,"message":"1624","line":696,"column":9,"nodeType":"1599","messageId":"1625","endLine":696,"endColumn":12},{"ruleId":"1623","severity":1,"message":"1626","line":697,"column":14,"nodeType":"1599","messageId":"1625","endLine":697,"endColumn":19},{"ruleId":"1606","severity":1,"message":"1607","line":704,"column":11,"nodeType":"1608","messageId":"1609","endLine":704,"endColumn":13},{"ruleId":"1597","severity":1,"message":"1627","line":6,"column":93,"nodeType":"1599","messageId":"1600","endLine":6,"endColumn":102},{"ruleId":"1597","severity":1,"message":"1628","line":131,"column":13,"nodeType":"1599","messageId":"1600","endLine":131,"endColumn":22},{"ruleId":"1629","severity":1,"message":"1630","line":152,"column":5,"nodeType":"1631","endLine":152,"endColumn":12,"suggestions":"1632"},{"ruleId":"1629","severity":1,"message":"1633","line":158,"column":5,"nodeType":"1631","endLine":158,"endColumn":15,"suggestions":"1634"},{"ruleId":"1635","severity":1,"message":"1636","line":170,"column":11,"nodeType":"1637","endLine":170,"endColumn":58},{"ruleId":"1635","severity":1,"message":"1636","line":174,"column":11,"nodeType":"1637","endLine":174,"endColumn":82},{"ruleId":"1635","severity":1,"message":"1636","line":182,"column":13,"nodeType":"1637","endLine":182,"endColumn":51},{"ruleId":"1635","severity":1,"message":"1636","line":187,"column":13,"nodeType":"1637","endLine":187,"endColumn":51},{"ruleId":"1629","severity":1,"message":"1638","line":216,"column":5,"nodeType":"1631","endLine":216,"endColumn":16,"suggestions":"1639"},{"ruleId":"1635","severity":1,"message":"1636","line":222,"column":11,"nodeType":"1637","endLine":222,"endColumn":80},{"ruleId":"1629","severity":1,"message":"1640","line":252,"column":5,"nodeType":"1631","endLine":252,"endColumn":10,"suggestions":"1641"},{"ruleId":"1629","severity":1,"message":"1630","line":258,"column":5,"nodeType":"1631","endLine":258,"endColumn":12,"suggestions":"1642"},{"ruleId":"1629","severity":1,"message":"1633","line":264,"column":5,"nodeType":"1631","endLine":264,"endColumn":15,"suggestions":"1643"},{"ruleId":"1629","severity":1,"message":"1638","line":270,"column":5,"nodeType":"1631","endLine":270,"endColumn":16,"suggestions":"1644"},{"ruleId":"1635","severity":1,"message":"1636","line":275,"column":11,"nodeType":"1637","endLine":275,"endColumn":58},{"ruleId":"1635","severity":1,"message":"1636","line":279,"column":11,"nodeType":"1637","endLine":279,"endColumn":82},{"ruleId":"1635","severity":1,"message":"1636","line":287,"column":13,"nodeType":"1637","endLine":287,"endColumn":51},{"ruleId":"1635","severity":1,"message":"1636","line":292,"column":13,"nodeType":"1637","endLine":292,"endColumn":51},{"ruleId":"1635","severity":1,"message":"1636","line":297,"column":13,"nodeType":"1637","endLine":297,"endColumn":51},{"ruleId":"1635","severity":1,"message":"1636","line":303,"column":13,"nodeType":"1637","endLine":303,"endColumn":51},{"ruleId":"1629","severity":1,"message":"1630","line":332,"column":5,"nodeType":"1631","endLine":332,"endColumn":12,"suggestions":"1645"},{"ruleId":"1629","severity":1,"message":"1646","line":338,"column":5,"nodeType":"1631","endLine":338,"endColumn":10,"suggestions":"1647"},{"ruleId":"1629","severity":1,"message":"1633","line":344,"column":5,"nodeType":"1631","endLine":344,"endColumn":15,"suggestions":"1648"},{"ruleId":"1629","severity":1,"message":"1649","line":350,"column":5,"nodeType":"1631","endLine":350,"endColumn":15,"suggestions":"1650"},{"ruleId":"1635","severity":1,"message":"1636","line":355,"column":11,"nodeType":"1637","endLine":355,"endColumn":58},{"ruleId":"1635","severity":1,"message":"1636","line":359,"column":11,"nodeType":"1637","endLine":359,"endColumn":82},{"ruleId":"1606","severity":1,"message":"1607","line":387,"column":59,"nodeType":"1608","messageId":"1609","endLine":387,"endColumn":61},{"ruleId":"1597","severity":1,"message":"1651","line":3,"column":19,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":25},{"ruleId":"1597","severity":1,"message":"1652","line":4,"column":25,"nodeType":"1599","messageId":"1600","endLine":4,"endColumn":34},{"ruleId":"1597","severity":1,"message":"1653","line":7,"column":8,"nodeType":"1599","messageId":"1600","endLine":7,"endColumn":9},{"ruleId":"1597","severity":1,"message":"1654","line":55,"column":11,"nodeType":"1599","messageId":"1600","endLine":55,"endColumn":17},{"ruleId":"1655","severity":1,"message":"1656","line":65,"column":11,"nodeType":"1637","endLine":65,"endColumn":824},{"ruleId":"1657","severity":1,"message":"1658","line":65,"column":19,"nodeType":"1616","messageId":"1659","endLine":65,"endColumn":823},{"ruleId":"1597","severity":1,"message":"1660","line":96,"column":13,"nodeType":"1599","messageId":"1600","endLine":96,"endColumn":32},{"ruleId":"1597","severity":1,"message":"1661","line":97,"column":11,"nodeType":"1599","messageId":"1600","endLine":97,"endColumn":18},{"ruleId":"1635","severity":1,"message":"1636","line":112,"column":17,"nodeType":"1637","endLine":112,"endColumn":94},{"ruleId":"1635","severity":1,"message":"1636","line":114,"column":23,"nodeType":"1637","endLine":114,"endColumn":51},{"ruleId":"1662","severity":1,"message":"1663","line":138,"column":13,"nodeType":"1637","messageId":"1664","endLine":138,"endColumn":65,"fix":"1665"},{"ruleId":"1662","severity":1,"message":"1663","line":143,"column":13,"nodeType":"1637","messageId":"1664","endLine":143,"endColumn":65,"fix":"1666"},{"ruleId":"1655","severity":1,"message":"1667","line":166,"column":19,"nodeType":"1637","endLine":166,"endColumn":42},{"ruleId":"1597","severity":1,"message":"1628","line":52,"column":13,"nodeType":"1599","messageId":"1600","endLine":52,"endColumn":22},{"ruleId":"1597","severity":1,"message":"1668","line":52,"column":24,"nodeType":"1599","messageId":"1600","endLine":52,"endColumn":30},{"ruleId":"1629","severity":1,"message":"1630","line":68,"column":5,"nodeType":"1631","endLine":68,"endColumn":12,"suggestions":"1669"},{"ruleId":"1629","severity":1,"message":"1633","line":74,"column":5,"nodeType":"1631","endLine":74,"endColumn":15,"suggestions":"1670"},{"ruleId":"1635","severity":1,"message":"1636","line":83,"column":15,"nodeType":"1637","endLine":83,"endColumn":87},{"ruleId":"1597","severity":1,"message":"1671","line":20,"column":3,"nodeType":"1599","messageId":"1600","endLine":20,"endColumn":8},{"ruleId":"1597","severity":1,"message":"1672","line":26,"column":3,"nodeType":"1599","messageId":"1600","endLine":26,"endColumn":8},{"ruleId":"1606","severity":1,"message":"1673","line":69,"column":27,"nodeType":"1608","messageId":"1609","endLine":69,"endColumn":29},{"ruleId":"1606","severity":1,"message":"1673","line":69,"column":71,"nodeType":"1608","messageId":"1609","endLine":69,"endColumn":73},{"ruleId":"1597","severity":1,"message":"1674","line":76,"column":13,"nodeType":"1599","messageId":"1600","endLine":76,"endColumn":19},{"ruleId":"1606","severity":1,"message":"1607","line":81,"column":23,"nodeType":"1608","messageId":"1609","endLine":81,"endColumn":25},{"ruleId":"1606","severity":1,"message":"1607","line":83,"column":23,"nodeType":"1608","messageId":"1609","endLine":83,"endColumn":25},{"ruleId":"1606","severity":1,"message":"1607","line":85,"column":23,"nodeType":"1608","messageId":"1609","endLine":85,"endColumn":25},{"ruleId":"1606","severity":1,"message":"1607","line":87,"column":23,"nodeType":"1608","messageId":"1609","endLine":87,"endColumn":25},{"ruleId":"1606","severity":1,"message":"1607","line":89,"column":23,"nodeType":"1608","messageId":"1609","endLine":89,"endColumn":25},{"ruleId":"1606","severity":1,"message":"1607","line":91,"column":23,"nodeType":"1608","messageId":"1609","endLine":91,"endColumn":25},{"ruleId":"1606","severity":1,"message":"1607","line":93,"column":23,"nodeType":"1608","messageId":"1609","endLine":93,"endColumn":25},{"ruleId":"1606","severity":1,"message":"1607","line":95,"column":23,"nodeType":"1608","messageId":"1609","endLine":95,"endColumn":25},{"ruleId":"1606","severity":1,"message":"1607","line":97,"column":23,"nodeType":"1608","messageId":"1609","endLine":97,"endColumn":25},{"ruleId":"1606","severity":1,"message":"1607","line":99,"column":23,"nodeType":"1608","messageId":"1609","endLine":99,"endColumn":25},{"ruleId":"1606","severity":1,"message":"1607","line":101,"column":23,"nodeType":"1608","messageId":"1609","endLine":101,"endColumn":25},{"ruleId":"1597","severity":1,"message":"1675","line":120,"column":57,"nodeType":"1599","messageId":"1600","endLine":120,"endColumn":66},{"ruleId":"1606","severity":1,"message":"1607","line":145,"column":13,"nodeType":"1608","messageId":"1609","endLine":145,"endColumn":15},{"ruleId":"1606","severity":1,"message":"1607","line":149,"column":14,"nodeType":"1608","messageId":"1609","endLine":149,"endColumn":16},{"ruleId":"1606","severity":1,"message":"1607","line":159,"column":15,"nodeType":"1608","messageId":"1609","endLine":159,"endColumn":17},{"ruleId":"1635","severity":1,"message":"1636","line":189,"column":27,"nodeType":"1637","endLine":189,"endColumn":73},{"ruleId":"1635","severity":1,"message":"1636","line":189,"column":76,"nodeType":"1637","endLine":189,"endColumn":166},{"ruleId":"1635","severity":1,"message":"1636","line":201,"column":19,"nodeType":"1637","endLine":201,"endColumn":93},{"ruleId":"1635","severity":1,"message":"1636","line":221,"column":13,"nodeType":"1637","endLine":221,"endColumn":70},{"ruleId":"1597","severity":1,"message":"1676","line":13,"column":9,"nodeType":"1599","messageId":"1600","endLine":13,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1677","line":117,"column":90,"nodeType":"1599","messageId":"1600","endLine":117,"endColumn":100},{"ruleId":"1635","severity":1,"message":"1636","line":131,"column":21,"nodeType":"1637","endLine":131,"endColumn":73},{"ruleId":"1635","severity":1,"message":"1636","line":147,"column":21,"nodeType":"1637","endLine":147,"endColumn":77},{"ruleId":"1635","severity":1,"message":"1636","line":163,"column":21,"nodeType":"1637","endLine":163,"endColumn":83},{"ruleId":"1635","severity":1,"message":"1636","line":185,"column":19,"nodeType":"1637","endLine":185,"endColumn":85},{"ruleId":"1635","severity":1,"message":"1636","line":196,"column":19,"nodeType":"1637","endLine":196,"endColumn":85},{"ruleId":"1635","severity":1,"message":"1636","line":207,"column":19,"nodeType":"1637","endLine":207,"endColumn":85},{"ruleId":"1597","severity":1,"message":"1678","line":267,"column":7,"nodeType":"1599","messageId":"1600","endLine":267,"endColumn":11},{"ruleId":"1629","severity":1,"message":"1679","line":270,"column":22,"nodeType":"1599","endLine":270,"endColumn":33},{"ruleId":"1606","severity":1,"message":"1607","line":277,"column":20,"nodeType":"1608","messageId":"1609","endLine":277,"endColumn":22},{"ruleId":"1606","severity":1,"message":"1607","line":282,"column":14,"nodeType":"1608","messageId":"1609","endLine":282,"endColumn":16},{"ruleId":"1606","severity":1,"message":"1607","line":286,"column":18,"nodeType":"1608","messageId":"1609","endLine":286,"endColumn":20},{"ruleId":"1606","severity":1,"message":"1607","line":291,"column":18,"nodeType":"1608","messageId":"1609","endLine":291,"endColumn":20},{"ruleId":"1597","severity":1,"message":"1680","line":338,"column":10,"nodeType":"1599","messageId":"1600","endLine":338,"endColumn":26},{"ruleId":"1681","severity":1,"message":"1682","line":340,"column":20,"nodeType":"1683","messageId":"1684","endLine":340,"endColumn":31},{"ruleId":"1681","severity":1,"message":"1682","line":341,"column":19,"nodeType":"1683","messageId":"1684","endLine":341,"endColumn":30},{"ruleId":"1606","severity":1,"message":"1607","line":362,"column":21,"nodeType":"1608","messageId":"1609","endLine":362,"endColumn":23},{"ruleId":"1606","severity":1,"message":"1607","line":55,"column":31,"nodeType":"1608","messageId":"1609","endLine":55,"endColumn":33},{"ruleId":"1597","severity":1,"message":"1685","line":4,"column":8,"nodeType":"1599","messageId":"1600","endLine":4,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1686","line":14,"column":3,"nodeType":"1599","messageId":"1600","endLine":14,"endColumn":22},{"ruleId":"1597","severity":1,"message":"1687","line":17,"column":3,"nodeType":"1599","messageId":"1600","endLine":17,"endColumn":20},{"ruleId":"1597","severity":1,"message":"1688","line":18,"column":3,"nodeType":"1599","messageId":"1600","endLine":18,"endColumn":21},{"ruleId":"1597","severity":1,"message":"1689","line":24,"column":3,"nodeType":"1599","messageId":"1600","endLine":24,"endColumn":10},{"ruleId":"1597","severity":1,"message":"1690","line":25,"column":3,"nodeType":"1599","messageId":"1600","endLine":25,"endColumn":13},{"ruleId":"1597","severity":1,"message":"1691","line":31,"column":32,"nodeType":"1599","messageId":"1600","endLine":31,"endColumn":39},{"ruleId":"1597","severity":1,"message":"1692","line":32,"column":29,"nodeType":"1599","messageId":"1600","endLine":32,"endColumn":37},{"ruleId":"1693","severity":1,"message":"1694","line":324,"column":5,"nodeType":"1695","messageId":"1696","endLine":324,"endColumn":15},{"ruleId":"1597","severity":1,"message":"1697","line":338,"column":24,"nodeType":"1599","messageId":"1600","endLine":338,"endColumn":38},{"ruleId":"1597","severity":1,"message":"1698","line":2,"column":10,"nodeType":"1599","messageId":"1600","endLine":2,"endColumn":19},{"ruleId":"1597","severity":1,"message":"1691","line":5,"column":63,"nodeType":"1599","messageId":"1600","endLine":5,"endColumn":70},{"ruleId":"1606","severity":1,"message":"1607","line":92,"column":16,"nodeType":"1608","messageId":"1609","endLine":92,"endColumn":18},{"ruleId":"1597","severity":1,"message":"1691","line":3,"column":10,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":17},{"ruleId":"1693","severity":1,"message":"1694","line":27,"column":11,"nodeType":"1695","messageId":"1696","endLine":27,"endColumn":21},{"ruleId":"1693","severity":1,"message":"1694","line":37,"column":7,"nodeType":"1695","messageId":"1696","endLine":37,"endColumn":17},{"ruleId":"1597","severity":1,"message":"1699","line":115,"column":13,"nodeType":"1599","messageId":"1600","endLine":115,"endColumn":21},{"ruleId":"1597","severity":1,"message":"1700","line":286,"column":7,"nodeType":"1599","messageId":"1600","endLine":286,"endColumn":14},{"ruleId":"1597","severity":1,"message":"1701","line":3,"column":8,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":12},{"ruleId":"1597","severity":1,"message":"1702","line":4,"column":20,"nodeType":"1599","messageId":"1600","endLine":4,"endColumn":38},{"ruleId":"1597","severity":1,"message":"1653","line":5,"column":8,"nodeType":"1599","messageId":"1600","endLine":5,"endColumn":9},{"ruleId":"1597","severity":1,"message":"1686","line":14,"column":3,"nodeType":"1599","messageId":"1600","endLine":14,"endColumn":22},{"ruleId":"1597","severity":1,"message":"1687","line":17,"column":3,"nodeType":"1599","messageId":"1600","endLine":17,"endColumn":20},{"ruleId":"1597","severity":1,"message":"1688","line":18,"column":3,"nodeType":"1599","messageId":"1600","endLine":18,"endColumn":21},{"ruleId":"1597","severity":1,"message":"1689","line":24,"column":3,"nodeType":"1599","messageId":"1600","endLine":24,"endColumn":10},{"ruleId":"1597","severity":1,"message":"1703","line":29,"column":8,"nodeType":"1599","messageId":"1600","endLine":29,"endColumn":22},{"ruleId":"1597","severity":1,"message":"1704","line":30,"column":10,"nodeType":"1599","messageId":"1600","endLine":30,"endColumn":30},{"ruleId":"1597","severity":1,"message":"1705","line":31,"column":10,"nodeType":"1599","messageId":"1600","endLine":31,"endColumn":27},{"ruleId":"1635","severity":1,"message":"1636","line":295,"column":13,"nodeType":"1637","endLine":295,"endColumn":90},{"ruleId":"1597","severity":1,"message":"1686","line":10,"column":3,"nodeType":"1599","messageId":"1600","endLine":10,"endColumn":22},{"ruleId":"1597","severity":1,"message":"1687","line":13,"column":3,"nodeType":"1599","messageId":"1600","endLine":13,"endColumn":20},{"ruleId":"1597","severity":1,"message":"1688","line":14,"column":3,"nodeType":"1599","messageId":"1600","endLine":14,"endColumn":21},{"ruleId":"1597","severity":1,"message":"1689","line":18,"column":3,"nodeType":"1599","messageId":"1600","endLine":18,"endColumn":10},{"ruleId":"1597","severity":1,"message":"1706","line":19,"column":3,"nodeType":"1599","messageId":"1600","endLine":19,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1707","line":26,"column":3,"nodeType":"1599","messageId":"1600","endLine":26,"endColumn":21},{"ruleId":"1597","severity":1,"message":"1708","line":27,"column":3,"nodeType":"1599","messageId":"1600","endLine":27,"endColumn":26},{"ruleId":"1597","severity":1,"message":"1709","line":28,"column":3,"nodeType":"1599","messageId":"1600","endLine":28,"endColumn":23},{"ruleId":"1597","severity":1,"message":"1653","line":33,"column":8,"nodeType":"1599","messageId":"1600","endLine":33,"endColumn":9},{"ruleId":"1597","severity":1,"message":"1710","line":33,"column":13,"nodeType":"1599","messageId":"1600","endLine":33,"endColumn":18},{"ruleId":"1597","severity":1,"message":"1691","line":35,"column":63,"nodeType":"1599","messageId":"1600","endLine":35,"endColumn":70},{"ruleId":"1606","severity":1,"message":"1607","line":110,"column":55,"nodeType":"1608","messageId":"1609","endLine":110,"endColumn":57},{"ruleId":"1606","severity":1,"message":"1607","line":190,"column":22,"nodeType":"1608","messageId":"1609","endLine":190,"endColumn":24},{"ruleId":"1606","severity":1,"message":"1607","line":215,"column":28,"nodeType":"1608","messageId":"1609","endLine":215,"endColumn":30},{"ruleId":"1711","severity":1,"message":"1712","line":271,"column":5,"nodeType":"1616","messageId":"1713","endLine":271,"endColumn":370},{"ruleId":"1714","severity":1,"message":"1715","line":337,"column":7,"nodeType":"1716","messageId":"1717","endLine":337,"endColumn":13},{"ruleId":"1714","severity":1,"message":"1715","line":348,"column":7,"nodeType":"1716","messageId":"1717","endLine":348,"endColumn":13},{"ruleId":"1714","severity":1,"message":"1715","line":359,"column":7,"nodeType":"1716","messageId":"1717","endLine":359,"endColumn":13},{"ruleId":"1714","severity":1,"message":"1715","line":371,"column":7,"nodeType":"1716","messageId":"1717","endLine":371,"endColumn":13},{"ruleId":"1714","severity":1,"message":"1715","line":381,"column":7,"nodeType":"1716","messageId":"1717","endLine":381,"endColumn":13},{"ruleId":"1714","severity":1,"message":"1715","line":391,"column":7,"nodeType":"1716","messageId":"1717","endLine":391,"endColumn":13},{"ruleId":"1714","severity":1,"message":"1715","line":401,"column":7,"nodeType":"1716","messageId":"1717","endLine":401,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":409,"column":11,"nodeType":"1608","messageId":"1609","endLine":409,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":410,"column":11,"nodeType":"1608","messageId":"1609","endLine":410,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":411,"column":11,"nodeType":"1608","messageId":"1609","endLine":411,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":412,"column":11,"nodeType":"1608","messageId":"1609","endLine":412,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":413,"column":11,"nodeType":"1608","messageId":"1609","endLine":413,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":414,"column":11,"nodeType":"1608","messageId":"1609","endLine":414,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":415,"column":11,"nodeType":"1608","messageId":"1609","endLine":415,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":419,"column":15,"nodeType":"1608","messageId":"1609","endLine":419,"endColumn":17},{"ruleId":"1606","severity":1,"message":"1607","line":423,"column":22,"nodeType":"1608","messageId":"1609","endLine":423,"endColumn":24},{"ruleId":"1606","severity":1,"message":"1607","line":423,"column":34,"nodeType":"1608","messageId":"1609","endLine":423,"endColumn":36},{"ruleId":"1606","severity":1,"message":"1607","line":423,"column":46,"nodeType":"1608","messageId":"1609","endLine":423,"endColumn":48},{"ruleId":"1606","severity":1,"message":"1607","line":423,"column":58,"nodeType":"1608","messageId":"1609","endLine":423,"endColumn":60},{"ruleId":"1606","severity":1,"message":"1607","line":424,"column":26,"nodeType":"1608","messageId":"1609","endLine":424,"endColumn":28},{"ruleId":"1606","severity":1,"message":"1607","line":428,"column":22,"nodeType":"1608","messageId":"1609","endLine":428,"endColumn":24},{"ruleId":"1606","severity":1,"message":"1673","line":455,"column":16,"nodeType":"1608","messageId":"1609","endLine":455,"endColumn":18},{"ruleId":"1597","severity":1,"message":"1718","line":5,"column":10,"nodeType":"1599","messageId":"1600","endLine":5,"endColumn":14},{"ruleId":"1597","severity":1,"message":"1719","line":5,"column":39,"nodeType":"1599","messageId":"1600","endLine":5,"endColumn":49},{"ruleId":"1597","severity":1,"message":"1685","line":6,"column":8,"nodeType":"1599","messageId":"1600","endLine":6,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1720","line":20,"column":9,"nodeType":"1599","messageId":"1600","endLine":20,"endColumn":15},{"ruleId":"1693","severity":1,"message":"1694","line":76,"column":5,"nodeType":"1695","messageId":"1696","endLine":76,"endColumn":15},{"ruleId":"1606","severity":1,"message":"1607","line":92,"column":30,"nodeType":"1608","messageId":"1609","endLine":92,"endColumn":32},{"ruleId":"1606","severity":1,"message":"1607","line":96,"column":30,"nodeType":"1608","messageId":"1609","endLine":96,"endColumn":32},{"ruleId":"1606","severity":1,"message":"1607","line":109,"column":22,"nodeType":"1608","messageId":"1609","endLine":109,"endColumn":24},{"ruleId":"1597","severity":1,"message":"1721","line":417,"column":7,"nodeType":"1599","messageId":"1600","endLine":417,"endColumn":23},{"ruleId":"1629","severity":1,"message":"1722","line":642,"column":6,"nodeType":"1631","endLine":642,"endColumn":8,"suggestions":"1723"},{"ruleId":"1597","severity":1,"message":"1724","line":698,"column":7,"nodeType":"1599","messageId":"1600","endLine":698,"endColumn":17},{"ruleId":"1629","severity":1,"message":"1725","line":732,"column":6,"nodeType":"1631","endLine":732,"endColumn":8,"suggestions":"1726"},{"ruleId":"1606","severity":1,"message":"1607","line":761,"column":38,"nodeType":"1608","messageId":"1609","endLine":761,"endColumn":40},{"ruleId":"1727","severity":1,"message":"1728","line":770,"column":27,"nodeType":"1729","messageId":"1730","endLine":770,"endColumn":29},{"ruleId":"1606","severity":1,"message":"1607","line":785,"column":38,"nodeType":"1608","messageId":"1609","endLine":785,"endColumn":40},{"ruleId":"1606","severity":1,"message":"1607","line":800,"column":38,"nodeType":"1608","messageId":"1609","endLine":800,"endColumn":40},{"ruleId":"1597","severity":1,"message":"1731","line":869,"column":17,"nodeType":"1599","messageId":"1600","endLine":869,"endColumn":25},{"ruleId":"1597","severity":1,"message":"1732","line":912,"column":7,"nodeType":"1599","messageId":"1600","endLine":912,"endColumn":19},{"ruleId":"1597","severity":1,"message":"1733","line":4,"column":10,"nodeType":"1599","messageId":"1600","endLine":4,"endColumn":21},{"ruleId":"1597","severity":1,"message":"1734","line":4,"column":38,"nodeType":"1599","messageId":"1600","endLine":4,"endColumn":55},{"ruleId":"1597","severity":1,"message":"1718","line":5,"column":10,"nodeType":"1599","messageId":"1600","endLine":5,"endColumn":14},{"ruleId":"1597","severity":1,"message":"1735","line":5,"column":31,"nodeType":"1599","messageId":"1600","endLine":5,"endColumn":37},{"ruleId":"1597","severity":1,"message":"1736","line":7,"column":10,"nodeType":"1599","messageId":"1600","endLine":7,"endColumn":21},{"ruleId":"1597","severity":1,"message":"1720","line":8,"column":9,"nodeType":"1599","messageId":"1600","endLine":8,"endColumn":15},{"ruleId":"1597","severity":1,"message":"1737","line":133,"column":11,"nodeType":"1599","messageId":"1600","endLine":133,"endColumn":21},{"ruleId":"1597","severity":1,"message":"1738","line":6,"column":10,"nodeType":"1599","messageId":"1600","endLine":6,"endColumn":21},{"ruleId":"1597","severity":1,"message":"1739","line":6,"column":23,"nodeType":"1599","messageId":"1600","endLine":6,"endColumn":33},{"ruleId":"1693","severity":1,"message":"1694","line":197,"column":5,"nodeType":"1695","messageId":"1696","endLine":197,"endColumn":15},{"ruleId":"1597","severity":1,"message":"1697","line":211,"column":24,"nodeType":"1599","messageId":"1600","endLine":211,"endColumn":38},{"ruleId":"1597","severity":1,"message":"1740","line":1,"column":10,"nodeType":"1599","messageId":"1600","endLine":1,"endColumn":14},{"ruleId":"1693","severity":1,"message":"1694","line":138,"column":5,"nodeType":"1695","messageId":"1696","endLine":138,"endColumn":15},{"ruleId":"1597","severity":1,"message":"1697","line":152,"column":24,"nodeType":"1599","messageId":"1600","endLine":152,"endColumn":38},{"ruleId":"1597","severity":1,"message":"1672","line":6,"column":10,"nodeType":"1599","messageId":"1600","endLine":6,"endColumn":15},{"ruleId":"1693","severity":1,"message":"1694","line":164,"column":5,"nodeType":"1695","messageId":"1696","endLine":164,"endColumn":15},{"ruleId":"1597","severity":1,"message":"1697","line":178,"column":24,"nodeType":"1599","messageId":"1600","endLine":178,"endColumn":38},{"ruleId":"1597","severity":1,"message":"1741","line":5,"column":10,"nodeType":"1599","messageId":"1600","endLine":5,"endColumn":24},{"ruleId":"1597","severity":1,"message":"1742","line":6,"column":8,"nodeType":"1599","messageId":"1600","endLine":6,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":61,"column":25,"nodeType":"1608","messageId":"1609","endLine":61,"endColumn":27},{"ruleId":"1606","severity":1,"message":"1607","line":79,"column":25,"nodeType":"1608","messageId":"1609","endLine":79,"endColumn":27},{"ruleId":"1635","severity":1,"message":"1636","line":81,"column":12,"nodeType":"1637","endLine":81,"endColumn":91},{"ruleId":"1693","severity":1,"message":"1694","line":138,"column":5,"nodeType":"1695","messageId":"1696","endLine":138,"endColumn":15},{"ruleId":"1597","severity":1,"message":"1697","line":152,"column":24,"nodeType":"1599","messageId":"1600","endLine":152,"endColumn":38},{"ruleId":"1597","severity":1,"message":"1743","line":1,"column":32,"nodeType":"1599","messageId":"1600","endLine":1,"endColumn":40},{"ruleId":"1597","severity":1,"message":"1744","line":2,"column":10,"nodeType":"1599","messageId":"1600","endLine":2,"endColumn":15},{"ruleId":"1597","severity":1,"message":"1745","line":2,"column":17,"nodeType":"1599","messageId":"1600","endLine":2,"endColumn":23},{"ruleId":"1597","severity":1,"message":"1746","line":3,"column":8,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1702","line":5,"column":20,"nodeType":"1599","messageId":"1600","endLine":5,"endColumn":38},{"ruleId":"1597","severity":1,"message":"1705","line":6,"column":10,"nodeType":"1599","messageId":"1600","endLine":6,"endColumn":27},{"ruleId":"1597","severity":1,"message":"1692","line":6,"column":29,"nodeType":"1599","messageId":"1600","endLine":6,"endColumn":37},{"ruleId":"1597","severity":1,"message":"1747","line":20,"column":8,"nodeType":"1599","messageId":"1600","endLine":20,"endColumn":13},{"ruleId":"1597","severity":1,"message":"1602","line":21,"column":10,"nodeType":"1599","messageId":"1600","endLine":21,"endColumn":17},{"ruleId":"1727","severity":1,"message":"1748","line":201,"column":29,"nodeType":"1729","messageId":"1730","endLine":201,"endColumn":31},{"ruleId":"1597","severity":1,"message":"1749","line":274,"column":9,"nodeType":"1599","messageId":"1600","endLine":274,"endColumn":17},{"ruleId":"1597","severity":1,"message":"1749","line":315,"column":9,"nodeType":"1599","messageId":"1600","endLine":315,"endColumn":17},{"ruleId":"1727","severity":1,"message":"1748","line":462,"column":44,"nodeType":"1729","messageId":"1730","endLine":462,"endColumn":46},{"ruleId":"1597","severity":1,"message":"1750","line":7,"column":19,"nodeType":"1599","messageId":"1600","endLine":7,"endColumn":28},{"ruleId":"1751","severity":1,"message":"1752","line":79,"column":12,"nodeType":"1637","endLine":79,"endColumn":99},{"ruleId":"1597","severity":1,"message":"1753","line":3,"column":33,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":37},{"ruleId":"1597","severity":1,"message":"1754","line":18,"column":10,"nodeType":"1599","messageId":"1600","endLine":18,"endColumn":30},{"ruleId":"1606","severity":1,"message":"1673","line":74,"column":24,"nodeType":"1608","messageId":"1609","endLine":74,"endColumn":26},{"ruleId":"1606","severity":1,"message":"1673","line":74,"column":60,"nodeType":"1608","messageId":"1609","endLine":74,"endColumn":62},{"ruleId":"1606","severity":1,"message":"1673","line":74,"column":104,"nodeType":"1608","messageId":"1609","endLine":74,"endColumn":106},{"ruleId":"1597","severity":1,"message":"1755","line":267,"column":7,"nodeType":"1599","messageId":"1600","endLine":267,"endColumn":12},{"ruleId":"1597","severity":1,"message":"1756","line":268,"column":7,"nodeType":"1599","messageId":"1600","endLine":268,"endColumn":10},{"ruleId":"1597","severity":1,"message":"1757","line":278,"column":11,"nodeType":"1599","messageId":"1600","endLine":278,"endColumn":17},{"ruleId":"1635","severity":1,"message":"1636","line":304,"column":17,"nodeType":"1637","endLine":307,"endColumn":19},{"ruleId":"1635","severity":1,"message":"1636","line":318,"column":17,"nodeType":"1637","endLine":321,"endColumn":19},{"ruleId":"1635","severity":1,"message":"1636","line":332,"column":17,"nodeType":"1637","endLine":335,"endColumn":19},{"ruleId":"1635","severity":1,"message":"1636","line":346,"column":17,"nodeType":"1637","endLine":349,"endColumn":19},{"ruleId":"1629","severity":1,"message":"1725","line":611,"column":6,"nodeType":"1631","endLine":611,"endColumn":8,"suggestions":"1758"},{"ruleId":"1606","severity":1,"message":"1607","line":640,"column":38,"nodeType":"1608","messageId":"1609","endLine":640,"endColumn":40},{"ruleId":"1727","severity":1,"message":"1728","line":649,"column":27,"nodeType":"1729","messageId":"1730","endLine":649,"endColumn":29},{"ruleId":"1606","severity":1,"message":"1607","line":664,"column":38,"nodeType":"1608","messageId":"1609","endLine":664,"endColumn":40},{"ruleId":"1606","severity":1,"message":"1607","line":679,"column":38,"nodeType":"1608","messageId":"1609","endLine":679,"endColumn":40},{"ruleId":"1597","severity":1,"message":"1759","line":3,"column":20,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":41},{"ruleId":"1597","severity":1,"message":"1760","line":4,"column":16,"nodeType":"1599","messageId":"1600","endLine":4,"endColumn":28},{"ruleId":"1597","severity":1,"message":"1761","line":4,"column":30,"nodeType":"1599","messageId":"1600","endLine":4,"endColumn":41},{"ruleId":"1597","severity":1,"message":"1691","line":9,"column":10,"nodeType":"1599","messageId":"1600","endLine":9,"endColumn":17},{"ruleId":"1597","severity":1,"message":"1750","line":9,"column":19,"nodeType":"1599","messageId":"1600","endLine":9,"endColumn":28},{"ruleId":"1693","severity":1,"message":"1694","line":70,"column":7,"nodeType":"1695","messageId":"1696","endLine":70,"endColumn":17},{"ruleId":"1610","severity":1,"message":"1611","line":85,"column":127,"nodeType":"1608","messageId":"1612","endLine":85,"endColumn":128},{"ruleId":"1610","severity":1,"message":"1611","line":99,"column":97,"nodeType":"1608","messageId":"1612","endLine":99,"endColumn":98},{"ruleId":"1606","severity":1,"message":"1607","line":105,"column":11,"nodeType":"1608","messageId":"1609","endLine":105,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":106,"column":11,"nodeType":"1608","messageId":"1609","endLine":106,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":107,"column":11,"nodeType":"1608","messageId":"1609","endLine":107,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":108,"column":11,"nodeType":"1608","messageId":"1609","endLine":108,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":109,"column":11,"nodeType":"1608","messageId":"1609","endLine":109,"endColumn":13},{"ruleId":"1597","severity":1,"message":"1691","line":11,"column":10,"nodeType":"1599","messageId":"1600","endLine":11,"endColumn":17},{"ruleId":"1606","severity":1,"message":"1673","line":88,"column":33,"nodeType":"1608","messageId":"1609","endLine":88,"endColumn":35},{"ruleId":"1606","severity":1,"message":"1673","line":89,"column":38,"nodeType":"1608","messageId":"1609","endLine":89,"endColumn":40},{"ruleId":"1610","severity":1,"message":"1611","line":87,"column":127,"nodeType":"1608","messageId":"1612","endLine":87,"endColumn":128},{"ruleId":"1610","severity":1,"message":"1611","line":101,"column":97,"nodeType":"1608","messageId":"1612","endLine":101,"endColumn":98},{"ruleId":"1606","severity":1,"message":"1607","line":121,"column":11,"nodeType":"1608","messageId":"1609","endLine":121,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":122,"column":11,"nodeType":"1608","messageId":"1609","endLine":122,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":123,"column":11,"nodeType":"1608","messageId":"1609","endLine":123,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":124,"column":11,"nodeType":"1608","messageId":"1609","endLine":124,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":125,"column":11,"nodeType":"1608","messageId":"1609","endLine":125,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":126,"column":11,"nodeType":"1608","messageId":"1609","endLine":126,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":127,"column":11,"nodeType":"1608","messageId":"1609","endLine":127,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":128,"column":11,"nodeType":"1608","messageId":"1609","endLine":128,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":182,"column":61,"nodeType":"1608","messageId":"1609","endLine":182,"endColumn":63},{"ruleId":"1606","severity":1,"message":"1607","line":182,"column":85,"nodeType":"1608","messageId":"1609","endLine":182,"endColumn":87},{"ruleId":"1606","severity":1,"message":"1607","line":182,"column":109,"nodeType":"1608","messageId":"1609","endLine":182,"endColumn":111},{"ruleId":"1606","severity":1,"message":"1607","line":182,"column":133,"nodeType":"1608","messageId":"1609","endLine":182,"endColumn":135},{"ruleId":"1606","severity":1,"message":"1607","line":191,"column":121,"nodeType":"1608","messageId":"1609","endLine":191,"endColumn":123},{"ruleId":"1606","severity":1,"message":"1607","line":254,"column":19,"nodeType":"1608","messageId":"1609","endLine":254,"endColumn":21},{"ruleId":"1606","severity":1,"message":"1673","line":254,"column":41,"nodeType":"1608","messageId":"1609","endLine":254,"endColumn":43},{"ruleId":"1606","severity":1,"message":"1607","line":272,"column":27,"nodeType":"1608","messageId":"1609","endLine":272,"endColumn":29},{"ruleId":"1606","severity":1,"message":"1607","line":278,"column":13,"nodeType":"1608","messageId":"1609","endLine":278,"endColumn":15},{"ruleId":"1597","severity":1,"message":"1762","line":8,"column":10,"nodeType":"1599","messageId":"1600","endLine":8,"endColumn":14},{"ruleId":"1597","severity":1,"message":"1763","line":14,"column":10,"nodeType":"1599","messageId":"1600","endLine":14,"endColumn":17},{"ruleId":"1597","severity":1,"message":"1741","line":15,"column":10,"nodeType":"1599","messageId":"1600","endLine":15,"endColumn":24},{"ruleId":"1610","severity":1,"message":"1611","line":53,"column":57,"nodeType":"1608","messageId":"1612","endLine":53,"endColumn":58},{"ruleId":"1597","severity":1,"message":"1759","line":3,"column":20,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":41},{"ruleId":"1597","severity":1,"message":"1760","line":4,"column":16,"nodeType":"1599","messageId":"1600","endLine":4,"endColumn":28},{"ruleId":"1597","severity":1,"message":"1761","line":4,"column":30,"nodeType":"1599","messageId":"1600","endLine":4,"endColumn":41},{"ruleId":"1597","severity":1,"message":"1691","line":8,"column":10,"nodeType":"1599","messageId":"1600","endLine":8,"endColumn":17},{"ruleId":"1597","severity":1,"message":"1750","line":8,"column":19,"nodeType":"1599","messageId":"1600","endLine":8,"endColumn":28},{"ruleId":"1693","severity":1,"message":"1694","line":60,"column":7,"nodeType":"1695","messageId":"1696","endLine":60,"endColumn":17},{"ruleId":"1610","severity":1,"message":"1611","line":76,"column":127,"nodeType":"1608","messageId":"1612","endLine":76,"endColumn":128},{"ruleId":"1610","severity":1,"message":"1611","line":89,"column":97,"nodeType":"1608","messageId":"1612","endLine":89,"endColumn":98},{"ruleId":"1606","severity":1,"message":"1607","line":94,"column":11,"nodeType":"1608","messageId":"1609","endLine":94,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":95,"column":11,"nodeType":"1608","messageId":"1609","endLine":95,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":96,"column":11,"nodeType":"1608","messageId":"1609","endLine":96,"endColumn":13},{"ruleId":"1606","severity":1,"message":"1607","line":110,"column":16,"nodeType":"1608","messageId":"1609","endLine":110,"endColumn":18},{"ruleId":"1606","severity":1,"message":"1607","line":145,"column":61,"nodeType":"1608","messageId":"1609","endLine":145,"endColumn":63},{"ruleId":"1597","severity":1,"message":"1691","line":7,"column":35,"nodeType":"1599","messageId":"1600","endLine":7,"endColumn":42},{"ruleId":"1597","severity":1,"message":"1764","line":117,"column":92,"nodeType":"1599","messageId":"1600","endLine":117,"endColumn":98},{"ruleId":"1597","severity":1,"message":"1691","line":5,"column":35,"nodeType":"1599","messageId":"1600","endLine":5,"endColumn":42},{"ruleId":"1597","severity":1,"message":"1653","line":13,"column":8,"nodeType":"1599","messageId":"1600","endLine":13,"endColumn":9},{"ruleId":"1597","severity":1,"message":"1765","line":155,"column":13,"nodeType":"1599","messageId":"1600","endLine":155,"endColumn":20},{"ruleId":"1606","severity":1,"message":"1673","line":149,"column":32,"nodeType":"1608","messageId":"1609","endLine":149,"endColumn":34},{"ruleId":"1597","severity":1,"message":"1691","line":5,"column":35,"nodeType":"1599","messageId":"1600","endLine":5,"endColumn":42},{"ruleId":"1606","severity":1,"message":"1673","line":118,"column":27,"nodeType":"1608","messageId":"1609","endLine":118,"endColumn":29},{"ruleId":"1606","severity":1,"message":"1673","line":171,"column":36,"nodeType":"1608","messageId":"1609","endLine":171,"endColumn":38},{"ruleId":"1597","severity":1,"message":"1691","line":5,"column":35,"nodeType":"1599","messageId":"1600","endLine":5,"endColumn":42},{"ruleId":"1597","severity":1,"message":"1766","line":15,"column":10,"nodeType":"1599","messageId":"1600","endLine":15,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1765","line":152,"column":13,"nodeType":"1599","messageId":"1600","endLine":152,"endColumn":20},{"ruleId":"1597","severity":1,"message":"1691","line":5,"column":35,"nodeType":"1599","messageId":"1600","endLine":5,"endColumn":42},{"ruleId":"1597","severity":1,"message":"1767","line":12,"column":8,"nodeType":"1599","messageId":"1600","endLine":12,"endColumn":20},{"ruleId":"1597","severity":1,"message":"1766","line":13,"column":10,"nodeType":"1599","messageId":"1600","endLine":13,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1691","line":5,"column":35,"nodeType":"1599","messageId":"1600","endLine":5,"endColumn":42},{"ruleId":"1597","severity":1,"message":"1768","line":106,"column":61,"nodeType":"1599","messageId":"1600","endLine":106,"endColumn":69},{"ruleId":"1597","severity":1,"message":"1769","line":106,"column":120,"nodeType":"1599","messageId":"1600","endLine":106,"endColumn":128},{"ruleId":"1597","severity":1,"message":"1756","line":190,"column":22,"nodeType":"1599","messageId":"1600","endLine":190,"endColumn":25},{"ruleId":"1597","severity":1,"message":"1698","line":4,"column":24,"nodeType":"1599","messageId":"1600","endLine":4,"endColumn":33},{"ruleId":"1597","severity":1,"message":"1691","line":4,"column":35,"nodeType":"1599","messageId":"1600","endLine":4,"endColumn":42},{"ruleId":"1597","severity":1,"message":"1770","line":8,"column":10,"nodeType":"1599","messageId":"1600","endLine":8,"endColumn":29},{"ruleId":"1597","severity":1,"message":"1766","line":10,"column":10,"nodeType":"1599","messageId":"1600","endLine":10,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1771","line":62,"column":24,"nodeType":"1599","messageId":"1600","endLine":62,"endColumn":28},{"ruleId":"1597","severity":1,"message":"1772","line":62,"column":38,"nodeType":"1599","messageId":"1600","endLine":62,"endColumn":42},{"ruleId":"1597","severity":1,"message":"1691","line":5,"column":35,"nodeType":"1599","messageId":"1600","endLine":5,"endColumn":42},{"ruleId":"1597","severity":1,"message":"1766","line":12,"column":10,"nodeType":"1599","messageId":"1600","endLine":12,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1767","line":13,"column":8,"nodeType":"1599","messageId":"1600","endLine":13,"endColumn":20},{"ruleId":"1597","severity":1,"message":"1773","line":3,"column":8,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":12},{"ruleId":"1597","severity":1,"message":"1698","line":5,"column":24,"nodeType":"1599","messageId":"1600","endLine":5,"endColumn":33},{"ruleId":"1597","severity":1,"message":"1774","line":10,"column":10,"nodeType":"1599","messageId":"1600","endLine":10,"endColumn":26},{"ruleId":"1597","severity":1,"message":"1767","line":12,"column":8,"nodeType":"1599","messageId":"1600","endLine":12,"endColumn":20},{"ruleId":"1597","severity":1,"message":"1766","line":13,"column":10,"nodeType":"1599","messageId":"1600","endLine":13,"endColumn":16},{"ruleId":"1751","severity":1,"message":"1752","line":89,"column":12,"nodeType":"1637","endLine":89,"endColumn":104},{"ruleId":"1597","severity":1,"message":"1691","line":5,"column":35,"nodeType":"1599","messageId":"1600","endLine":5,"endColumn":42},{"ruleId":"1597","severity":1,"message":"1691","line":11,"column":35,"nodeType":"1599","messageId":"1600","endLine":11,"endColumn":42},{"ruleId":"1597","severity":1,"message":"1775","line":173,"column":65,"nodeType":"1599","messageId":"1600","endLine":173,"endColumn":69},{"ruleId":"1597","severity":1,"message":"1691","line":11,"column":35,"nodeType":"1599","messageId":"1600","endLine":11,"endColumn":42},{"ruleId":"1597","severity":1,"message":"1776","line":76,"column":24,"nodeType":"1599","messageId":"1600","endLine":76,"endColumn":30},{"ruleId":"1597","severity":1,"message":"1775","line":173,"column":65,"nodeType":"1599","messageId":"1600","endLine":173,"endColumn":69},{"ruleId":"1597","severity":1,"message":"1761","line":3,"column":16,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":27},{"ruleId":"1597","severity":1,"message":"1777","line":24,"column":13,"nodeType":"1599","messageId":"1600","endLine":24,"endColumn":18},{"ruleId":"1597","severity":1,"message":"1759","line":3,"column":20,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":41},{"ruleId":"1597","severity":1,"message":"1760","line":4,"column":16,"nodeType":"1599","messageId":"1600","endLine":4,"endColumn":28},{"ruleId":"1597","severity":1,"message":"1761","line":4,"column":30,"nodeType":"1599","messageId":"1600","endLine":4,"endColumn":41},{"ruleId":"1597","severity":1,"message":"1691","line":8,"column":10,"nodeType":"1599","messageId":"1600","endLine":8,"endColumn":17},{"ruleId":"1597","severity":1,"message":"1750","line":8,"column":19,"nodeType":"1599","messageId":"1600","endLine":8,"endColumn":28},{"ruleId":"1597","severity":1,"message":"1778","line":11,"column":10,"nodeType":"1599","messageId":"1600","endLine":11,"endColumn":24},{"ruleId":"1693","severity":1,"message":"1694","line":46,"column":7,"nodeType":"1695","messageId":"1696","endLine":46,"endColumn":17},{"ruleId":"1610","severity":1,"message":"1611","line":61,"column":71,"nodeType":"1608","messageId":"1612","endLine":61,"endColumn":72},{"ruleId":"1606","severity":1,"message":"1673","line":207,"column":35,"nodeType":"1608","messageId":"1609","endLine":207,"endColumn":37},{"ruleId":"1597","severity":1,"message":"1759","line":3,"column":20,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":41},{"ruleId":"1597","severity":1,"message":"1760","line":4,"column":16,"nodeType":"1599","messageId":"1600","endLine":4,"endColumn":28},{"ruleId":"1597","severity":1,"message":"1761","line":4,"column":30,"nodeType":"1599","messageId":"1600","endLine":4,"endColumn":41},{"ruleId":"1597","severity":1,"message":"1779","line":6,"column":8,"nodeType":"1599","messageId":"1600","endLine":6,"endColumn":14},{"ruleId":"1597","severity":1,"message":"1691","line":8,"column":10,"nodeType":"1599","messageId":"1600","endLine":8,"endColumn":17},{"ruleId":"1597","severity":1,"message":"1750","line":8,"column":19,"nodeType":"1599","messageId":"1600","endLine":8,"endColumn":28},{"ruleId":"1597","severity":1,"message":"1780","line":8,"column":55,"nodeType":"1599","messageId":"1600","endLine":8,"endColumn":63},{"ruleId":"1597","severity":1,"message":"1778","line":11,"column":10,"nodeType":"1599","messageId":"1600","endLine":11,"endColumn":24},{"ruleId":"1597","severity":1,"message":"1741","line":15,"column":10,"nodeType":"1599","messageId":"1600","endLine":15,"endColumn":24},{"ruleId":"1693","severity":1,"message":"1694","line":51,"column":7,"nodeType":"1695","messageId":"1696","endLine":51,"endColumn":17},{"ruleId":"1610","severity":1,"message":"1611","line":66,"column":71,"nodeType":"1608","messageId":"1612","endLine":66,"endColumn":72},{"ruleId":"1606","severity":1,"message":"1673","line":99,"column":30,"nodeType":"1608","messageId":"1609","endLine":99,"endColumn":32},{"ruleId":"1655","severity":1,"message":"1667","line":150,"column":11,"nodeType":"1637","endLine":157,"endColumn":12},{"ruleId":"1662","severity":1,"message":"1663","line":158,"column":11,"nodeType":"1637","messageId":"1664","endLine":163,"endColumn":12,"fix":"1781"},{"ruleId":"1629","severity":1,"message":"1679","line":204,"column":24,"nodeType":"1599","endLine":204,"endColumn":35},{"ruleId":"1662","severity":1,"message":"1663","line":273,"column":11,"nodeType":"1637","messageId":"1664","endLine":273,"endColumn":61,"fix":"1782"},{"ruleId":"1597","severity":1,"message":"1783","line":5,"column":10,"nodeType":"1599","messageId":"1600","endLine":5,"endColumn":19},{"ruleId":"1597","severity":1,"message":"1784","line":68,"column":13,"nodeType":"1599","messageId":"1600","endLine":68,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1785","line":68,"column":18,"nodeType":"1599","messageId":"1600","endLine":68,"endColumn":22},{"ruleId":"1655","severity":1,"message":"1656","line":97,"column":30,"nodeType":"1637","endLine":97,"endColumn":72},{"ruleId":"1657","severity":1,"message":"1658","line":97,"column":38,"nodeType":"1616","messageId":"1659","endLine":97,"endColumn":52},{"ruleId":"1655","severity":1,"message":"1656","line":100,"column":31,"nodeType":"1637","endLine":100,"endColumn":73},{"ruleId":"1657","severity":1,"message":"1658","line":100,"column":39,"nodeType":"1616","messageId":"1659","endLine":100,"endColumn":53},{"ruleId":"1662","severity":1,"message":"1663","line":111,"column":28,"nodeType":"1637","messageId":"1664","endLine":111,"endColumn":124,"fix":"1786"},{"ruleId":"1662","severity":1,"message":"1663","line":114,"column":29,"nodeType":"1637","messageId":"1664","endLine":114,"endColumn":125,"fix":"1787"},{"ruleId":"1597","severity":1,"message":"1653","line":3,"column":8,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":9},{"ruleId":"1597","severity":1,"message":"1788","line":41,"column":38,"nodeType":"1599","messageId":"1600","endLine":41,"endColumn":46},{"ruleId":"1597","severity":1,"message":"1789","line":41,"column":57,"nodeType":"1599","messageId":"1600","endLine":41,"endColumn":65},{"ruleId":"1597","severity":1,"message":"1790","line":41,"column":67,"nodeType":"1599","messageId":"1600","endLine":41,"endColumn":72},{"ruleId":"1597","severity":1,"message":"1791","line":159,"column":24,"nodeType":"1599","messageId":"1600","endLine":159,"endColumn":33},{"ruleId":"1597","severity":1,"message":"1792","line":159,"column":35,"nodeType":"1599","messageId":"1600","endLine":159,"endColumn":44},{"ruleId":"1635","severity":1,"message":"1636","line":89,"column":52,"nodeType":"1637","endLine":89,"endColumn":106},{"ruleId":"1635","severity":1,"message":"1636","line":89,"column":109,"nodeType":"1637","endLine":89,"endColumn":186},{"ruleId":"1635","severity":1,"message":"1636","line":109,"column":79,"nodeType":"1637","endLine":109,"endColumn":133},{"ruleId":"1635","severity":1,"message":"1636","line":109,"column":136,"nodeType":"1637","endLine":109,"endColumn":213},{"ruleId":"1635","severity":1,"message":"1636","line":178,"column":13,"nodeType":"1637","endLine":178,"endColumn":123},{"ruleId":"1655","severity":1,"message":"1667","line":247,"column":15,"nodeType":"1637","endLine":247,"endColumn":193},{"ruleId":"1635","severity":1,"message":"1636","line":299,"column":15,"nodeType":"1637","endLine":299,"endColumn":129},{"ruleId":"1655","severity":1,"message":"1667","line":359,"column":11,"nodeType":"1637","endLine":362,"endColumn":12},{"ruleId":"1751","severity":1,"message":"1752","line":15,"column":10,"nodeType":"1637","endLine":15,"endColumn":130},{"ruleId":"1751","severity":1,"message":"1752","line":22,"column":9,"nodeType":"1637","endLine":22,"endColumn":101},{"ruleId":"1606","severity":1,"message":"1673","line":25,"column":37,"nodeType":"1608","messageId":"1609","endLine":25,"endColumn":39},{"ruleId":"1751","severity":1,"message":"1752","line":28,"column":9,"nodeType":"1637","endLine":28,"endColumn":90},{"ruleId":"1751","severity":1,"message":"1752","line":34,"column":9,"nodeType":"1637","endLine":34,"endColumn":129},{"ruleId":"1793","severity":1,"message":"1794","line":44,"column":14,"nodeType":"1637","endLine":44,"endColumn":169},{"ruleId":"1795","severity":1,"message":"1796","line":44,"column":148,"nodeType":"1797","messageId":"1798","endLine":44,"endColumn":163},{"ruleId":"1793","severity":1,"message":"1794","line":47,"column":9,"nodeType":"1637","endLine":57,"endColumn":10},{"ruleId":"1795","severity":1,"message":"1796","line":54,"column":11,"nodeType":"1797","messageId":"1798","endLine":54,"endColumn":26},{"ruleId":"1795","severity":1,"message":"1796","line":55,"column":11,"nodeType":"1797","messageId":"1798","endLine":55,"endColumn":26},{"ruleId":"1751","severity":1,"message":"1752","line":61,"column":10,"nodeType":"1637","endLine":61,"endColumn":130},{"ruleId":"1681","severity":1,"message":"1682","line":15,"column":19,"nodeType":"1683","messageId":"1684","endLine":15,"endColumn":30},{"ruleId":"1681","severity":1,"message":"1682","line":30,"column":19,"nodeType":"1683","messageId":"1684","endLine":30,"endColumn":30},{"ruleId":"1681","severity":1,"message":"1682","line":47,"column":19,"nodeType":"1683","messageId":"1684","endLine":47,"endColumn":30},{"ruleId":"1693","severity":1,"message":"1694","line":14,"column":5,"nodeType":"1695","messageId":"1696","endLine":14,"endColumn":30},{"ruleId":"1693","severity":1,"message":"1694","line":19,"column":5,"nodeType":"1695","messageId":"1696","endLine":19,"endColumn":30},{"ruleId":"1693","severity":1,"message":"1694","line":28,"column":5,"nodeType":"1695","messageId":"1696","endLine":28,"endColumn":30},{"ruleId":"1693","severity":1,"message":"1694","line":33,"column":5,"nodeType":"1695","messageId":"1696","endLine":33,"endColumn":30},{"ruleId":"1597","severity":1,"message":"1799","line":2,"column":10,"nodeType":"1599","messageId":"1600","endLine":2,"endColumn":14},{"ruleId":"1597","severity":1,"message":"1744","line":2,"column":26,"nodeType":"1599","messageId":"1600","endLine":2,"endColumn":31},{"ruleId":"1606","severity":1,"message":"1607","line":74,"column":14,"nodeType":"1608","messageId":"1609","endLine":74,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1780","line":3,"column":10,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":18},{"ruleId":"1635","severity":1,"message":"1636","line":29,"column":21,"nodeType":"1637","endLine":29,"endColumn":84},{"ruleId":"1597","severity":1,"message":"1800","line":4,"column":16,"nodeType":"1599","messageId":"1600","endLine":4,"endColumn":26},{"ruleId":"1635","severity":1,"message":"1636","line":28,"column":21,"nodeType":"1637","endLine":28,"endColumn":69},{"ruleId":"1635","severity":1,"message":"1636","line":34,"column":21,"nodeType":"1637","endLine":34,"endColumn":69},{"ruleId":"1635","severity":1,"message":"1636","line":41,"column":21,"nodeType":"1637","endLine":41,"endColumn":69},{"ruleId":"1606","severity":1,"message":"1673","line":36,"column":29,"nodeType":"1608","messageId":"1609","endLine":36,"endColumn":31},{"ruleId":"1606","severity":1,"message":"1673","line":36,"column":55,"nodeType":"1608","messageId":"1609","endLine":36,"endColumn":57},{"ruleId":"1606","severity":1,"message":"1673","line":46,"column":28,"nodeType":"1608","messageId":"1609","endLine":46,"endColumn":30},{"ruleId":"1606","severity":1,"message":"1673","line":54,"column":28,"nodeType":"1608","messageId":"1609","endLine":54,"endColumn":30},{"ruleId":"1597","severity":1,"message":"1801","line":2,"column":8,"nodeType":"1599","messageId":"1600","endLine":2,"endColumn":14},{"ruleId":"1597","severity":1,"message":"1735","line":3,"column":10,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":16},{"ruleId":"1727","severity":1,"message":"1728","line":232,"column":42,"nodeType":"1729","messageId":"1730","endLine":232,"endColumn":44},{"ruleId":"1606","severity":1,"message":"1607","line":233,"column":30,"nodeType":"1608","messageId":"1609","endLine":233,"endColumn":32},{"ruleId":"1693","severity":1,"message":"1694","line":14,"column":5,"nodeType":"1695","messageId":"1696","endLine":14,"endColumn":30},{"ruleId":"1693","severity":1,"message":"1694","line":19,"column":5,"nodeType":"1695","messageId":"1696","endLine":19,"endColumn":30},{"ruleId":"1597","severity":1,"message":"1802","line":23,"column":11,"nodeType":"1599","messageId":"1600","endLine":23,"endColumn":16},{"ruleId":"1693","severity":1,"message":"1694","line":28,"column":5,"nodeType":"1695","messageId":"1696","endLine":28,"endColumn":30},{"ruleId":"1693","severity":1,"message":"1694","line":33,"column":5,"nodeType":"1695","messageId":"1696","endLine":33,"endColumn":30},{"ruleId":"1597","severity":1,"message":"1802","line":38,"column":11,"nodeType":"1599","messageId":"1600","endLine":38,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1802","line":51,"column":11,"nodeType":"1599","messageId":"1600","endLine":51,"endColumn":16},{"ruleId":"1606","severity":1,"message":"1607","line":33,"column":14,"nodeType":"1608","messageId":"1609","endLine":33,"endColumn":16},{"ruleId":"1606","severity":1,"message":"1607","line":37,"column":21,"nodeType":"1608","messageId":"1609","endLine":37,"endColumn":23},{"ruleId":"1655","severity":1,"message":"1667","line":88,"column":13,"nodeType":"1637","endLine":88,"endColumn":136},{"ruleId":"1655","severity":1,"message":"1667","line":125,"column":15,"nodeType":"1637","endLine":125,"endColumn":138},{"ruleId":"1597","severity":1,"message":"1803","line":136,"column":7,"nodeType":"1599","messageId":"1600","endLine":136,"endColumn":17},{"ruleId":"1804","severity":1,"message":"1805","line":137,"column":136,"nodeType":"1806","messageId":"1609","endLine":137,"endColumn":150},{"ruleId":"1635","severity":1,"message":"1636","line":144,"column":11,"nodeType":"1637","endLine":144,"endColumn":141},{"ruleId":"1635","severity":1,"message":"1636","line":149,"column":15,"nodeType":"1637","endLine":149,"endColumn":145},{"ruleId":"1597","severity":1,"message":"1761","line":3,"column":16,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":27},{"ruleId":"1693","severity":1,"message":"1694","line":11,"column":34,"nodeType":"1695","messageId":"1696","endLine":11,"endColumn":44},{"ruleId":"1597","severity":1,"message":"1807","line":35,"column":20,"nodeType":"1599","messageId":"1600","endLine":35,"endColumn":28},{"ruleId":"1597","severity":1,"message":"1691","line":4,"column":10,"nodeType":"1599","messageId":"1600","endLine":4,"endColumn":17},{"ruleId":"1597","severity":1,"message":"1761","line":3,"column":10,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":21},{"ruleId":"1597","severity":1,"message":"1808","line":3,"column":23,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":38},{"ruleId":"1597","severity":1,"message":"1809","line":3,"column":40,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":53},{"ruleId":"1597","severity":1,"message":"1810","line":4,"column":8,"nodeType":"1599","messageId":"1600","endLine":4,"endColumn":14},{"ruleId":"1597","severity":1,"message":"1691","line":5,"column":10,"nodeType":"1599","messageId":"1600","endLine":5,"endColumn":17},{"ruleId":"1597","severity":1,"message":"1780","line":5,"column":19,"nodeType":"1599","messageId":"1600","endLine":5,"endColumn":27},{"ruleId":"1597","severity":1,"message":"1811","line":47,"column":38,"nodeType":"1599","messageId":"1600","endLine":47,"endColumn":43},{"ruleId":"1597","severity":1,"message":"1812","line":47,"column":45,"nodeType":"1599","messageId":"1600","endLine":47,"endColumn":56},{"ruleId":"1635","severity":1,"message":"1636","line":56,"column":13,"nodeType":"1637","endLine":56,"endColumn":173},{"ruleId":"1693","severity":1,"message":"1694","line":14,"column":5,"nodeType":"1695","messageId":"1696","endLine":14,"endColumn":30},{"ruleId":"1693","severity":1,"message":"1694","line":19,"column":5,"nodeType":"1695","messageId":"1696","endLine":19,"endColumn":30},{"ruleId":"1597","severity":1,"message":"1802","line":23,"column":11,"nodeType":"1599","messageId":"1600","endLine":23,"endColumn":16},{"ruleId":"1693","severity":1,"message":"1694","line":28,"column":5,"nodeType":"1695","messageId":"1696","endLine":28,"endColumn":30},{"ruleId":"1693","severity":1,"message":"1694","line":34,"column":5,"nodeType":"1695","messageId":"1696","endLine":34,"endColumn":30},{"ruleId":"1597","severity":1,"message":"1802","line":40,"column":11,"nodeType":"1599","messageId":"1600","endLine":40,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1802","line":53,"column":11,"nodeType":"1599","messageId":"1600","endLine":53,"endColumn":16},{"ruleId":"1635","severity":1,"message":"1636","line":30,"column":50,"nodeType":"1637","endLine":30,"endColumn":193},{"ruleId":"1597","severity":1,"message":"1801","line":2,"column":8,"nodeType":"1599","messageId":"1600","endLine":2,"endColumn":14},{"ruleId":"1597","severity":1,"message":"1746","line":3,"column":8,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1813","line":31,"column":13,"nodeType":"1599","messageId":"1600","endLine":31,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1814","line":31,"column":18,"nodeType":"1599","messageId":"1600","endLine":31,"endColumn":26},{"ruleId":"1727","severity":1,"message":"1748","line":31,"column":23,"nodeType":"1729","messageId":"1730","endLine":31,"endColumn":25},{"ruleId":"1635","severity":1,"message":"1636","line":50,"column":233,"nodeType":"1637","endLine":50,"endColumn":265},{"ruleId":"1597","severity":1,"message":"1701","line":2,"column":8,"nodeType":"1599","messageId":"1600","endLine":2,"endColumn":12},{"ruleId":"1597","severity":1,"message":"1815","line":3,"column":8,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":15},{"ruleId":"1597","severity":1,"message":"1816","line":29,"column":11,"nodeType":"1599","messageId":"1600","endLine":29,"endColumn":24},{"ruleId":"1635","severity":1,"message":"1636","line":67,"column":25,"nodeType":"1637","endLine":67,"endColumn":52},{"ruleId":"1793","severity":1,"message":"1794","line":71,"column":27,"nodeType":"1637","endLine":80,"endColumn":28},{"ruleId":"1793","severity":1,"message":"1794","line":82,"column":27,"nodeType":"1637","endLine":90,"endColumn":28},{"ruleId":"1693","severity":1,"message":"1694","line":14,"column":5,"nodeType":"1695","messageId":"1696","endLine":14,"endColumn":30},{"ruleId":"1693","severity":1,"message":"1694","line":19,"column":5,"nodeType":"1695","messageId":"1696","endLine":19,"endColumn":30},{"ruleId":"1597","severity":1,"message":"1802","line":23,"column":11,"nodeType":"1599","messageId":"1600","endLine":23,"endColumn":16},{"ruleId":"1693","severity":1,"message":"1694","line":28,"column":5,"nodeType":"1695","messageId":"1696","endLine":28,"endColumn":30},{"ruleId":"1693","severity":1,"message":"1694","line":34,"column":5,"nodeType":"1695","messageId":"1696","endLine":34,"endColumn":30},{"ruleId":"1597","severity":1,"message":"1802","line":40,"column":11,"nodeType":"1599","messageId":"1600","endLine":40,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1802","line":53,"column":11,"nodeType":"1599","messageId":"1600","endLine":53,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1801","line":2,"column":8,"nodeType":"1599","messageId":"1600","endLine":2,"endColumn":14},{"ruleId":"1597","severity":1,"message":"1746","line":3,"column":8,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1813","line":31,"column":13,"nodeType":"1599","messageId":"1600","endLine":31,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1814","line":31,"column":18,"nodeType":"1599","messageId":"1600","endLine":31,"endColumn":26},{"ruleId":"1597","severity":1,"message":"1735","line":3,"column":10,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1817","line":12,"column":11,"nodeType":"1599","messageId":"1600","endLine":12,"endColumn":20},{"ruleId":"1597","severity":1,"message":"1818","line":15,"column":11,"nodeType":"1599","messageId":"1600","endLine":15,"endColumn":25},{"ruleId":"1597","severity":1,"message":"1651","line":3,"column":27,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":33},{"ruleId":"1597","severity":1,"message":"1753","line":3,"column":35,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":39},{"ruleId":"1662","severity":1,"message":"1663","line":75,"column":9,"nodeType":"1637","messageId":"1664","endLine":75,"endColumn":106,"fix":"1819"},{"ruleId":"1693","severity":1,"message":"1694","line":14,"column":5,"nodeType":"1695","messageId":"1696","endLine":14,"endColumn":30},{"ruleId":"1693","severity":1,"message":"1694","line":19,"column":5,"nodeType":"1695","messageId":"1696","endLine":19,"endColumn":30},{"ruleId":"1693","severity":1,"message":"1694","line":28,"column":5,"nodeType":"1695","messageId":"1696","endLine":28,"endColumn":30},{"ruleId":"1693","severity":1,"message":"1694","line":33,"column":5,"nodeType":"1695","messageId":"1696","endLine":33,"endColumn":30},{"ruleId":"1597","severity":1,"message":"1820","line":50,"column":13,"nodeType":"1599","messageId":"1600","endLine":50,"endColumn":25},{"ruleId":"1597","severity":1,"message":"1821","line":50,"column":58,"nodeType":"1599","messageId":"1600","endLine":50,"endColumn":66},{"ruleId":"1606","severity":1,"message":"1607","line":50,"column":21,"nodeType":"1608","messageId":"1609","endLine":50,"endColumn":23},{"ruleId":"1597","severity":1,"message":"1822","line":41,"column":46,"nodeType":"1599","messageId":"1600","endLine":41,"endColumn":52},{"ruleId":"1606","severity":1,"message":"1607","line":37,"column":34,"nodeType":"1608","messageId":"1609","endLine":37,"endColumn":36},{"ruleId":"1606","severity":1,"message":"1607","line":38,"column":34,"nodeType":"1608","messageId":"1609","endLine":38,"endColumn":36},{"ruleId":"1693","severity":1,"message":"1694","line":14,"column":5,"nodeType":"1695","messageId":"1696","endLine":14,"endColumn":30},{"ruleId":"1693","severity":1,"message":"1694","line":19,"column":5,"nodeType":"1695","messageId":"1696","endLine":19,"endColumn":30},{"ruleId":"1693","severity":1,"message":"1694","line":28,"column":5,"nodeType":"1695","messageId":"1696","endLine":28,"endColumn":30},{"ruleId":"1693","severity":1,"message":"1694","line":33,"column":5,"nodeType":"1695","messageId":"1696","endLine":33,"endColumn":30},{"ruleId":"1597","severity":1,"message":"1820","line":50,"column":13,"nodeType":"1599","messageId":"1600","endLine":50,"endColumn":25},{"ruleId":"1597","severity":1,"message":"1821","line":50,"column":58,"nodeType":"1599","messageId":"1600","endLine":50,"endColumn":66},{"ruleId":"1597","severity":1,"message":"1701","line":2,"column":8,"nodeType":"1599","messageId":"1600","endLine":2,"endColumn":12},{"ruleId":"1597","severity":1,"message":"1823","line":1,"column":28,"nodeType":"1599","messageId":"1600","endLine":1,"endColumn":37},{"ruleId":"1597","severity":1,"message":"1743","line":1,"column":39,"nodeType":"1599","messageId":"1600","endLine":1,"endColumn":47},{"ruleId":"1597","severity":1,"message":"1824","line":10,"column":8,"nodeType":"1599","messageId":"1600","endLine":10,"endColumn":15},{"ruleId":"1597","severity":1,"message":"1746","line":2,"column":8,"nodeType":"1599","messageId":"1600","endLine":2,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1801","line":3,"column":8,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":14},{"ruleId":"1597","severity":1,"message":"1825","line":2,"column":10,"nodeType":"1599","messageId":"1600","endLine":2,"endColumn":22},{"ruleId":"1597","severity":1,"message":"1826","line":7,"column":10,"nodeType":"1599","messageId":"1600","endLine":7,"endColumn":23},{"ruleId":"1597","severity":1,"message":"1827","line":73,"column":13,"nodeType":"1599","messageId":"1600","endLine":73,"endColumn":21},{"ruleId":"1597","severity":1,"message":"1789","line":73,"column":23,"nodeType":"1599","messageId":"1600","endLine":73,"endColumn":31},{"ruleId":"1597","severity":1,"message":"1828","line":73,"column":43,"nodeType":"1599","messageId":"1600","endLine":73,"endColumn":51},{"ruleId":"1597","severity":1,"message":"1753","line":3,"column":8,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":12},{"ruleId":"1597","severity":1,"message":"1799","line":4,"column":10,"nodeType":"1599","messageId":"1600","endLine":4,"endColumn":14},{"ruleId":"1597","severity":1,"message":"1829","line":79,"column":20,"nodeType":"1599","messageId":"1600","endLine":79,"endColumn":30},{"ruleId":"1597","severity":1,"message":"1830","line":10,"column":11,"nodeType":"1599","messageId":"1600","endLine":10,"endColumn":18},{"ruleId":"1597","severity":1,"message":"1831","line":12,"column":11,"nodeType":"1599","messageId":"1600","endLine":12,"endColumn":18},{"ruleId":"1635","severity":1,"message":"1636","line":49,"column":16,"nodeType":"1637","endLine":49,"endColumn":93},{"ruleId":"1635","severity":1,"message":"1636","line":51,"column":14,"nodeType":"1637","endLine":51,"endColumn":97},{"ruleId":"1793","severity":1,"message":"1794","line":56,"column":11,"nodeType":"1637","endLine":67,"endColumn":12},{"ruleId":"1795","severity":1,"message":"1796","line":63,"column":13,"nodeType":"1797","messageId":"1798","endLine":63,"endColumn":28},{"ruleId":"1795","severity":1,"message":"1796","line":64,"column":13,"nodeType":"1797","messageId":"1798","endLine":64,"endColumn":28},{"ruleId":"1793","severity":1,"message":"1794","line":71,"column":11,"nodeType":"1637","endLine":81,"endColumn":12},{"ruleId":"1795","severity":1,"message":"1796","line":78,"column":13,"nodeType":"1797","messageId":"1798","endLine":78,"endColumn":28},{"ruleId":"1795","severity":1,"message":"1796","line":79,"column":13,"nodeType":"1797","messageId":"1798","endLine":79,"endColumn":28},{"ruleId":"1597","severity":1,"message":"1832","line":93,"column":45,"nodeType":"1599","messageId":"1600","endLine":93,"endColumn":57},{"ruleId":"1655","severity":1,"message":"1667","line":100,"column":11,"nodeType":"1637","endLine":105,"endColumn":13},{"ruleId":"1795","severity":1,"message":"1796","line":104,"column":13,"nodeType":"1797","messageId":"1798","endLine":104,"endColumn":71},{"ruleId":"1597","severity":1,"message":"1776","line":111,"column":11,"nodeType":"1599","messageId":"1600","endLine":111,"endColumn":17},{"ruleId":"1635","severity":1,"message":"1636","line":126,"column":17,"nodeType":"1637","endLine":126,"endColumn":107},{"ruleId":"1597","severity":1,"message":"1761","line":3,"column":10,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":21},{"ruleId":"1597","severity":1,"message":"1761","line":5,"column":10,"nodeType":"1599","messageId":"1600","endLine":5,"endColumn":21},{"ruleId":"1597","severity":1,"message":"1833","line":67,"column":67,"nodeType":"1599","messageId":"1600","endLine":67,"endColumn":82},{"ruleId":"1597","severity":1,"message":"1834","line":13,"column":11,"nodeType":"1599","messageId":"1600","endLine":13,"endColumn":22},{"ruleId":"1597","severity":1,"message":"1701","line":2,"column":8,"nodeType":"1599","messageId":"1600","endLine":2,"endColumn":12},{"ruleId":"1597","severity":1,"message":"1701","line":2,"column":8,"nodeType":"1599","messageId":"1600","endLine":2,"endColumn":12},{"ruleId":"1597","severity":1,"message":"1835","line":3,"column":27,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":47},{"ruleId":"1606","severity":1,"message":"1607","line":61,"column":20,"nodeType":"1608","messageId":"1609","endLine":61,"endColumn":22},{"ruleId":"1606","severity":1,"message":"1607","line":75,"column":17,"nodeType":"1608","messageId":"1609","endLine":75,"endColumn":19},{"ruleId":"1606","severity":1,"message":"1607","line":87,"column":20,"nodeType":"1608","messageId":"1609","endLine":87,"endColumn":22},{"ruleId":"1606","severity":1,"message":"1673","line":28,"column":38,"nodeType":"1608","messageId":"1609","endLine":28,"endColumn":40},{"ruleId":"1606","severity":1,"message":"1673","line":31,"column":44,"nodeType":"1608","messageId":"1609","endLine":31,"endColumn":46},{"ruleId":"1606","severity":1,"message":"1673","line":34,"column":47,"nodeType":"1608","messageId":"1609","endLine":34,"endColumn":49},{"ruleId":"1606","severity":1,"message":"1673","line":37,"column":44,"nodeType":"1608","messageId":"1609","endLine":37,"endColumn":46},{"ruleId":"1606","severity":1,"message":"1673","line":46,"column":30,"nodeType":"1608","messageId":"1609","endLine":46,"endColumn":32},{"ruleId":"1606","severity":1,"message":"1673","line":48,"column":36,"nodeType":"1608","messageId":"1609","endLine":48,"endColumn":38},{"ruleId":"1606","severity":1,"message":"1673","line":50,"column":38,"nodeType":"1608","messageId":"1609","endLine":50,"endColumn":40},{"ruleId":"1606","severity":1,"message":"1673","line":52,"column":35,"nodeType":"1608","messageId":"1609","endLine":52,"endColumn":37},{"ruleId":"1597","severity":1,"message":"1836","line":98,"column":13,"nodeType":"1599","messageId":"1600","endLine":98,"endColumn":19},{"ruleId":"1655","severity":1,"message":"1667","line":530,"column":9,"nodeType":"1637","endLine":530,"endColumn":12},{"ruleId":"1597","severity":1,"message":"1837","line":4,"column":8,"nodeType":"1599","messageId":"1600","endLine":4,"endColumn":17},{"ruleId":"1606","severity":1,"message":"1607","line":72,"column":27,"nodeType":"1608","messageId":"1609","endLine":72,"endColumn":29},{"ruleId":"1606","severity":1,"message":"1607","line":73,"column":32,"nodeType":"1608","messageId":"1609","endLine":73,"endColumn":34},{"ruleId":"1606","severity":1,"message":"1607","line":80,"column":27,"nodeType":"1608","messageId":"1609","endLine":80,"endColumn":29},{"ruleId":"1606","severity":1,"message":"1607","line":80,"column":53,"nodeType":"1608","messageId":"1609","endLine":80,"endColumn":55},{"ruleId":"1606","severity":1,"message":"1607","line":87,"column":27,"nodeType":"1608","messageId":"1609","endLine":87,"endColumn":29},{"ruleId":"1606","severity":1,"message":"1607","line":101,"column":16,"nodeType":"1608","messageId":"1609","endLine":101,"endColumn":18},{"ruleId":"1606","severity":1,"message":"1607","line":138,"column":23,"nodeType":"1608","messageId":"1609","endLine":138,"endColumn":25},{"ruleId":"1597","severity":1,"message":"1838","line":261,"column":11,"nodeType":"1599","messageId":"1600","endLine":261,"endColumn":15},{"ruleId":"1597","severity":1,"message":"1811","line":261,"column":17,"nodeType":"1599","messageId":"1600","endLine":261,"endColumn":22},{"ruleId":"1597","severity":1,"message":"1839","line":261,"column":24,"nodeType":"1599","messageId":"1600","endLine":261,"endColumn":31},{"ruleId":"1597","severity":1,"message":"1840","line":261,"column":33,"nodeType":"1599","messageId":"1600","endLine":261,"endColumn":40},{"ruleId":"1606","severity":1,"message":"1607","line":265,"column":92,"nodeType":"1608","messageId":"1609","endLine":265,"endColumn":94},{"ruleId":"1597","severity":1,"message":"1841","line":48,"column":24,"nodeType":"1599","messageId":"1600","endLine":48,"endColumn":26},{"ruleId":"1597","severity":1,"message":"1842","line":48,"column":28,"nodeType":"1599","messageId":"1600","endLine":48,"endColumn":30},{"ruleId":"1597","severity":1,"message":"1843","line":48,"column":32,"nodeType":"1599","messageId":"1600","endLine":48,"endColumn":34},{"ruleId":"1597","severity":1,"message":"1844","line":48,"column":36,"nodeType":"1599","messageId":"1600","endLine":48,"endColumn":38},{"ruleId":"1793","severity":1,"message":"1794","line":52,"column":21,"nodeType":"1637","endLine":62,"endColumn":22},{"ruleId":"1795","severity":1,"message":"1796","line":59,"column":23,"nodeType":"1797","messageId":"1798","endLine":59,"endColumn":38},{"ruleId":"1795","severity":1,"message":"1796","line":60,"column":23,"nodeType":"1797","messageId":"1798","endLine":60,"endColumn":38},{"ruleId":"1793","severity":1,"message":"1794","line":64,"column":21,"nodeType":"1637","endLine":73,"endColumn":22},{"ruleId":"1795","severity":1,"message":"1796","line":70,"column":23,"nodeType":"1797","messageId":"1798","endLine":70,"endColumn":38},{"ruleId":"1795","severity":1,"message":"1796","line":71,"column":23,"nodeType":"1797","messageId":"1798","endLine":71,"endColumn":38},{"ruleId":"1597","severity":1,"message":"1825","line":2,"column":10,"nodeType":"1599","messageId":"1600","endLine":2,"endColumn":22},{"ruleId":"1597","severity":1,"message":"1827","line":50,"column":13,"nodeType":"1599","messageId":"1600","endLine":50,"endColumn":21},{"ruleId":"1597","severity":1,"message":"1789","line":50,"column":23,"nodeType":"1599","messageId":"1600","endLine":50,"endColumn":31},{"ruleId":"1597","severity":1,"message":"1845","line":17,"column":27,"nodeType":"1599","messageId":"1600","endLine":17,"endColumn":38},{"ruleId":"1597","severity":1,"message":"1780","line":4,"column":10,"nodeType":"1599","messageId":"1600","endLine":4,"endColumn":18},{"ruleId":"1597","severity":1,"message":"1846","line":24,"column":11,"nodeType":"1599","messageId":"1600","endLine":24,"endColumn":16},{"ruleId":"1635","severity":1,"message":"1636","line":41,"column":15,"nodeType":"1637","endLine":41,"endColumn":69},{"ruleId":"1597","severity":1,"message":"1780","line":3,"column":10,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":18},{"ruleId":"1597","severity":1,"message":"1761","line":4,"column":16,"nodeType":"1599","messageId":"1600","endLine":4,"endColumn":27},{"ruleId":"1693","severity":1,"message":"1694","line":8,"column":34,"nodeType":"1695","messageId":"1696","endLine":8,"endColumn":44},{"ruleId":"1597","severity":1,"message":"1701","line":2,"column":8,"nodeType":"1599","messageId":"1600","endLine":2,"endColumn":12},{"ruleId":"1597","severity":1,"message":"1847","line":55,"column":11,"nodeType":"1599","messageId":"1600","endLine":55,"endColumn":26},{"ruleId":"1597","severity":1,"message":"1847","line":61,"column":11,"nodeType":"1599","messageId":"1600","endLine":61,"endColumn":26},{"ruleId":"1597","severity":1,"message":"1842","line":71,"column":13,"nodeType":"1599","messageId":"1600","endLine":71,"endColumn":15},{"ruleId":"1597","severity":1,"message":"1843","line":71,"column":17,"nodeType":"1599","messageId":"1600","endLine":71,"endColumn":19},{"ruleId":"1597","severity":1,"message":"1844","line":71,"column":21,"nodeType":"1599","messageId":"1600","endLine":71,"endColumn":23},{"ruleId":"1597","severity":1,"message":"1848","line":46,"column":13,"nodeType":"1599","messageId":"1600","endLine":46,"endColumn":22},{"ruleId":"1597","severity":1,"message":"1701","line":2,"column":8,"nodeType":"1599","messageId":"1600","endLine":2,"endColumn":12},{"ruleId":"1597","severity":1,"message":"1799","line":3,"column":10,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":14},{"ruleId":"1597","severity":1,"message":"1815","line":2,"column":8,"nodeType":"1599","messageId":"1600","endLine":2,"endColumn":15},{"ruleId":"1635","severity":1,"message":"1636","line":50,"column":69,"nodeType":"1637","endLine":50,"endColumn":132},{"ruleId":"1597","severity":1,"message":"1815","line":5,"column":8,"nodeType":"1599","messageId":"1600","endLine":5,"endColumn":15},{"ruleId":"1635","severity":1,"message":"1636","line":47,"column":27,"nodeType":"1637","endLine":47,"endColumn":87},{"ruleId":"1693","severity":1,"message":"1694","line":14,"column":5,"nodeType":"1695","messageId":"1696","endLine":14,"endColumn":30},{"ruleId":"1693","severity":1,"message":"1694","line":19,"column":5,"nodeType":"1695","messageId":"1696","endLine":19,"endColumn":30},{"ruleId":"1597","severity":1,"message":"1802","line":23,"column":11,"nodeType":"1599","messageId":"1600","endLine":23,"endColumn":16},{"ruleId":"1693","severity":1,"message":"1694","line":28,"column":5,"nodeType":"1695","messageId":"1696","endLine":28,"endColumn":30},{"ruleId":"1693","severity":1,"message":"1694","line":33,"column":5,"nodeType":"1695","messageId":"1696","endLine":33,"endColumn":30},{"ruleId":"1597","severity":1,"message":"1802","line":38,"column":11,"nodeType":"1599","messageId":"1600","endLine":38,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1802","line":51,"column":11,"nodeType":"1599","messageId":"1600","endLine":51,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1849","line":3,"column":8,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":19},{"ruleId":"1597","severity":1,"message":"1850","line":63,"column":17,"nodeType":"1599","messageId":"1600","endLine":63,"endColumn":24},{"ruleId":"1655","severity":1,"message":"1667","line":86,"column":13,"nodeType":"1637","endLine":86,"endColumn":136},{"ruleId":"1597","severity":1,"message":"1850","line":95,"column":27,"nodeType":"1599","messageId":"1600","endLine":95,"endColumn":34},{"ruleId":"1597","severity":1,"message":"1851","line":95,"column":67,"nodeType":"1599","messageId":"1600","endLine":95,"endColumn":79},{"ruleId":"1597","severity":1,"message":"1852","line":95,"column":100,"nodeType":"1599","messageId":"1600","endLine":95,"endColumn":111},{"ruleId":"1597","severity":1,"message":"1803","line":96,"column":7,"nodeType":"1599","messageId":"1600","endLine":96,"endColumn":17},{"ruleId":"1804","severity":1,"message":"1805","line":97,"column":136,"nodeType":"1806","messageId":"1609","endLine":97,"endColumn":150},{"ruleId":"1635","severity":1,"message":"1636","line":103,"column":11,"nodeType":"1637","endLine":103,"endColumn":141},{"ruleId":"1635","severity":1,"message":"1636","line":108,"column":15,"nodeType":"1637","endLine":108,"endColumn":145},{"ruleId":"1655","severity":1,"message":"1667","line":87,"column":13,"nodeType":"1637","endLine":87,"endColumn":136},{"ruleId":"1597","severity":1,"message":"1853","line":96,"column":11,"nodeType":"1599","messageId":"1600","endLine":96,"endColumn":15},{"ruleId":"1655","severity":1,"message":"1667","line":121,"column":13,"nodeType":"1637","endLine":121,"endColumn":136},{"ruleId":"1804","severity":1,"message":"1805","line":132,"column":136,"nodeType":"1806","messageId":"1609","endLine":132,"endColumn":150},{"ruleId":"1693","severity":1,"message":"1694","line":14,"column":5,"nodeType":"1695","messageId":"1696","endLine":14,"endColumn":30},{"ruleId":"1693","severity":1,"message":"1694","line":19,"column":5,"nodeType":"1695","messageId":"1696","endLine":19,"endColumn":30},{"ruleId":"1597","severity":1,"message":"1802","line":23,"column":11,"nodeType":"1599","messageId":"1600","endLine":23,"endColumn":16},{"ruleId":"1693","severity":1,"message":"1694","line":28,"column":5,"nodeType":"1695","messageId":"1696","endLine":28,"endColumn":30},{"ruleId":"1693","severity":1,"message":"1694","line":33,"column":5,"nodeType":"1695","messageId":"1696","endLine":33,"endColumn":30},{"ruleId":"1597","severity":1,"message":"1802","line":38,"column":11,"nodeType":"1599","messageId":"1600","endLine":38,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1802","line":51,"column":11,"nodeType":"1599","messageId":"1600","endLine":51,"endColumn":16},{"ruleId":"1606","severity":1,"message":"1673","line":27,"column":20,"nodeType":"1608","messageId":"1609","endLine":27,"endColumn":22},{"ruleId":"1606","severity":1,"message":"1673","line":27,"column":33,"nodeType":"1608","messageId":"1609","endLine":27,"endColumn":35},{"ruleId":"1597","severity":1,"message":"1854","line":12,"column":11,"nodeType":"1599","messageId":"1600","endLine":12,"endColumn":18},{"ruleId":"1597","severity":1,"message":"1855","line":15,"column":11,"nodeType":"1599","messageId":"1600","endLine":15,"endColumn":19},{"ruleId":"1597","severity":1,"message":"1823","line":1,"column":28,"nodeType":"1599","messageId":"1600","endLine":1,"endColumn":37},{"ruleId":"1597","severity":1,"message":"1849","line":3,"column":8,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":19},{"ruleId":"1597","severity":1,"message":"1856","line":10,"column":8,"nodeType":"1599","messageId":"1600","endLine":10,"endColumn":21},{"ruleId":"1597","severity":1,"message":"1857","line":115,"column":52,"nodeType":"1599","messageId":"1600","endLine":115,"endColumn":63},{"ruleId":"1597","severity":1,"message":"1857","line":134,"column":52,"nodeType":"1599","messageId":"1600","endLine":134,"endColumn":63},{"ruleId":"1597","severity":1,"message":"1768","line":155,"column":15,"nodeType":"1599","messageId":"1600","endLine":155,"endColumn":23},{"ruleId":"1597","severity":1,"message":"1858","line":155,"column":25,"nodeType":"1599","messageId":"1600","endLine":155,"endColumn":33},{"ruleId":"1597","severity":1,"message":"1857","line":155,"column":35,"nodeType":"1599","messageId":"1600","endLine":155,"endColumn":46},{"ruleId":"1597","severity":1,"message":"1859","line":168,"column":15,"nodeType":"1599","messageId":"1600","endLine":168,"endColumn":20},{"ruleId":"1597","severity":1,"message":"1769","line":191,"column":26,"nodeType":"1599","messageId":"1600","endLine":191,"endColumn":34},{"ruleId":"1597","severity":1,"message":"1857","line":191,"column":52,"nodeType":"1599","messageId":"1600","endLine":191,"endColumn":63},{"ruleId":"1597","severity":1,"message":"1769","line":210,"column":26,"nodeType":"1599","messageId":"1600","endLine":210,"endColumn":34},{"ruleId":"1597","severity":1,"message":"1857","line":210,"column":52,"nodeType":"1599","messageId":"1600","endLine":210,"endColumn":63},{"ruleId":"1597","severity":1,"message":"1860","line":231,"column":10,"nodeType":"1599","messageId":"1600","endLine":231,"endColumn":18},{"ruleId":"1606","severity":1,"message":"1607","line":33,"column":14,"nodeType":"1608","messageId":"1609","endLine":33,"endColumn":16},{"ruleId":"1606","severity":1,"message":"1607","line":37,"column":21,"nodeType":"1608","messageId":"1609","endLine":37,"endColumn":23},{"ruleId":"1693","severity":1,"message":"1694","line":14,"column":5,"nodeType":"1695","messageId":"1696","endLine":14,"endColumn":30},{"ruleId":"1693","severity":1,"message":"1694","line":19,"column":5,"nodeType":"1695","messageId":"1696","endLine":19,"endColumn":30},{"ruleId":"1597","severity":1,"message":"1802","line":23,"column":11,"nodeType":"1599","messageId":"1600","endLine":23,"endColumn":16},{"ruleId":"1693","severity":1,"message":"1694","line":28,"column":5,"nodeType":"1695","messageId":"1696","endLine":28,"endColumn":30},{"ruleId":"1693","severity":1,"message":"1694","line":33,"column":5,"nodeType":"1695","messageId":"1696","endLine":33,"endColumn":30},{"ruleId":"1597","severity":1,"message":"1802","line":38,"column":11,"nodeType":"1599","messageId":"1600","endLine":38,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1802","line":51,"column":11,"nodeType":"1599","messageId":"1600","endLine":51,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1825","line":2,"column":10,"nodeType":"1599","messageId":"1600","endLine":2,"endColumn":22},{"ruleId":"1597","severity":1,"message":"1826","line":3,"column":10,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":23},{"ruleId":"1597","severity":1,"message":"1735","line":5,"column":10,"nodeType":"1599","messageId":"1600","endLine":5,"endColumn":16},{"ruleId":"1606","severity":1,"message":"1673","line":58,"column":28,"nodeType":"1608","messageId":"1609","endLine":58,"endColumn":30},{"ruleId":"1606","severity":1,"message":"1607","line":65,"column":36,"nodeType":"1608","messageId":"1609","endLine":65,"endColumn":38},{"ruleId":"1606","severity":1,"message":"1607","line":66,"column":36,"nodeType":"1608","messageId":"1609","endLine":66,"endColumn":38},{"ruleId":"1606","severity":1,"message":"1607","line":67,"column":36,"nodeType":"1608","messageId":"1609","endLine":67,"endColumn":38},{"ruleId":"1606","severity":1,"message":"1607","line":68,"column":36,"nodeType":"1608","messageId":"1609","endLine":68,"endColumn":38},{"ruleId":"1606","severity":1,"message":"1607","line":69,"column":36,"nodeType":"1608","messageId":"1609","endLine":69,"endColumn":38},{"ruleId":"1597","severity":1,"message":"1801","line":2,"column":8,"nodeType":"1599","messageId":"1600","endLine":2,"endColumn":14},{"ruleId":"1597","severity":1,"message":"1861","line":4,"column":8,"nodeType":"1599","messageId":"1600","endLine":4,"endColumn":16},{"ruleId":"1597","severity":1,"message":"1862","line":3,"column":10,"nodeType":"1599","messageId":"1600","endLine":3,"endColumn":20},{"ruleId":"1606","severity":1,"message":"1607","line":37,"column":34,"nodeType":"1608","messageId":"1609","endLine":37,"endColumn":36},{"ruleId":"1606","severity":1,"message":"1607","line":38,"column":34,"nodeType":"1608","messageId":"1609","endLine":38,"endColumn":36},{"ruleId":"1693","severity":1,"message":"1694","line":7,"column":34,"nodeType":"1695","messageId":"1696","endLine":7,"endColumn":44},{"ruleId":"1597","severity":1,"message":"1746","line":2,"column":8,"nodeType":"1599","messageId":"1600","endLine":2,"endColumn":16},{"ruleId":"1693","severity":1,"message":"1694","line":7,"column":34,"nodeType":"1695","messageId":"1696","endLine":7,"endColumn":44},"no-unused-vars","'serviceWorker' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Storage' is defined but never used.","'EMAIL_SEND' is defined but never used.","'TRAINING' is defined but never used.","'AUTO_RESPONDER' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'createRef' is defined but never used.","no-useless-escape","Unnecessary escape character: \\&.","Literal","unnecessaryEscape",["1863","1864"],"Unnecessary escape character: \\?.",["1865","1866"],"Unnecessary escape character: \\/.",["1867","1868"],"no-redeclare","'row' is already defined.","redeclared","'index' is already defined.","'getBGPath' is defined but never used.","'loginPage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'email'. Either exclude it or remove the dependency array.","ArrayExpression",["1869"],"React Hook useCallback has an unnecessary dependency: 'password'. Either exclude it or remove the dependency array.",["1870"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useCallback has an unnecessary dependency: 'firstName'. Either exclude it or remove the dependency array.",["1871"],"React Hook useCallback has an unnecessary dependency: 'key'. Either exclude it or remove the dependency array.",["1872"],["1873"],["1874"],["1875"],["1876"],"React Hook useCallback has an unnecessary dependency: 'otp'. Either exclude it or remove the dependency array.",["1877"],["1878"],"React Hook useCallback has an unnecessary dependency: 'confPass'. Either exclude it or remove the dependency array.",["1879"],"'Button' is defined but never used.","'DONWLOADS' is defined but never used.","'_' is defined but never used.","'urlTab' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","unexpectedScriptURL","'showsettingDropdown' is assigned a value but never used.","'isstyle' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"1880","text":"1881"},{"range":"1882","text":"1881"},"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'loader' is assigned a value but never used.",["1883"],["1884"],"'ADMIN' is defined but never used.","'BONUS' is defined but never used.","Expected '!==' and instead saw '!='.","'active' is assigned a value but never used.","'createdAt' is assigned a value but never used.","'TabPane' is assigned a value but never used.","'closePopup' is assigned a value but never used.","'Tips' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'processGraphData' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'ToolUtil' is defined but never used.","'BREAKEVENCALCULATOR' is defined but never used.","'EMAIL_INTRIGATION' is defined but never used.","'IMAGE_OPTIOMAZTION' is defined but never used.","'CHATBOT' is defined but never used.","'INPUT_FORM' is defined but never used.","'getPath' is defined but never used.","'LockTool' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","'CAMPAIGNS_NAME' is assigned a value but never used.","'SAVE_TOOL' is defined but never used.","'settings' is assigned a value but never used.","'RowItem' is assigned a value but never used.","'Util' is defined but never used.","'getToolsPermission' is defined but never used.","'RequestHandler' is defined but never used.","'CHECK_CAMPAIGNS_NAME' is defined but never used.","'CampaignNameInput' is defined but never used.","'EMAIL_BUILDER' is defined but never used.","'HELLOBAROPTIN_FORM' is defined but never used.","'HELLOBARTIMEROPTIN_FORM' is defined but never used.","'EXITINTENTOPTIN_FORM' is defined but never used.","'first' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","unexpectedTemplateExpression","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'Tabs' is defined but never used.","'Popconfirm' is defined but never used.","'Option' is assigned a value but never used.","'ADD_LINKS_BUTTON' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["1885"],"'OptionItem' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.OTO1.length' and 'tools'. Either include them or remove the dependency array.",["1886"],"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setTools' is assigned a value but never used.","'ADDLinkModel' is assigned a value but never used.","'getUserList' is defined but never used.","'parseResellerData' is defined but never used.","'Switch' is defined but never used.","'UPDATE_USER' is defined but never used.","'modelProps' is assigned a value but never used.","'THIRD_PARTY' is defined but never used.","'OPTIN_FORM' is defined but never used.","'MODE' is defined but never used.","'ReponsiveImage' is defined but never used.","'Style' is defined but never used.","'useState' is defined but never used.","'Input' is defined but never used.","'Avatar' is defined but never used.","'DropDown' is defined but never used.","'axios' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","'popupwin' is assigned a value but never used.","'GET_PIXEL' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Icon' is defined but never used.","'ToolSelectorDropDown' is defined but never used.","'tools' is assigned a value but never used.","'url' is assigned a value but never used.","'clicks' is assigned a value but never used.",["1887"],"'generateIframeContant' is defined but never used.","'generateFile' is defined but never used.","'parseImgUrl' is defined but never used.","'OTO2' is defined but never used.","'Preview' is defined but never used.","'TIMING' is assigned a value but never used.","'preview' is assigned a value but never used.","'Drawer' is defined but never used.","'SuccessPopup' is defined but never used.","'template' is assigned a value but never used.","'noThanks' is assigned a value but never used.","'MobileVibratorModal' is defined but never used.","'TEXT' is assigned a value but never used.","'CODE' is assigned a value but never used.","'Code' is defined but never used.","'OfferIframeModal' is defined but never used.","'file' is assigned a value but never used.","'layout' is assigned a value but never used.","'image' is assigned a value but never used.","'LayoutSelector' is defined but never used.","'Script' is defined but never used.","'BASE_URL' is defined but never used.",{"range":"1888","text":"1881"},{"range":"1889","text":"1881"},"'SayUpdate' is defined but never used.","'IMG' is assigned a value but never used.","'name' is assigned a value but never used.",{"range":"1890","text":"1881"},{"range":"1891","text":"1881"},"'onChange' is assigned a value but never used.","'selected' is assigned a value but never used.","'index' is assigned a value but never used.","'isOTO2All' is assigned a value but never used.","'isOTO3All' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Info' is defined but never used.","'dateParser' is defined but never used.","'Editor' is defined but never used.","'cases' is assigned a value but never used.","'background' is assigned a value but never used.","no-dupe-keys","Duplicate key 'backgroundSize'.","ObjectExpression","'disabled' is assigned a value but never used.","'youtubeUrlParse' is defined but never used.","'vimeoUrlParse' is defined but never used.","'Portal' is defined but never used.","'hours' is assigned a value but never used.","'displayData' is assigned a value but never used.","'cta' is assigned a value but never used.","'position' is assigned a value but never used.","'Switch1' is defined but never used.","'switchElement' is assigned a value but never used.","'THUMB_IMG' is assigned a value but never used.","'INSTALL_SCRIPT' is assigned a value but never used.",{"range":"1892","text":"1881"},"'campaignName' is assigned a value but never used.","'codeText' is assigned a value but never used.","'cpCode' is assigned a value but never used.","'useEffect' is defined but never used.","'tinymce' is defined but never used.","'SketchPicker' is defined but never used.","'ColorSelector' is defined but never used.","'elements' is assigned a value but never used.","'fontSize' is assigned a value but never used.","'iconActive' is assigned a value but never used.","'TextImg' is assigned a value but never used.","'CodeImg' is assigned a value but never used.","'noThanksText' is assigned a value but never used.","'backgroundImage' is assigned a value but never used.","'NoThanksImg' is assigned a value but never used.","'PortalFunctionParams' is defined but never used.","'prefix' is assigned a value but never used.","'FlipClock' is defined but never used.","'days' is assigned a value but never used.","'minutes' is assigned a value but never used.","'seconds' is assigned a value but never used.","'DD' is assigned a value but never used.","'HH' is assigned a value but never used.","'MM' is assigned a value but never used.","'SS' is assigned a value but never used.","'redirectUrl' is assigned a value but never used.","'style' is assigned a value but never used.","'backgroundColor' is assigned a value but never used.","'timerText' is assigned a value but never used.","'TimeCounter' is defined but never used.","'bgColor' is assigned a value but never used.","'ctaBackgound' is assigned a value but never used.","'isNameInput' is assigned a value but never used.","'text' is assigned a value but never used.","'CTA_IMG' is assigned a value but never used.","'TIME_IMG' is assigned a value but never used.","'CircularClock' is defined but never used.","'endDateTime' is assigned a value but never used.","'timeZone' is assigned a value but never used.","'items' is assigned a value but never used.","'getStyle' is defined but never used.","'UrlInput' is defined but never used.","'SideButton' is defined but never used.",{"messageId":"1893","fix":"1894","desc":"1895"},{"messageId":"1896","fix":"1897","desc":"1898"},{"messageId":"1893","fix":"1899","desc":"1895"},{"messageId":"1896","fix":"1900","desc":"1898"},{"messageId":"1893","fix":"1901","desc":"1895"},{"messageId":"1896","fix":"1902","desc":"1898"},{"desc":"1903","fix":"1904"},{"desc":"1903","fix":"1905"},{"desc":"1903","fix":"1906"},{"desc":"1903","fix":"1907"},{"desc":"1903","fix":"1908"},{"desc":"1903","fix":"1909"},{"desc":"1903","fix":"1910"},{"desc":"1903","fix":"1911"},{"desc":"1903","fix":"1912"},{"desc":"1903","fix":"1913"},{"desc":"1903","fix":"1914"},[6271,6271]," rel=\"noreferrer\"",[6532,6532],{"desc":"1903","fix":"1915"},{"desc":"1903","fix":"1916"},{"desc":"1917","fix":"1918"},{"desc":"1919","fix":"1920"},{"desc":"1919","fix":"1921"},[5273,5273],[8520,8520],[4168,4168],[4377,4377],[2440,2440],"removeEscape",{"range":"1922","text":"1923"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1924","text":"1925"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1926","text":"1923"},{"range":"1927","text":"1925"},{"range":"1928","text":"1923"},{"range":"1929","text":"1925"},"Update the dependencies array to be: []",{"range":"1930","text":"1931"},{"range":"1932","text":"1931"},{"range":"1933","text":"1931"},{"range":"1934","text":"1931"},{"range":"1935","text":"1931"},{"range":"1936","text":"1931"},{"range":"1937","text":"1931"},{"range":"1938","text":"1931"},{"range":"1939","text":"1931"},{"range":"1940","text":"1931"},{"range":"1941","text":"1931"},{"range":"1942","text":"1931"},{"range":"1943","text":"1931"},"Update the dependencies array to be: [name]",{"range":"1944","text":"1945"},"Update the dependencies array to be: [props.OTO1.length, tools]",{"range":"1946","text":"1947"},{"range":"1948","text":"1947"},[40632,40633],"",[40632,40632],"\\",[40634,40635],[40634,40634],[40866,40867],[40866,40866],[5300,5307],"[]",[5423,5433],[7642,7653],[9070,9075],[9179,9186],[9302,9312],[9432,9443],[12420,12427],[12523,12528],[12644,12654],[12770,12780],[2303,2310],[2426,2436],[21875,21877],"[name]",[25669,25671],"[props.OTO1.length, tools]",[19352,19354]]