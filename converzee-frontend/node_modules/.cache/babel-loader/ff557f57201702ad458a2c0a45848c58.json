{"ast":null,"code":"import React,{Component}from\"react\";import{SketchPicker}from\"react-color\";import\"react-color-picker/index.css\";import{Info}from\"../../../comman/Info\";import{ColorSelector}from\"../../../layout/LayoutSelector\";import{createElement as _createElement}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default class Style extends Component{constructor(){super(...arguments);this.state={elements:this.props.elements,selected:this.props.selected,timerFont:this.props.timerFont,timerLabelFont:this.props.timerLabelFont};this.onClickElement=i=>{const cases=this.props.case||1;this.setState({selected:i});this.props.onChange(cases,this.state);};this.onColorChange=color=>{const cases=this.props.case||1;const{elements,selected}=this.state;elements[selected].color=color.hex;this.setState({elements});this.props.onChange(cases,this.state);};this.onChange=e=>{let value=e.target.value;if(value>e.target.max)value=e.target.max;const cases=this.props.case||1;this.setState({[e.target.name]:value},()=>{this.props.onChange(cases,this.state);});};}componentWillUnmount(){const cases=this.props.case||1;this.props.onChange(cases,this.state);}render(){const{elements,selected,timerFont,timerLabelFont}=this.state;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4 col-sm-12 order-sm-2\",children:elements.map((e,i)=>/*#__PURE__*/_createElement(ColorSelector,{...e,selectedIndex:selected,onClick:this.onClickElement,index:i,key:i}))}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-8 col-sm-12\",children:/*#__PURE__*/_jsx(SketchPicker,{defaultValue:\"#452135\",color:elements[selected].color,onChangeComplete:this.onColorChange})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-element\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"label-text\",children:[\"Timer Font*\",/*#__PURE__*/_jsx(Info,{text:\"Select font size for Timer.\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",max:50,name:\"timerFont\",min:14,className:\"form-control\",value:timerFont,onChange:this.onChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-element\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"label-text\",children:[\"Timer Label Font*\",/*#__PURE__*/_jsx(Info,{text:\"Select font size for Timer label and timer's font size keep minimum 14px.\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",max:20,name:\"timerLabelFont\",className:\"form-control\",value:timerLabelFont,onChange:this.onChange})]})]});}}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/CentralTimer/Style.js"],"names":["React","Component","SketchPicker","Info","ColorSelector","Style","state","elements","props","selected","timerFont","timerLabelFont","onClickElement","i","cases","case","setState","onChange","onColorChange","color","hex","e","value","target","max","name","componentWillUnmount","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\n\r\nimport \"react-color-picker/index.css\";\r\nimport { Info } from \"../../../comman/Info\";\r\nimport { ColorSelector } from \"../../../layout/LayoutSelector\";\r\nexport default class Style extends Component {\r\n  state = {\r\n    elements: this.props.elements,\r\n    selected: this.props.selected,\r\n    timerFont: this.props.timerFont,\r\n    timerLabelFont: this.props.timerLabelFont,\r\n  };\r\n\r\n  onClickElement = (i) => {\r\n    const cases = this.props.case || 1;\r\n    this.setState({ selected: i });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const cases = this.props.case || 1;\r\n    this.props.onChange(cases, this.state);\r\n  }\r\n\r\n  onColorChange = (color) => {\r\n    const cases = this.props.case || 1;\r\n    const { elements, selected } = this.state;\r\n    elements[selected].color = color.hex;\r\n    this.setState({ elements });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  onChange = (e) => {\r\n    let value = e.target.value;\r\n    if (value > e.target.max) value = e.target.max;\r\n    const cases = this.props.case || 1;\r\n    this.setState({ [e.target.name]: value }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n  render() {\r\n    const { elements, selected, timerFont, timerLabelFont } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 col-sm-12 order-sm-2\">\r\n            {elements.map((e, i) => (\r\n              <ColorSelector {...e} selectedIndex={selected} onClick={this.onClickElement} index={i} key={i} />\r\n            ))}\r\n          </div>\r\n          <div className=\"col-md-8 col-sm-12\">\r\n            <SketchPicker defaultValue=\"#452135\" color={elements[selected].color} onChangeComplete={this.onColorChange} />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            Timer Font*\r\n            <Info text=\"Select font size for Timer.\" />\r\n          </div>\r\n          <input type=\"number\" max={50} name=\"timerFont\" min={14} className=\"form-control\" value={timerFont} onChange={this.onChange} />\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            Timer Label Font*\r\n            <Info text=\"Select font size for Timer label and timer's font size keep minimum 14px.\" />\r\n          </div>\r\n          <input type=\"number\" max={20} name=\"timerLabelFont\" className=\"form-control\" value={timerLabelFont} onChange={this.onChange} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}