{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Editor.js\";\nimport React, { createRef, useEffect, useState } from \"react\";\nimport { Editor } from '@tinymce/tinymce-react'; // import ReactSummernote from \"react-summernote\";\n// import \"react-summernote/dist/react-summernote.css\";\n\nimport \"bootstrap/js/dist/modal\";\nimport \"bootstrap/js/dist/dropdown\";\nimport \"bootstrap/js/dist/tooltip\";\nimport \"./Editor.css\";\nimport tinymce from 'tinymce/tinymce'; // Theme\n\nimport 'tinymce/themes/silver'; // Toolbar icons\n\nimport 'tinymce/icons/default'; // Editor styles\n\nimport 'tinymce/skins/ui/oxide/skin.min.css'; // importing the plugin js.\n\nimport 'tinymce/plugins/advlist';\nimport 'tinymce/plugins/autolink';\nimport 'tinymce/plugins/link';\nimport 'tinymce/plugins/image';\nimport 'tinymce/plugins/lists';\nimport 'tinymce/plugins/charmap';\nimport 'tinymce/plugins/hr';\nimport 'tinymce/plugins/anchor';\nimport 'tinymce/plugins/searchreplace';\nimport 'tinymce/plugins/wordcount';\nimport 'tinymce/plugins/code';\nimport 'tinymce/plugins/fullscreen';\nimport 'tinymce/plugins/insertdatetime';\nimport 'tinymce/plugins/media';\nimport 'tinymce/plugins/nonbreaking';\nimport 'tinymce/plugins/table';\nimport 'tinymce/plugins/template';\nimport 'tinymce/plugins/help'; // Content styles, including inline UI like fake cursors\n\n/* eslint import/no-webpack-loader-syntax: off */\n// import contentCss from '!!raw-loader!tinymce/skins/content/default/content.min.css';\n// import contentUiCss from '!!raw-loader!tinymce/skins/ui/oxide/content.min.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TextEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = value => {\n      this.props.onChange(value);\n    };\n\n    this.ValidateCharacterLength = count => {\n      var max = 50;\n\n      if (count > max) {\n        alert(\"Maximum \" + max + \" characters allowed.\");\n        return false;\n      }\n\n      return;\n    };\n\n    this.state = {\n      content: props.value,\n      type: props.type\n    };\n    this.editorRef = /*#__PURE__*/createRef(null);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      value\n    } = this.props;\n\n    if (value) {\n      this.setState({\n        content: value\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.onChange(this.state.content);\n  }\n\n  render() {\n    const {\n      content\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        wordBreak: \"break-all\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        onInit: (evt, editor) => this.editorRef.current = editor,\n        initialValue: content,\n        init: {\n          menubar: false,\n          toolbar: ' fontselect fontsizeselect | bold italic | underline strikethrough | alignleft aligncenter alignright alignjustify |  numlist bullist | forecolor backcolor | pagebreak',\n          content_css: 'default',\n          font_formats: \"Andale Mono=andale mono,times; Arial=arial,helvetica,sans-serif; Arial Black=arial black,avant garde; Book Antiqua=book antiqua,palatino; Comic Sans MS=comic sans ms,sans-serif; Courier New=courier new,courier; Georgia=georgia,palatino; Helvetica=helvetica; Impact=impact,chicago; Symbol=symbol; Tahoma=tahoma,arial,helvetica,sans-serif; Terminal=terminal,monaco; Times New Roman=times new roman,times; Trebuchet MS=trebuchet ms,geneva; Verdana=verdana,geneva; Webdings=webdings; Wingdings=wingdings,zapf dingbats;Quicksand=Quicksand, sans-serif;Open Sans=Open Sans, sans-serif;Montserrat=Montserrat, sans-serif;Raleway=Raleway, sans-serif;Roboto=Roboto, sans-serif;PT Sans=PT Sans, sans-serif;Hahmlet=Hahmlet, serif;Andada Pro=Andada Pro, serif;Encode Sans=Encode Sans, sans-serif;Manrope=Manrope, sans-serif;Lora=Lora, serif;BioRhyme=BioRhyme, serif;Playfair Display=Playfair Display, serif;Archivo=Archivo, sans-serif;Ubuntu=Ubuntu, sans-serif;Rubik=Rubik, sans-serif;Lato=Lato, sans-serif;Old Standard TT=Old Standard TT, serif;Oswald=Oswald, sans-serif;Nunito=Nunito, sans-serif;Source Sans Pro=Source Sans Pro, sans-serif;\",\n          content_style: \"@import url('https://fonts.googleapis.com/css2?family=Andada+Pro:wght@400;700&family=Archivo:wght@400;700&family=BioRhyme:wght@300;700&family=Encode+Sans:wght@400;700&family=Hahmlet:wght@400;700&family=Lato:wght@400;700&family=Lora:wght@400;700&family=Manrope:wght@400;700&family=Montserrat:wght@400;700&family=Nunito:wght@400;700&family=Old+Standard+TT:wght@400;700&family=Open+Sans:wght@400;700&family=Oswald:wght@400;700&family=PT+Sans:wght@400;700&family=Playfair+Display:wght@400;700&family=Quicksand:wght@400;700&family=Raleway:wght@400;700&family=Roboto:wght@400;700&family=Rubik:wght@400;700&family=Source+Sans+Pro:wght@400;700&family=Ubuntu:wght@400;700&display=swap');\",\n          block_formats: 'Paragraph=p; Header 1=h1; Header 2=h2; Header 3=h3',\n          branding: false,\n          forced_root_block: false,\n          statusbar: false\n        },\n        onEditorChange: newValue => this.onChange(newValue)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Editor.js"],"names":["React","createRef","useEffect","useState","Editor","tinymce","TextEditor","Component","constructor","props","onChange","value","ValidateCharacterLength","count","max","alert","state","content","type","editorRef","bind","componentDidMount","setState","componentWillUnmount","render","wordBreak","evt","editor","current","menubar","toolbar","content_css","font_formats","content_style","block_formats","branding","forced_root_block","statusbar","newValue"],"mappings":"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","sourcesContent":["import React, { createRef, useEffect, useState } from \"react\";\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n// import ReactSummernote from \"react-summernote\";\r\n// import \"react-summernote/dist/react-summernote.css\";\r\nimport \"bootstrap/js/dist/modal\";\r\nimport \"bootstrap/js/dist/dropdown\";\r\nimport \"bootstrap/js/dist/tooltip\";\r\nimport \"./Editor.css\";\r\n\r\nimport tinymce from 'tinymce/tinymce';\r\n\r\n// Theme\r\nimport 'tinymce/themes/silver';\r\n// Toolbar icons\r\nimport 'tinymce/icons/default';\r\n// Editor styles\r\nimport 'tinymce/skins/ui/oxide/skin.min.css';\r\n\r\n// importing the plugin js.\r\nimport 'tinymce/plugins/advlist';\r\nimport 'tinymce/plugins/autolink';\r\nimport 'tinymce/plugins/link';\r\nimport 'tinymce/plugins/image';\r\nimport 'tinymce/plugins/lists';\r\nimport 'tinymce/plugins/charmap';\r\nimport 'tinymce/plugins/hr';\r\nimport 'tinymce/plugins/anchor';\r\nimport 'tinymce/plugins/searchreplace';\r\nimport 'tinymce/plugins/wordcount';\r\nimport 'tinymce/plugins/code';\r\nimport 'tinymce/plugins/fullscreen';\r\nimport 'tinymce/plugins/insertdatetime';\r\nimport 'tinymce/plugins/media';\r\nimport 'tinymce/plugins/nonbreaking';\r\nimport 'tinymce/plugins/table';\r\nimport 'tinymce/plugins/template';\r\nimport 'tinymce/plugins/help';\r\n\r\n  // Content styles, including inline UI like fake cursors\r\n  /* eslint import/no-webpack-loader-syntax: off */\r\n  // import contentCss from '!!raw-loader!tinymce/skins/content/default/content.min.css';\r\n  // import contentUiCss from '!!raw-loader!tinymce/skins/ui/oxide/content.min.css';\r\n\r\nexport default class TextEditor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      content: props.value,\r\n      type: props.type\r\n    };\r\n    this.editorRef = createRef(null);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { value } = this.props;\r\n    if (value) {\r\n      this.setState({ content: value });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onChange(this.state.content);\r\n  }\r\n  onChange = (value) => {\r\n    this.props.onChange(value);\r\n  };\r\n\r\n  ValidateCharacterLength = (count)=> {\r\n    var max = 50;\r\n    if (count > max) {\r\n      alert(\"Maximum \" + max + \" characters allowed.\")\r\n      return false;\r\n    }\r\n    return;\r\n  }\r\n\r\n  render() {\r\n    const { content } = this.state;\r\n    return (\r\n      <div style={{ wordBreak: \"break-all\" }}>\r\n        <Editor\r\n          onInit={(evt, editor) => this.editorRef.current = editor}\r\n          initialValue={content}\r\n          init={{\r\n            menubar : false,\r\n            toolbar: ' fontselect fontsizeselect | bold italic | underline strikethrough | alignleft aligncenter alignright alignjustify |  numlist bullist | forecolor backcolor | pagebreak',\r\n            content_css: 'default',\r\n            font_formats : \"Andale Mono=andale mono,times; Arial=arial,helvetica,sans-serif; Arial Black=arial black,avant garde; Book Antiqua=book antiqua,palatino; Comic Sans MS=comic sans ms,sans-serif; Courier New=courier new,courier; Georgia=georgia,palatino; Helvetica=helvetica; Impact=impact,chicago; Symbol=symbol; Tahoma=tahoma,arial,helvetica,sans-serif; Terminal=terminal,monaco; Times New Roman=times new roman,times; Trebuchet MS=trebuchet ms,geneva; Verdana=verdana,geneva; Webdings=webdings; Wingdings=wingdings,zapf dingbats;Quicksand=Quicksand, sans-serif;Open Sans=Open Sans, sans-serif;Montserrat=Montserrat, sans-serif;Raleway=Raleway, sans-serif;Roboto=Roboto, sans-serif;PT Sans=PT Sans, sans-serif;Hahmlet=Hahmlet, serif;Andada Pro=Andada Pro, serif;Encode Sans=Encode Sans, sans-serif;Manrope=Manrope, sans-serif;Lora=Lora, serif;BioRhyme=BioRhyme, serif;Playfair Display=Playfair Display, serif;Archivo=Archivo, sans-serif;Ubuntu=Ubuntu, sans-serif;Rubik=Rubik, sans-serif;Lato=Lato, sans-serif;Old Standard TT=Old Standard TT, serif;Oswald=Oswald, sans-serif;Nunito=Nunito, sans-serif;Source Sans Pro=Source Sans Pro, sans-serif;\",\r\n            content_style: \"@import url('https://fonts.googleapis.com/css2?family=Andada+Pro:wght@400;700&family=Archivo:wght@400;700&family=BioRhyme:wght@300;700&family=Encode+Sans:wght@400;700&family=Hahmlet:wght@400;700&family=Lato:wght@400;700&family=Lora:wght@400;700&family=Manrope:wght@400;700&family=Montserrat:wght@400;700&family=Nunito:wght@400;700&family=Old+Standard+TT:wght@400;700&family=Open+Sans:wght@400;700&family=Oswald:wght@400;700&family=PT+Sans:wght@400;700&family=Playfair+Display:wght@400;700&family=Quicksand:wght@400;700&family=Raleway:wght@400;700&family=Roboto:wght@400;700&family=Rubik:wght@400;700&family=Source+Sans+Pro:wght@400;700&family=Ubuntu:wght@400;700&display=swap');\",\r\n            block_formats: 'Paragraph=p; Header 1=h1; Header 2=h2; Header 3=h3',\r\n            branding: false,\r\n            forced_root_block : false,\r\n            statusbar: false,\r\n          }}     \r\n          onEditorChange={(newValue) => this.onChange(newValue)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}