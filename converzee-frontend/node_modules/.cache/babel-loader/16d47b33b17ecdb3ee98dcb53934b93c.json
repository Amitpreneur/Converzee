{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/BackButtonredirection/Text.js\";\nimport React, { Component } from \"react\";\nimport Util from \"../../../Util\";\nimport UrlInput from \"../../../comman/UrlInput\";\nimport { Info } from \"../../../comman/Info\";\nexport default class Text extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // campaignName: this.props.campaignName,\n      redirectUrl: this.props.redirectUrl\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      setTimeout(() => {\n        this.props.onChange(1, this.state);\n      }, 100);\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (Util.isRedirected) {\n      Util.isRedirected = false;\n      this.setState({\n        redirectUrl: nextProps.redirectUrl\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.onChange(1, this.state);\n  }\n\n  render() {\n    const {\n      redirectUrl\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Redirect URL*\", React.createElement(Info, {\n      text: \"URL when user click on backbutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(UrlInput, {\n      name: \"redirectUrl\",\n      value: redirectUrl,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/BackButtonredirection/Text.js"],"names":["React","Component","Util","UrlInput","Info","Text","state","redirectUrl","props","onChange","e","setState","target","name","value","setTimeout","componentWillReceiveProps","nextProps","isRedirected","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,eAAe,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC1CK,KAD0C,GAClC;AACN;AACAC,MAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWD;AAFlB,KADkC;;AAAA,SAa1CE,QAb0C,GAa9BC,CAAD,IAAO;AAChB,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA5B,OAAd;AACAC,MAAAA,UAAU,CAAC,MAAK;AACd,aAAKP,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuB,KAAKH,KAA5B;AACD,OAFS,EAEP,GAFO,CAAV;AAGD,KAlByC;AAAA;;AAM1CU,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIf,IAAI,CAACgB,YAAT,EAAuB;AACrBhB,MAAAA,IAAI,CAACgB,YAAL,GAAoB,KAApB;AACA,WAAKP,QAAL,CAAc;AAAEJ,QAAAA,WAAW,EAAEU,SAAS,CAACV;AAAzB,OAAd;AACD;AACF;;AASDY,EAAAA,oBAAoB,GAAG;AACrB,SAAKX,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuB,KAAKH,KAA5B;AACD;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA;AAAF,QAAkB,KAAKD,KAA7B;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,mCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAC,aAAf;AAA6B,MAAA,KAAK,EAAEC,WAApC;AAAiD,MAAA,QAAQ,EAAE,KAAKE,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,CADF;AAWD;;AArCyC","sourcesContent":["import React, { Component } from \"react\";\nimport Util from \"../../../Util\";\nimport UrlInput from \"../../../comman/UrlInput\";\nimport { Info } from \"../../../comman/Info\";\nexport default class Text extends Component {\n  state = {\n    // campaignName: this.props.campaignName,\n    redirectUrl: this.props.redirectUrl,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (Util.isRedirected) {\n      Util.isRedirected = false;\n      this.setState({ redirectUrl: nextProps.redirectUrl });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n    setTimeout(()=> {\n      this.props.onChange(1, this.state);\n    }, 100);\n  };\n\n  componentWillUnmount() {\n    this.props.onChange(1, this.state);\n  }\n\n  render() {\n    const { redirectUrl } = this.state;\n    return (\n      <div>\n        <div className=\"form-element\">\n          <div className=\"label-text\">\n            Redirect URL*\n            <Info text=\"URL when user click on backbutton\" />\n          </div>\n          <UrlInput name=\"redirectUrl\" value={redirectUrl} onChange={this.onChange} />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}