{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/BonusUpsell/Image.js\";\nimport React, { Component } from \"react\";\nimport Uploader from \"../comman/Uploader\";\nimport Util from \"../Util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ImageUp extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      image: this.props.image\n    };\n\n    this.onUploadDone = imageICON => {\n      this.setState({\n        image: imageICON.image,\n        disabled: true\n      });\n      this.props.onChange(2, imageICON.image);\n    };\n\n    this.onReset = () => {\n      this.setState({\n        image: \"\"\n      }, () => {\n        this.props.onChange(2, this.state.image);\n      });\n    };\n  }\n\n  componentWillMount() {\n    if (this.props.image !== \"\") this.state.disabled = true;\n  }\n\n  componentWillUnmount() {\n    this.props.onChange(2, this.state.image);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (Util.isRedirected) {\n      Util.isRedirected = false;\n      this.setState({\n        image: nextProps.image,\n        disabled: true\n      });\n    }\n  }\n\n  render() {\n    const props = {\n      onUploadDone: this.onUploadDone\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: /*#__PURE__*/_jsxDEV(Uploader, { ...props,\n        onReset: this.onReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/BonusUpsell/Image.js"],"names":["React","Component","Uploader","Util","ImageUp","state","image","props","onUploadDone","imageICON","setState","disabled","onChange","onReset","componentWillMount","componentWillUnmount","componentWillReceiveProps","nextProps","isRedirected","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AACA,eAAe,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC7CI,KAD6C,GACrC;AAAEC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD;AAApB,KADqC;;AAAA,SAc7CE,YAd6C,GAc7BC,SAAD,IAAe;AAC5B,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAEG,SAAS,CAACH,KAAnB;AAA0BK,QAAAA,QAAQ,EAAE;AAApC,OAAd;AACA,WAAKJ,KAAL,CAAWK,QAAX,CAAoB,CAApB,EAAuBH,SAAS,CAACH,KAAjC;AACD,KAjB4C;;AAAA,SAmB7CO,OAnB6C,GAmBnC,MAAM;AACd,WAAKH,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAE;AAAT,OAAd,EAA6B,MAAM;AACjC,aAAKC,KAAL,CAAWK,QAAX,CAAoB,CAApB,EAAuB,KAAKP,KAAL,CAAWC,KAAlC;AACD,OAFD;AAGD,KAvB4C;AAAA;;AAE7CQ,EAAAA,kBAAkB,GAAG;AACnB,QAAI,KAAKP,KAAL,CAAWD,KAAX,KAAqB,EAAzB,EAA6B,KAAKD,KAAL,CAAWM,QAAX,GAAsB,IAAtB;AAC9B;;AACDI,EAAAA,oBAAoB,GAAG;AACrB,SAAKR,KAAL,CAAWK,QAAX,CAAoB,CAApB,EAAuB,KAAKP,KAAL,CAAWC,KAAlC;AACD;;AACDU,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAId,IAAI,CAACe,YAAT,EAAuB;AACrBf,MAAAA,IAAI,CAACe,YAAL,GAAoB,KAApB;AACA,WAAKR,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAEW,SAAS,CAACX,KAAnB;AAA0BK,QAAAA,QAAQ,EAAE;AAApC,OAAd;AACD;AACF;;AAYDQ,EAAAA,MAAM,GAAG;AACP,UAAMZ,KAAK,GAAG;AACZC,MAAAA,YAAY,EAAE,KAAKA;AADP,KAAd;AAGA,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE,QAAC,QAAD,OAAcD,KAAd;AAAqB,QAAA,OAAO,EAAE,KAAKM;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAlC4C","sourcesContent":["import React, { Component } from \"react\";\r\nimport Uploader from \"../comman/Uploader\";\r\nimport Util from \"../Util\";\r\nexport default class ImageUp extends Component {\r\n  state = { image: this.props.image };\r\n  componentWillMount() {\r\n    if (this.props.image !== \"\") this.state.disabled = true;\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.onChange(2, this.state.image);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (Util.isRedirected) {\r\n      Util.isRedirected = false;\r\n      this.setState({ image: nextProps.image, disabled: true });\r\n    }\r\n  }\r\n  onUploadDone = (imageICON) => {\r\n    this.setState({ image: imageICON.image, disabled: true });\r\n    this.props.onChange(2, imageICON.image);\r\n  };\r\n\r\n  onReset = () => {\r\n    this.setState({ image: \"\" }, () => {\r\n      this.props.onChange(2, this.state.image);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const props = {\r\n      onUploadDone: this.onUploadDone,\r\n    };\r\n    return (\r\n      <div className=\"col-12\">\r\n        <Uploader {...props} onReset={this.onReset} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}