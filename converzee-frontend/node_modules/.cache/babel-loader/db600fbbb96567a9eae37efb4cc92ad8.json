{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/MobileVibrator/index.js\";\nimport React, { Component } from \"react\";\nimport \"../../Create.css\";\nimport RequestHandler from \"../../../../actions/RequestHandler\";\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath } from \"../../../../actions/URLs\";\nimport SideBar from \"./SideBar\";\nimport ToolUtil from \"../../../../utils/ToolUtil\";\nimport Timer from \"./Timer\";\nimport { MobileVibratorModal, MobileVibratorModalResponse } from \"../../../utils/Modal\";\nimport Util from \"../../../Util\";\nimport { Drawer } from \"antd\";\nimport { ButtonsGroup, ToolLayout } from \"../../../layout/ToolLayout\";\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mobVib = {\n  activeTab: 1,\n  TEXT: {\n    campaignName: \"\",\n    headline: \"\",\n    subheadline: [\"\"]\n  },\n  timing: {\n    firstVib: 0,\n    pause: 0,\n    secondVib: 0\n  },\n  CODE: {\n    include: [{\n      type: \"contains\",\n      url: \"\"\n    }],\n    exclude: [{\n      type: \"contains\",\n      url: \"\"\n    }]\n  }\n};\nexport default class MobileVibrator extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = mobVib;\n\n    this.onChangeActive = tabIndex => {\n      const {\n        activeTab\n      } = this.state;\n\n      if (activeTab !== tabIndex) {\n        this.setState({\n          activeTab: tabIndex\n        });\n      }\n    };\n\n    this.onUpdate = (index, data) => {\n      switch (index) {\n        case 1:\n          this.setState({\n            timing: data\n          });\n          break;\n\n        case 2:\n          this.setState({\n            code: data\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.renderMain = () => {\n      const {\n        activeTab,\n        TEXT,\n        timing,\n        CODE\n      } = this.state;\n      let component = null;\n\n      switch (activeTab) {\n        case 1:\n          component = /*#__PURE__*/_jsxDEV(Timer, { ...timing,\n            onChange: this.onUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this);\n          break;\n\n        default:\n          // component = <Text {...TEXT} onChange={this.onUpdate} />;\n          break;\n      }\n\n      return component;\n    };\n\n    this.onClickSave = () => {\n      const {\n        timing\n      } = this.state;\n      const {\n        firstVib,\n        pause,\n        secondVib\n      } = timing;\n      const script = genCodeMobileVibartor(firstVib * 1000, pause * 1000, secondVib * 1000);\n      window.gs.setScript(script);\n      setTimeout(() => {\n        this.props.history.push(\"/Campaigns\");\n      }, 3000);\n    };\n\n    this.renderRight = () => {\n      return /*#__PURE__*/_jsxDEV(ReponsiveImage, {\n        isAs: true,\n        url: \"asset/mobilevab.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 12\n      }, this);\n    };\n\n    this.back = () => {\n      this.props.history.push(\"/Create\");\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match ? this.props.match.params ? this.props.match.params.id : null : null;\n\n    if (id) {\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\n        if (res) {\n          Util.isRedirected = true;\n          const data = MobileVibratorModalResponse(res);\n\n          if (data) {\n            this.setState(data, () => {\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\n            });\n          }\n        }\n      });\n    } else {\n      const toolId = 10;\n      this.setState({\n        toolId: toolId,\n        toolName: ToolUtil.getTool(toolId),\n        name: Util.CAMPAIGNS_NAME\n      });\n      Util.RedirectWhenCampaignEmpty(this.props);\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ToolLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-10 toolItem\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: this.renderMain()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6 mt-2\",\n              children: this.renderRight()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonsGroup, {\n              backUrl: this.back,\n              save: this.onClickSave\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-1 sideBarButtomPanel\",\n          children: /*#__PURE__*/_jsxDEV(SideBar, {\n            activeTab: this.state.activeTab,\n            onChangeActive: this.onChangeActive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction genCodeMobileVibartor(f, s, t) {\n  return \"<script>document.addEventListener(\\\"click\\\",function(){navigator.vibrate([\".concat(f, \",\").concat(s, \",\").concat(t, \"]),document.removeEventListener(\\\"click\\\",function(){})});</script>\");\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/MobileVibrator/index.js"],"names":["React","Component","RequestHandler","GET_ONE_TOOL","SAVE_TOOL","getPath","SideBar","ToolUtil","Timer","MobileVibratorModal","MobileVibratorModalResponse","Util","Drawer","ButtonsGroup","ToolLayout","ReponsiveImage","mobVib","activeTab","TEXT","campaignName","headline","subheadline","timing","firstVib","pause","secondVib","CODE","include","type","url","exclude","MobileVibrator","state","onChangeActive","tabIndex","setState","onUpdate","index","data","code","renderMain","component","onClickSave","script","genCodeMobileVibartor","window","gs","setScript","setTimeout","props","history","push","renderRight","back","componentDidMount","id","match","params","PostRequest","res","err","isRedirected","navTitle","getTool","toolId","name","toolName","CAMPAIGNS_NAME","RedirectWhenCampaignEmpty","render","f","s","t"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../../Create.css\";\r\nimport RequestHandler from \"../../../../actions/RequestHandler\";\r\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath } from \"../../../../actions/URLs\";\r\nimport SideBar from \"./SideBar\";\r\nimport ToolUtil from \"../../../../utils/ToolUtil\";\r\nimport Timer from \"./Timer\";\r\nimport { MobileVibratorModal, MobileVibratorModalResponse } from \"../../../utils/Modal\";\r\nimport Util from \"../../../Util\";\r\nimport { Drawer } from \"antd\";\r\nimport { ButtonsGroup, ToolLayout } from \"../../../layout/ToolLayout\";\r\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\r\n\r\nconst mobVib = {\r\n  activeTab: 1,\r\n  TEXT: { campaignName: \"\", headline: \"\", subheadline: [\"\"] },\r\n  timing: { firstVib: 0, pause: 0, secondVib: 0 },\r\n  CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: \"\" }] },\r\n};\r\nexport default class MobileVibrator extends Component {\r\n  state = mobVib;\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        if (res) {\r\n          Util.isRedirected = true;\r\n          const data = MobileVibratorModalResponse(res);\r\n          if (data) {\r\n            this.setState(data, () => {\r\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const toolId = 10;\r\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\r\n      Util.RedirectWhenCampaignEmpty(this.props);\r\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\r\n    }\r\n  }\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n  onUpdate = (index, data) => {\r\n    switch (index) {\r\n      case 1:\r\n        this.setState({ timing: data });\r\n        break;\r\n      case 2:\r\n        this.setState({ code: data });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  renderMain = () => {\r\n    const { activeTab, TEXT, timing, CODE } = this.state;\r\n    let component = null;\r\n    switch (activeTab) {\r\n      case 1:\r\n        component = <Timer {...timing} onChange={this.onUpdate} />;\r\n        break;\r\n      default:\r\n        // component = <Text {...TEXT} onChange={this.onUpdate} />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    const { timing } = this.state;\r\n    const { firstVib, pause, secondVib } = timing;\r\n    const script = genCodeMobileVibartor(firstVib * 1000, pause * 1000, secondVib * 1000);\r\n    window.gs.setScript(script);\r\n    setTimeout(() => {\r\n      this.props.history.push(\"/Campaigns\");\r\n    }, 3000);\r\n  };\r\n\r\n  renderRight = () => {\r\n    return <ReponsiveImage isAs={true} url={\"asset/mobilevab.png\"} />;\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(\"/Create\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ToolLayout>\r\n        <div className=\"row\">\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\r\n              <ButtonsGroup backUrl={this.back} save={this.onClickSave} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n\r\nfunction genCodeMobileVibartor(f, s, t) {\r\n  return `<script>document.addEventListener(\"click\",function(){navigator.vibrate([${f},${s},${t}]),document.removeEventListener(\"click\",function(){})});</script>`;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}