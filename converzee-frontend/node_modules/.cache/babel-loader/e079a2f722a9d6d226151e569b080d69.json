{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/DropDown.js\";\nimport * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport ToolUtil from \"../../utils/ToolUtil\";\nexport default class DropDown extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onChange = e => {\n      if (this.props.index) {\n        this.props.onChange(e.target.value, this.props.index);\n      } else {\n        this.props.onChange(e.target.value);\n      }\n    };\n\n    this.renderOptions = (option, i) => {\n      return React.createElement(\"option\", {\n        key: i,\n        selected: this.props.value === option.value ? true : false,\n        disabled: option.disable,\n        value: option.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, option.label);\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      style,\n      options,\n      onChange,\n      disable,\n      selected,\n      index\n    } = this.props;\n    return React.createElement(\"select\", {\n      disabled: disable,\n      onChange: this.onChange,\n      style: style,\n      className: classes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, options.map(this.renderOptions));\n  }\n\n}\nDropDown.propTypes = {\n  classes: PropTypes.string,\n  options: PropTypes.array,\n  onChange: PropTypes.func,\n  disable: PropTypes.bool,\n  value: PropTypes.string,\n  index: PropTypes.number,\n  style: PropTypes.object\n};\nDropDown.defaultProps = {\n  classes: \"form-control form-control-sm\",\n  value: \"\",\n  options: [],\n  disable: false,\n  style: {\n    width: \"min-content\"\n  }\n};\nexport class ToolSelectorDropDown extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.OTO1 = [{\n      tid: 1,\n      selected: false,\n      text: \"Tab Messaging\"\n    }, {\n      tid: 2,\n      selected: false,\n      text: \"Urgency Timer\"\n    }, {\n      tid: 5,\n      selected: false,\n      text: \"Video Popup\"\n    }, {\n      tid: 6,\n      selected: false,\n      text: \"Central Timer\"\n    }, {\n      tid: 7,\n      selected: false,\n      text: \"Geo Redirection\"\n    }, {\n      tid: 3,\n      selected: false,\n      text: \"HELLO BAR\"\n    }, {\n      tid: 4,\n      selected: false,\n      text: \"Image Popup\"\n    }, {\n      tid: 9,\n      selected: false,\n      text: \"Exit Intent\"\n    }, {\n      tid: 10,\n      selected: false,\n      text: \"Mobile Vibrator\"\n    }, {\n      tid: 13,\n      selected: false,\n      text: \"Dynamic Elements\"\n    }, {\n      tid: 14,\n      selected: false,\n      text: \"Offer iframe\"\n    }, {\n      tid: 15,\n      selected: false,\n      text: \"Back Button redirection\"\n    }, {\n      tid: 17,\n      selected: false,\n      text: \"HELLO BAR + Timer\"\n    }];\n    this.isOTO1All = false;\n    this.isOTO2All = false;\n    this.isOTO3All = false;\n    this.selected = new Set();\n    this.state = {\n      open: false\n    };\n\n    this.openToolBox = () => {\n      const {\n        open\n      } = this.state;\n      this.setState({\n        open: !open\n      }, () => {\n        if (this.state.open) {\n          document.addEventListener(\"click\", this.onSelectionDone);\n        }\n      });\n      console.log(\"CLICK\");\n    };\n\n    this.onSelectionDone = e => {\n      let isInsideClick = false;\n      e.path.forEach(ele => {\n        if (ele.className === \"toolSelectorDropDown\") isInsideClick = true;\n      });\n\n      if (!isInsideClick) {\n        document.removeEventListener(\"click\", this.onSelectionDone);\n        this.setState({\n          open: false\n        });\n      }\n    };\n\n    this.onChange = item => {\n      const {\n        selected\n      } = this;\n\n      if (selected.has(item)) {\n        selected.delete(item);\n      } else {\n        selected.add(item);\n      }\n\n      this.props.onChange(Array.from(selected));\n      this.forceUpdate();\n    };\n\n    this.onlySetItem = (item, isAdd) => {\n      const {\n        selected\n      } = this;\n\n      if (!isAdd) {\n        selected.delete(item);\n      } else {\n        selected.add(item);\n      }\n    };\n\n    this.onFrontEndSelectAll = () => {\n      this.isOTO1All = !this.isOTO1All;\n      this.OTO1.forEach(e => {\n        e.selected = this.isOTO1All;\n        this.onlySetItem(e.tid, this.isOTO1All);\n      });\n      this.props.onChange(Array.from(this.selected));\n      this.forceUpdate();\n    };\n\n    this.onFrontEndSelect = (item, i, isTrue) => {\n      this.OTO1[i][\"selected\"] = !isTrue;\n      this.onChange(item);\n    };\n\n    this.onOTO2All = () => {\n      this.isOTO2All = !this.isOTO2All;\n      this.OTO2.forEach(e => {\n        e.selected = this.isOTO2All;\n        this.onlySetItem(e.tid, this.isOTO2All);\n      });\n      this.props.onChange(Array.from(this.selected));\n      this.forceUpdate();\n    };\n\n    this.onOTO2Select = (item, i, isTrue) => {\n      this.OTO2[i][\"selected\"] = !isTrue;\n      this.onChange(item);\n    };\n\n    this.onOTO3All = () => {\n      this.isOTO3All = !this.isOTO3All;\n      this.OTO3.forEach(e => {\n        e.selected = this.isOTO3All;\n        this.onlySetItem(e.tid, this.isOTO3All);\n      });\n      this.props.onChange(Array.from(this.selected));\n      this.forceUpdate();\n    };\n\n    this.onOTO3Select = (item, i, isTrue) => {\n      this.OTO3[i][\"selected\"] = !isTrue;\n      this.onChange(item);\n    };\n  }\n\n  render() {\n    const {\n      isOTO1All,\n      isOTO2All,\n      isOTO3All,\n      selected\n    } = this;\n    const {\n      open\n    } = this.state;\n    console.log(open);\n    return React.createElement(\"div\", {\n      className: \"toolSelectorDropDown\",\n      name: \"ToolSelector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(ElementSelected, {\n      selected: selected,\n      elementClick: this.openToolBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), open ? React.createElement(\"div\", {\n      className: \"dropdown-menu mck_dropdown-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: isOTO1All ? \"dropdown-menu-title tool_menuItem_selected\" : \"dropdown-menu-title\",\n      onClick: this.onFrontEndSelectAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Front End\"), this.OTO1.map((e, i) => React.createElement(OptionItem, {\n      key: i,\n      index: i,\n      text: e.text,\n      selected: e.selected,\n      tid: e.tid,\n      onChange: this.onFrontEndSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }))) : null);\n  }\n\n}\n\nconst OptionItem = props => {\n  return React.createElement(\"div\", {\n    className: props.selected ? \"tool_menuItem tool_menuItem_selected\" : \"tool_menuItem\",\n    onClick: () => props.onChange(props.tid, props.index, props.selected),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, props.text, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  })));\n};\n\nconst ElementSelected = props => {\n  const selected = props.selected ? Array.from(props.selected) : [];\n  return React.createElement(\"button\", {\n    onFocus: props.elementClick,\n    className: \"toolDropdownItem\",\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ant-select-selection ant-select-selection--multiple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, selected.map((e, i) => React.createElement(InnerItem, {\n    key: i,\n    tid: e,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  })))));\n};\n\nconst InnerItem = function (props) {\n  return React.createElement(\"li\", {\n    className: \"ant-select-selection__choice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, ToolUtil.getTool(props.tid));\n};","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/DropDown.js"],"names":["React","PropTypes","_","ToolUtil","DropDown","Component","onChange","e","props","index","target","value","renderOptions","option","i","disable","label","render","classes","style","options","selected","map","propTypes","string","array","func","bool","number","object","defaultProps","width","ToolSelectorDropDown","PureComponent","OTO1","tid","text","isOTO1All","isOTO2All","isOTO3All","Set","state","open","openToolBox","setState","document","addEventListener","onSelectionDone","console","log","isInsideClick","path","forEach","ele","className","removeEventListener","item","has","delete","add","Array","from","forceUpdate","onlySetItem","isAdd","onFrontEndSelectAll","onFrontEndSelect","isTrue","onOTO2All","OTO2","onOTO2Select","onOTO3All","OTO3","onOTO3Select","OptionItem","ElementSelected","elementClick","InnerItem","getTool"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport ToolUtil from \"../../utils/ToolUtil\";\nexport default class DropDown extends React.Component {\n  static propTypes = {\n    classes: PropTypes.string,\n    options: PropTypes.array,\n    onChange: PropTypes.func,\n    disable: PropTypes.bool,\n    value: PropTypes.string,\n    index: PropTypes.number,\n    style: PropTypes.object,\n  };\n\n  static defaultProps = {\n    classes: \"form-control form-control-sm\",\n    value: \"\",\n    options: [],\n    disable: false,\n    style: { width: \"min-content\" },\n  };\n\n  onChange = (e) => {\n    if (this.props.index) {\n      this.props.onChange(e.target.value, this.props.index);\n    } else {\n      this.props.onChange(e.target.value);\n    }\n  };\n\n  renderOptions = (option, i) => {\n    return (\n      <option key={i} selected={this.props.value === option.value ? true : false} disabled={option.disable} value={option.value}>\n        {option.label}\n      </option>\n    );\n  };\n\n  render() {\n    const { classes, style, options, onChange, disable, selected, index } = this.props;\n    return (\n      <select disabled={disable} onChange={this.onChange} style={style} className={classes}>\n        {options.map(this.renderOptions)}\n      </select>\n    );\n  }\n}\n\nexport class ToolSelectorDropDown extends React.PureComponent {\n  OTO1 = [\n    { tid: 1, selected: false, text: \"Tab Messaging\" },\n    { tid: 2, selected: false, text: \"Urgency Timer\" },\n    { tid: 5, selected: false, text: \"Video Popup\" },\n    { tid: 6, selected: false, text: \"Central Timer\" },\n    { tid: 7, selected: false, text: \"Geo Redirection\" },\n    { tid: 3, selected: false, text: \"HELLO BAR\" },\n    { tid: 4, selected: false, text: \"Image Popup\" },\n    { tid: 9, selected: false, text: \"Exit Intent\" },\n    { tid: 10, selected: false, text: \"Mobile Vibrator\" },\n    { tid: 13, selected: false, text: \"Dynamic Elements\" },\n    { tid: 14, selected: false, text: \"Offer iframe\" },\n    { tid: 15, selected: false, text: \"Back Button redirection\" },\n    { tid: 17, selected: false, text: \"HELLO BAR + Timer\" },\n  ];\n  // OTO2 = [\n  //   { tid: 18, selected: false, text: \"Run campaign on third party site\" },\n  //   { tid: 19, selected: false, text: \"Optin forms\" },\n  // ];\n  // OTO3 = [];\n  isOTO1All = false;\n  isOTO2All = false;\n  isOTO3All = false;\n  selected = new Set();\n  state = {\n    open: false,\n  };\n  openToolBox = () => {\n    const { open } = this.state;\n    this.setState({ open: !open }, () => {\n      if (this.state.open) {\n        document.addEventListener(\"click\", this.onSelectionDone);\n      }\n    });\n    console.log(\"CLICK\");\n  };\n\n  onSelectionDone = (e) => {\n    let isInsideClick = false;\n    e.path.forEach((ele) => {\n      if (ele.className === \"toolSelectorDropDown\") isInsideClick = true;\n    });\n    if (!isInsideClick) {\n      document.removeEventListener(\"click\", this.onSelectionDone);\n      this.setState({ open: false });\n    }\n  };\n\n  onChange = (item) => {\n    const { selected } = this;\n    if (selected.has(item)) {\n      selected.delete(item);\n    } else {\n      selected.add(item);\n    }\n    this.props.onChange(Array.from(selected));\n    this.forceUpdate();\n  };\n\n  onlySetItem = (item, isAdd) => {\n    const { selected } = this;\n    if (!isAdd) {\n      selected.delete(item);\n    } else {\n      selected.add(item);\n    }\n  };\n\n  onFrontEndSelectAll = () => {\n    this.isOTO1All = !this.isOTO1All;\n    this.OTO1.forEach((e) => {\n      e.selected = this.isOTO1All;\n      this.onlySetItem(e.tid, this.isOTO1All);\n    });\n    this.props.onChange(Array.from(this.selected));\n    this.forceUpdate();\n  };\n  onFrontEndSelect = (item, i, isTrue) => {\n    this.OTO1[i][\"selected\"] = !isTrue;\n    this.onChange(item);\n  };\n  onOTO2All = () => {\n    this.isOTO2All = !this.isOTO2All;\n    this.OTO2.forEach((e) => {\n      e.selected = this.isOTO2All;\n      this.onlySetItem(e.tid, this.isOTO2All);\n    });\n    this.props.onChange(Array.from(this.selected));\n    this.forceUpdate();\n  };\n  onOTO2Select = (item, i, isTrue) => {\n    this.OTO2[i][\"selected\"] = !isTrue;\n    this.onChange(item);\n  };\n  onOTO3All = () => {\n    this.isOTO3All = !this.isOTO3All;\n    this.OTO3.forEach((e) => {\n      e.selected = this.isOTO3All;\n      this.onlySetItem(e.tid, this.isOTO3All);\n    });\n    this.props.onChange(Array.from(this.selected));\n    this.forceUpdate();\n  };\n  onOTO3Select = (item, i, isTrue) => {\n    this.OTO3[i][\"selected\"] = !isTrue;\n    this.onChange(item);\n  };\n  render() {\n    const { isOTO1All, isOTO2All, isOTO3All, selected } = this;\n    const { open } = this.state;\n    console.log(open);\n    return (\n      <div className=\"toolSelectorDropDown\" name=\"ToolSelector\">\n        <ElementSelected selected={selected} elementClick={this.openToolBox} />\n        {open ? (\n          <div className=\"dropdown-menu mck_dropdown-menu\">\n            <div className={isOTO1All ? \"dropdown-menu-title tool_menuItem_selected\" : \"dropdown-menu-title\"} onClick={this.onFrontEndSelectAll}>\n              Front End\n            </div>\n            {this.OTO1.map((e, i) => (\n              <OptionItem key={i} index={i} text={e.text} selected={e.selected} tid={e.tid} onChange={this.onFrontEndSelect} />\n            ))}\n            {/* <div className={isOTO2All ? \"dropdown-menu-title tool_menuItem_selected\" : \"dropdown-menu-title\"} onClick={this.onOTO2All}>\n              OTO2\n            </div>\n            {this.OTO2.map((e, i) => (\n              <OptionItem key={i} index={i} text={e.text} selected={e.selected} tid={e.tid} onChange={this.onOTO2Select} />\n            ))}\n            <div className={isOTO3All ? \"dropdown-menu-title tool_menuItem_selected\" : \"dropdown-menu-title\"} onClick={this.onOTO3All}>\n              OTO3\n            </div> */}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst OptionItem = (props) => {\n  return (\n    <div className={props.selected ? \"tool_menuItem tool_menuItem_selected\" : \"tool_menuItem\"} onClick={() => props.onChange(props.tid, props.index, props.selected)}>\n      {props.text}\n      <span>\n        <i className=\"fa fa-check\" />\n      </span>\n    </div>\n  );\n};\n\nconst ElementSelected = (props) => {\n  const selected = props.selected ? Array.from(props.selected) : [];\n  return (\n    <button onFocus={props.elementClick} className=\"toolDropdownItem\" style={{ width: \"100%\" }}>\n      <div\n        className=\"ant-select-selection\n            ant-select-selection--multiple\"\n      >\n        <ul>\n          {selected.map((e, i) => (\n            <InnerItem key={i} tid={e} />\n          ))}\n        </ul>\n      </div>\n    </button>\n  );\n};\n\nconst InnerItem = function (props) {\n  return <li className=\"ant-select-selection__choice\">{ToolUtil.getTool(props.tid)}</li>;\n};\n"]},"metadata":{},"sourceType":"module"}