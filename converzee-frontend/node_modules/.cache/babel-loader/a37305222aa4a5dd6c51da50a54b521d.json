{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/subpages/create/Style.js\";\nimport React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport \"react-color-picker/index.css\";\nimport { ColorSelector } from \"../../layout/LayoutSelector\";\nexport default class Style extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      elements: this.props.elements,\n      selected: this.props.selected\n    };\n\n    this.onClickElement = i => {\n      const cases = this.props.case || 1;\n      this.setState({\n        selected: i\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onColorChange = color => {\n      const cases = this.props.case || 1;\n      const {\n        elements,\n        selected\n      } = this.state;\n      elements[selected].color = color.hex;\n      this.setState({\n        elements\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.renderElements = (ele, i) => {\n      const {\n        selected\n      } = this.state;\n      const selectedDiv = selected === i ? \"element-div-active\" : \"\";\n      const selectedText = selected === i ? \"element-text-active\" : \"\";\n      return React.createElement(\"div\", {\n        className: \"element-list\",\n        onClick: () => this.onClickElement(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"element-list-text \" + selectedText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, ele.text), React.createElement(\"div\", {\n        className: \"element-list-div \" + selectedDiv,\n        style: {\n          backgroundColor: ele.color\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    };\n  }\n\n  componentWillUnmount() {\n    const cases = this.props.case || 1;\n    this.props.onChange(cases, this.state);\n  }\n\n  render() {\n    const {\n      elements,\n      selected\n    } = this.state;\n    return (// <div className=\"row\">\n      //   <div className=\"col-md-6 col-sm-12\">\n      //     <SketchPicker defaultValue=\"#452135\" color={elements[selected].color} onChangeComplete={this.onColorChange} />\n      //   </div>\n      //   <div className=\"col-md-6 col-sm-12\">{elements.map(this.renderElements)}</div>\n      // </div>\n      React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-4 col-sm-12 order-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, elements.map((e, i) => React.createElement(ColorSelector, Object.assign({}, e, {\n        selectedIndex: selected,\n        onClick: this.onClickElement,\n        index: i,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"col-md-8 col-sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(SketchPicker, {\n        defaultValue: \"#452135\",\n        color: elements[selected].color,\n        onChangeComplete: this.onColorChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })))\n    );\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/subpages/create/Style.js"],"names":["React","Component","SketchPicker","ColorSelector","Style","state","elements","props","selected","onClickElement","i","cases","case","setState","onChange","onColorChange","color","hex","renderElements","ele","selectedDiv","selectedText","text","backgroundColor","componentWillUnmount","render","map","e"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\n\nimport \"react-color-picker/index.css\";\nimport { ColorSelector } from \"../../layout/LayoutSelector\";\nexport default class Style extends Component {\n  state = {\n    elements: this.props.elements,\n    selected: this.props.selected,\n  };\n\n  onClickElement = (i) => {\n    const cases = this.props.case || 1;\n    this.setState({ selected: i });\n    this.props.onChange(cases, this.state);\n  };\n\n  componentWillUnmount() {\n    const cases = this.props.case || 1;\n    this.props.onChange(cases, this.state);\n  }\n\n  onColorChange = (color) => {\n    const cases = this.props.case || 1;\n    const { elements, selected } = this.state;\n    elements[selected].color = color.hex;\n    this.setState({ elements });\n    this.props.onChange(cases, this.state);\n  };\n\n  renderElements = (ele, i) => {\n    const { selected } = this.state;\n    const selectedDiv = selected === i ? \"element-div-active\" : \"\";\n    const selectedText = selected === i ? \"element-text-active\" : \"\";\n    return (\n      <div className={\"element-list\"} onClick={() => this.onClickElement(i)}>\n        <div className={\"element-list-text \" + selectedText}>{ele.text}</div>\n        <div className={\"element-list-div \" + selectedDiv} style={{ backgroundColor: ele.color }}></div>\n      </div>\n    );\n  };\n  render() {\n    const { elements, selected } = this.state;\n    return (\n      // <div className=\"row\">\n      //   <div className=\"col-md-6 col-sm-12\">\n      //     <SketchPicker defaultValue=\"#452135\" color={elements[selected].color} onChangeComplete={this.onColorChange} />\n      //   </div>\n      //   <div className=\"col-md-6 col-sm-12\">{elements.map(this.renderElements)}</div>\n      // </div>\n      <div className=\"row\">\n        <div className=\"col-md-4 col-sm-12 order-sm-2\">\n          {elements.map((e, i) => (\n            <ColorSelector {...e} selectedIndex={selected} onClick={this.onClickElement} index={i} key={i} />\n          ))}\n        </div>\n        <div className=\"col-md-8 col-sm-12\">\n          <SketchPicker defaultValue=\"#452135\" color={elements[selected].color} onChangeComplete={this.onColorChange} />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}