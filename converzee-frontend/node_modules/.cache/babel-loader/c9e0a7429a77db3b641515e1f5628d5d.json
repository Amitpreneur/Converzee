{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/UrgencyTimer/Preview.js\";\nimport React, { Component } from \"react\";\nimport { getcolor } from \"../../../Util\";\nimport \"./Preview.css\";\nexport default class Preview extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      millsecond: 0,\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      total: 0 //endtime: new Date(Date.parse(new Date()) + 15 * 24 * 60 * 60 * 1000)\n\n    };\n    this.intervalHandler = null;\n\n    this.initializeClock = endtime => {\n      if (this.intervalHandler) clearInterval(this.intervalHandler);\n      this.updateClock(endtime);\n      this.intervalHandler = setInterval(this.updateClock, 1000);\n    };\n\n    this.getTimeData = () => {\n      const timer = new Date();\n      timer.setHours(timer.getHours() + parseInt(this.props.TIMER.HH || 0));\n      timer.setMinutes(timer.getMinutes() + parseInt(this.props.TIMER.MM || 0));\n      timer.setSeconds(timer.getSeconds() + parseInt(this.props.TIMER.SS || 0)); // timer.setMinutes(timer.getMinutes() + parseInt(50 || 0));\n      // timer.setSeconds(timer.getSeconds() + parseInt(50 || 0));\n\n      return timer;\n    };\n\n    this.updateClock = () => {\n      var t = getTimeRemaining(this.state.endtime);\n      this.setState({\n        days: t.days,\n        hours: t.hours,\n        minutes: t.minutes,\n        seconds: t.seconds\n      });\n\n      if (t.total <= 0) {\n        clearInterval(this.intervalHandler);\n        this.setState({\n          days: 0,\n          hours: 0,\n          minutes: 0,\n          seconds: 0\n        });\n      }\n    };\n\n    this.getColor = key => {\n      return getcolor(this.props.STYLE.elements, key);\n    };\n\n    this.getLabelStyle = () => {\n      const color = this.getColor(\"centralTimerLabel\");\n      const backgroundColor = this.getColor(\"highlightBackground\");\n      return {\n        color: color,\n        fontWeight: parseInt(this.props.STYLE.labelBold),\n        backgroundColor: \"#ffffff00\",\n        fontSize: parseInt(this.props.STYLE.timerLabelFont)\n      };\n    };\n\n    this.getTimerStyle = () => {\n      const color = this.getColor(\"timerText\");\n      const backgroundColor = this.getColor(\"highlight\");\n      return {\n        color: color,\n        fontWeight: parseInt(this.props.STYLE.timerBold),\n        backgroundColor: \"#ffffff00\",\n        fontSize: parseInt(this.props.STYLE.timerFont)\n      };\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      endtime: this.getTimeData()\n    });\n    this.initializeClock(this.getTimeData());\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalHandler);\n  }\n\n  render() {\n    // const { isStop, millsecond } = this.state;\n    // const style = this.getStyle();\n    const labelStyle = this.getLabelStyle();\n    const timerStyle = this.getTimerStyle();\n    const {\n      hours,\n      minutes,\n      seconds\n    } = this.state;\n    const {\n      HH,\n      MM,\n      SS\n    } = this.props.toolData;\n    return React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"previewPortal\",\n      style: {\n        backgroundColor: \"#ffffff00\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"urgencyMain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: timerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, hours, \"\\xA0:\", React.createElement(\"div\", {\n      style: labelStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"H\")), React.createElement(\"div\", {\n      style: timerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, minutes, \"\\xA0:\", React.createElement(\"div\", {\n      style: labelStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"M\")), React.createElement(\"div\", {\n      style: timerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, seconds, React.createElement(\"div\", {\n      style: labelStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"S\")))));\n  }\n\n}\n\nfunction getTimeRemaining(endtime) {\n  var t = Date.parse(endtime) - Date.parse(new Date());\n  var seconds = Math.floor(t / 1000 % 60);\n  var minutes = Math.floor(t / 1000 / 60 % 60);\n  var hours = Math.floor(t / (1000 * 60 * 60) % 24);\n  var days = Math.floor(t / (1000 * 60 * 60 * 24));\n  return {\n    total: t,\n    days: days,\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds\n  };\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/UrgencyTimer/Preview.js"],"names":["React","Component","getcolor","Preview","state","millsecond","days","hours","minutes","seconds","total","intervalHandler","initializeClock","endtime","clearInterval","updateClock","setInterval","getTimeData","timer","Date","setHours","getHours","parseInt","props","TIMER","HH","setMinutes","getMinutes","MM","setSeconds","getSeconds","SS","t","getTimeRemaining","setState","getColor","key","STYLE","elements","getLabelStyle","color","backgroundColor","fontWeight","labelBold","fontSize","timerLabelFont","getTimerStyle","timerBold","timerFont","componentDidMount","componentWillUnmount","render","labelStyle","timerStyle","toolData","parse","Math","floor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getcolor } from \"../../../Util\";\nimport \"./Preview.css\";\nexport default class Preview extends Component {\n  state = {\n    millsecond: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n    total: 0,\n    //endtime: new Date(Date.parse(new Date()) + 15 * 24 * 60 * 60 * 1000)\n  };\n  intervalHandler = null;\n  initializeClock = (endtime) => {\n    if (this.intervalHandler) clearInterval(this.intervalHandler);\n    this.updateClock(endtime);\n    this.intervalHandler = setInterval(this.updateClock, 1000);\n  };\n\n  getTimeData = () => {\n    const timer = new Date();\n    timer.setHours(timer.getHours() + parseInt(this.props.TIMER.HH || 0));\n    timer.setMinutes(timer.getMinutes() + parseInt(this.props.TIMER.MM || 0));\n    timer.setSeconds(timer.getSeconds() + parseInt(this.props.TIMER.SS || 0));\n    // timer.setMinutes(timer.getMinutes() + parseInt(50 || 0));\n    // timer.setSeconds(timer.getSeconds() + parseInt(50 || 0));\n    return timer;\n  };\n\n  componentDidMount() {\n    this.setState({ endtime: this.getTimeData() });\n    this.initializeClock(this.getTimeData());\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalHandler);\n  }\n\n  updateClock = () => {\n    var t = getTimeRemaining(this.state.endtime);\n    this.setState({ days: t.days, hours: t.hours, minutes: t.minutes, seconds: t.seconds });\n    if (t.total <= 0) {\n      clearInterval(this.intervalHandler);\n      this.setState({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n    }\n  };\n\n  getColor = (key) => {\n    return getcolor(this.props.STYLE.elements, key);\n  };\n\n  getLabelStyle = () => {\n    const color = this.getColor(\"centralTimerLabel\");\n    const backgroundColor = this.getColor(\"highlightBackground\");\n    return { color: color, fontWeight: parseInt(this.props.STYLE.labelBold), backgroundColor: \"#ffffff00\", fontSize: parseInt(this.props.STYLE.timerLabelFont) };\n  };\n\n  getTimerStyle = () => {\n    const color = this.getColor(\"timerText\");\n    const backgroundColor = this.getColor(\"highlight\");\n    return { color: color, fontWeight: parseInt(this.props.STYLE.timerBold), backgroundColor: \"#ffffff00\", fontSize: parseInt(this.props.STYLE.timerFont) };\n  };\n\n  render() {\n    // const { isStop, millsecond } = this.state;\n    // const style = this.getStyle();\n    const labelStyle = this.getLabelStyle();\n    const timerStyle = this.getTimerStyle();\n    const { hours, minutes, seconds } = this.state;\n    const { HH, MM, SS } = this.props.toolData;\n    return (\n      <center>\n        {/* <div className=\"previewPortal\"><Countdown date={Date.now() + millsecond} /></div> */}\n        <div className=\"previewPortal\" style={{ backgroundColor: \"#ffffff00\" }}>\n          <div className=\"urgencyMain\">\n            <div style={timerStyle}>\n              {hours}&nbsp;:\n              <div style={labelStyle}>H</div>\n            </div>\n\n            <div style={timerStyle}>\n              {minutes}&nbsp;:\n              <div style={labelStyle}>M</div>\n            </div>\n            <div style={timerStyle}>\n              {seconds}\n              <div style={labelStyle}>S</div>\n            </div>\n          </div>\n          {/* <div className=\"objdivTimer\">\n              <span class=\"days\" style={timerStyle}>\n                {days}\n              </span>\n              <div style={labelStyle} class=\"smalltext\">\n                {DD}\n              </div>\n            </div> */}\n          {/* <div className=\"objdivTimer\">\n              <span class=\"hours\" style={timerStyle}>\n                {hours}\n              </span>\n              <div style={labelStyle} class=\"smalltext\">\n                {HH}\n              </div>\n            </div>\n            <div className=\"objdivTimer\">\n              <span class=\"minutes\" style={timerStyle}>\n                {minutes}\n              </span>\n              <div style={labelStyle} class=\"smalltext\">\n                {MM}\n              </div>\n            </div>\n            <div className=\"objdivTimer\">\n              <span class=\"seconds\" style={timerStyle}>\n                {seconds}\n              </span>\n              <div style={labelStyle} class=\"smalltext\">\n                {SS}\n              </div>\n            </div> */}\n        </div>\n      </center>\n    );\n  }\n}\n\nfunction getTimeRemaining(endtime) {\n  var t = Date.parse(endtime) - Date.parse(new Date());\n  var seconds = Math.floor((t / 1000) % 60);\n  var minutes = Math.floor((t / 1000 / 60) % 60);\n  var hours = Math.floor((t / (1000 * 60 * 60)) % 24);\n  var days = Math.floor(t / (1000 * 60 * 60 * 24));\n  return {\n    total: t,\n    days: days,\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}