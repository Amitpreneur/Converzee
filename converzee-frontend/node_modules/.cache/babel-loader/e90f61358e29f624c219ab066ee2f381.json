{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ReviewEngin/Style.js\";\nimport React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport { ColorSelector } from \"../layout/LayoutSelector\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Style extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      style: this.props.style,\n      bgImg: this.props.bgImg,\n      isBGIMG: this.props.isBGIMG,\n      selectedIndex: 0,\n      count: 0\n    };\n\n    this.onColorChange = value => {\n      const {\n        style,\n        selectedIndex,\n        count\n      } = this.state;\n\n      if (selectedIndex === 3) {\n        this.setState({\n          bgImg: value.hex\n        }, () => {\n          this.props.onChange({\n            bgImg: this.state.bgImg\n          });\n        });\n      } else {\n        style[selectedIndex].value = value.hex;\n        this.setState({\n          count: count + 1\n        }, () => {\n          this.props.onChange({\n            style: this.state.style\n          });\n        });\n      }\n    };\n\n    this.onColorBoxClick = index => {\n      this.setState({\n        selectedIndex: index\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.onChange({\n      style: this.state.style\n    });\n  }\n\n  render() {\n    const {\n      style,\n      selectedIndex\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: style.map((e, i) => /*#__PURE__*/_createElement(ColorSelector, {\n          showName: true,\n          ...e,\n          selectedIndex: selectedIndex,\n          onClick: this.onColorBoxClick,\n          index: i,\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8\",\n        children: /*#__PURE__*/_jsxDEV(SketchPicker, {\n          defaultValue: \"#452135\",\n          presetColors: [\"TRANSPARENT\"],\n          color: style[selectedIndex].value,\n          onChangeComplete: this.onColorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ReviewEngin/Style.js"],"names":["React","Component","SketchPicker","ColorSelector","Style","state","style","props","bgImg","isBGIMG","selectedIndex","count","onColorChange","value","setState","hex","onChange","onColorBoxClick","index","componentWillUnmount","render","map","e","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;AACA,eAAe,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC3CI,KAD2C,GACnC;AACNC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KADZ;AAENE,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAFZ;AAGNC,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,OAHd;AAINC,MAAAA,aAAa,EAAE,CAJT;AAKNC,MAAAA,KAAK,EAAE;AALD,KADmC;;AAAA,SAS3CC,aAT2C,GAS1BC,KAAD,IAAW;AACzB,YAAM;AAAEP,QAAAA,KAAF;AAASI,QAAAA,aAAT;AAAwBC,QAAAA;AAAxB,UAAkC,KAAKN,KAA7C;;AACA,UAAIK,aAAa,KAAK,CAAtB,EAAyB;AACvB,aAAKI,QAAL,CAAc;AAAEN,UAAAA,KAAK,EAAEK,KAAK,CAACE;AAAf,SAAd,EAAoC,MAAM;AACxC,eAAKR,KAAL,CAAWS,QAAX,CAAoB;AAAER,YAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG;AAApB,WAApB;AACD,SAFD;AAGD,OAJD,MAIO;AACLF,QAAAA,KAAK,CAACI,aAAD,CAAL,CAAqBG,KAArB,GAA6BA,KAAK,CAACE,GAAnC;AACA,aAAKD,QAAL,CAAc;AAAEH,UAAAA,KAAK,EAAEA,KAAK,GAAG;AAAjB,SAAd,EAAoC,MAAM;AACxC,eAAKJ,KAAL,CAAWS,QAAX,CAAoB;AAAEV,YAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AAApB,WAApB;AACD,SAFD;AAGD;AACF,KArB0C;;AAAA,SAuB3CW,eAvB2C,GAuBxBC,KAAD,IAAW;AAC3B,WAAKJ,QAAL,CAAc;AAAEJ,QAAAA,aAAa,EAAEQ;AAAjB,OAAd;AACD,KAzB0C;AAAA;;AA2B3CC,EAAAA,oBAAoB,GAAG;AACrB,SAAKZ,KAAL,CAAWS,QAAX,CAAoB;AAAEV,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AAApB,KAApB;AACD;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA,KAAF;AAASI,MAAAA;AAAT,QAA2B,KAAKL,KAAtC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBACGC,KAAK,CAACe,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,kBACT,eAAC,aAAD;AAAe,UAAA,QAAQ,EAAE,IAAzB;AAAA,aAAmCD,CAAnC;AAAsC,UAAA,aAAa,EAAEZ,aAArD;AAAoE,UAAA,OAAO,EAAE,KAAKO,eAAlF;AAAmG,UAAA,KAAK,EAAEM,CAA1G;AAA6G,UAAA,GAAG,EAAEA,CAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,YAAY,EAAC,SAA3B;AAAqC,UAAA,YAAY,EAAE,CAAC,aAAD,CAAnD;AAAoE,UAAA,KAAK,EAAEjB,KAAK,CAACI,aAAD,CAAL,CAAqBG,KAAhG;AAAuG,UAAA,gBAAgB,EAAE,KAAKD;AAA9H;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AA7C0C","sourcesContent":["import React, { Component } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { ColorSelector } from \"../layout/LayoutSelector\";\r\nexport default class Style extends Component {\r\n  state = {\r\n    style: this.props.style,\r\n    bgImg: this.props.bgImg,\r\n    isBGIMG: this.props.isBGIMG,\r\n    selectedIndex: 0,\r\n    count: 0,\r\n  };\r\n\r\n  onColorChange = (value) => {\r\n    const { style, selectedIndex, count } = this.state;\r\n    if (selectedIndex === 3) {\r\n      this.setState({ bgImg: value.hex }, () => {\r\n        this.props.onChange({ bgImg: this.state.bgImg });\r\n      });\r\n    } else {\r\n      style[selectedIndex].value = value.hex;\r\n      this.setState({ count: count + 1 }, () => {\r\n        this.props.onChange({ style: this.state.style });\r\n      });\r\n    }\r\n  };\r\n\r\n  onColorBoxClick = (index) => {\r\n    this.setState({ selectedIndex: index });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.onChange({ style: this.state.style });\r\n  }\r\n\r\n  render() {\r\n    const { style, selectedIndex } = this.state;\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-4\">\r\n          {style.map((e, i) => (\r\n            <ColorSelector showName={true} {...e} selectedIndex={selectedIndex} onClick={this.onColorBoxClick} index={i} key={i} />\r\n          ))}\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <SketchPicker defaultValue=\"#452135\" presetColors={[\"TRANSPARENT\"]} color={style[selectedIndex].value} onChangeComplete={this.onColorChange} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}