{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/Style.js\";\nimport React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport Switch1 from \"../../../comman/Switch\";\nimport Uploader from \"../../../comman/Uploader\";\nimport { parseImgUrl } from \"../../../Util\";\nimport \"react-color-picker/index.css\";\nimport { Info } from \"../../../comman/Info\";\nimport { ColorSelector } from \"../../../layout/LayoutSelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nexport default class Style extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      elements: this.props.elements,\n      selected: this.props.selected,\n      height: this.props.height,\n      width: this.props.width,\n      isbackGroundImage: this.props.isbackGroundImage,\n      backgroundImage: this.props.backgroundImage\n    };\n\n    this.onUploadDone = image => {\n      this.setState({\n        backgroundImage: image.image\n      }, () => {\n        const cases = this.props.case || 1;\n        this.props.onChange(cases, this.state);\n      });\n    };\n\n    this.onClickElement = i => {\n      const cases = this.props.case || 1;\n      this.setState({\n        selected: i\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onColorChange = color => {\n      const cases = this.props.case || 1;\n      const {\n        elements,\n        selected\n      } = this.state;\n      elements[selected].color = color.hex;\n      this.setState({\n        elements\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onChangeStyle = e => {\n      const cases = this.props.case || 1;\n      this.setState({\n        [e.target.name]: parseInt(e.target.value || 0)\n      }, () => {\n        this.props.onChange(cases, this.state);\n      });\n    };\n\n    this.onBgOptionChange = isbackGroundImage => {\n      this.setState({\n        isbackGroundImage\n      }, () => {\n        const cases = this.props.case || 1;\n        this.props.onChange(cases, this.state);\n      });\n    };\n\n    this.onReset = () => {\n      this.setState({\n        backgroundImage: \"\"\n      }, () => {\n        const cases = this.props.case || 1;\n        this.props.onChange(cases, this.state);\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    const cases = this.props.case || 1;\n    this.props.onChange(cases, this.state);\n  }\n\n  render() {\n    const {\n      elements,\n      selected,\n      height,\n      width,\n      isbackGroundImage,\n      backgroundImage\n    } = this.state;\n    const props = {\n      onUploadDone: this.onUploadDone\n    };\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Background Image \", /*#__PURE__*/_jsxDEV(Info, {\n              text: \"Add Background image for exit entent.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch1, {\n            isChecked: isbackGroundImage,\n            onChange: this.onBgOptionChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), isbackGroundImage ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(Uploader, { ...props,\n            onReset: this.onReset\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4\",\n              children: elements.map((e, i) => /*#__PURE__*/_createElement(ColorSelector, { ...e,\n                selectedIndex: selected,\n                onClick: this.onClickElement,\n                index: i,\n                key: i,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-8\",\n              children: /*#__PURE__*/_jsxDEV(SketchPicker, {\n                defaultValue: \"#452135\",\n                color: elements[selected].color,\n                onChangeComplete: this.onColorChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 form-element\",\n          style: {\n            marginTop: '30px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label-text\",\n            children: [\"Height* \", /*#__PURE__*/_jsxDEV(Info, {\n              text: \"Enter the height of exit intent.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            name: \"height\",\n            value: height,\n            onChange: this.onChangeStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 form-element\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label-text\",\n            children: [\"Width* \", /*#__PURE__*/_jsxDEV(Info, {\n              text: \"Enter the width of exit intent.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            name: \"width\",\n            value: width,\n            onChange: this.onChangeStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/Style.js"],"names":["React","Component","SketchPicker","Switch1","Uploader","parseImgUrl","Info","ColorSelector","Style","state","elements","props","selected","height","width","isbackGroundImage","backgroundImage","onUploadDone","image","setState","cases","case","onChange","onClickElement","i","onColorChange","color","hex","onChangeStyle","e","target","name","parseInt","value","onBgOptionChange","onReset","componentWillUnmount","render","map","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport Switch1 from \"../../../comman/Switch\";\r\nimport Uploader from \"../../../comman/Uploader\";\r\nimport { parseImgUrl } from \"../../../Util\";\r\nimport \"react-color-picker/index.css\";\r\nimport { Info } from \"../../../comman/Info\";\r\nimport { ColorSelector } from \"../../../layout/LayoutSelector\";\r\nexport default class Style extends Component {\r\n  state = {\r\n    elements: this.props.elements,\r\n    selected: this.props.selected,\r\n    height: this.props.height,\r\n    width: this.props.width,\r\n    isbackGroundImage: this.props.isbackGroundImage,\r\n    backgroundImage: this.props.backgroundImage,\r\n  };\r\n\r\n  onUploadDone = (image) => {\r\n    this.setState({ backgroundImage: image.image }, () => {\r\n      const cases = this.props.case || 1;\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n\r\n  onClickElement = (i) => {\r\n    const cases = this.props.case || 1;\r\n    this.setState({ selected: i });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const cases = this.props.case || 1;\r\n    this.props.onChange(cases, this.state);\r\n  }\r\n\r\n  onColorChange = (color) => {\r\n    const cases = this.props.case || 1;\r\n    const { elements, selected } = this.state;\r\n    elements[selected].color = color.hex;\r\n    this.setState({ elements });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  onChangeStyle = (e) => {\r\n    const cases = this.props.case || 1;\r\n    this.setState({ [e.target.name]: parseInt(e.target.value || 0) }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n\r\n  onBgOptionChange = (isbackGroundImage) => {\r\n    this.setState({ isbackGroundImage }, () => {\r\n      const cases = this.props.case || 1;\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n\r\n  onReset = () => {\r\n    this.setState({ backgroundImage: \"\" }, () => {\r\n      const cases = this.props.case || 1;\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { elements, selected, height, width, isbackGroundImage, backgroundImage } = this.state;\r\n    const props = {\r\n      onUploadDone: this.onUploadDone,\r\n    };\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <label>\r\n              Background Image <Info text=\"Add Background image for exit entent.\" />\r\n            </label>\r\n            <Switch1 isChecked={isbackGroundImage} onChange={this.onBgOptionChange} />\r\n          </div>\r\n          {isbackGroundImage ? (\r\n            <div className=\"col-12\">\r\n              <Uploader {...props} onReset={this.onReset} />\r\n            </div>\r\n          ) : null}\r\n          <div className=\"col-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-4\">\r\n                {elements.map((e, i) => (\r\n                  <ColorSelector {...e} selectedIndex={selected} onClick={this.onClickElement} index={i} key={i} />\r\n                ))}\r\n              </div>\r\n              <div className=\"col-8\">\r\n                <SketchPicker defaultValue=\"#452135\" color={elements[selected].color} onChangeComplete={this.onColorChange} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-6 form-element\" style={{marginTop:'30px'}}>\r\n            <div className=\"label-text\">\r\n              Height* <Info text=\"Enter the height of exit intent.\" />\r\n            </div>\r\n            <input type=\"number\" className=\"form-control\" name=\"height\" value={height} onChange={this.onChangeStyle} />\r\n          </div>\r\n          <div className=\"col-6 form-element\">\r\n            <div className=\"label-text\">\r\n              Width* <Info text=\"Enter the width of exit intent.\" />\r\n            </div>\r\n            <input type=\"number\" className=\"form-control\" name=\"width\" value={width} onChange={this.onChangeStyle} />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}