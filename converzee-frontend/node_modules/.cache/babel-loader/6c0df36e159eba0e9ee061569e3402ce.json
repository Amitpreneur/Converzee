{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Club/Time.js\";\nimport React, { Component } from \"react\";\nimport DropDown from \"../comman/DropDown\";\nimport Datetime from \"react-datetime\";\nimport moment from \"moment\";\nimport Util from \"../Util\";\nimport { Info } from \"../comman/Info\";\nexport default class Timer extends Component {\n  constructor(...args) {\n    super(...args);\n    this._timerType = [{\n      label: \"Date and Time Based\",\n      value: \"DATE_AND_TIME_BASED\"\n    }, {\n      label: \"Cookie Based\",\n      value: \"COOKIE_BASED\"\n    }, {\n      label: \"Ever green\",\n      value: \"EVERGREEN\"\n    }];\n    this._timeZone = Util.getTimeZoneList();\n    this._whenTimeExp = [{\n      label: \"Hide the timer\",\n      value: \"hide\"\n    }, {\n      label: \"Redirect the page\",\n      value: \"redirect\"\n    }, {\n      label: \"Show static central time as 00:00\",\n      value: \"static\"\n    }];\n    this.state = {\n      timerType: this.props.timerType,\n      endDateTime: this.props.endDateTime,\n      timeZone: this.props.timeZone,\n      postExpiryAction: this.props.postExpiryAction,\n      redirectUrl: this.props.redirectUrl,\n      days: this.props.days,\n      hours: this.props.hours,\n      minutes: this.props.minutes,\n      seconds: this.props.seconds\n    };\n\n    this.onDropDownChange = (value, name) => {\n      if (name == \"TIMETYPE\") {\n        this.setState({\n          timerType: value\n        }, () => {\n          this.props.onChange({\n            timerType: this.state.timerType\n          });\n        });\n      } else if (name == \"TIMEZONE\") {\n        this.setState({\n          timeZone: value\n        }, () => {\n          this.props.onChange({\n            timeZone: this.state.timeZone\n          });\n        });\n      } else {\n        this.setState({\n          postExpiryAction: value\n        }, () => {\n          this.props.onChange({\n            postExpiryAction: this.state.postExpiryAction\n          });\n        });\n      }\n    };\n\n    this.onTimerChange = value => {\n      value.set({\n        second: 0\n      });\n      const newValu = value.format(\"YYYY-MM-DD HH:mm:ss\");\n      this.setState({\n        endDateTime: newValu\n      }, () => {\n        this.props.onChange({\n          endDateTime: this.state.endDateTime\n        });\n      });\n    };\n\n    this.onTimeDataChange = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      }, () => {\n        this.props.onChange({\n          [name]: value\n        });\n      });\n    };\n  }\n\n  render() {\n    const {\n      timerType,\n      endDateTime,\n      timeZone,\n      postExpiryAction,\n      redirectUrl,\n      days = 0,\n      hours = 0,\n      minutes = 0,\n      seconds = 0\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Timer Type* \", React.createElement(Info, {\n      text: \"timer type for different action like \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(DropDown, {\n      options: this._timerType,\n      onChange: value => this.onDropDownChange(value, \"TIMETYPE\"),\n      value: timerType,\n      class: \"dropdown-style\",\n      style: {\n        width: \"\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), timerType === \"DATE_AND_TIME_BASED\" ? React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"End Date and Time* \", React.createElement(Info, {\n      text: \"End time of timer like date and time to disable timer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(Datetime, {\n      defaultValue: moment(endDateTime),\n      onChange: this.onTimerChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })) : null, timerType !== \"DATE_AND_TIME_BASED\" ? React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Timer* \", React.createElement(Info, {\n      text: \"enter time in Hour/Minute and second to stop after that time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-12\",\n      style: {\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"DD*\"), React.createElement(\"div\", {\n      className: \"col-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"HH*\"), React.createElement(\"div\", {\n      className: \"col-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"MM*\"), React.createElement(\"div\", {\n      className: \"col-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"SS*\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      style: {\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      min: 0,\n      max: 30,\n      className: \"form-control\",\n      value: days,\n      name: \"days\",\n      onChange: this.onTimeDataChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      min: 0,\n      max: 24,\n      className: \"form-control\",\n      value: hours,\n      name: \"hours\",\n      onChange: this.onTimeDataChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      min: 0,\n      max: 60,\n      className: \"form-control\",\n      value: minutes,\n      name: \"minutes\",\n      onChange: this.onTimeDataChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      min: 0,\n      max: 60,\n      className: \"form-control\",\n      value: seconds,\n      name: \"seconds\",\n      onChange: this.onTimeDataChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))))) : null, timerType === \"DATE_AND_TIME_BASED\" ? React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Time Zone* \", React.createElement(Info, {\n      text: \"Time Zone to different timer at different timezone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(DropDown, {\n      options: this._timeZone,\n      onChange: value => this.onDropDownChange(value, \"TIMEZONE\"),\n      value: timeZone,\n      class: \"dropdown-style\",\n      style: {\n        width: \"\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })) : null, timerType !== 'EVERGREEN' ? React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"When Time Expires* \", React.createElement(Info, {\n      text: \"Action after time up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(DropDown, {\n      options: this._whenTimeExp,\n      onChange: value => this.onDropDownChange(value, \"ACTION\"),\n      value: postExpiryAction,\n      class: \"dropdown-style\",\n      style: {\n        width: \"\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })) : null, postExpiryAction === \"redirect\" ? React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Url* \", React.createElement(Info, {\n      text: \"url for complete action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"redirectUrl\",\n      className: \"form-control\",\n      value: redirectUrl,\n      onChange: this.onTimeDataChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })) : null);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Club/Time.js"],"names":["React","Component","DropDown","Datetime","moment","Util","Info","Timer","_timerType","label","value","_timeZone","getTimeZoneList","_whenTimeExp","state","timerType","props","endDateTime","timeZone","postExpiryAction","redirectUrl","days","hours","minutes","seconds","onDropDownChange","name","setState","onChange","onTimerChange","set","second","newValu","format","onTimeDataChange","e","target","render","width","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DropDown from \"../comman/DropDown\";\nimport Datetime from \"react-datetime\";\nimport moment from \"moment\";\nimport Util from \"../Util\";\nimport { Info } from \"../comman/Info\";\n\nexport default class Timer extends Component {\n  _timerType = [\n    { label: \"Date and Time Based\", value: \"DATE_AND_TIME_BASED\" },\n    { label: \"Cookie Based\", value: \"COOKIE_BASED\" },\n    { label: \"Ever green\", value: \"EVERGREEN\" },\n  ];\n  _timeZone = Util.getTimeZoneList();\n  _whenTimeExp = [\n    { label: \"Hide the timer\", value: \"hide\" },\n    { label: \"Redirect the page\", value: \"redirect\" },\n    { label: \"Show static central time as 00:00\", value: \"static\" },\n  ];\n  state = {\n    timerType: this.props.timerType,\n    endDateTime: this.props.endDateTime,\n    timeZone: this.props.timeZone,\n    postExpiryAction: this.props.postExpiryAction,\n    redirectUrl: this.props.redirectUrl,\n    days: this.props.days,\n    hours: this.props.hours,\n    minutes: this.props.minutes,\n    seconds: this.props.seconds,\n  };\n\n  onDropDownChange = (value, name) => {\n    if (name == \"TIMETYPE\") {\n      this.setState({ timerType: value }, () => {\n        this.props.onChange({ timerType: this.state.timerType });\n      });\n    } else if (name == \"TIMEZONE\") {\n      this.setState({ timeZone: value }, () => {\n        this.props.onChange({ timeZone: this.state.timeZone });\n      });\n    } else {\n      this.setState({ postExpiryAction: value }, () => {\n        this.props.onChange({ postExpiryAction: this.state.postExpiryAction });\n      });\n    }\n  };\n\n  onTimerChange = (value) => {\n    value.set({ second: 0 });\n    const newValu = value.format(\"YYYY-MM-DD HH:mm:ss\");\n    this.setState({ endDateTime: newValu }, () => {\n      this.props.onChange({ endDateTime: this.state.endDateTime });\n    });\n  };\n\n  onTimeDataChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value }, () => {\n      this.props.onChange({ [name]: value });\n    });\n  };\n\n  render() {\n    const { timerType, endDateTime, timeZone, postExpiryAction, redirectUrl, days = 0, hours = 0, minutes = 0, seconds = 0 } = this.state;\n    return (\n      <div>\n        <div className=\"form-element\">\n          <div className=\"label-text\">\n            Timer Type* <Info text=\"timer type for different action like \" />\n          </div>\n          <DropDown options={this._timerType} onChange={(value) => this.onDropDownChange(value, \"TIMETYPE\")} value={timerType} class=\"dropdown-style\" style={{ width: \"\" }} />\n        </div>\n        {timerType === \"DATE_AND_TIME_BASED\" ? (\n          <div className=\"form-element\">\n            <div className=\"label-text\">\n              End Date and Time* <Info text=\"End time of timer like date and time to disable timer\" />\n            </div>\n            <Datetime defaultValue={moment(endDateTime)} onChange={this.onTimerChange} />\n          </div>\n        ) : null}\n        {timerType !== \"DATE_AND_TIME_BASED\" ? (\n          <div className=\"form-element\">\n            <div className=\"label-text\">\n              Timer* <Info text=\"enter time in Hour/Minute and second to stop after that time\" />\n            </div>\n            <div className=\"col-12\" style={{ display: \"flex\" }}>\n              <div className=\"col-3\">DD*</div>\n              <div className=\"col-3\">HH*</div>\n              <div className=\"col-3\">MM*</div>\n              <div className=\"col-3\">SS*</div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-12\" style={{ display: \"flex\" }}>\n                <div className=\"col-3\">\n                  <input type=\"number\" min={0} max={30} className=\"form-control\" value={days} name=\"days\" onChange={this.onTimeDataChange} />\n                </div>\n                <div className=\"col-3\">\n                  <input type=\"number\" min={0} max={24} className=\"form-control\" value={hours} name=\"hours\" onChange={this.onTimeDataChange} />\n                </div>\n                <div className=\"col-3\">\n                  <input type=\"number\" min={0} max={60} className=\"form-control\" value={minutes} name=\"minutes\" onChange={this.onTimeDataChange} />\n                </div>\n                <div className=\"col-3\">\n                  <input type=\"number\" min={0} max={60} className=\"form-control\" value={seconds} name=\"seconds\" onChange={this.onTimeDataChange} />\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : null}\n        {timerType === \"DATE_AND_TIME_BASED\" ? (\n          <div className=\"form-element\">\n            <div className=\"label-text\">\n              Time Zone* <Info text=\"Time Zone to different timer at different timezone\" />\n            </div>\n            <DropDown options={this._timeZone} onChange={(value) => this.onDropDownChange(value, \"TIMEZONE\")} value={timeZone} class=\"dropdown-style\" style={{ width: \"\" }} />\n          </div>\n        ) : null}\n       {timerType!== 'EVERGREEN'  ? <div className=\"form-element\">\n          <div className=\"label-text\">\n            When Time Expires* <Info text=\"Action after time up\" />\n          </div>\n          {/* <input type=\"text\" name=\"whenTimeExp\" className=\"form-control\" value={whenTimeExp} onChange={this.onChange} /> */}\n          <DropDown options={this._whenTimeExp} onChange={(value) => this.onDropDownChange(value, \"ACTION\")} value={postExpiryAction} class=\"dropdown-style\" style={{ width: \"\" }} />\n        </div>:null}\n        {postExpiryAction === \"redirect\" ? (\n          <div className=\"form-element\">\n            <div className=\"label-text\">\n              Url* <Info text=\"url for complete action\" />\n            </div>\n            <input type=\"text\" name=\"redirectUrl\" className=\"form-control\" value={redirectUrl} onChange={this.onTimeDataChange} />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}