{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/Style.js\";\nimport React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport Switch1 from \"../../../comman/Switch\";\nimport Uploader from \"../../../comman/Uploader\";\nimport { parseImgUrl } from \"../../../Util\";\nimport \"react-color-picker/index.css\";\nimport { Info } from \"../../../comman/Info\";\nimport { ColorSelector } from \"../../../layout/LayoutSelector\";\nexport default class Style extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      elements: this.props.elements,\n      selected: this.props.selected,\n      height: this.props.height,\n      width: this.props.width,\n      isbackGroundImage: this.props.isbackGroundImage,\n      backgroundImage: this.props.backgroundImage\n    };\n\n    this.onUploadDone = image => {\n      this.setState({\n        backgroundImage: image.image\n      }, () => {\n        const cases = this.props.case || 1;\n        this.props.onChange(cases, this.state);\n      });\n    };\n\n    this.onClickElement = i => {\n      const cases = this.props.case || 1;\n      this.setState({\n        selected: i\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onColorChange = color => {\n      const cases = this.props.case || 1;\n      const {\n        elements,\n        selected\n      } = this.state;\n      elements[selected].color = color.hex;\n      this.setState({\n        elements\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onChangeStyle = e => {\n      const cases = this.props.case || 1;\n      this.setState({\n        [e.target.name]: parseInt(e.target.value || 0)\n      }, () => {\n        this.props.onChange(cases, this.state);\n      });\n    };\n\n    this.onBgOptionChange = isbackGroundImage => {\n      this.setState({\n        isbackGroundImage\n      }, () => {\n        const cases = this.props.case || 1;\n        this.props.onChange(cases, this.state);\n      });\n    };\n\n    this.onReset = () => {\n      this.setState({\n        backgroundImage: \"\"\n      }, () => {\n        const cases = this.props.case || 1;\n        this.props.onChange(cases, this.state);\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    const cases = this.props.case || 1;\n    this.props.onChange(cases, this.state);\n  }\n\n  render() {\n    const {\n      elements,\n      selected,\n      height,\n      width,\n      isbackGroundImage,\n      backgroundImage\n    } = this.state;\n    const props = {\n      onUploadDone: this.onUploadDone\n    };\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Background Image \", React.createElement(Info, {\n      text: \"Background image for exit entent \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(Switch1, {\n      isChecked: isbackGroundImage,\n      onChange: this.onBgOptionChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), isbackGroundImage ? React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Uploader, Object.assign({}, props, {\n      onReset: this.onReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))) : null, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, elements.map((e, i) => React.createElement(ColorSelector, Object.assign({}, e, {\n      selectedIndex: selected,\n      onClick: this.onClickElement,\n      index: i,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(SketchPicker, {\n      defaultValue: \"#452135\",\n      color: elements[selected].color,\n      onChangeComplete: this.onColorChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-6 form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Height* \", React.createElement(Info, {\n      text: \"Height of exit intent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"form-control\",\n      name: \"height\",\n      value: height,\n      onChange: this.onChangeStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-6 form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Width* \", React.createElement(Info, {\n      text: \"width of exit intent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"form-control\",\n      name: \"width\",\n      value: width,\n      onChange: this.onChangeStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/Style.js"],"names":["React","Component","SketchPicker","Switch1","Uploader","parseImgUrl","Info","ColorSelector","Style","state","elements","props","selected","height","width","isbackGroundImage","backgroundImage","onUploadDone","image","setState","cases","case","onChange","onClickElement","i","onColorChange","color","hex","onChangeStyle","e","target","name","parseInt","value","onBgOptionChange","onReset","componentWillUnmount","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport Switch1 from \"../../../comman/Switch\";\nimport Uploader from \"../../../comman/Uploader\";\nimport { parseImgUrl } from \"../../../Util\";\nimport \"react-color-picker/index.css\";\nimport { Info } from \"../../../comman/Info\";\nimport { ColorSelector } from \"../../../layout/LayoutSelector\";\nexport default class Style extends Component {\n  state = {\n    elements: this.props.elements,\n    selected: this.props.selected,\n    height: this.props.height,\n    width: this.props.width,\n    isbackGroundImage: this.props.isbackGroundImage,\n    backgroundImage: this.props.backgroundImage,\n  };\n\n  onUploadDone = (image) => {\n    this.setState({ backgroundImage: image.image }, () => {\n      const cases = this.props.case || 1;\n      this.props.onChange(cases, this.state);\n    });\n  };\n\n  onClickElement = (i) => {\n    const cases = this.props.case || 1;\n    this.setState({ selected: i });\n    this.props.onChange(cases, this.state);\n  };\n\n  componentWillUnmount() {\n    const cases = this.props.case || 1;\n    this.props.onChange(cases, this.state);\n  }\n\n  onColorChange = (color) => {\n    const cases = this.props.case || 1;\n    const { elements, selected } = this.state;\n    elements[selected].color = color.hex;\n    this.setState({ elements });\n    this.props.onChange(cases, this.state);\n  };\n\n  onChangeStyle = (e) => {\n    const cases = this.props.case || 1;\n    this.setState({ [e.target.name]: parseInt(e.target.value || 0) }, () => {\n      this.props.onChange(cases, this.state);\n    });\n  };\n\n  onBgOptionChange = (isbackGroundImage) => {\n    this.setState({ isbackGroundImage }, () => {\n      const cases = this.props.case || 1;\n      this.props.onChange(cases, this.state);\n    });\n  };\n\n  onReset = () => {\n    this.setState({ backgroundImage: \"\" }, () => {\n      const cases = this.props.case || 1;\n      this.props.onChange(cases, this.state);\n    });\n  };\n\n  render() {\n    const { elements, selected, height, width, isbackGroundImage, backgroundImage } = this.state;\n    const props = {\n      onUploadDone: this.onUploadDone,\n    };\n    return (\n      <React.Fragment>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <label>\n              Background Image <Info text=\"Background image for exit entent \" />\n            </label>\n            <Switch1 isChecked={isbackGroundImage} onChange={this.onBgOptionChange} />\n          </div>\n          {isbackGroundImage ? (\n            <div className=\"col-12\">\n              <Uploader {...props} onReset={this.onReset} />\n            </div>\n          ) : null}\n          <div className=\"col-12\">\n            <div className=\"row\">\n              <div className=\"col-4\">\n                {elements.map((e, i) => (\n                  <ColorSelector {...e} selectedIndex={selected} onClick={this.onClickElement} index={i} key={i} />\n                ))}\n              </div>\n              <div className=\"col-8\">\n                <SketchPicker defaultValue=\"#452135\" color={elements[selected].color} onChangeComplete={this.onColorChange} />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-6 form-element\">\n            <div className=\"label-text\">\n              Height* <Info text=\"Height of exit intent\" />\n            </div>\n            <input type=\"number\" className=\"form-control\" name=\"height\" value={height} onChange={this.onChangeStyle} />\n          </div>\n          <div className=\"col-6 form-element\">\n            <div className=\"label-text\">\n              Width* <Info text=\"width of exit intent\" />\n            </div>\n            <input type=\"number\" className=\"form-control\" name=\"width\" value={width} onChange={this.onChangeStyle} />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}