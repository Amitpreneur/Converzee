{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/Media.js\";\nimport React, { Component } from \"react\";\nimport Uploader from \"../../../comman/Uploader\";\nimport { parseImgUrl } from \"../../../Util\";\nimport Switch1 from \"../../../comman/Switch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Media extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      url: this.props.url,\n      mediaType: this.props.mediaType\n    };\n\n    this.onUploadDone = image => {\n      this.setState({\n        url: image.image\n      }, () => {\n        this.props.onChange({\n          url: this.state.url\n        });\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        url: e.target.value\n      }, () => {\n        this.props.onChange({\n          url: this.state.url\n        });\n      });\n    };\n\n    this.isImg = () => {\n      return this.props.mediaType === \"IMAGE\";\n    };\n\n    this.onReset = () => {\n      this.setState({\n        url: \"\"\n      }, () => {\n        this.props.onChange({\n          url: this.state.url\n        });\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.onChange({\n      url: this.state.url,\n      mediaType: this.state.mediaType\n    });\n  }\n\n  render() {\n    const props = {\n      onUploadDone: this.onUploadDone\n    };\n    const {\n      url\n    } = this.state;\n    const {\n      mediaType,\n      isInput\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        style: {\n          padding: 0\n        },\n        children: [!isInput ? /*#__PURE__*/_jsxDEV(\"label\", {\n          children: mediaType === \"IMAGE\" ? \"Image\" : \"Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 23\n        }, this) : null, !isInput ? /*#__PURE__*/_jsxDEV(Switch1, {\n          isChecked: this.props.mediaType === \"IMAGE\",\n          onChange: status => {\n            this.setState({\n              mediaType: status ? \"IMAGE\" : \"VIDEO\"\n            }, () => {\n              this.props.onChange({\n                mediaType: this.state.mediaType\n              });\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), !isInput ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          style: mediaType === \"IMAGE\" ? {\n            padding: 0\n          } : {\n            padding: 0,\n            pointerEvents: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Uploader, { ...props,\n            onReset: this.onReset\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-element\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label-text\",\n            children: \"URL*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"url\",\n            className: \"form-control\",\n            value: url,\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/Media.js"],"names":["React","Component","Uploader","parseImgUrl","Switch1","Media","state","url","props","mediaType","onUploadDone","image","setState","onChange","e","target","value","isImg","onReset","componentWillUnmount","render","isInput","padding","status","pointerEvents"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Uploader from \"../../../comman/Uploader\";\r\nimport { parseImgUrl } from \"../../../Util\";\r\nimport Switch1 from \"../../../comman/Switch\";\r\nexport default class Media extends Component {\r\n  state = { url: this.props.url, mediaType: this.props.mediaType };\r\n  componentWillUnmount() {\r\n    this.props.onChange({ url: this.state.url, mediaType: this.state.mediaType });\r\n  }\r\n  onUploadDone = (image) => {\r\n    this.setState({ url: image.image }, () => {\r\n      this.props.onChange({ url: this.state.url });\r\n    });\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({ url: e.target.value }, () => {\r\n      this.props.onChange({ url: this.state.url });\r\n    });\r\n  };\r\n  isImg = () => {\r\n    return this.props.mediaType === \"IMAGE\";\r\n  };\r\n  onReset = () => {\r\n    this.setState({ url: \"\" }, () => {\r\n      this.props.onChange({ url: this.state.url });\r\n    });\r\n  };\r\n  render() {\r\n    const props = {\r\n      onUploadDone: this.onUploadDone,\r\n    };\r\n    const { url } = this.state;\r\n    const { mediaType, isInput } = this.props;\r\n    return (\r\n      <div>\r\n        <div className=\"col-12\" style={{padding:0}}>\r\n          {!isInput ? <label>{mediaType === \"IMAGE\" ? \"Image\" : \"Video\"}</label> : null}\r\n          {!isInput ? (\r\n            <Switch1\r\n              isChecked={this.props.mediaType === \"IMAGE\"}\r\n              onChange={(status) => {\r\n                this.setState({ mediaType: status ? \"IMAGE\" : \"VIDEO\" }, () => {\r\n                  this.props.onChange({ mediaType: this.state.mediaType });\r\n                });\r\n              }}\r\n            />\r\n          ) : null}\r\n        </div>\r\n        {!isInput ? (\r\n          <React.Fragment>\r\n            <div className=\"col-12\" style={mediaType === \"IMAGE\" ? { padding:0 } : { padding:0 , pointerEvents: \"none\" }}>\r\n              <Uploader {...props} onReset={this.onReset} />\r\n            </div>\r\n            <div className=\"form-element\">\r\n              <div className=\"label-text\">URL*</div>\r\n              <input type=\"text\" name=\"url\" className=\"form-control\" value={url} onChange={this.onChange} />\r\n            </div>\r\n          </React.Fragment>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}