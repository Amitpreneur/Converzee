{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/CentralTimer/Style.js\";\nimport React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport \"react-color-picker/index.css\";\nimport { Info } from \"../../../comman/Info\";\nimport { ColorSelector } from \"../../../layout/LayoutSelector\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Style extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      elements: this.props.elements,\n      selected: this.props.selected,\n      timerFont: this.props.timerFont,\n      timerLabelFont: this.props.timerLabelFont\n    };\n\n    this.onClickElement = i => {\n      const cases = this.props.case || 1;\n      this.setState({\n        selected: i\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onColorChange = color => {\n      const cases = this.props.case || 1;\n      const {\n        elements,\n        selected\n      } = this.state;\n      elements[selected].color = color.hex;\n      this.setState({\n        elements\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onChange = e => {\n      let value = e.target.value;\n      if (value > e.target.max) value = e.target.max;\n      const cases = this.props.case || 1;\n      this.setState({\n        [e.target.name]: value\n      }, () => {\n        this.props.onChange(cases, this.state);\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    const cases = this.props.case || 1;\n    this.props.onChange(cases, this.state);\n  }\n\n  render() {\n    const {\n      elements,\n      selected,\n      timerFont,\n      timerLabelFont\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 col-sm-12 order-sm-2\",\n          children: elements.map((e, i) => /*#__PURE__*/_createElement(ColorSelector, { ...e,\n            selectedIndex: selected,\n            onClick: this.onClickElement,\n            index: i,\n            key: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8 col-sm-12\",\n          children: /*#__PURE__*/_jsxDEV(SketchPicker, {\n            defaultValue: \"#452135\",\n            color: elements[selected].color,\n            onChangeComplete: this.onColorChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-text\",\n          children: [\"Timer Font*\", /*#__PURE__*/_jsxDEV(Info, {\n            text: \"Select font size for Timer.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          max: 50,\n          name: \"timerFont\",\n          min: 14,\n          className: \"form-control\",\n          value: timerFont,\n          onChange: this.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-text\",\n          children: [\"Timer Label Font*\", /*#__PURE__*/_jsxDEV(Info, {\n            text: \"Select font size for Timer label and timer's font size keep minimum 14px.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          max: 20,\n          name: \"timerLabelFont\",\n          className: \"form-control\",\n          value: timerLabelFont,\n          onChange: this.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/CentralTimer/Style.js"],"names":["React","Component","SketchPicker","Info","ColorSelector","Style","state","elements","props","selected","timerFont","timerLabelFont","onClickElement","i","cases","case","setState","onChange","onColorChange","color","hex","e","value","target","max","name","componentWillUnmount","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\n\r\nimport \"react-color-picker/index.css\";\r\nimport { Info } from \"../../../comman/Info\";\r\nimport { ColorSelector } from \"../../../layout/LayoutSelector\";\r\nexport default class Style extends Component {\r\n  state = {\r\n    elements: this.props.elements,\r\n    selected: this.props.selected,\r\n    timerFont: this.props.timerFont,\r\n    timerLabelFont: this.props.timerLabelFont,\r\n  };\r\n\r\n  onClickElement = (i) => {\r\n    const cases = this.props.case || 1;\r\n    this.setState({ selected: i });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const cases = this.props.case || 1;\r\n    this.props.onChange(cases, this.state);\r\n  }\r\n\r\n  onColorChange = (color) => {\r\n    const cases = this.props.case || 1;\r\n    const { elements, selected } = this.state;\r\n    elements[selected].color = color.hex;\r\n    this.setState({ elements });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  onChange = (e) => {\r\n    let value = e.target.value;\r\n    if (value > e.target.max) value = e.target.max;\r\n    const cases = this.props.case || 1;\r\n    this.setState({ [e.target.name]: value }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n  render() {\r\n    const { elements, selected, timerFont, timerLabelFont } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 col-sm-12 order-sm-2\">\r\n            {elements.map((e, i) => (\r\n              <ColorSelector {...e} selectedIndex={selected} onClick={this.onClickElement} index={i} key={i} />\r\n            ))}\r\n          </div>\r\n          <div className=\"col-md-8 col-sm-12\">\r\n            <SketchPicker defaultValue=\"#452135\" color={elements[selected].color} onChangeComplete={this.onColorChange} />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            Timer Font*\r\n            <Info text=\"Select font size for Timer.\" />\r\n          </div>\r\n          <input type=\"number\" max={50} name=\"timerFont\" min={14} className=\"form-control\" value={timerFont} onChange={this.onChange} />\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            Timer Label Font*\r\n            <Info text=\"Select font size for Timer label and timer's font size keep minimum 14px.\" />\r\n          </div>\r\n          <input type=\"number\" max={20} name=\"timerLabelFont\" className=\"form-control\" value={timerLabelFont} onChange={this.onChange} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}