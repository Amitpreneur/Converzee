{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/GeoRedirection/index.js\";\nimport React, { Component } from \"react\";\nimport \"../../Create.css\";\nimport Code from \"../../../subpages/create/Code\";\nimport RequestHandler from \"../../../../actions/RequestHandler\";\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath } from \"../../../../actions/URLs\";\nimport Text from \"./Text\";\nimport SideBar from \"./SideBar\";\nimport ToolUtil from \"../../../../utils/ToolUtil\";\nimport Redirection from \"./Redirection\";\nimport Util from \"../../../Util\";\nimport { GeoRedirectionModal, GeoRedirectionModalResponse } from \"../../../utils/Modal\";\nimport SuccessPopup from \"../../../comman/SuccessPopUp\";\nimport { Drawer, Modal } from \"antd\";\nimport { ToolLayout, ButtonsGroup } from \"../../../layout/ToolLayout\";\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst groRed = {\n  activeTab: 1,\n  TEXT: {\n    campaignName: \"\"\n  },\n  redirection: [{\n    country: \"\",\n    redirectUrl: \"\"\n  }],\n  CODE: {\n    include: [{\n      type: \"contains\",\n      url: \"\"\n    }],\n    exclude: [{\n      type: \"contains\",\n      url: \"\"\n    }]\n  }\n};\nexport default class GeoRedirection extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = groRed;\n    this.loaded = false;\n\n    this.onChangeActive = tabIndex => {\n      const {\n        activeTab\n      } = this.state;\n\n      if (activeTab !== tabIndex) {\n        this.setState({\n          activeTab: tabIndex\n        });\n      }\n    };\n\n    this.onUpdate = (index, data) => {\n      switch (index) {\n        case 1:\n          this.setState({\n            TEXT: data\n          });\n          break;\n\n        case 2:\n          this.setState({\n            redirection: data\n          });\n          break;\n\n        case 3:\n          this.setState({\n            CODE: data\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.renderMain = () => {\n      const {\n        activeTab,\n        TEXT,\n        redirection,\n        CODE\n      } = this.state;\n      let component = null;\n      if (!this.loaded) return null;\n\n      switch (activeTab) {\n        case 15:\n          component = /*#__PURE__*/_jsxDEV(Text, { ...TEXT,\n            onChange: this.onUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this);\n          break;\n\n        case 1:\n          component = /*#__PURE__*/_jsxDEV(Redirection, {\n            redirection: redirection,\n            case: 2,\n            onChange: this.onUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this);\n          break;\n\n        case 2:\n          component = /*#__PURE__*/_jsxDEV(Code, { ...CODE,\n            case: 3,\n            onChange: this.onUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this);\n          break;\n\n        default:\n          component = /*#__PURE__*/_jsxDEV(Text, { ...TEXT,\n            onChange: this.onUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this);\n          break;\n      }\n\n      return component;\n    };\n\n    this.onClickSave = () => {\n      const toolData = this.state;\n\n      if (this.state.CODE.include[0].url !== \"\") {\n        if (!Util.isArrayEqual(groRed, this.state, 3)) {\n          RequestHandler.PostRequest(SAVE_TOOL, {\n            toolData: GeoRedirectionModal(toolData)\n          }, (res, err) => {\n            if (res) {\n              if (res.data) {\n                Modal.success({\n                  content: \"Campaign Save SuccessFully\"\n                });\n                setTimeout(() => {\n                  this.props.history.push(\"/Campaigns\");\n                }, 1000);\n              }\n            } else {\n              console.log(err);\n            }\n          });\n        }\n      } else {\n        Modal.warning({\n          content: \"Should Contain atleast one trigger point\"\n        });\n      }\n    };\n\n    this.renderRight = () => {\n      return /*#__PURE__*/_jsxDEV(ReponsiveImage, {\n        isAs: true,\n        url: \"asset/geo.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 12\n      }, this);\n    };\n\n    this.back = () => {\n      this.props.history.push(\"/Create\");\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match ? this.props.match.params ? this.props.match.params.id : null : null;\n\n    if (id) {\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\n        if (res) {\n          this.loaded = true;\n          Util.isRedirected = true;\n          const data = GeoRedirectionModalResponse(res);\n\n          if (data) {\n            this.setState(data, () => {\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\n            });\n          }\n        }\n      });\n    } else {\n      const toolId = 7;\n      this.loaded = true;\n      this.setState({\n        toolId: toolId,\n        toolName: ToolUtil.getTool(toolId),\n        name: Util.CAMPAIGNS_NAME\n      });\n      Util.RedirectWhenCampaignEmpty(this.props);\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ToolLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-10 toolItem\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: this.renderMain()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6 mt-2\",\n              children: this.renderRight()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonsGroup, {\n              backUrl: this.back,\n              save: this.onClickSave\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-1 sideBarButtomPanel\",\n          children: /*#__PURE__*/_jsxDEV(SideBar, {\n            activeTab: this.state.activeTab,\n            onChangeActive: this.onChangeActive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/GeoRedirection/index.js"],"names":["React","Component","Code","RequestHandler","GET_ONE_TOOL","SAVE_TOOL","getPath","Text","SideBar","ToolUtil","Redirection","Util","GeoRedirectionModal","GeoRedirectionModalResponse","SuccessPopup","Drawer","Modal","ToolLayout","ButtonsGroup","ReponsiveImage","groRed","activeTab","TEXT","campaignName","redirection","country","redirectUrl","CODE","include","type","url","exclude","GeoRedirection","state","loaded","onChangeActive","tabIndex","setState","onUpdate","index","data","renderMain","component","onClickSave","toolData","isArrayEqual","PostRequest","res","err","success","content","setTimeout","props","history","push","console","log","warning","renderRight","back","componentDidMount","id","match","params","isRedirected","window","gs","navTitle","getTool","toolId","name","toolName","CAMPAIGNS_NAME","RedirectWhenCampaignEmpty","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../../Create.css\";\r\nimport Code from \"../../../subpages/create/Code\";\r\nimport RequestHandler from \"../../../../actions/RequestHandler\";\r\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath } from \"../../../../actions/URLs\";\r\nimport Text from \"./Text\";\r\nimport SideBar from \"./SideBar\";\r\nimport ToolUtil from \"../../../../utils/ToolUtil\";\r\nimport Redirection from \"./Redirection\";\r\nimport Util from \"../../../Util\";\r\nimport { GeoRedirectionModal, GeoRedirectionModalResponse } from \"../../../utils/Modal\";\r\nimport SuccessPopup from \"../../../comman/SuccessPopUp\";\r\nimport { Drawer, Modal } from \"antd\";\r\nimport { ToolLayout, ButtonsGroup } from \"../../../layout/ToolLayout\";\r\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\r\n\r\nconst groRed = {\r\n  activeTab: 1,\r\n  TEXT: { campaignName: \"\" },\r\n  redirection: [{ country: \"\", redirectUrl: \"\" }],\r\n  CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: \"\" }] },\r\n};\r\nexport default class GeoRedirection extends Component {\r\n  state = groRed;\r\n  loaded = false;\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        if (res) {\r\n          this.loaded = true;\r\n          Util.isRedirected = true;\r\n          const data = GeoRedirectionModalResponse(res);\r\n          if (data) {\r\n            this.setState(data, () => {\r\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const toolId = 7;\r\n      this.loaded = true;\r\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\r\n      Util.RedirectWhenCampaignEmpty(this.props);\r\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\r\n    }\r\n  }\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n  onUpdate = (index, data) => {\r\n    switch (index) {\r\n      case 1:\r\n        this.setState({ TEXT: data });\r\n        break;\r\n      case 2:\r\n        this.setState({ redirection: data });\r\n        break;\r\n      case 3:\r\n        this.setState({ CODE: data });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  renderMain = () => {\r\n    const { activeTab, TEXT, redirection, CODE } = this.state;\r\n    let component = null;\r\n    if (!this.loaded) return null;\r\n    switch (activeTab) {\r\n      case 15:\r\n        component = <Text {...TEXT} onChange={this.onUpdate} />;\r\n        break;\r\n      case 1:\r\n        component = <Redirection redirection={redirection} case={2} onChange={this.onUpdate} />;\r\n        break;\r\n      case 2:\r\n        component = <Code {...CODE} case={3} onChange={this.onUpdate} />;\r\n        break;\r\n      default:\r\n        component = <Text {...TEXT} onChange={this.onUpdate} />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    const toolData = this.state;\r\n    if (this.state.CODE.include[0].url !== \"\") {\r\n      if (!Util.isArrayEqual(groRed, this.state, 3)) {\r\n        RequestHandler.PostRequest(SAVE_TOOL, { toolData: GeoRedirectionModal(toolData) }, (res, err) => {\r\n          if (res) {\r\n            if (res.data) {\r\n              Modal.success({\r\n                content: \"Campaign Save SuccessFully\",\r\n              });\r\n              setTimeout(() => {\r\n                this.props.history.push(\"/Campaigns\");\r\n              }, 1000);\r\n            }\r\n          } else {\r\n            console.log(err);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      Modal.warning({\r\n        content: \"Should Contain atleast one trigger point\",\r\n      });\r\n    }\r\n  };\r\n\r\n  renderRight = () => {\r\n    return <ReponsiveImage isAs={true} url={\"asset/geo.png\"} />;\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(\"/Create\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ToolLayout>\r\n        <div className=\"row\">\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\r\n              <ButtonsGroup backUrl={this.back} save={this.onClickSave} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}