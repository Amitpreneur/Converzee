{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Portal.js\";\nimport React from \"react\";\nimport { PortalWithState, PortalFunctionParams } from \"react-portal\";\nexport default class Portal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getChilder = params => {\n      return params ? params.portal(this.props.children) : undefined;\n    };\n\n    this.onClose = () => {\n      if (this.props.onClose) {\n        this.props.onClose();\n      }\n    };\n\n    this.onOpen = () => {\n      if (this.props.onOpen) {\n        this.props.onOpen();\n      }\n    };\n\n    this.portalId = Portal.portalCounter++;\n  }\n\n  render() {\n    //const { children } = this.props;\n    return React.createElement(PortalWithState, {\n      closeOnEsc: this.props.closeOnEsc // closeOnOutsideClick={this.props.closeOnOutsideClick}\n      ,\n      onClose: this.onClose,\n      onOpen: this.onOpen,\n      defaultOpen: this.props.defaultOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.getChilder);\n  }\n\n}\nPortal.portalCounter = 0;","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Portal.js"],"names":["React","PortalWithState","PortalFunctionParams","Portal","Component","constructor","props","getChilder","params","portal","children","undefined","onClose","onOpen","portalId","portalCounter","render","closeOnEsc","defaultOpen"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,oBAA1B,QAAsD,cAAtD;AACA,eAAe,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AAGlDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,UALmB,GAKNC,MAAM,IAAI;AACrB,aAAOA,MAAM,GAAGA,MAAM,CAACC,MAAP,CAAc,KAAKH,KAAL,CAAWI,QAAzB,CAAH,GAAwCC,SAArD;AACD,KAPkB;;AAAA,SASnBC,OATmB,GAST,MAAM;AACd,UAAI,KAAKN,KAAL,CAAWM,OAAf,EAAwB;AACtB,aAAKN,KAAL,CAAWM,OAAX;AACD;AACF,KAbkB;;AAAA,SAenBC,MAfmB,GAeV,MAAM;AACb,UAAI,KAAKP,KAAL,CAAWO,MAAf,EAAuB;AACrB,aAAKP,KAAL,CAAWO,MAAX;AACD;AACF,KAnBkB;;AAEjB,SAAKC,QAAL,GAAgBX,MAAM,CAACY,aAAP,EAAhB;AACD;;AAkBDC,EAAAA,MAAM,GAAG;AACP;AACA,WACE,oBAAC,eAAD;AACE,MAAA,UAAU,EAAE,KAAKV,KAAL,CAAWW,UADzB,CAEE;AAFF;AAGE,MAAA,OAAO,EAAE,KAAKL,OAHhB;AAIE,MAAA,MAAM,EAAE,KAAKC,MAJf;AAKE,MAAA,WAAW,EAAE,KAAKP,KAAL,CAAWY,WAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,KAAKX,UAPR,CADF;AAWD;;AArCiD;AAA/BJ,M,CAEZY,a,GAAgB,C","sourcesContent":["//@flow\nimport React from \"react\";\nimport { PortalWithState, PortalFunctionParams } from \"react-portal\";\nexport default class Portal extends React.Component {\n  portalId;\n  static portalCounter = 0;\n  constructor(props) {\n    super(props);\n    this.portalId = Portal.portalCounter++;\n  }\n\n  getChilder = params => {\n    return params ? params.portal(this.props.children) : undefined;\n  };\n\n  onClose = () => {\n    if (this.props.onClose) {\n      this.props.onClose();\n    }\n  };\n\n  onOpen = () => {\n    if (this.props.onOpen) {\n      this.props.onOpen();\n    }\n  };\n\n  render() {\n    //const { children } = this.props;\n    return (\n      <PortalWithState\n        closeOnEsc={this.props.closeOnEsc}\n        // closeOnOutsideClick={this.props.closeOnOutsideClick}\n        onClose={this.onClose}\n        onOpen={this.onOpen}\n        defaultOpen={this.props.defaultOpen}\n      >\n        {this.getChilder}\n      </PortalWithState>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}