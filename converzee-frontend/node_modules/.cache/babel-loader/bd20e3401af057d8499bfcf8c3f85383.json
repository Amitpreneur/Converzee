{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ImagePopup/index.js\";\nimport React, { Component } from \"react\";\nimport \"../../Create.css\";\nimport Code from \"../../../subpages/create/Code\";\nimport RequestHandler from \"../../../../actions/RequestHandler\";\nimport { GET_ONE_TOOL, SAVE_TOOL } from \"../../../../actions/URLs\";\nimport Text from \"./Text\";\nimport SideBar from \"./SideBar\";\nimport ToolUtil from \"../../../../utils/ToolUtil\";\nimport Image from \"./Image\";\nimport Style from \"../../../subpages/create/Style\";\nimport Preview from \"./Preview\";\nimport Util from \"../../../Util\";\nimport { ImagePopupModalResponse, ImagePopupModal } from \"../../../utils/Modal\";\nimport { Modal } from \"antd\";\nimport { ButtonsGroup, ToolLayout } from \"../../../layout/ToolLayout\";\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imagePop = {\n  activeTab: 1,\n  TEXT: {\n    campaignName: \"\"\n  },\n  image: \"\",\n  STYLE: {\n    elements: [{\n      name: \"highlightBackground\",\n      text: \"Highlight Background\",\n      color: \"\"\n    }],\n    selected: 0\n  },\n  CODE: {\n    include: [{\n      type: \"contains\",\n      url: \"\"\n    }],\n    exclude: [{\n      type: \"contains\",\n      url: \"\"\n    }]\n  }\n};\nexport default class ImagePopup extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = imagePop;\n\n    this.onChangeActive = tabIndex => {\n      const {\n        activeTab\n      } = this.state;\n\n      if (activeTab !== tabIndex) {\n        this.setState({\n          activeTab: tabIndex\n        });\n      }\n    };\n\n    this.onUpdate = (index, data) => {\n      switch (index) {\n        case 1:\n          this.setState({\n            TEXT: data\n          });\n          break;\n\n        case 2:\n          this.setState({\n            image: data\n          });\n          break;\n\n        case 3:\n          this.setState({\n            STYLE: data\n          });\n          break;\n\n        case 4:\n          this.setState({\n            CODE: data\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.renderMain = () => {\n      const {\n        activeTab,\n        TEXT,\n        image,\n        STYLE,\n        CODE\n      } = this.state;\n      let component = null;\n\n      switch (activeTab) {\n        case 15:\n          component = /*#__PURE__*/_jsxDEV(Text, { ...TEXT,\n            onChange: this.onUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this);\n          break;\n\n        case 1:\n          component = /*#__PURE__*/_jsxDEV(Image, {\n            image: image,\n            onChange: this.onUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this);\n          break;\n\n        case 2:\n          component = /*#__PURE__*/_jsxDEV(Style, { ...STYLE,\n            case: 3,\n            onChange: this.onUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this);\n          break;\n\n        case 3:\n          component = /*#__PURE__*/_jsxDEV(Code, { ...CODE,\n            case: 4,\n            onChange: this.onUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this);\n          break;\n\n        default:\n          // component = <Text {...TEXT} onChange={this.onUpdate} />;\n          break;\n      }\n\n      return component;\n    };\n\n    this.onClickSave = () => {\n      const toolData = this.state;\n\n      if (this.state.CODE.include[0].url !== \"\") {\n        if (!Util.isArrayEqual(imagePop, this.state, 3)) {\n          RequestHandler.PostRequest(SAVE_TOOL, {\n            toolData: ImagePopupModal(toolData)\n          }, (res, err) => {\n            if (res) {\n              if (res.data.script) {\n                window.gs.setScript(res.data.script);\n                setTimeout(() => {\n                  this.props.history.push(\"/Campaigns\");\n                }, 3000);\n              } else {\n                window.gs.toast(res.data.message, {\n                  position: \"bottom-right\",\n                  type: window.gs.toast.TYPE.FAILED\n                });\n              }\n            } else {\n              console.log(err);\n            }\n          });\n        }\n      } else {\n        Modal.warning({\n          content: \"Should Contain atleast one trigger point\"\n        });\n      }\n    };\n\n    this.renderRight = () => {\n      const {\n        activeTab,\n        image\n      } = this.state;\n      if (activeTab === 1 && image) return /*#__PURE__*/_jsxDEV(ReponsiveImage, {\n        isImg: true,\n        url: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 42\n      }, this);\n      return /*#__PURE__*/_jsxDEV(ReponsiveImage, {\n        isAs: true,\n        url: \"asset/image_pop_up.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 12\n      }, this);\n    };\n\n    this.back = () => {\n      this.props.history.push(\"/Create\");\n    };\n\n    this.closePopup = () => {\n      this.setState({\n        preview: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match ? this.props.match.params ? this.props.match.params.id : null : null;\n\n    if (id) {\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\n        if (res) {\n          Util.isRedirected = true;\n          const data = ImagePopupModalResponse(res);\n\n          if (data) {\n            this.setState(data, () => {\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\n            });\n          }\n        }\n      });\n    } else {\n      const toolId = 4;\n      this.setState({\n        toolId: toolId,\n        toolName: ToolUtil.getTool(toolId),\n        name: Util.CAMPAIGNS_NAME\n      });\n      Util.RedirectWhenCampaignEmpty(this.props);\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\n    }\n  }\n\n  render() {\n    const {\n      preview,\n      image\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(ToolLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row loki\",\n        children: [preview ? /*#__PURE__*/_jsxDEV(Preview, { ...this.state,\n          closePopup: this.closePopup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 22\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-10 toolItem\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: this.renderMain()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6 mt-2\",\n              children: this.renderRight()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonsGroup, {\n              preview: image != \"\" ? () => {\n                this.setState({\n                  preview: !preview\n                });\n              } : null,\n              backUrl: this.back,\n              save: this.onClickSave\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-1 sideBarButtomPanel\",\n          children: /*#__PURE__*/_jsxDEV(SideBar, {\n            activeTab: this.state.activeTab,\n            onChangeActive: this.onChangeActive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ImagePopup/index.js"],"names":["React","Component","Code","RequestHandler","GET_ONE_TOOL","SAVE_TOOL","Text","SideBar","ToolUtil","Image","Style","Preview","Util","ImagePopupModalResponse","ImagePopupModal","Modal","ButtonsGroup","ToolLayout","ReponsiveImage","imagePop","activeTab","TEXT","campaignName","image","STYLE","elements","name","text","color","selected","CODE","include","type","url","exclude","ImagePopup","state","onChangeActive","tabIndex","setState","onUpdate","index","data","renderMain","component","onClickSave","toolData","isArrayEqual","PostRequest","res","err","script","window","gs","setScript","setTimeout","props","history","push","toast","message","position","TYPE","FAILED","console","log","warning","content","renderRight","back","closePopup","preview","componentDidMount","id","match","params","isRedirected","navTitle","getTool","toolId","toolName","CAMPAIGNS_NAME","RedirectWhenCampaignEmpty","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,0BAAxC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,uBAAT,EAAkCC,eAAlC,QAAyD,sBAAzD;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,4BAAzC;AACA,SAASC,cAAT,QAA+B,6BAA/B;;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,SAAS,EAAE,CADI;AAEfC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,YAAY,EAAE;AAAhB,GAFS;AAGfC,EAAAA,KAAK,EAAE,EAHQ;AAIfC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,CAAC;AAAEC,MAAAA,IAAI,EAAE,qBAAR;AAA+BC,MAAAA,IAAI,EAAE,sBAArC;AAA6DC,MAAAA,KAAK,EAAE;AAApE,KAAD,CADL;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAJQ;AAQfC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,OAAO,EAAE,CAAC;AAAEC,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,GAAG,EAAE;AAAzB,KAAD,CAAX;AAA4CC,IAAAA,OAAO,EAAE,CAAC;AAAEF,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,GAAG,EAAE;AAAzB,KAAD;AAArD;AARS,CAAjB;AAUA,eAAe,MAAME,UAAN,SAAyBlC,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAChDmC,KADgD,GACxCjB,QADwC;;AAAA,SAuBhDkB,cAvBgD,GAuB9BC,QAAD,IAAc;AAC7B,YAAM;AAAElB,QAAAA;AAAF,UAAgB,KAAKgB,KAA3B;;AACA,UAAIhB,SAAS,KAAKkB,QAAlB,EAA4B;AAC1B,aAAKC,QAAL,CAAc;AAAEnB,UAAAA,SAAS,EAAEkB;AAAb,SAAd;AACD;AACF,KA5B+C;;AAAA,SA6BhDE,QA7BgD,GA6BrC,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC1B,cAAQD,KAAR;AACE,aAAK,CAAL;AACE,eAAKF,QAAL,CAAc;AAAElB,YAAAA,IAAI,EAAEqB;AAAR,WAAd;AACA;;AACF,aAAK,CAAL;AACE,eAAKH,QAAL,CAAc;AAAEhB,YAAAA,KAAK,EAAEmB;AAAT,WAAd;AACA;;AACF,aAAK,CAAL;AACE,eAAKH,QAAL,CAAc;AAAEf,YAAAA,KAAK,EAAEkB;AAAT,WAAd;AACA;;AACF,aAAK,CAAL;AACE,eAAKH,QAAL,CAAc;AAAET,YAAAA,IAAI,EAAEY;AAAR,WAAd;AACA;;AACF;AACE;AAdJ;AAgBD,KA9C+C;;AAAA,SA+ChDC,UA/CgD,GA+CnC,MAAM;AACjB,YAAM;AAAEvB,QAAAA,SAAF;AAAaC,QAAAA,IAAb;AAAmBE,QAAAA,KAAnB;AAA0BC,QAAAA,KAA1B;AAAiCM,QAAAA;AAAjC,UAA0C,KAAKM,KAArD;AACA,UAAIQ,SAAS,GAAG,IAAhB;;AACA,cAAQxB,SAAR;AACE,aAAK,EAAL;AACEwB,UAAAA,SAAS,gBAAG,QAAC,IAAD,OAAUvB,IAAV;AAAgB,YAAA,QAAQ,EAAE,KAAKmB;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAAZ;AACA;;AACF,aAAK,CAAL;AACEI,UAAAA,SAAS,gBAAG,QAAC,KAAD;AAAO,YAAA,KAAK,EAAErB,KAAd;AAAqB,YAAA,QAAQ,EAAE,KAAKiB;AAApC;AAAA;AAAA;AAAA;AAAA,kBAAZ;AACA;;AACF,aAAK,CAAL;AACEI,UAAAA,SAAS,gBAAG,QAAC,KAAD,OAAWpB,KAAX;AAAkB,YAAA,IAAI,EAAE,CAAxB;AAA2B,YAAA,QAAQ,EAAE,KAAKgB;AAA1C;AAAA;AAAA;AAAA;AAAA,kBAAZ;AACA;;AACF,aAAK,CAAL;AACEI,UAAAA,SAAS,gBAAG,QAAC,IAAD,OAAUd,IAAV;AAAgB,YAAA,IAAI,EAAE,CAAtB;AAAyB,YAAA,QAAQ,EAAE,KAAKU;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAAZ;AACA;;AACF;AACE;AACA;AAfJ;;AAiBA,aAAOI,SAAP;AACD,KApE+C;;AAAA,SAsEhDC,WAtEgD,GAsElC,MAAM;AAClB,YAAMC,QAAQ,GAAG,KAAKV,KAAtB;;AACA,UAAI,KAAKA,KAAL,CAAWN,IAAX,CAAgBC,OAAhB,CAAwB,CAAxB,EAA2BE,GAA3B,KAAmC,EAAvC,EAA2C;AACzC,YAAI,CAACrB,IAAI,CAACmC,YAAL,CAAkB5B,QAAlB,EAA4B,KAAKiB,KAAjC,EAAwC,CAAxC,CAAL,EAAiD;AAC/CjC,UAAAA,cAAc,CAAC6C,WAAf,CAA2B3C,SAA3B,EAAsC;AAAEyC,YAAAA,QAAQ,EAAEhC,eAAe,CAACgC,QAAD;AAA3B,WAAtC,EAA+E,CAACG,GAAD,EAAMC,GAAN,KAAc;AAC3F,gBAAID,GAAJ,EAAS;AACP,kBAAIA,GAAG,CAACP,IAAJ,CAASS,MAAb,EAAqB;AACnBC,gBAAAA,MAAM,CAACC,EAAP,CAAUC,SAAV,CAAoBL,GAAG,CAACP,IAAJ,CAASS,MAA7B;AACAI,gBAAAA,UAAU,CAAC,MAAM;AACf,uBAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACD,iBAFS,EAEP,IAFO,CAAV;AAGD,eALD,MAKO;AACLN,gBAAAA,MAAM,CAACC,EAAP,CAAUM,KAAV,CAAgBV,GAAG,CAACP,IAAJ,CAASkB,OAAzB,EAAkC;AAAEC,kBAAAA,QAAQ,EAAE,cAAZ;AAA4B7B,kBAAAA,IAAI,EAAEoB,MAAM,CAACC,EAAP,CAAUM,KAAV,CAAgBG,IAAhB,CAAqBC;AAAvD,iBAAlC;AACD;AACF,aATD,MASO;AACLC,cAAAA,OAAO,CAACC,GAAR,CAAYf,GAAZ;AACD;AACF,WAbD;AAcD;AACF,OAjBD,MAiBO;AACLnC,QAAAA,KAAK,CAACmD,OAAN,CAAc;AACZC,UAAAA,OAAO,EAAE;AADG,SAAd;AAGD;AACF,KA9F+C;;AAAA,SAgGhDC,WAhGgD,GAgGlC,MAAM;AAClB,YAAM;AAAEhD,QAAAA,SAAF;AAAaG,QAAAA;AAAb,UAAuB,KAAKa,KAAlC;AACA,UAAIhB,SAAS,KAAK,CAAd,IAAmBG,KAAvB,EAA8B,oBAAO,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAE,IAAvB;AAA6B,QAAA,GAAG,EAAEA;AAAlC;AAAA;AAAA;AAAA;AAAA,cAAP;AAC9B,0BAAO,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,IAAtB;AAA4B,QAAA,GAAG,EAAE;AAAjC;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KApG+C;;AAAA,SAsGhD8C,IAtGgD,GAsGzC,MAAM;AACX,WAAKb,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AACD,KAxG+C;;AAAA,SA0GhDY,UA1GgD,GA0GnC,MAAM;AACjB,WAAK/B,QAAL,CAAc;AAAEgC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KA5G+C;AAAA;;AAEhDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,EAAE,GAAG,KAAKjB,KAAL,CAAWkB,KAAX,GAAoB,KAAKlB,KAAL,CAAWkB,KAAX,CAAiBC,MAAjB,GAA0B,KAAKnB,KAAL,CAAWkB,KAAX,CAAiBC,MAAjB,CAAwBF,EAAlD,GAAuD,IAA3E,GAAmF,IAA9F;;AACA,QAAIA,EAAJ,EAAQ;AACNtE,MAAAA,cAAc,CAAC6C,WAAf,CAA2B5C,YAAY,GAAGqE,EAA1C,EAA8C,EAA9C,EAAkD,CAACxB,GAAD,EAAMC,GAAN,KAAc;AAC9D,YAAID,GAAJ,EAAS;AACPrC,UAAAA,IAAI,CAACgE,YAAL,GAAoB,IAApB;AACA,gBAAMlC,IAAI,GAAG7B,uBAAuB,CAACoC,GAAD,CAApC;;AACA,cAAIP,IAAJ,EAAU;AACR,iBAAKH,QAAL,CAAcG,IAAd,EAAoB,MAAM;AACxBU,cAAAA,MAAM,CAACC,EAAP,CAAUwB,QAAV,CAAmBrE,QAAQ,CAACsE,OAAT,CAAiBpC,IAAI,CAACqC,MAAtB,IAAgC,GAAhC,GAAsCrC,IAAI,CAAChB,IAA3C,GAAkD,GAArE;AACD,aAFD;AAGD;AACF;AACF,OAVD;AAWD,KAZD,MAYO;AACL,YAAMqD,MAAM,GAAG,CAAf;AACA,WAAKxC,QAAL,CAAc;AAAEwC,QAAAA,MAAM,EAAEA,MAAV;AAAkBC,QAAAA,QAAQ,EAAExE,QAAQ,CAACsE,OAAT,CAAiBC,MAAjB,CAA5B;AAAsDrD,QAAAA,IAAI,EAAEd,IAAI,CAACqE;AAAjE,OAAd;AACArE,MAAAA,IAAI,CAACsE,yBAAL,CAA+B,KAAK1B,KAApC;AACAJ,MAAAA,MAAM,CAACC,EAAP,CAAUwB,QAAV,CAAmBrE,QAAQ,CAACsE,OAAT,CAAiBC,MAAjB,IAA2B,GAA3B,GAAiCnE,IAAI,CAACqE,cAAtC,GAAuD,GAA1E;AACD;AACF;;AAwFDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA,OAAF;AAAWhD,MAAAA;AAAX,QAAqB,KAAKa,KAAhC;AACA,wBACE,QAAC,UAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,mBACGmC,OAAO,gBAAG,QAAC,OAAD,OAAa,KAAKnC,KAAlB;AAAyB,UAAA,UAAU,EAAE,KAAKkC;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAAH,GAA8D,IADxE,eAEE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,wBAA2B,KAAK3B,UAAL;AAA3B;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,wBAAgC,KAAKyB,WAAL;AAAhC;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,YAAD;AACE,cAAA,OAAO,EAAG7C,KAAK,IAAE,EAAP,GAAY,MAAM;AAC1B,qBAAKgB,QAAL,CAAc;AAAEgC,kBAAAA,OAAO,EAAE,CAACA;AAAZ,iBAAd;AACD,eAFS,GAEN,IAHN;AAIE,cAAA,OAAO,EAAE,KAAKF,IAJhB;AAKE,cAAA,IAAI,EAAE,KAAKxB;AALb;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAeE;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,iCACE,QAAC,OAAD;AAAS,YAAA,SAAS,EAAE,KAAKT,KAAL,CAAWhB,SAA/B;AAA0C,YAAA,cAAc,EAAE,KAAKiB;AAA/D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AAvI+C","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../../Create.css\";\r\nimport Code from \"../../../subpages/create/Code\";\r\nimport RequestHandler from \"../../../../actions/RequestHandler\";\r\nimport { GET_ONE_TOOL, SAVE_TOOL } from \"../../../../actions/URLs\";\r\nimport Text from \"./Text\";\r\nimport SideBar from \"./SideBar\";\r\nimport ToolUtil from \"../../../../utils/ToolUtil\";\r\nimport Image from \"./Image\";\r\nimport Style from \"../../../subpages/create/Style\";\r\nimport Preview from \"./Preview\";\r\nimport Util from \"../../../Util\";\r\nimport { ImagePopupModalResponse, ImagePopupModal } from \"../../../utils/Modal\";\r\nimport { Modal } from \"antd\";\r\nimport { ButtonsGroup, ToolLayout } from \"../../../layout/ToolLayout\";\r\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\r\n\r\nconst imagePop = {\r\n  activeTab: 1,\r\n  TEXT: { campaignName: \"\" },\r\n  image: \"\",\r\n  STYLE: {\r\n    elements: [{ name: \"highlightBackground\", text: \"Highlight Background\", color: \"\" }],\r\n    selected: 0,\r\n  },\r\n  CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: \"\" }] },\r\n};\r\nexport default class ImagePopup extends Component {\r\n  state = imagePop;\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        if (res) {\r\n          Util.isRedirected = true;\r\n          const data = ImagePopupModalResponse(res);\r\n          if (data) {\r\n            this.setState(data, () => {\r\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const toolId = 4;\r\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\r\n      Util.RedirectWhenCampaignEmpty(this.props);\r\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\r\n    }\r\n  }\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n  onUpdate = (index, data) => {\r\n    switch (index) {\r\n      case 1:\r\n        this.setState({ TEXT: data });\r\n        break;\r\n      case 2:\r\n        this.setState({ image: data });\r\n        break;\r\n      case 3:\r\n        this.setState({ STYLE: data });\r\n        break;\r\n      case 4:\r\n        this.setState({ CODE: data });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  renderMain = () => {\r\n    const { activeTab, TEXT, image, STYLE, CODE } = this.state;\r\n    let component = null;\r\n    switch (activeTab) {\r\n      case 15:\r\n        component = <Text {...TEXT} onChange={this.onUpdate} />;\r\n        break;\r\n      case 1:\r\n        component = <Image image={image} onChange={this.onUpdate} />;\r\n        break;\r\n      case 2:\r\n        component = <Style {...STYLE} case={3} onChange={this.onUpdate} />;\r\n        break;\r\n      case 3:\r\n        component = <Code {...CODE} case={4} onChange={this.onUpdate} />;\r\n        break;\r\n      default:\r\n        // component = <Text {...TEXT} onChange={this.onUpdate} />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    const toolData = this.state;\r\n    if (this.state.CODE.include[0].url !== \"\") {\r\n      if (!Util.isArrayEqual(imagePop, this.state, 3)) {\r\n        RequestHandler.PostRequest(SAVE_TOOL, { toolData: ImagePopupModal(toolData) }, (res, err) => {\r\n          if (res) {\r\n            if (res.data.script) {\r\n              window.gs.setScript(res.data.script);\r\n              setTimeout(() => {\r\n                this.props.history.push(\"/Campaigns\");\r\n              }, 3000);\r\n            } else {\r\n              window.gs.toast(res.data.message, { position: \"bottom-right\", type: window.gs.toast.TYPE.FAILED });\r\n            }\r\n          } else {\r\n            console.log(err);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      Modal.warning({\r\n        content: \"Should Contain atleast one trigger point\",\r\n      });\r\n    }\r\n  };\r\n\r\n  renderRight = () => {\r\n    const { activeTab, image } = this.state;\r\n    if (activeTab === 1 && image) return <ReponsiveImage isImg={true} url={image} />;\r\n    return <ReponsiveImage isAs={true} url={\"asset/image_pop_up.png\"} />;\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(\"/Create\");\r\n  };\r\n\r\n  closePopup = () => {\r\n    this.setState({ preview: false });\r\n  };\r\n\r\n  render() {\r\n    const { preview, image } = this.state;\r\n    return (\r\n      <ToolLayout>\r\n        <div className=\"row loki\">\r\n          {preview ? <Preview {...this.state} closePopup={this.closePopup} /> : null}\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\r\n              <ButtonsGroup\r\n                preview={ image!=\"\" ? () => {\r\n                  this.setState({ preview: !preview });\r\n                } : null}\r\n                backUrl={this.back}\r\n                save={this.onClickSave}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}