{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Uploader.js\";\nimport React from \"react\"; // import { Upload, Icon, message } from \"antd\";\n\nimport { Upload, message, Button, Icon, Progress } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./Uploader.css\";\nimport { BASE_URL, IMAGE_UPLOAD_LINK, IMAGE_OPTI_UPLOAD } from \"../../actions/URLs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction vaildateFile(file) {\n  if (file) {\n    if (file.type.indexOf(\"image\")) return false;\n    return true;\n  }\n}\n\nlet progress = 0,\n    pgShow = \"none\";\n\nconst Uploader = prop => {\n  const props = {\n    name: \"photo\",\n    multiple: prop.multiple ? prop.multiple : false,\n    action: BASE_URL + (prop.multiple ? IMAGE_OPTI_UPLOAD : IMAGE_UPLOAD_LINK),\n\n    onChange(info) {\n      const {\n        status\n      } = info.file;\n\n      if (status !== \"uploading\") {\n        prop.onUploadDone(info.fileList[info.fileList.length - 1].response);\n      } else {\n        if (info.event) {\n          progress = info.event.type === \"progress\" ? info.event.percent : 0;\n        }\n      }\n\n      if (status === \"done\") {\n        message.success(\"\".concat(info.file.name, \" file uploaded successfully.\"));\n        setTimeout(() => {\n          pgShow = \"none\";\n          progress = 0;\n          document.querySelector(\".ant-progress-text\").innerHTML = \"0%\";\n          document.querySelector(\".ant-progress-text\").setAttribute(\"title\", \"0%\");\n          document.querySelector(\".ant-progress-show-info\").style.display = \"none\";\n        }, 1000);\n      } else if (status === \"error\") {\n        message.error(\"\".concat(info.file.name, \" file upload failed.\"));\n      }\n    },\n\n    beforeUpload: file => {\n      if (!vaildateFile(file)) {\n        message.error(\"\".concat(file.name, \" file failed. Select A valid Image to upload\"));\n      }\n\n      pgShow = \"block\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-10\",\n      children: [/*#__PURE__*/_jsxDEV(Upload, { ...props,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploader-default\",\n          children: /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-cloud-upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Select File to Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Progress, {\n        percent: progress,\n        status: \"active\",\n        style: {\n          display: pgShow\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-2\",\n      children: prop.onReset ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pull-right\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-sm btn-danger\",\n            style: {\n              position: \"absolute\",\n              top: \"0px\",\n              right: \"8px\"\n            },\n            onClick: prop.onReset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Uploader;\nexport default Uploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"Uploader\");","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Uploader.js"],"names":["React","Upload","message","Button","Icon","Progress","BASE_URL","IMAGE_UPLOAD_LINK","IMAGE_OPTI_UPLOAD","vaildateFile","file","type","indexOf","progress","pgShow","Uploader","prop","props","name","multiple","action","onChange","info","status","onUploadDone","fileList","length","response","event","percent","success","setTimeout","document","querySelector","innerHTML","setAttribute","style","display","error","beforeUpload","onReset","position","top","right"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// import { Upload, Icon, message } from \"antd\";\r\nimport { Upload, message, Button, Icon, Progress } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./Uploader.css\";\r\nimport { BASE_URL, IMAGE_UPLOAD_LINK, IMAGE_OPTI_UPLOAD } from \"../../actions/URLs\";\r\nfunction vaildateFile(file) {\r\n  if (file) {\r\n    if (file.type.indexOf(\"image\")) return false;\r\n    return true;\r\n  }\r\n}\r\nlet progress = 0, pgShow = \"none\";\r\nconst Uploader = (prop) => {\r\n  const props = {\r\n    name: \"photo\",\r\n    multiple: prop.multiple ? prop.multiple : false,\r\n    action: BASE_URL + (prop.multiple ? IMAGE_OPTI_UPLOAD : IMAGE_UPLOAD_LINK),\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n      if (status !== \"uploading\") {\r\n        prop.onUploadDone(info.fileList[info.fileList.length-1].response);\r\n      } else {\r\n        if(info.event) {\r\n          progress = (info.event.type === \"progress\") ? info.event.percent : 0;\r\n        }\r\n      }\r\n\r\n      if (status === \"done\") {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        setTimeout(() => {\r\n          pgShow = \"none\";\r\n          progress = 0;\r\n          document.querySelector(\".ant-progress-text\").innerHTML = \"0%\" ;\r\n          document.querySelector(\".ant-progress-text\").setAttribute(\"title\", \"0%\");\r\n          document.querySelector(\".ant-progress-show-info\").style.display = \"none\";\r\n        },1000);\r\n      } else if (status === \"error\") {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n    beforeUpload: (file) => {\r\n      if (!vaildateFile(file)) {\r\n        message.error(`${file.name} file failed. Select A valid Image to upload`);\r\n      }\r\n      pgShow = \"block\";\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-10\">\r\n        <Upload {...props}>\r\n          <div className=\"uploader-default\">\r\n            <center>\r\n              <i className=\"fa fa-cloud-upload\"></i>\r\n              <div>Select File to Upload</div>\r\n            </center>\r\n          </div>\r\n        </Upload>\r\n        <Progress percent={progress} status=\"active\" style={{ display: pgShow}}/>\r\n      </div>\r\n      <div className=\"col-2\">\r\n        {prop.onReset ? (\r\n          <div className=\"row\">\r\n            <div className=\"pull-right\">\r\n              <button className=\"btn btn-sm btn-danger\" style={{ position: \"absolute\", top: \"0px\", right: \"8px\" }} onClick={prop.onReset}>\r\n                Reset\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Uploader;\r\n"]},"metadata":{},"sourceType":"module"}