{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/Image.js\";\nimport React, { Component } from \"react\";\nimport Uploader from \"../../../comman/Uploader\";\nimport Util, { parseImgUrl } from \"../../../Util\";\nexport default class Image extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      image: this.props.image,\n      disabled: false\n    };\n\n    this.onUploadDone = imageICON => {\n      this.setState({\n        image: imageICON.image,\n        disabled: true\n      });\n      this.props.onChange(5, imageICON.image);\n    };\n\n    this.onReset = () => {\n      this.setState({\n        image: \"\"\n      }, () => {\n        this.props.onChange(5, this.state.image);\n      });\n    };\n  }\n\n  componentWillMount() {\n    if (this.props.image !== \"\") this.state.disabled = true;\n  }\n\n  componentWillUnmount() {\n    this.props.onChange(5, this.state.image);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (Util.isRedirected) {\n      Util.isRedirected = false;\n      this.setState({\n        image: nextProps.image,\n        disabled: true\n      });\n    }\n  }\n\n  render() {\n    const props = {\n      onUploadDone: this.onUploadDone\n    };\n    const {\n      image,\n      disabled\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Uploader, Object.assign({}, props, {\n      onReset: this.onReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Image*\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"image\",\n      className: \"form-control\",\n      value: image,\n      onChange: e => {\n        this.setState({\n          image: e.target.value\n        });\n        this.props.onChange(5, e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/Image.js"],"names":["React","Component","Uploader","Util","parseImgUrl","Image","state","image","props","disabled","onUploadDone","imageICON","setState","onChange","onReset","componentWillMount","componentWillUnmount","componentWillReceiveProps","nextProps","isRedirected","render","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,IAAP,IAAeC,WAAf,QAAkC,eAAlC;AACA,eAAe,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC3CK,KAD2C,GACnC;AAAEC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAApB;AAA2BE,MAAAA,QAAQ,EAAE;AAArC,KADmC;;AAAA,SAc3CC,YAd2C,GAc3BC,SAAD,IAAe;AAC5B,WAAKC,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEI,SAAS,CAACJ,KAAnB;AAA0BE,QAAAA,QAAQ,EAAE;AAApC,OAAd;AACA,WAAKD,KAAL,CAAWK,QAAX,CAAoB,CAApB,EAAuBF,SAAS,CAACJ,KAAjC;AACD,KAjB0C;;AAAA,SAmB3CO,OAnB2C,GAmBjC,MAAM;AACd,WAAKF,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAE;AAAT,OAAd,EAA6B,MAAM;AACjC,aAAKC,KAAL,CAAWK,QAAX,CAAoB,CAApB,EAAuB,KAAKP,KAAL,CAAWC,KAAlC;AACD,OAFD;AAGD,KAvB0C;AAAA;;AAE3CQ,EAAAA,kBAAkB,GAAG;AACnB,QAAI,KAAKP,KAAL,CAAWD,KAAX,KAAqB,EAAzB,EAA6B,KAAKD,KAAL,CAAWG,QAAX,GAAsB,IAAtB;AAC9B;;AACDO,EAAAA,oBAAoB,GAAG;AACrB,SAAKR,KAAL,CAAWK,QAAX,CAAoB,CAApB,EAAuB,KAAKP,KAAL,CAAWC,KAAlC;AACD;;AACDU,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIf,IAAI,CAACgB,YAAT,EAAuB;AACrBhB,MAAAA,IAAI,CAACgB,YAAL,GAAoB,KAApB;AACA,WAAKP,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEW,SAAS,CAACX,KAAnB;AAA0BE,QAAAA,QAAQ,EAAE;AAApC,OAAd;AACD;AACF;;AAWDW,EAAAA,MAAM,GAAG;AACP,UAAMZ,KAAK,GAAG;AACZE,MAAAA,YAAY,EAAE,KAAKA;AADP,KAAd;AAGA,UAAM;AAAEH,MAAAA,KAAF;AAASE,MAAAA;AAAT,QAAsB,KAAKH,KAAjC;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD,oBAAcE,KAAd;AAAqB,MAAA,OAAO,EAAE,KAAKM,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,EAKE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,SAAS,EAAC,cAHZ;AAIE,MAAA,KAAK,EAAEP,KAJT;AAKE,MAAA,QAAQ,EAAGc,CAAD,IAAO;AACf,aAAKT,QAAL,CAAc;AAAEL,UAAAA,KAAK,EAAEc,CAAC,CAACC,MAAF,CAASC;AAAlB,SAAd;AACA,aAAKf,KAAL,CAAWK,QAAX,CAAoB,CAApB,EAAuBQ,CAAC,CAACC,MAAF,CAASC,KAAhC;AACD,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CALF,CADF;AAqBD;;AAnD0C","sourcesContent":["import React, { Component } from \"react\";\nimport Uploader from \"../../../comman/Uploader\";\nimport Util, { parseImgUrl } from \"../../../Util\";\nexport default class Image extends Component {\n  state = { image: this.props.image, disabled: false };\n  componentWillMount() {\n    if (this.props.image !== \"\") this.state.disabled = true;\n  }\n  componentWillUnmount() {\n    this.props.onChange(5, this.state.image);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (Util.isRedirected) {\n      Util.isRedirected = false;\n      this.setState({ image: nextProps.image, disabled: true });\n    }\n  }\n  onUploadDone = (imageICON) => {\n    this.setState({ image: imageICON.image, disabled: true });\n    this.props.onChange(5, imageICON.image);\n  };\n\n  onReset = () => {\n    this.setState({ image: \"\" }, () => {\n      this.props.onChange(5, this.state.image);\n    });\n  };\n  render() {\n    const props = {\n      onUploadDone: this.onUploadDone,\n    };\n    const { image, disabled } = this.state;\n\n    return (\n      <div>\n        <div className=\"col-12\">\n          <Uploader {...props} onReset={this.onReset} />\n        </div>\n\n        <div className=\"form-element\">\n          <div className=\"label-text\">Image*</div>\n          <input\n            type=\"text\"\n            name=\"image\"\n            className=\"form-control\"\n            value={image}\n            onChange={(e) => {\n              this.setState({ image: e.target.value });\n              this.props.onChange(5, e.target.value);\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}