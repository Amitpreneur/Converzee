{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ImageOptimization/index.js\";\nimport React, { Component } from \"react\";\nimport Uploader from \"../../../comman/Uploader\";\nimport Util, { parseImgUrl } from \"../../../Util\";\nexport default class ImageOptimization extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      image: this.props.image\n    };\n\n    this.onUploadDone = imageICON => {\n      this.setState({\n        image: imageICON.image\n      }); // this.props.onChange(2, imageICON.image);\n    };\n  }\n\n  componentWillUnmount() {// this.props.onChange(2, this.state.image);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (Util.isRedirected) {\n      Util.isRedirected = false;\n      this.setState({\n        image: nextProps.image\n      });\n    }\n  }\n\n  render() {\n    const props = {\n      onUploadDone: this.onUploadDone,\n      multiple: true\n    };\n    const {\n      image\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"create-top-bar-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        paddingTop: \"35px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"create-center-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"80%\",\n        padding: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"uploadMain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Uploader, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }))))))), React.createElement(\"div\", {\n      className: \"col col-lg-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ImageOptimization/index.js"],"names":["React","Component","Uploader","Util","parseImgUrl","ImageOptimization","state","image","props","onUploadDone","imageICON","setState","componentWillUnmount","componentWillReceiveProps","nextProps","isRedirected","render","multiple","paddingTop","width","padding"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,IAAP,IAAeC,WAAf,QAAkC,eAAlC;AACA,eAAe,MAAMC,iBAAN,SAAgCJ,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACvDK,KADuD,GAC/C;AAAEC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD;AAApB,KAD+C;;AAAA,SAWvDE,YAXuD,GAWvCC,SAAD,IAAe;AAC5B,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAEG,SAAS,CAACH;AAAnB,OAAd,EAD4B,CAE5B;AACD,KAdsD;AAAA;;AAEvDK,EAAAA,oBAAoB,GAAG,CACrB;AACD;;AACDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIX,IAAI,CAACY,YAAT,EAAuB;AACrBZ,MAAAA,IAAI,CAACY,YAAL,GAAoB,KAApB;AACA,WAAKJ,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAEO,SAAS,CAACP;AAAnB,OAAd;AACD;AACF;;AAKDS,EAAAA,MAAM,GAAG;AACP,UAAMR,KAAK,GAAG;AACZC,MAAAA,YAAY,EAAE,KAAKA,YADP;AAEZQ,MAAAA,QAAQ,EAAE;AAFE,KAAd;AAIA,UAAM;AAAEV,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAVF,EAeE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAAEY,QAAAA,UAAU,EAAE;AAAd,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,OAAO,EAAE;AAAzB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD,oBAAcZ,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,CADF,CADF,CADF,CADF,EAYE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CAfF,CADF;AAgCD;;AArDsD","sourcesContent":["import React, { Component } from \"react\";\nimport Uploader from \"../../../comman/Uploader\";\nimport Util, { parseImgUrl } from \"../../../Util\";\nexport default class ImageOptimization extends Component {\n  state = { image: this.props.image };\n  componentWillUnmount() {\n    // this.props.onChange(2, this.state.image);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (Util.isRedirected) {\n      Util.isRedirected = false;\n      this.setState({ image: nextProps.image });\n    }\n  }\n  onUploadDone = (imageICON) => {\n    this.setState({ image: imageICON.image });\n    // this.props.onChange(2, imageICON.image);\n  };\n  render() {\n    const props = {\n      onUploadDone: this.onUploadDone,\n      multiple: true,\n    };\n    const { image } = this.state;\n    return (\n      <div className=\"container\">\n        {/* {openPopUp ? <ScriptPopup {...scriptPorps} /> : null}\n        {preview ? (\n          <Preview\n            {...this.state}\n            closePopup={() => {\n              this.setState({ preview: !preview });\n            }}\n          />\n        ) : null} */}\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"create-top-bar-button\"></div>\n          </div>\n        </div>\n        <div className=\"row\" style={{ paddingTop: \"35px\" }}>\n          <div className=\"col\">\n            <center>\n              <div className=\"create-center-main\">\n                <div style={{ width: \"80%\", padding: \"20px\" }}>\n                  <div className=\"uploadMain\">\n                    <Uploader {...props} />\n                  </div>\n                </div>\n              </div>\n            </center>\n          </div>\n          <div className=\"col col-lg-2\">{/* <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} /> */}</div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}