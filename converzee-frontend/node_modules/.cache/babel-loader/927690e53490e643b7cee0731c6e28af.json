{"ast":null,"code":"import axios from \"axios\";\nimport { Storage } from \"../../utils/Storage\";\nimport { BASE_URL } from \"../../actions/URLs\";\nexport class Request {}\n\nRequest.loginAuth = function (params, callback) {\n  axios.post(BASE_URL + \"user/auth\", {\n    userData: params\n  }).then(res => {\n    if (res.data.success) Request.setAuth(res.data.token, res.data.id);\n    callback(res, null); // const { token } = res.data;\n    // localStorage.setItem(\"jwtToken\", token);\n  }).catch(err => callback(null, err));\n};\n\nRequest.setAuth = function (token = null, id) {\n  var now = new Date();\n  now.setMinutes(now.getMinutes() + 30);\n  Storage.put(\"timeout\", now.getTime());\n  Storage.put(\"id\", id);\n  Storage.put(\"x-access-token\", token);\n};\n\nRequest.getAuth = function () {\n  const current = new Date().getTime();\n  const timeout = Storage.get(\"timeout\");\n\n  if (timeout > current) {\n    return true;\n  }\n\n  return false;\n};","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/auth/authHandler.js"],"names":["axios","Storage","BASE_URL","Request","loginAuth","params","callback","post","userData","then","res","data","success","setAuth","token","id","catch","err","now","Date","setMinutes","getMinutes","put","getTime","getAuth","current","timeout","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAO,MAAMC,OAAN,CAAc;;AAARA,O,CACJC,S,GAAY,UAASC,MAAT,EAAiBC,QAAjB,EAA2B;AAC5CN,EAAAA,KAAK,CACFO,IADH,CACQL,QAAQ,GAAG,WADnB,EACgC;AAAEM,IAAAA,QAAQ,EAAEH;AAAZ,GADhC,EAEGI,IAFH,CAEQC,GAAG,IAAI;AACX,QAAIA,GAAG,CAACC,IAAJ,CAASC,OAAb,EAAsBT,OAAO,CAACU,OAAR,CAAgBH,GAAG,CAACC,IAAJ,CAASG,KAAzB,EAAgCJ,GAAG,CAACC,IAAJ,CAASI,EAAzC;AACtBT,IAAAA,QAAQ,CAACI,GAAD,EAAM,IAAN,CAAR,CAFW,CAGX;AACA;AACD,GAPH,EAQGM,KARH,CAQSC,GAAG,IAAIX,QAAQ,CAAC,IAAD,EAAOW,GAAP,CARxB;AASD,C;;AAXUd,O,CAYJU,O,GAAU,UAASC,KAAK,GAAG,IAAjB,EAAuBC,EAAvB,EAA2B;AAC1C,MAAIG,GAAG,GAAG,IAAIC,IAAJ,EAAV;AACAD,EAAAA,GAAG,CAACE,UAAJ,CAAeF,GAAG,CAACG,UAAJ,KAAmB,EAAlC;AACApB,EAAAA,OAAO,CAACqB,GAAR,CAAY,SAAZ,EAAuBJ,GAAG,CAACK,OAAJ,EAAvB;AACAtB,EAAAA,OAAO,CAACqB,GAAR,CAAY,IAAZ,EAAkBP,EAAlB;AACAd,EAAAA,OAAO,CAACqB,GAAR,CAAY,gBAAZ,EAA8BR,KAA9B;AACD,C;;AAlBUX,O,CAmBJqB,O,GAAU,YAAW;AAC1B,QAAMC,OAAO,GAAG,IAAIN,IAAJ,GAAWI,OAAX,EAAhB;AACA,QAAMG,OAAO,GAAGzB,OAAO,CAAC0B,GAAR,CAAY,SAAZ,CAAhB;;AACA,MAAID,OAAO,GAAGD,OAAd,EAAuB;AACrB,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD,C","sourcesContent":["import axios from \"axios\";\nimport { Storage } from \"../../utils/Storage\";\nimport { BASE_URL } from \"../../actions/URLs\";\nexport class Request {\n  static loginAuth = function(params, callback) {\n    axios\n      .post(BASE_URL + \"user/auth\", { userData: params })\n      .then(res => {\n        if (res.data.success) Request.setAuth(res.data.token, res.data.id);\n        callback(res, null);\n        // const { token } = res.data;\n        // localStorage.setItem(\"jwtToken\", token);\n      })\n      .catch(err => callback(null, err));\n  };\n  static setAuth = function(token = null, id) {\n    var now = new Date();\n    now.setMinutes(now.getMinutes() + 30);\n    Storage.put(\"timeout\", now.getTime());\n    Storage.put(\"id\", id);\n    Storage.put(\"x-access-token\", token);\n  };\n  static getAuth = function() {\n    const current = new Date().getTime();\n    const timeout = Storage.get(\"timeout\");\n    if (timeout > current) {\n      return true;\n    }\n    return false;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}