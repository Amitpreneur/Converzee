{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/GeoRedirection/Redirection.js\";\nimport React, { Component } from \"react\";\nimport DropDown from \"../../../comman/DropDown\";\nimport UrlInput from \"../../../comman/UrlInput\";\nimport Util, { getCountryList } from \"../../../Util\";\nimport { Info } from \"../../../comman/Info\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Code extends Component {\n  constructor() {\n    super(...arguments);\n    this.options = getCountryList();\n    this.state = {\n      redirection: this.props.redirection\n    };\n\n    this.onDropDownChange = (value, index) => {\n      const {\n        redirection\n      } = this.state;\n      redirection[index].country = value;\n      this.setState({\n        redirection\n      });\n    };\n\n    this.onItemChange = (index, e) => {\n      const cases = this.props.case || 1;\n      let {\n        redirection\n      } = this.state;\n      const value = e.target.value;\n      redirection[index].redirectUrl = value;\n      this.setState({\n        redirection\n      });\n      this.props.onChange(cases, this.state.redirection);\n    };\n\n    this.onAddClick = typ => {\n      const cases = this.props.case || 1;\n      const {\n        redirection\n      } = this.state;\n      redirection.push({\n        country: \"\",\n        redirectUrl: \"\"\n      });\n      this.setState({\n        redirection\n      });\n      this.props.onChange(cases, this.state.redirection);\n    };\n\n    this.onRemoveClick = (typ, index) => {\n      const cases = this.props.case || 1;\n      const redirection = this.state.redirection || [\"\"];\n      redirection.splice(index, 1);\n      this.setState({\n        redirection\n      });\n      this.props.onChange(cases, this.state.redirection);\n    };\n\n    this.renderItems = (item, index) => {\n      const redirection = this.state.redirection;\n      const props = {\n        value: item.country,\n        value1: item.redirectUrl,\n        onChange: this.onItemChange,\n        index,\n        size: redirection.length,\n        onAddClick: this.onAddClick,\n        onRemoveClick: this.onRemoveClick\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 geo_url_box row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4\",\n          children: /*#__PURE__*/_jsxDEV(DropDown, {\n            options: this.options,\n            value: item.country,\n            index: index,\n            onChange: e => this.onDropDownChange(e, index),\n            className: \"dropdown-style\",\n            style: {\n              width: \"\"\n            },\n            disable: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-8\",\n          children: /*#__PURE__*/_jsxDEV(TextInput, { ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (Util.isRedirected) {\n      Util.isRedirected = false;\n      this.setState({\n        redirection: nextProps.redirection\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const cases = this.props.case || 1;\n    this.props.onChange(cases, this.state.redirection);\n  }\n\n  render() {\n    const redirection = this.state.redirection || [\"\"];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label-text\",\n        children: [\"URL Settings*\", /*#__PURE__*/_jsxDEV(Info, {\n          text: \"Enter Redirection URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [redirection.map(this.renderItems), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst TextInput = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"code-input-block \",\n    children: [/*#__PURE__*/_jsxDEV(UrlInput, {\n      value: props.value1,\n      onChange: e => props.onChange(props.index, e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code-plusIcon\",\n      children: props.size - 1 === props.index ? /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: () => props.onAddClick(props.typ),\n        className: \"fa fa-plus-circle\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: () => props.onRemoveClick(props.typ, props.index),\n        className: \"fa fa-minus-circle\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TextInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextInput\");","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/GeoRedirection/Redirection.js"],"names":["React","Component","DropDown","UrlInput","Util","getCountryList","Info","Code","options","state","redirection","props","onDropDownChange","value","index","country","setState","onItemChange","e","cases","case","target","redirectUrl","onChange","onAddClick","typ","push","onRemoveClick","splice","renderItems","item","value1","size","length","width","componentWillReceiveProps","nextProps","isRedirected","componentWillUnmount","render","map","TextInput"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport DropDown from \"../../../comman/DropDown\";\r\nimport UrlInput from \"../../../comman/UrlInput\";\r\nimport Util, { getCountryList } from \"../../../Util\";\r\nimport { Info } from \"../../../comman/Info\";\r\nexport default class Code extends Component {\r\n  options = getCountryList();\r\n  state = {\r\n    redirection: this.props.redirection,\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (Util.isRedirected) {\r\n      Util.isRedirected = false;\r\n      this.setState({ redirection: nextProps.redirection });\r\n    }\r\n  }\r\n\r\n  onDropDownChange = (value, index) => {\r\n    const { redirection } = this.state;\r\n    redirection[index].country = value;\r\n    this.setState({ redirection });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const cases = this.props.case || 1;\r\n    this.props.onChange(cases, this.state.redirection);\r\n  }\r\n\r\n  onItemChange = (index, e) => {\r\n    const cases = this.props.case || 1;\r\n    let { redirection } = this.state;\r\n    const value = e.target.value;\r\n    redirection[index].redirectUrl = value;\r\n    this.setState({ redirection });\r\n    this.props.onChange(cases, this.state.redirection);\r\n  };\r\n\r\n  onAddClick = (typ) => {\r\n    const cases = this.props.case || 1;\r\n    const { redirection } = this.state;\r\n    redirection.push({ country: \"\", redirectUrl: \"\" });\r\n    this.setState({ redirection });\r\n    this.props.onChange(cases, this.state.redirection);\r\n  };\r\n\r\n  onRemoveClick = (typ, index) => {\r\n    const cases = this.props.case || 1;\r\n    const redirection = this.state.redirection || [\"\"];\r\n    redirection.splice(index, 1);\r\n    this.setState({ redirection });\r\n    this.props.onChange(cases, this.state.redirection);\r\n  };\r\n\r\n  renderItems = (item, index) => {\r\n    const redirection = this.state.redirection;\r\n    const props = {\r\n      value: item.country,\r\n      value1: item.redirectUrl,\r\n      onChange: this.onItemChange,\r\n      index,\r\n      size: redirection.length,\r\n      onAddClick: this.onAddClick,\r\n      onRemoveClick: this.onRemoveClick,\r\n    };\r\n    return (\r\n      <div className=\"col-12 geo_url_box row\" key={index}>\r\n        <div className=\"col-4\">\r\n          <DropDown options={this.options} value={item.country} index={index} onChange={(e) => this.onDropDownChange(e, index)} className=\"dropdown-style\" style={{ width: \"\" }} disable={false} />\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <TextInput {...props} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const redirection = this.state.redirection || [\"\"];\r\n    return (\r\n      <div>\r\n        <div className=\"label-text\">\r\n          URL Settings*\r\n          <Info text=\"Enter Redirection URL\" />\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            {redirection.map(this.renderItems)}\r\n            <div className=\"w-100\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst TextInput = (props) => {\r\n  return (\r\n    <div className=\"code-input-block \">\r\n      <UrlInput value={props.value1} onChange={(e) => props.onChange(props.index, e)} />\r\n      <div className=\"code-plusIcon\">\r\n        {props.size - 1 === props.index ? (\r\n          <i onClick={() => props.onAddClick(props.typ)} className=\"fa fa-plus-circle\" aria-hidden=\"true\" />\r\n        ) : (\r\n          <i onClick={() => props.onRemoveClick(props.typ, props.index)} className=\"fa fa-minus-circle\" aria-hidden=\"true\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}