{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/Image.js\";\nimport React, { Component } from \"react\";\nimport Uploader from \"../../../comman/Uploader\";\nimport Util, { parseImgUrl } from \"../../../Util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Image extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      image: this.props.image,\n      disabled: false\n    };\n\n    this.onUploadDone = imageICON => {\n      let imageName = imageICON.image;\n      this.setState({\n        image: imageName,\n        disabled: true\n      });\n      this.props.onChange(5, imageName);\n    };\n\n    this.onReset = () => {\n      this.setState({\n        image: \"\"\n      }, () => {\n        this.props.onChange(5, this.state.image);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      image: this.props.image\n    });\n  }\n\n  componentWillMount() {\n    if (this.props.image !== \"\") this.state.disabled = true;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (Util.isRedirected) {\n      Util.isRedirected = false;\n      this.setState({\n        image: nextProps.image,\n        disabled: true\n      });\n    }\n  }\n\n  render() {\n    const props = {\n      onUploadDone: this.onUploadDone\n    };\n    const {\n      image,\n      disabled\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        style: {\n          padding: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(Uploader, { ...props,\n          onReset: this.onReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-text\",\n          children: \"Image*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"image\",\n          className: \"form-control\",\n          value: image,\n          onChange: e => {\n            this.setState({\n              image: e.target.value\n            });\n            this.props.onChange(5, e.target.value);\n          },\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/Image.js"],"names":["React","Component","Uploader","Util","parseImgUrl","Image","state","image","props","disabled","onUploadDone","imageICON","imageName","setState","onChange","onReset","componentDidMount","componentWillMount","componentWillReceiveProps","nextProps","isRedirected","render","padding","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Uploader from \"../../../comman/Uploader\";\r\nimport Util, { parseImgUrl } from \"../../../Util\";\r\nexport default class Image extends Component {\r\n  state = { image: this.props.image, disabled: false };\r\n\r\n  componentDidMount() {\r\n    this.setState({ image: this.props.image })\r\n  }\r\n  componentWillMount() {\r\n    if (this.props.image !== \"\") this.state.disabled = true;\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (Util.isRedirected) {\r\n      Util.isRedirected = false;\r\n      this.setState({ image: nextProps.image, disabled: true });\r\n    }\r\n  }\r\n  onUploadDone = (imageICON) => {\r\n    let imageName = imageICON.image;\r\n    this.setState({ image: imageName, disabled: true });\r\n    this.props.onChange(5, imageName);\r\n  };\r\n\r\n  onReset = () => {\r\n    this.setState({ image: \"\" }, () => {\r\n      this.props.onChange(5, this.state.image);\r\n    });\r\n  };\r\n  render() {\r\n    const props = {\r\n      onUploadDone: this.onUploadDone,\r\n    };\r\n    const { image, disabled } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"col-12\" style={{padding:0}}>\r\n          <Uploader {...props} onReset={this.onReset} />\r\n        </div>\r\n\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Image*</div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"image\"\r\n            className=\"form-control\"\r\n            value={image}\r\n            onChange={(e) => {\r\n              this.setState({ image: e.target.value });\r\n              this.props.onChange(5, e.target.value);\r\n            }}\r\n            autoComplete=\"off\" \r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}