{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/CTA.js\";\nimport React, { Component } from \"react\";\nimport DropDown from \"../../../comman/DropDown\";\nimport Editor from \"../../../comman/Editor\";\nimport UrlInput from \"../../../comman/UrlInput\";\nimport { Info } from \"../../../comman/Info\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CTA extends Component {\n  constructor() {\n    super(...arguments);\n    this.options = [{\n      label: \"Redirect\",\n      value: \"REDIRECT\"\n    }, {\n      label: \"Redirect in new tab\",\n      value: \"redirectInNewTab\"\n    }, {\n      label: \"Scroll\",\n      value: \"scroll\"\n    }];\n    this.state = {\n      ctaText: this.props.ctaText,\n      ctaAction: this.props.ctaAction,\n      redirectUrl: this.props.redirectUrl\n    };\n\n    this.onDropDownChange = value => {\n      this.setState({\n        ctaAction: value\n      });\n      this.props.onChange({\n        ctaAction: value\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      this.props.onChange({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onTextChange = ctaText => {\n      this.setState({\n        ctaText\n      });\n      this.props.onChange({\n        ctaText: ctaText\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.onChange({\n      ctaText: this.state.ctaText,\n      ctaAction: this.state.ctaAction,\n      redirectUrl: this.state.redirectUrl\n    });\n  }\n\n  render() {\n    const {\n      redirectUrl,\n      ctaAction,\n      ctaText\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-text\",\n          children: [\"CTA Text*\", /*#__PURE__*/_jsxDEV(Info, {\n            text: \"Enter CTA text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Editor, {\n            value: ctaText,\n            name: \"textBody\",\n            onChange: this.onTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-text\",\n          children: [\"CTA Action*\", /*#__PURE__*/_jsxDEV(Info, {\n            text: \"Select CTA action type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n          options: this.options,\n          onChange: this.onDropDownChange,\n          value: ctaAction,\n          class: \"dropdown-style\",\n          style: {\n            width: \"\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-element\",\n        children: [ctaAction === \"scroll\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-text\",\n          children: [\"Scroll To* \", /*#__PURE__*/_jsxDEV(Info, {\n            text: \"Follow Select Scroll Position by bookmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-text\",\n          children: [\"Redirect URL* \", /*#__PURE__*/_jsxDEV(Info, {\n            text: \"Enter URL to trigger on CTA action button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), ctaAction === \"scroll\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"redirectUrl\",\n          className: \"form-control\",\n          value: redirectUrl,\n          onChange: this.onChange,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(UrlInput, {\n          name: \"redirectUrl\",\n          value: redirectUrl,\n          onChange: this.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/CTA.js"],"names":["React","Component","DropDown","Editor","UrlInput","Info","CTA","options","label","value","state","ctaText","props","ctaAction","redirectUrl","onDropDownChange","setState","onChange","e","target","name","onTextChange","componentWillUnmount","render","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport DropDown from \"../../../comman/DropDown\";\r\nimport Editor from \"../../../comman/Editor\";\r\nimport UrlInput from \"../../../comman/UrlInput\";\r\nimport { Info } from \"../../../comman/Info\";\r\nexport default class CTA extends Component {\r\n  options = [\r\n    { label: \"Redirect\", value: \"REDIRECT\" },\r\n    { label: \"Redirect in new tab\", value: \"redirectInNewTab\" },\r\n    { label: \"Scroll\", value: \"scroll\" },\r\n  ];\r\n  state = {\r\n    ctaText: this.props.ctaText,\r\n    ctaAction: this.props.ctaAction,\r\n    redirectUrl: this.props.redirectUrl,\r\n  };\r\n  onDropDownChange = (value) => {\r\n    this.setState({ ctaAction: value });\r\n    this.props.onChange({ ctaAction: value });\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    this.props.onChange({ [e.target.name]: e.target.value });\r\n  };\r\n  onTextChange = (ctaText) => {\r\n    this.setState({ ctaText });\r\n    this.props.onChange({ ctaText: ctaText });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.onChange({ ctaText: this.state.ctaText, ctaAction: this.state.ctaAction, redirectUrl: this.state.redirectUrl });\r\n  }\r\n\r\n  render() {\r\n    const { redirectUrl, ctaAction, ctaText } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            CTA Text*\r\n            <Info text=\"Enter CTA text\" />\r\n          </div>\r\n          <div>\r\n            <Editor value={ctaText} name=\"textBody\" onChange={this.onTextChange} />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            CTA Action*\r\n            <Info text=\"Select CTA action type\" />\r\n          </div>\r\n          <DropDown options={this.options} onChange={this.onDropDownChange} value={ctaAction} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n        <div className=\"form-element\">\r\n          {ctaAction === \"scroll\" ? (\r\n            <div className=\"label-text\">\r\n              Scroll To* <Info text=\"Follow Select Scroll Position by bookmark\" />\r\n            </div>\r\n          ) : (\r\n            <div className=\"label-text\">\r\n              Redirect URL* <Info text=\"Enter URL to trigger on CTA action button\" />\r\n            </div>\r\n          )}\r\n          {ctaAction === \"scroll\" ? (\r\n            <input type=\"number\" name=\"redirectUrl\" className=\"form-control\" value={redirectUrl} onChange={this.onChange} autoComplete=\"off\" />\r\n          ) : (\r\n            <UrlInput name=\"redirectUrl\" value={redirectUrl} onChange={this.onChange} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}