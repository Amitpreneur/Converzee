{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/TabMessaging/Favicon.js\";\nimport React, { Component } from \"react\";\nimport Uploader from \"../../../comman/Uploader\";\nimport { parseImgUrl } from \"../../../Util\";\nimport Emoji from \"../../../comman/Emoji\";\nimport Switch1 from \"../../../comman/Switch\";\nimport { Info } from \"../../../comman/Info\";\nexport default class Favicon extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      FAVICON: this.props.FAVICON,\n      isImage: this.props.isImage,\n      emoji: this.props.emoji,\n      showEmojiSelecter: false\n    };\n\n    this.onUploadDone = FAVICONICON => {\n      this.setState({\n        FAVICON: FAVICONICON.image\n      }, () => {\n        const {\n          FAVICON,\n          isImage,\n          emoji\n        } = this.state;\n        this.props.onChange({\n          isImage,\n          emoji,\n          FAVICON\n        });\n      });\n    };\n\n    this.onEmojiSelect = emoji => {\n      this.setState({\n        emoji: emoji\n      }, () => {\n        const {\n          FAVICON,\n          isImage,\n          emoji\n        } = this.state;\n        this.props.onChange({\n          isImage,\n          emoji,\n          FAVICON\n        });\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    const {\n      FAVICON,\n      isImage,\n      emoji\n    } = this.state;\n    this.props.onChange({\n      isImage,\n      emoji,\n      FAVICON\n    });\n  }\n\n  render() {\n    const props = {\n      onUploadDone: this.onUploadDone\n    };\n    const {\n      FAVICON,\n      emoji,\n      isImage\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-5\",\n      style: {\n        textAlign: \"end\"\n      },\n      onClick: () => {\n        this.setState({\n          isImage: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Info, {\n      text: \"Select Image to upload as favicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"favicon-preview-main cz_fav_preview_box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"favicon-preview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, isImage ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, FAVICON && FAVICON !== null ? React.createElement(\"div\", {\n      className: \"cz_fav_image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"preview-image\",\n      src: parseImgUrl(FAVICON),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })) : null) : React.createElement(\"div\", {\n      className: \"cz_fav_emoji\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, emoji))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"uploadMain cz_uploader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Uploader, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      class: \"col-1 cz_or_bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"span-hr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"OR\"), React.createElement(\"div\", {\n      class: \"span-hr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"col-5\",\n      onClick: () => {\n        this.setState({\n          isImage: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cz_tab_emoji_box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Emoji, {\n      onSelectionDone: this.onEmojiSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))), React.createElement(Info, {\n      text: \"Double click on Icon to select Emoji\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/TabMessaging/Favicon.js"],"names":["React","Component","Uploader","parseImgUrl","Emoji","Switch1","Info","Favicon","state","FAVICON","props","isImage","emoji","showEmojiSelecter","onUploadDone","FAVICONICON","setState","image","onChange","onEmojiSelect","componentWillUnmount","render","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Uploader from \"../../../comman/Uploader\";\nimport { parseImgUrl } from \"../../../Util\";\nimport Emoji from \"../../../comman/Emoji\";\nimport Switch1 from \"../../../comman/Switch\";\nimport { Info } from \"../../../comman/Info\";\nexport default class Favicon extends Component {\n  state = { FAVICON: this.props.FAVICON, isImage: this.props.isImage, emoji: this.props.emoji, showEmojiSelecter: false };\n  componentWillUnmount() {\n    const { FAVICON, isImage, emoji } = this.state;\n    this.props.onChange({ isImage, emoji, FAVICON });\n  }\n  onUploadDone = (FAVICONICON) => {\n    this.setState({ FAVICON: FAVICONICON.image }, () => {\n      const { FAVICON, isImage, emoji } = this.state;\n      this.props.onChange({ isImage, emoji, FAVICON });\n    });\n  };\n  onEmojiSelect = (emoji) => {\n    this.setState({ emoji: emoji }, () => {\n      const { FAVICON, isImage, emoji } = this.state;\n      this.props.onChange({ isImage, emoji, FAVICON });\n    });\n  };\n  render() {\n    const props = {\n      onUploadDone: this.onUploadDone,\n    };\n    const { FAVICON, emoji, isImage } = this.state;\n    return (\n      <div>\n        <div class=\"row\">\n          <div\n            class=\"col-5\"\n            style={{ textAlign: \"end\" }}\n            onClick={() => {\n              this.setState({ isImage: true });\n            }}\n          >\n            <Info text=\"Select Image to upload as favicon\" />\n            <div className=\"favicon-preview-main cz_fav_preview_box\">\n                <div className=\"favicon-preview\">\n                  {isImage ? (\n                    <div>\n                      {FAVICON && FAVICON !== null ? (\n                        <div className=\"cz_fav_image\">\n                          <img className=\"preview-image\" src={parseImgUrl(FAVICON)} />\n                        </div>\n                      ) : null} \n                    </div>\n                  ) : (\n                    <div className=\"cz_fav_emoji\">\n                      {emoji}\n                    </div>\n                  )}\n                </div>\n            </div>\n            <div>\n              <div className=\"uploadMain cz_uploader\">\n                <Uploader {...props} />\n              </div>\n            </div>\n          </div>\n          <div class=\"col-1 cz_or_bar\">\n            <div class=\"span-hr\" />\n            <div>OR</div>\n            <div class=\"span-hr\" />\n          </div>\n          <div\n            class=\"col-5\"\n            onClick={() => {\n              this.setState({ isImage: false });\n            }}\n          >\n            <div className=\"cz_tab_emoji_box\">\n              <Emoji onSelectionDone={this.onEmojiSelect} />\n            </div>\n          </div>\n          <Info text=\"Double click on Icon to select Emoji\" />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}