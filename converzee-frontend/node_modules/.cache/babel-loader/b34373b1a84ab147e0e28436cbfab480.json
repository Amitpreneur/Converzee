{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/index.js\";\nimport React, { Component } from \"react\";\nimport SideBar from \"./SideBar\";\nimport ToolUtil, { generateIframeContant, getDefaultItems } from \"../../utils/ToolUtil\";\nimport Util, { generateFile, parseImgUrl } from \"../Util\";\nimport Text from \"./Text\";\nimport Responders from \"./Responders\";\nimport CTA from \"./CTA\";\nimport { ToolLayout, ButtonsGroup } from \"../layout/ToolLayout\";\nimport { getPath, GET_PIXEL, SAVE_TOOL, GET_ONE_TOOL } from \"../../actions/URLs\";\nimport { OTO2 } from \"../../utils/Routes\";\nimport RequestHandler from \"../../actions/RequestHandler\";\nimport { Modal } from \"antd\";\nimport { LayoutSelector } from \"../layout/LayoutSelector\";\nimport Style from \"./Style\";\nimport Code from \"./Code\";\nimport { OptinFormModalResponse, OptinFormModal } from \"../utils/Modal\";\nimport Time from \"./Time\";\nimport { Preview } from \"./Preview\";\nimport { ReponsiveImage } from \"../comman/PreviewAble\";\nexport default class OptinForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      toolName: \"\",\n      toolId: \"\",\n      preview: false,\n      _id: null,\n      activeTab: 2,\n      toolData: {\n        text: '<span style=\"font-size: 36px;\"><font color=\"#ff9c00\">MyConversionkit</font></span>',\n        cta: '<font color=\"#efefef\"><span style=\"font-size: 18px;\">Buy Now</span></font>',\n        layout: 0,\n        style: [{\n          name: \"Background\",\n          id: \"backgound\",\n          value: \"TRANSPARENT\"\n        }, {\n          name: \"CTA Backgound\",\n          id: \"ctabackgound\",\n          value: \"#ff3a65\"\n        }],\n        timerType: \"DATE_AND_TIME_BASED\",\n        endDateTime: \"\",\n        timeZone: \"\",\n        postExpiryAction: \"hide\",\n        redirectUrl: \"\",\n        days: 2,\n        hours: 2,\n        minutes: 2,\n        seconds: 2,\n        bgImg: \"#fff\",\n        isBGIMG: false,\n        noThanks: \"No thanks\",\n        subTitle: \"Subtitle here\",\n        position: \"TOP\",\n        isNameInput: false\n      },\n      CODE: {\n        include: [{\n          type: \"contains\",\n          url: \"\"\n        }],\n        exclude: [{\n          type: \"contains\",\n          url: null\n        }]\n      },\n      AutoResponder: {\n        mailServer: \"\"\n      }\n    };\n    this.loaded = false;\n    this.layouts = [\"/asset/optin-layouts/0.png\", \"/asset/optin-layouts/0.png\", \"/asset/optin-layouts/0.png\"];\n\n    this.getLayoutName = i => {\n      if (i == 0) return \"Hello Bar\";\n      if (i == 1) return \"Hello Bar + Timer\";\n      if (i == 2) return \"Exit Intent\";\n    };\n\n    this.onLayoutChange = index => {\n      const {\n        toolData\n      } = this.state;\n      this.setState({\n        toolData: { ...toolData,\n          layout: index\n        }\n      });\n    };\n\n    this.onChangeActive = tabIndex => {\n      const {\n        activeTab\n      } = this.state;\n\n      if (activeTab !== tabIndex) {\n        this.setState({\n          activeTab: tabIndex\n        });\n      }\n    };\n\n    this.codeChange = data => {\n      this.setState({\n        CODE: data\n      });\n    };\n\n    this.changeAutoResponder = data => {\n      this.setState({\n        AutoResponder: {\n          mailServer: data\n        }\n      });\n    };\n\n    this.onUpdate = data => {\n      const {\n        toolData\n      } = this.state;\n      this.setState({\n        toolData: { ...toolData,\n          ...data\n        }\n      });\n    };\n\n    this.renderMain = () => {\n      const {\n        activeTab,\n        toolData,\n        CODE\n      } = this.state;\n      let component = null;\n      if (!this.loaded) return null;\n\n      switch (activeTab) {\n        // case 1:\n        //   component = <LayoutSelector onLayoutSelect={this.onLayoutChange} selected={toolData.layout} items={this.layouts} />;\n        //   break;\n        case 2:\n          component = React.createElement(Text, {\n            text: toolData.text,\n            isNameInput: toolData.isNameInput,\n            noThanks: toolData.noThanks,\n            subTitle: toolData.subTitle,\n            layout: toolData.layout,\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          });\n          break;\n\n        case 3:\n          component = React.createElement(CTA, {\n            cta: toolData.cta,\n            position: toolData.position,\n            layout: toolData.layout,\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          });\n          break;\n\n        case 4:\n          component = React.createElement(Style, {\n            style: toolData.style,\n            bgImg: toolData.bgImg,\n            isBGIMG: toolData.isBGIMG,\n            layout: toolData.layout,\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          });\n          break;\n\n        case 5:\n          component = React.createElement(Code, Object.assign({}, CODE, {\n            onChange: this.codeChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }));\n          break;\n\n        case 6:\n          component = React.createElement(Time, {\n            timerType: toolData.timerType,\n            endDateTime: toolData.endDateTime,\n            timeZone: toolData.timeZone,\n            postExpiryAction: toolData.postExpiryAction,\n            redirectUrl: toolData.redirectUrl,\n            days: toolData.days,\n            hours: toolData.hours,\n            minutes: toolData.minutes,\n            seconds: toolData.seconds,\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          });\n          break;\n\n        case 7:\n          component = React.createElement(Responders, {\n            onChange: this.changeAutoResponder,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162\n            },\n            __self: this\n          });\n          break;\n\n        default:\n          component = React.createElement(Text, {\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165\n            },\n            __self: this\n          });\n          break;\n      }\n\n      return component;\n    };\n\n    this.onClickSave = () => {\n      if (this.state.CODE.include[0].url !== \"\") {\n        RequestHandler.PostRequest(SAVE_TOOL, {\n          toolData: OptinFormModal(this.state)\n        }, (res, err) => {\n          if (res) {\n            const data1 = res.data;\n\n            if (data1.success) {\n              Modal.success({\n                content: data1.message\n              });\n              setTimeout(() => {\n                this.props.history.push(\"/Campaigns\");\n              }, 1000);\n            }\n          }\n        });\n      } else {\n        Modal.warning({\n          content: \"Should Contain atleast one trigger point\"\n        });\n      }\n    };\n\n    this.renderRight = () => {\n      const {\n        toolData\n      } = this.state;\n\n      if (toolData.layout === 2 && toolData.isBGIMG) {\n        return React.createElement(ReponsiveImage, {\n          isImg: true,\n          url: toolData.bgImg,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        });\n      }\n\n      if (toolData.layout === 0) {\n        return React.createElement(ReponsiveImage, {\n          isAs: true,\n          url: \"/asset/hb3.png\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        });\n      }\n\n      if (toolData.layout === 1) {\n        return React.createElement(ReponsiveImage, {\n          isAs: true,\n          url: \"/asset/hbt3.png\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        });\n      }\n\n      if (toolData.layout === 2) {\n        return React.createElement(ReponsiveImage, {\n          isAs: true,\n          url: \"/asset/exit_pop_up.png\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.back = () => {\n      this.props.history.push(OTO2);\n    };\n\n    this.togglePreview = () => {\n      const {\n        preview\n      } = this.state;\n      console.log(\"preview\", preview);\n      this.setState({\n        preview: !preview\n      });\n    };\n  }\n\n  componentWillMount() {\n    if (window.gs.ie) {\n      const ie = getDefaultItems(window.gs.ie);\n      let {\n        toolData\n      } = this.state;\n      this.state.toolData = { ...toolData,\n        ...ie\n      };\n      window.gs.ie = null;\n    }\n  }\n\n  componentDidMount() {\n    const id = this.props.match ? this.props.match.params ? this.props.match.params.id : null : null;\n\n    if (id) {\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\n        this.loaded = true;\n\n        if (res) {\n          Util.isRedirected = true;\n          const data = OptinFormModalResponse(res);\n\n          if (data) {\n            this.setState(data, () => {\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"  \" + this.getLayoutName(this.state.toolData.layout) + \"  \" + \"(\" + data.name + \")\");\n            });\n          }\n        }\n      });\n    } else {\n      const toolId = 19;\n      this.loaded = true;\n      const defLayout = window.gs.defaultLayout || 0;\n      this.onLayoutChange(defLayout);\n      this.setState({\n        toolId: toolId,\n        toolName: ToolUtil.getTool(toolId),\n        name: Util.CAMPAIGNS_NAME\n      });\n      Util.RedirectWhenCampaignEmpty(this.props);\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"  \" + this.getLayoutName(defLayout) + \"  \" + \"(\" + Util.CAMPAIGNS_NAME + \")\");\n      delete window.gs.defaultLayout;\n    }\n  }\n\n  render() {\n    const {\n      preview\n    } = this.state;\n    return React.createElement(ToolLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, preview ? React.createElement(Preview, Object.assign({}, this.state, {\n      onClose: this.togglePreview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-10 toolItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, this.renderMain()), React.createElement(\"div\", {\n      className: \"col-md-6 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, this.renderRight()), React.createElement(ButtonsGroup, {\n      backUrl: this.back,\n      preview: this.togglePreview,\n      save: this.onClickSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-1 sideBarButtomPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(SideBar, {\n      layout: this.state.toolData.layout,\n      activeTab: this.state.activeTab,\n      onChangeActive: this.onChangeActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/index.js"],"names":["React","Component","SideBar","ToolUtil","generateIframeContant","getDefaultItems","Util","generateFile","parseImgUrl","Text","Responders","CTA","ToolLayout","ButtonsGroup","getPath","GET_PIXEL","SAVE_TOOL","GET_ONE_TOOL","OTO2","RequestHandler","Modal","LayoutSelector","Style","Code","OptinFormModalResponse","OptinFormModal","Time","Preview","ReponsiveImage","OptinForm","state","toolName","toolId","preview","_id","activeTab","toolData","text","cta","layout","style","name","id","value","timerType","endDateTime","timeZone","postExpiryAction","redirectUrl","days","hours","minutes","seconds","bgImg","isBGIMG","noThanks","subTitle","position","isNameInput","CODE","include","type","url","exclude","AutoResponder","mailServer","loaded","layouts","getLayoutName","i","onLayoutChange","index","setState","onChangeActive","tabIndex","codeChange","data","changeAutoResponder","onUpdate","renderMain","component","onClickSave","PostRequest","res","err","data1","success","content","message","setTimeout","props","history","push","warning","renderRight","back","togglePreview","console","log","componentWillMount","window","gs","ie","componentDidMount","match","params","isRedirected","navTitle","getTool","defLayout","defaultLayout","CAMPAIGNS_NAME","RedirectWhenCampaignEmpty","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,IAAmBC,qBAAnB,EAA0CC,eAA1C,QAAiE,sBAAjE;AACA,OAAOC,IAAP,IAAeC,YAAf,EAA6BC,WAA7B,QAAgD,SAAhD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,sBAAzC;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,SAA7B,EAAwCC,YAAxC,QAA4D,oBAA5D;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,sBAAT,EAAiCC,cAAjC,QAAuD,gBAAvD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AAEA,eAAe,MAAMC,SAAN,SAAwB5B,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC/C6B,KAD+C,GACvC;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,OAAO,EAAE,KAHH;AAINC,MAAAA,GAAG,EAAE,IAJC;AAKNC,MAAAA,SAAS,EAAE,CALL;AAMNC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,IAAI,EAAE,oFADE;AAERC,QAAAA,GAAG,EAAE,4EAFG;AAGRC,QAAAA,MAAM,EAAE,CAHA;AAIRC,QAAAA,KAAK,EAAE,CACL;AAAEC,UAAAA,IAAI,EAAE,YAAR;AAAsBC,UAAAA,EAAE,EAAE,WAA1B;AAAuCC,UAAAA,KAAK,EAAE;AAA9C,SADK,EAEL;AAAEF,UAAAA,IAAI,EAAE,eAAR;AAAyBC,UAAAA,EAAE,EAAE,cAA7B;AAA6CC,UAAAA,KAAK,EAAE;AAApD,SAFK,CAJC;AAQRC,QAAAA,SAAS,EAAE,qBARH;AASRC,QAAAA,WAAW,EAAE,EATL;AAURC,QAAAA,QAAQ,EAAE,EAVF;AAWRC,QAAAA,gBAAgB,EAAE,MAXV;AAYRC,QAAAA,WAAW,EAAE,EAZL;AAaRC,QAAAA,IAAI,EAAE,CAbE;AAcRC,QAAAA,KAAK,EAAE,CAdC;AAeRC,QAAAA,OAAO,EAAE,CAfD;AAgBRC,QAAAA,OAAO,EAAE,CAhBD;AAiBRC,QAAAA,KAAK,EAAE,MAjBC;AAkBRC,QAAAA,OAAO,EAAE,KAlBD;AAmBRC,QAAAA,QAAQ,EAAE,WAnBF;AAoBRC,QAAAA,QAAQ,EAAE,eApBF;AAqBRC,QAAAA,QAAQ,EAAE,KArBF;AAsBRC,QAAAA,WAAW,EAAE;AAtBL,OANJ;AA8BNC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAE,CAAC;AAAEC,UAAAA,IAAI,EAAE,UAAR;AAAoBC,UAAAA,GAAG,EAAE;AAAzB,SAAD,CAAX;AAA4CC,QAAAA,OAAO,EAAE,CAAC;AAAEF,UAAAA,IAAI,EAAE,UAAR;AAAoBC,UAAAA,GAAG,EAAE;AAAzB,SAAD;AAArD,OA9BA;AA+BNE,MAAAA,aAAa,EAAE;AACbC,QAAAA,UAAU,EAAE;AADC;AA/BT,KADuC;AAAA,SAoC/CC,MApC+C,GAoCtC,KApCsC;AAAA,SAqC/CC,OArC+C,GAqCrC,CAAC,4BAAD,EAA+B,4BAA/B,EAA6D,4BAA7D,CArCqC;;AAAA,SA0E/CC,aA1E+C,GA0E9BC,CAAD,IAAO;AACrB,UAAIA,CAAC,IAAI,CAAT,EAAY,OAAO,WAAP;AACZ,UAAIA,CAAC,IAAI,CAAT,EAAY,OAAO,mBAAP;AACZ,UAAIA,CAAC,IAAI,CAAT,EAAY,OAAO,aAAP;AACb,KA9E8C;;AAAA,SA+E/CC,cA/E+C,GA+E7BC,KAAD,IAAW;AAC1B,YAAM;AAAEnC,QAAAA;AAAF,UAAe,KAAKN,KAA1B;AACA,WAAK0C,QAAL,CAAc;AAAEpC,QAAAA,QAAQ,EAAE,EAAE,GAAGA,QAAL;AAAeG,UAAAA,MAAM,EAAEgC;AAAvB;AAAZ,OAAd;AACD,KAlF8C;;AAAA,SAoF/CE,cApF+C,GAoF7BC,QAAD,IAAc;AAC7B,YAAM;AAAEvC,QAAAA;AAAF,UAAgB,KAAKL,KAA3B;;AACA,UAAIK,SAAS,KAAKuC,QAAlB,EAA4B;AAC1B,aAAKF,QAAL,CAAc;AAAErC,UAAAA,SAAS,EAAEuC;AAAb,SAAd;AACD;AACF,KAzF8C;;AAAA,SA2F/CC,UA3F+C,GA2FjCC,IAAD,IAAU;AACrB,WAAKJ,QAAL,CAAc;AAAEb,QAAAA,IAAI,EAAEiB;AAAR,OAAd;AACD,KA7F8C;;AAAA,SA+F/CC,mBA/F+C,GA+FxBD,IAAD,IAAU;AAC9B,WAAKJ,QAAL,CAAc;AAACR,QAAAA,aAAa,EAAE;AAACC,UAAAA,UAAU,EAAEW;AAAb;AAAhB,OAAd;AACD,KAjG8C;;AAAA,SAmG/CE,QAnG+C,GAmGnCF,IAAD,IAAU;AACnB,YAAM;AAAExC,QAAAA;AAAF,UAAe,KAAKN,KAA1B;AACA,WAAK0C,QAAL,CAAc;AAAEpC,QAAAA,QAAQ,EAAE,EAAE,GAAGA,QAAL;AAAe,aAAGwC;AAAlB;AAAZ,OAAd;AACD,KAtG8C;;AAAA,SAwG/CG,UAxG+C,GAwGlC,MAAM;AACjB,YAAM;AAAE5C,QAAAA,SAAF;AAAaC,QAAAA,QAAb;AAAuBuB,QAAAA;AAAvB,UAAgC,KAAK7B,KAA3C;AACA,UAAIkD,SAAS,GAAG,IAAhB;AACA,UAAI,CAAC,KAAKd,MAAV,EAAkB,OAAO,IAAP;;AAClB,cAAQ/B,SAAR;AACE;AACA;AACA;AACA,aAAK,CAAL;AACE6C,UAAAA,SAAS,GAAG,oBAAC,IAAD;AAAM,YAAA,IAAI,EAAE5C,QAAQ,CAACC,IAArB;AAA2B,YAAA,WAAW,EAAED,QAAQ,CAACsB,WAAjD;AAA8D,YAAA,QAAQ,EAAEtB,QAAQ,CAACmB,QAAjF;AAA2F,YAAA,QAAQ,EAAEnB,QAAQ,CAACoB,QAA9G;AAAwH,YAAA,MAAM,EAAEpB,QAAQ,CAACG,MAAzI;AAAiJ,YAAA,QAAQ,EAAE,KAAKuC,QAAhK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ;AACA;;AACF,aAAK,CAAL;AACEE,UAAAA,SAAS,GAAG,oBAAC,GAAD;AAAK,YAAA,GAAG,EAAE5C,QAAQ,CAACE,GAAnB;AAAwB,YAAA,QAAQ,EAAEF,QAAQ,CAACqB,QAA3C;AAAqD,YAAA,MAAM,EAAErB,QAAQ,CAACG,MAAtE;AAA8E,YAAA,QAAQ,EAAE,KAAKuC,QAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ;AACA;;AACF,aAAK,CAAL;AACEE,UAAAA,SAAS,GAAG,oBAAC,KAAD;AAAO,YAAA,KAAK,EAAE5C,QAAQ,CAACI,KAAvB;AAA8B,YAAA,KAAK,EAAEJ,QAAQ,CAACiB,KAA9C;AAAqD,YAAA,OAAO,EAAEjB,QAAQ,CAACkB,OAAvE;AAAgF,YAAA,MAAM,EAAElB,QAAQ,CAACG,MAAjG;AAAyG,YAAA,QAAQ,EAAE,KAAKuC,QAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ;AACA;;AACF,aAAK,CAAL;AACEE,UAAAA,SAAS,GAAG,oBAAC,IAAD,oBAAUrB,IAAV;AAAgB,YAAA,QAAQ,EAAE,KAAKgB,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAZ;AACA;;AACF,aAAK,CAAL;AACEK,UAAAA,SAAS,GACP,oBAAC,IAAD;AACE,YAAA,SAAS,EAAE5C,QAAQ,CAACQ,SADtB;AAEE,YAAA,WAAW,EAAER,QAAQ,CAACS,WAFxB;AAGE,YAAA,QAAQ,EAAET,QAAQ,CAACU,QAHrB;AAIE,YAAA,gBAAgB,EAAEV,QAAQ,CAACW,gBAJ7B;AAKE,YAAA,WAAW,EAAEX,QAAQ,CAACY,WALxB;AAME,YAAA,IAAI,EAAEZ,QAAQ,CAACa,IANjB;AAOE,YAAA,KAAK,EAAEb,QAAQ,CAACc,KAPlB;AAQE,YAAA,OAAO,EAAEd,QAAQ,CAACe,OARpB;AASE,YAAA,OAAO,EAAEf,QAAQ,CAACgB,OATpB;AAUE,YAAA,QAAQ,EAAE,KAAK0B,QAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcA;;AACF,aAAK,CAAL;AACEE,UAAAA,SAAS,GAAG,oBAAC,UAAD;AAAY,YAAA,QAAQ,EAAE,KAAKH,mBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ;AACA;;AACF;AACEG,UAAAA,SAAS,GAAG,oBAAC,IAAD;AAAM,YAAA,QAAQ,EAAE,KAAKF,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ;AACA;AArCJ;;AAuCA,aAAOE,SAAP;AACD,KApJ8C;;AAAA,SAsJ/CC,WAtJ+C,GAsJjC,MAAM;AAClB,UAAI,KAAKnD,KAAL,CAAW6B,IAAX,CAAgBC,OAAhB,CAAwB,CAAxB,EAA2BE,GAA3B,KAAmC,EAAvC,EAA2C;AACzC3C,QAAAA,cAAc,CAAC+D,WAAf,CAA2BlE,SAA3B,EAAsC;AAAEoB,UAAAA,QAAQ,EAAEX,cAAc,CAAC,KAAKK,KAAN;AAA1B,SAAtC,EAAgF,CAACqD,GAAD,EAAMC,GAAN,KAAc;AAC5F,cAAID,GAAJ,EAAS;AACP,kBAAME,KAAK,GAAGF,GAAG,CAACP,IAAlB;;AACA,gBAAIS,KAAK,CAACC,OAAV,EAAmB;AACjBlE,cAAAA,KAAK,CAACkE,OAAN,CAAc;AACZC,gBAAAA,OAAO,EAAEF,KAAK,CAACG;AADH,eAAd;AAGAC,cAAAA,UAAU,CAAC,MAAM;AACf,qBAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACD,eAFS,EAEP,IAFO,CAAV;AAGD;AACF;AACF,SAZD;AAaD,OAdD,MAcO;AACLxE,QAAAA,KAAK,CAACyE,OAAN,CAAc;AACZN,UAAAA,OAAO,EAAE;AADG,SAAd;AAGD;AACF,KA1K8C;;AAAA,SA4K/CO,WA5K+C,GA4KjC,MAAM;AAClB,YAAM;AAAE1D,QAAAA;AAAF,UAAe,KAAKN,KAA1B;;AACA,UAAIM,QAAQ,CAACG,MAAT,KAAoB,CAApB,IAAyBH,QAAQ,CAACkB,OAAtC,EAA+C;AAC7C,eAAO,oBAAC,cAAD;AAAgB,UAAA,KAAK,EAAE,IAAvB;AAA6B,UAAA,GAAG,EAAElB,QAAQ,CAACiB,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,UAAIjB,QAAQ,CAACG,MAAT,KAAoB,CAAxB,EAA2B;AACzB,eAAO,oBAAC,cAAD;AAAgB,UAAA,IAAI,EAAE,IAAtB;AAA4B,UAAA,GAAG,EAAE,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,UAAIH,QAAQ,CAACG,MAAT,KAAoB,CAAxB,EAA2B;AACzB,eAAO,oBAAC,cAAD;AAAgB,UAAA,IAAI,EAAE,IAAtB;AAA4B,UAAA,GAAG,EAAE,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,UAAIH,QAAQ,CAACG,MAAT,KAAoB,CAAxB,EAA2B;AACzB,eAAO,oBAAC,cAAD;AAAgB,UAAA,IAAI,EAAE,IAAtB;AAA4B,UAAA,GAAG,EAAE,wBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KA1L8C;;AAAA,SA4L/CwD,IA5L+C,GA4LxC,MAAM;AACX,WAAKL,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB1E,IAAxB;AACD,KA9L8C;;AAAA,SAgM/C8E,aAhM+C,GAgM/B,MAAM;AACpB,YAAM;AAAE/D,QAAAA;AAAF,UAAc,KAAKH,KAAzB;AACAmE,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBjE,OAAvB;AACA,WAAKuC,QAAL,CAAc;AAAEvC,QAAAA,OAAO,EAAE,CAACA;AAAZ,OAAd;AACD,KApM8C;AAAA;;AAuC/CkE,EAAAA,kBAAkB,GAAG;AACnB,QAAIC,MAAM,CAACC,EAAP,CAAUC,EAAd,EAAkB;AAChB,YAAMA,EAAE,GAAGjG,eAAe,CAAC+F,MAAM,CAACC,EAAP,CAAUC,EAAX,CAA1B;AACA,UAAI;AAAElE,QAAAA;AAAF,UAAe,KAAKN,KAAxB;AACA,WAAKA,KAAL,CAAWM,QAAX,GAAsB,EAAE,GAAGA,QAAL;AAAe,WAAGkE;AAAlB,OAAtB;AACAF,MAAAA,MAAM,CAACC,EAAP,CAAUC,EAAV,GAAe,IAAf;AACD;AACF;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM7D,EAAE,GAAG,KAAKgD,KAAL,CAAWc,KAAX,GAAoB,KAAKd,KAAL,CAAWc,KAAX,CAAiBC,MAAjB,GAA0B,KAAKf,KAAL,CAAWc,KAAX,CAAiBC,MAAjB,CAAwB/D,EAAlD,GAAuD,IAA3E,GAAmF,IAA9F;;AACA,QAAIA,EAAJ,EAAQ;AACNvB,MAAAA,cAAc,CAAC+D,WAAf,CAA2BjE,YAAY,GAAGyB,EAA1C,EAA8C,EAA9C,EAAkD,CAACyC,GAAD,EAAMC,GAAN,KAAc;AAC9D,aAAKlB,MAAL,GAAc,IAAd;;AACA,YAAIiB,GAAJ,EAAS;AACP7E,UAAAA,IAAI,CAACoG,YAAL,GAAoB,IAApB;AACA,gBAAM9B,IAAI,GAAGpD,sBAAsB,CAAC2D,GAAD,CAAnC;;AACA,cAAIP,IAAJ,EAAU;AACR,iBAAKJ,QAAL,CAAcI,IAAd,EAAoB,MAAM;AACxBwB,cAAAA,MAAM,CAACC,EAAP,CAAUM,QAAV,CAAmBxG,QAAQ,CAACyG,OAAT,CAAiBhC,IAAI,CAAC5C,MAAtB,IAAgC,IAAhC,GAAuC,KAAKoC,aAAL,CAAmB,KAAKtC,KAAL,CAAWM,QAAX,CAAoBG,MAAvC,CAAvC,GAAwF,IAAxF,GAA+F,GAA/F,GAAqGqC,IAAI,CAACnC,IAA1G,GAAiH,GAApI;AACD,aAFD;AAGD;AACF;AACF,OAXD;AAYD,KAbD,MAaO;AACL,YAAMT,MAAM,GAAG,EAAf;AACA,WAAKkC,MAAL,GAAc,IAAd;AACA,YAAM2C,SAAS,GAAGT,MAAM,CAACC,EAAP,CAAUS,aAAV,IAA2B,CAA7C;AACA,WAAKxC,cAAL,CAAoBuC,SAApB;AACA,WAAKrC,QAAL,CAAc;AAAExC,QAAAA,MAAM,EAAEA,MAAV;AAAkBD,QAAAA,QAAQ,EAAE5B,QAAQ,CAACyG,OAAT,CAAiB5E,MAAjB,CAA5B;AAAsDS,QAAAA,IAAI,EAAEnC,IAAI,CAACyG;AAAjE,OAAd;AACAzG,MAAAA,IAAI,CAAC0G,yBAAL,CAA+B,KAAKtB,KAApC;AACAU,MAAAA,MAAM,CAACC,EAAP,CAAUM,QAAV,CAAmBxG,QAAQ,CAACyG,OAAT,CAAiB5E,MAAjB,IAA2B,IAA3B,GAAkC,KAAKoC,aAAL,CAAmByC,SAAnB,CAAlC,GAAkE,IAAlE,GAAyE,GAAzE,GAA+EvG,IAAI,CAACyG,cAApF,GAAqG,GAAxH;AACA,aAAOX,MAAM,CAACC,EAAP,CAAUS,aAAjB;AACD;AACF;;AA6HDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhF,MAAAA;AAAF,QAAc,KAAKH,KAAzB;AACA,WACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGG,OAAO,GAAG,oBAAC,OAAD,oBAAa,KAAKH,KAAlB;AAAyB,MAAA,OAAO,EAAE,KAAKkE,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH,GAA8D,IADxE,EAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKjB,UAAL,EAA3B,CADF,EAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAKe,WAAL,EAAhC,CAFF,EAGE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,KAAKC,IAA5B;AAAkC,MAAA,OAAO,EAAE,KAAKC,aAAhD;AAA+D,MAAA,IAAI,EAAE,KAAKf,WAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,CADF,EAQE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAE,KAAKnD,KAAL,CAAWM,QAAX,CAAoBG,MAArC;AAA6C,MAAA,SAAS,EAAE,KAAKT,KAAL,CAAWK,SAAnE;AAA8E,MAAA,cAAc,EAAE,KAAKsC,cAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARF,CAFF,CADF;AAiBD;;AAzN8C","sourcesContent":["import React, { Component } from \"react\";\nimport SideBar from \"./SideBar\";\nimport ToolUtil, { generateIframeContant, getDefaultItems } from \"../../utils/ToolUtil\";\nimport Util, { generateFile, parseImgUrl } from \"../Util\";\nimport Text from \"./Text\";\nimport Responders from \"./Responders\";\nimport CTA from \"./CTA\";\nimport { ToolLayout, ButtonsGroup } from \"../layout/ToolLayout\";\nimport { getPath, GET_PIXEL, SAVE_TOOL, GET_ONE_TOOL } from \"../../actions/URLs\";\nimport { OTO2 } from \"../../utils/Routes\";\nimport RequestHandler from \"../../actions/RequestHandler\";\nimport { Modal } from \"antd\";\nimport { LayoutSelector } from \"../layout/LayoutSelector\";\nimport Style from \"./Style\";\nimport Code from \"./Code\";\nimport { OptinFormModalResponse, OptinFormModal } from \"../utils/Modal\";\nimport Time from \"./Time\";\nimport { Preview } from \"./Preview\";\nimport { ReponsiveImage } from \"../comman/PreviewAble\";\n\nexport default class OptinForm extends Component {\n  state = {\n    toolName: \"\",\n    toolId: \"\",\n    preview: false,\n    _id: null,\n    activeTab: 2,\n    toolData: {\n      text: '<span style=\"font-size: 36px;\"><font color=\"#ff9c00\">MyConversionkit</font></span>',\n      cta: '<font color=\"#efefef\"><span style=\"font-size: 18px;\">Buy Now</span></font>',\n      layout: 0,\n      style: [\n        { name: \"Background\", id: \"backgound\", value: \"TRANSPARENT\" },\n        { name: \"CTA Backgound\", id: \"ctabackgound\", value: \"#ff3a65\" },\n      ],\n      timerType: \"DATE_AND_TIME_BASED\",\n      endDateTime: \"\",\n      timeZone: \"\",\n      postExpiryAction: \"hide\",\n      redirectUrl: \"\",\n      days: 2,\n      hours: 2,\n      minutes: 2,\n      seconds: 2,\n      bgImg: \"#fff\",\n      isBGIMG: false,\n      noThanks: \"No thanks\",\n      subTitle: \"Subtitle here\",\n      position: \"TOP\",\n      isNameInput: false,\n    },\n    CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: null }] },\n    AutoResponder: {\n      mailServer: \"\"\n    }\n  };\n  loaded = false;\n  layouts = [\"/asset/optin-layouts/0.png\", \"/asset/optin-layouts/0.png\", \"/asset/optin-layouts/0.png\"];\n\n  componentWillMount() {\n    if (window.gs.ie) {\n      const ie = getDefaultItems(window.gs.ie);\n      let { toolData } = this.state;\n      this.state.toolData = { ...toolData, ...ie };\n      window.gs.ie = null;\n    }\n  }\n\n  componentDidMount() {\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\n    if (id) {\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\n        this.loaded = true;\n        if (res) {\n          Util.isRedirected = true;\n          const data = OptinFormModalResponse(res);\n          if (data) {\n            this.setState(data, () => {\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"  \" + this.getLayoutName(this.state.toolData.layout) + \"  \" + \"(\" + data.name + \")\");\n            });\n          }\n        }\n      });\n    } else {\n      const toolId = 19;\n      this.loaded = true;\n      const defLayout = window.gs.defaultLayout || 0;\n      this.onLayoutChange(defLayout);\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\n      Util.RedirectWhenCampaignEmpty(this.props);\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"  \" + this.getLayoutName(defLayout) + \"  \" + \"(\" + Util.CAMPAIGNS_NAME + \")\");\n      delete window.gs.defaultLayout;\n    }\n  }\n  getLayoutName = (i) => {\n    if (i == 0) return \"Hello Bar\";\n    if (i == 1) return \"Hello Bar + Timer\";\n    if (i == 2) return \"Exit Intent\";\n  };\n  onLayoutChange = (index) => {\n    const { toolData } = this.state;\n    this.setState({ toolData: { ...toolData, layout: index } });\n  };\n\n  onChangeActive = (tabIndex) => {\n    const { activeTab } = this.state;\n    if (activeTab !== tabIndex) {\n      this.setState({ activeTab: tabIndex });\n    }\n  };\n\n  codeChange = (data) => {\n    this.setState({ CODE: data });\n  };\n\n  changeAutoResponder = (data) => {\n    this.setState({AutoResponder: {mailServer: data } });\n  }\n\n  onUpdate = (data) => {\n    const { toolData } = this.state;\n    this.setState({ toolData: { ...toolData, ...data } });\n  };\n\n  renderMain = () => {\n    const { activeTab, toolData, CODE } = this.state;\n    let component = null;\n    if (!this.loaded) return null;\n    switch (activeTab) {\n      // case 1:\n      //   component = <LayoutSelector onLayoutSelect={this.onLayoutChange} selected={toolData.layout} items={this.layouts} />;\n      //   break;\n      case 2:\n        component = <Text text={toolData.text} isNameInput={toolData.isNameInput} noThanks={toolData.noThanks} subTitle={toolData.subTitle} layout={toolData.layout} onChange={this.onUpdate} />;\n        break;\n      case 3:\n        component = <CTA cta={toolData.cta} position={toolData.position} layout={toolData.layout} onChange={this.onUpdate} />;\n        break;\n      case 4:\n        component = <Style style={toolData.style} bgImg={toolData.bgImg} isBGIMG={toolData.isBGIMG} layout={toolData.layout} onChange={this.onUpdate} />;\n        break;\n      case 5:\n        component = <Code {...CODE} onChange={this.codeChange} />;\n        break;\n      case 6:\n        component = (\n          <Time\n            timerType={toolData.timerType}\n            endDateTime={toolData.endDateTime}\n            timeZone={toolData.timeZone}\n            postExpiryAction={toolData.postExpiryAction}\n            redirectUrl={toolData.redirectUrl}\n            days={toolData.days}\n            hours={toolData.hours}\n            minutes={toolData.minutes}\n            seconds={toolData.seconds}\n            onChange={this.onUpdate}\n          />\n        );\n        break;\n      case 7:\n        component = <Responders onChange={this.changeAutoResponder} />;\n        break;\n      default:\n        component = <Text onChange={this.onUpdate} />;\n        break;\n    }\n    return component;\n  };\n\n  onClickSave = () => {\n    if (this.state.CODE.include[0].url !== \"\") {\n      RequestHandler.PostRequest(SAVE_TOOL, { toolData: OptinFormModal(this.state) }, (res, err) => {\n        if (res) {\n          const data1 = res.data;\n          if (data1.success) {\n            Modal.success({\n              content: data1.message,\n            });\n            setTimeout(() => {\n              this.props.history.push(\"/Campaigns\");\n            }, 1000);\n          }\n        }\n      });\n    } else {\n      Modal.warning({\n        content: \"Should Contain atleast one trigger point\",\n      });\n    }\n  };\n\n  renderRight = () => {\n    const { toolData } = this.state;\n    if (toolData.layout === 2 && toolData.isBGIMG) {\n      return <ReponsiveImage isImg={true} url={toolData.bgImg} />;\n    }\n    if (toolData.layout === 0) {\n      return <ReponsiveImage isAs={true} url={\"/asset/hb3.png\"} />;\n    }\n    if (toolData.layout === 1) {\n      return <ReponsiveImage isAs={true} url={\"/asset/hbt3.png\"} />;\n    }\n    if (toolData.layout === 2) {\n      return <ReponsiveImage isAs={true} url={\"/asset/exit_pop_up.png\"} />;\n    }\n  };\n\n  back = () => {\n    this.props.history.push(OTO2);\n  };\n\n  togglePreview = () => {\n    const { preview } = this.state;\n    console.log(\"preview\", preview);\n    this.setState({ preview: !preview });\n  };\n\n  render() {\n    const { preview } = this.state;\n    return (\n      <ToolLayout>\n        {preview ? <Preview {...this.state} onClose={this.togglePreview} /> : null}\n        <div className=\"row\">\n          <div className=\"col-10 toolItem\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">{this.renderMain()}</div>\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\n              <ButtonsGroup backUrl={this.back} preview={this.togglePreview} save={this.onClickSave} />\n            </div>\n          </div>\n          <div className=\"col-1 sideBarButtomPanel\">\n            <SideBar layout={this.state.toolData.layout} activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\n          </div>\n        </div>\n      </ToolLayout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}