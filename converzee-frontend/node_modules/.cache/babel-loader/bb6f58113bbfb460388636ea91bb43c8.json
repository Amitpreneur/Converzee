{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/AutoResponderConfig.js\";\nimport React, { PureComponent, useState } from \"react\";\nimport { Input, Avatar, Modal } from \"antd\";\nimport DropDown from \"./DropDown\";\nimport RequestHandler from \"../../actions/RequestHandler\";\nimport ToolUtil, { getToolsPermission } from \"../../utils/ToolUtil\";\nimport { CampaignNameInput, LockTool } from \"../comman/Popup\";\nimport { AUTO_RESPONDER, GET_AUTO_RESPONDER, BASE_URL, AUTHORIZATION, AWEBERAUTHORIZATION, CONSTANTCONTACTAUTH, AUTORESPONDER_AUTHORIZE, ADD_CUSTOME_AR, EDIT_CUSTOME_AR, DELETE_CUSTOME_AR, DISCONNECT_AR } from \"../../actions/URLs\";\nimport axios from \"axios\";\nimport { Storage } from \"../../utils/Storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class AutoResponderConfig extends PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      mailServer: \"MAILCHIMP\",\n      showdata: false,\n      displayData: [],\n      mailData: {},\n      responderPopup: false,\n      formId: 0,\n      connectedAR: {},\n      auto_data: [{\n        id: 1,\n        name: 'Mailchimp',\n        serverName: 'MAILCHIMP',\n        icon: '/asset/auto/mailchimp.png',\n        stateName: \"mailChimp\",\n        active: false\n      }, {\n        id: 2,\n        name: 'Active Campaign',\n        serverName: 'ACTIVE_CAMPAIGN',\n        icon: '/asset/auto/activecampaign.png',\n        stateName: \"activeCampaign\",\n        active: false\n      }, {\n        id: 3,\n        name: 'Aweber',\n        serverName: 'AWEBER',\n        icon: '/asset/auto/aweber.png',\n        stateName: \"aweber\",\n        active: false\n      }, {\n        id: 4,\n        name: 'Constant Contact',\n        serverName: 'CONSTANT_CONTACT',\n        icon: 'asset/auto/constant_contact.png',\n        stateName: \"constantContact\",\n        active: false\n      }, {\n        id: 5,\n        name: 'Convert Kit',\n        serverName: 'CONVERT_KIT',\n        icon: 'asset/auto/convertkit.png',\n        stateName: \"convertKit\",\n        active: false\n      }, {\n        id: 6,\n        name: 'Infusion Soft',\n        serverName: 'INFUSION_SOFT',\n        icon: 'asset/auto/infusionsoft.png',\n        stateName: \"infusionSoft\",\n        active: false\n      }, {\n        id: 7,\n        name: 'Sendiio',\n        serverName: 'SENDIIO',\n        icon: 'asset/auto/sendiio.png',\n        stateName: \"sendiio\",\n        active: false\n      }, {\n        id: 8,\n        name: 'Mailvio',\n        serverName: 'MAILVIO',\n        icon: 'asset/auto/mailvio.png',\n        stateName: \"mailVio\",\n        active: false\n      }, {\n        id: 9,\n        name: 'Getresponse',\n        serverName: 'GETRESPONSE',\n        icon: 'asset/auto/getresponse.png',\n        stateName: \"getResponse\",\n        active: false\n      }, {\n        id: 10,\n        name: 'Sendlane',\n        serverName: 'SENDLANE',\n        icon: 'asset/auto/sendlane.png',\n        stateName: \"sendlane\",\n        active: false\n      }, {\n        id: 11,\n        name: 'Custom',\n        serverName: 'CUSTOM',\n        icon: 'asset/auto/custom_html.png',\n        stateName: \"custom\",\n        active: false\n      }],\n      mailChimp: {\n        apikey: \"\"\n      },\n      activeCampaign: {\n        url: \"\",\n        apikey: \"\"\n      },\n      aweber: {\n        clientId: \"\",\n        clientSecret: \"\"\n      },\n      constantContact: {\n        clientId: \"\",\n        clientSecret: \"\"\n      },\n      convertKit: {\n        apikey: \"\",\n        apiSecret: \"\"\n      },\n      infusionSoft: {\n        clientId: \"\",\n        clientSecret: \"\"\n      },\n      sendiio: {\n        apiToken: \"\",\n        apiSecret: \"\"\n      },\n      mailVio: {\n        apikey: \"\"\n      },\n      getResponse: {\n        apikey: \"\"\n      },\n      sendlane: {\n        apikey: \"\",\n        apiUrl: \"\",\n        hashkey: \"\"\n      }\n    };\n\n    this.getDefaultResponderData = () => {\n      RequestHandler.PostRequest(GET_AUTO_RESPONDER, {}, async (res, err) => {\n        if (res) {\n          let auto_data = this.state.auto_data,\n              autoresponderData = res.data.autoResponder,\n              newFormData = res.data.displayData;\n          let displayData = this.state.displayData;\n\n          if (autoresponderData.length > 0) {\n            for (let i = 0; i < auto_data.length; i++) {\n              for (let j = 0; j < autoresponderData.length; j++) {\n                if (auto_data[i].serverName === autoresponderData[j].mailServer) {\n                  this.setState({ ...this.state,\n                    [auto_data[i].stateName]: autoresponderData[j]\n                  });\n\n                  if (Object.keys(autoresponderData[j]).length > 1) {\n                    auto_data[i].active = true;\n                  }\n                }\n              }\n            }\n          } else {\n            let ar = [];\n            auto_data.map(ad => {\n              ad.active = false;\n              ar.push(ad);\n            });\n            this.setState({\n              auto_data: ar\n            });\n          }\n\n          if (newFormData.length > 0) {\n            auto_data[auto_data.length - 1].active = true;\n\n            for (let nf of newFormData) {\n              let formData = \"<div class=\\\"cz_responder_form\\\" data-label=\\\"\".concat(nf._id, \"\\\">\\n              <div class=\\\"form-elements\\\">\\n                <label>Form Name*</label>\\n                <input class=\\\"cz_custom_input\\\" type=\\\"text\\\" placeholder=\\\"Enter name\\\" name=\\\"formName\\\" value=\\\"\").concat(nf.name, \"\\\"/>\\n              </div>\\n              <div class=\\\"form-elements\\\">\\n                <label>Enter your custom HTML form below and click on submit.</label>\\n                <textarea class=\\\"customhtml_code form-control\\\" name=\\\"formData\\\">\").concat(JSON.parse(nf.formData), \"</textarea>\\n              </div>\\n              <div class=\\\"cz_responder_btns\\\">\\n                <span class=\\\"cz_btn cz_light_btn remove_form\\\">Remove</span>\\n                <button class=\\\"cz_btn cz_orange_btn submit_form\\\" type=\\\"button\\\">Submit</button>\\n              </div>\\n            </div>\");\n              displayData.push(formData);\n            }\n          }\n\n          this.setState(auto_data, () => {\n            console.log(this.state.auto_data);\n          });\n          this.setState(displayData, () => {});\n        }\n      });\n    };\n\n    this.onMailServerChange = value => {\n      this.setState({\n        mailServer: value\n      });\n    };\n\n    this.onSave = data => {\n      const {\n        mailServer\n      } = this.state;\n\n      if (mailServer === \"CONSTANT_CONTACT\") {\n        this.authorizeConstantContact(data, mailServer);\n      } else if (mailServer === \"AWEBER\") {\n        this.authorizeAweber(data, mailServer);\n      } else if (mailServer === \"INFUSION_SOFT\") {\n        this.authorizeInfusionSoft(data, mailServer);\n      } else {\n        this.setState({\n          mailData: {\n            mailServer,\n            ...data\n          }\n        }, () => {\n          this.onInstall();\n        });\n      }\n    };\n\n    this.onInstall = () => {\n      const {\n        mailData\n      } = this.state;\n      RequestHandler.PostRequest(AUTO_RESPONDER, {\n        userData: { ...mailData\n        }\n      }, (res, err) => {\n        if (res) {\n          if (res.data.success) {\n            ToolUtil.autoResponder = mailData;\n            window.gs.success(true, res.data.message);\n            this.setState({\n              responderPopup: false\n            });\n            this.getDefaultResponderData();\n          } else {\n            window.gs.success(false, res.data.message);\n          }\n        } else {\n          window.gs.success(false, \"Something Went Wrong\");\n        }\n      });\n    };\n\n    this.authorizeInfusionSoft = (data, mailServer) => {\n      const {\n        infusionSoft\n      } = this.state;\n      let popupwin;\n      this.setState({\n        mailData: {\n          mailServer,\n          ...data\n        }\n      }, () => {\n        this.onInstall();\n      });\n      setTimeout(() => {\n        let params = new URLSearchParams({\n          \"scope\": \"full\",\n          \"response_type\": \"code\",\n          \"client_id\": infusionSoft.clientId,\n          \"client_secret\": infusionSoft.clientSecret,\n          \"redirect_uri\": BASE_URL + AUTHORIZATION\n        });\n        let query = params.toString();\n        let Url = \"https://signin.infusionsoft.com/app/oauth/authorize?\".concat(query);\n        popupwin = window.open(Url, '_blank', 'location=yes,height=570,width=520,scrollbars=yes,status=yes');\n        setTimeout(() => {\n          this.setState({\n            mailData: {\n              mailServer,\n              ...data\n            }\n          }, () => {\n            this.onInstall();\n          });\n        }, 10000);\n      }, 1000);\n    };\n\n    this.authorizeConstantContact = (data, mailServer) => {\n      let params = new URLSearchParams({\n        client_id: data.clientId,\n        redirect_uri: BASE_URL + CONSTANTCONTACTAUTH,\n        response_type: \"code\",\n        scope: \"contact_data+campaign_data+account_read+account_update\"\n      });\n      let query = params.toString();\n      let url = \"https://api.cc.email/v3/idfed?\".concat(query);\n      this.authorizeAutoResponder(data, mailServer, url);\n    };\n\n    this.authorizeAutoResponder = (data, mailServer, url) => {\n      let postData = data;\n      let popupwin;\n      postData[\"mailServer\"] = mailServer;\n      RequestHandler.PostRequest(AUTORESPONDER_AUTHORIZE, postData, (res, err) => {\n        if (res.data.status) {\n          popupwin = window.open(url, '_blank', 'location=yes,height=570,width=720,scrollbars=yes,status=yes');\n          setTimeout(() => {\n            this.setState({\n              mailData: {\n                mailServer,\n                ...data\n              }\n            }, () => {\n              this.onInstall();\n            });\n          }, 10000);\n        } else {\n          window.gs.success(false, \"Something Went Wrong\");\n        }\n      });\n    };\n\n    this.authorizeAweber = (data, mailServer) => {\n      const {\n        aweber\n      } = this.state;\n      let popupwin;\n      let postData = {\n        \"clientId\": aweber.clientId,\n        \"clientSecret\": aweber.clientSecret,\n        \"mailServer\": mailServer\n      };\n      RequestHandler.PostRequest(AWEBERAUTHORIZATION, postData, (res, err) => {\n        if (res.data.status) {\n          popupwin = window.open(res.data.url, '_blank', 'location=yes,height=570,width=520,scrollbars=yes,status=yes');\n\n          let _this = this;\n\n          var popupTick = setInterval(function () {\n            if (popupwin.closed) {\n              clearInterval(popupTick);\n              console.log('window closed!');\n              setTimeout(() => {\n                _this.setState({\n                  formId: 0,\n                  responderPopup: false\n                });\n\n                _this.getDefaultResponderData();\n              }, 200);\n            }\n          }, 500);\n        } else {\n          window.gs.success(false, \"Something Went Wrong\");\n        }\n      });\n    };\n\n    this.appendData = e => {\n      let formData = \"<div class=\\\"cz_responder_form\\\">\\n      <div class=\\\"form-elements\\\">\\n        <label>Form Name*</label>\\n        <input class=\\\"cz_custom_input\\\" type=\\\"text\\\" placeholder=\\\"Enter name\\\" name=\\\"formName\\\" />\\n      </div>\\n      <div class=\\\"form-elements\\\">\\n        <label>Enter your custom HTML form below and click on submit.</label>\\n        <textarea class=\\\"customhtml_code form-control\\\" name=\\\"formData\\\"></textarea>\\n      </div>\\n      <div class=\\\"cz_responder_btns\\\">\\n        <span class=\\\"cz_btn cz_light_btn remove_form\\\">Remove</span>\\n        <button class=\\\"cz_btn cz_orange_btn submit_form\\\" type=\\\"button\\\">Submit</button>\\n      </div>\\n    </div>\";\n      this.state.displayData.push(formData);\n      this.setState(this.state.displayData, () => {});\n    };\n\n    this.onFormSubmit = target => {\n      let parentElem = target.parentNode.parentNode;\n      let id = parentElem.getAttribute(\"data-label\");\n      let element = parentElem.children;\n      let formName = element[0].getElementsByTagName(\"input\")[0].value;\n      let formData = element[1].getElementsByTagName(\"textarea\")[0].value;\n      let URL = ADD_CUSTOME_AR;\n      let postData = {\n        \"name\": formName,\n        \"formData\": JSON.stringify(formData)\n      };\n\n      if (id) {\n        URL = EDIT_CUSTOME_AR;\n        postData[\"id\"] = id;\n      }\n\n      RequestHandler.PostRequest(URL, postData, (res, err) => {\n        if (res.data.success) {\n          this.setState({\n            responderPopup: false,\n            displayData: []\n          }, () => {});\n          setTimeout(() => {\n            this.getDefaultResponderData();\n            window.gs.success(true, res.data.message);\n          }, 100);\n        } else {\n          window.gs.success(false, res.data.message);\n        }\n      });\n    };\n\n    this.detectFunction = e => {\n      if (e.target.classList.contains(\"remove_form\")) {\n        this.removeForm(e.target);\n      } else if (e.target.classList.contains(\"submit_form\")) {\n        this.onFormSubmit(e.target);\n      }\n    };\n\n    this.removeForm = target => {\n      let parentElem = target.parentNode.parentNode;\n      let id = parentElem.getAttribute(\"data-label\");\n      Modal.confirm({\n        title: \"Confirm\",\n        content: \"Are you Sure you want to delete this form ?\",\n        okText: \"Remove\",\n        onOk: () => {\n          if (id) {\n            RequestHandler.PostRequest(DELETE_CUSTOME_AR, {\n              userData: {\n                id\n              }\n            }, (res, err) => {\n              if (res) {\n                const {\n                  data\n                } = res;\n\n                if (data.success) {\n                  window.gs.success(true, data.message);\n                  this.setState({\n                    responderPopup: false,\n                    displayData: []\n                  }, () => {});\n                  setTimeout(() => {\n                    this.getDefaultResponderData();\n                  }, 100);\n                }\n              }\n            });\n          } else {\n            parentElem.remove();\n          }\n        },\n        cancelText: \"Cancel\"\n      });\n    };\n\n    this.disconnectAr = userData => {\n      Modal.confirm({\n        title: \"Confirm\",\n        content: \"Are you Sure you want to disconnect ?\",\n        okText: \"Disconnect\",\n        onOk: () => {\n          RequestHandler.PostRequest(DISCONNECT_AR, {\n            userData\n          }, (res, err) => {\n            if (res) {\n              const {\n                data\n              } = res;\n\n              if (data.success) {\n                window.gs.success(true, data.message);\n                this.setState({\n                  responderPopup: false\n                }, () => {});\n                let ar = [];\n                this.state.auto_data.map(ad => {\n                  if (ad.serverName === userData.mailServer) {\n                    ad.active = false;\n                  }\n\n                  ar.push(ad);\n                });\n                this.setState({\n                  auto_data: ar\n                });\n                setTimeout(() => {\n                  this.getDefaultResponderData();\n                }, 300);\n              }\n            }\n          });\n        },\n        cancelText: \"Cancel\"\n      });\n    };\n  }\n\n  handleResponderPopup(id, serverName) {\n    this.setState({\n      responderPopup: true,\n      formId: id,\n      mailServer: serverName\n    });\n  }\n\n  componentDidMount() {\n    window.gs.navTitle(\"Setup Auto-Responder\");\n    setTimeout(() => {\n      if (ToolUtil.autoResponder) {\n        this.setState({\n          mailServer: ToolUtil.autoResponder.mailServer,\n          mailData: ToolUtil.autoResponder\n        });\n        this.getDefaultResponderData();\n      }\n    }, 500);\n  }\n\n  render() {\n    const {\n      mailChimp,\n      activeCampaign,\n      aweber,\n      constantContact,\n      convertKit,\n      infusionSoft,\n      sendiio,\n      mailVio,\n      getResponse,\n      sendlane,\n      displayData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cz_auto_responder_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12 col-sm-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cz_responder_box\",\n            children: this.state.auto_data.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cz_responders\".concat(item.active ? \" active\" : \"\"),\n                onClick: () => {\n                  this.handleResponderPopup(item.id, item.serverName);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-check-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.icon,\n                  alt: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.responderPopup === true ? 'cz_autoresponder_popup active' : 'cz_autoresponder_popup',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cz_popup_close\",\n          onClick: () => this.setState({\n            responderPopup: false\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cz_popup_box\",\n          children: [this.state.formId === 1 ? /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Mailchimp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cz_responder_form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-elements\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Api Key*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"cz_custom_input\",\n                  type: \"text\",\n                  placeholder: \"Enter api Key\",\n                  value: mailChimp.apikey,\n                  onChange: e => this.setState({\n                    mailChimp: { ...mailChimp,\n                      apikey: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cz_responder_btns\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"cz_btn cz_light_btn\",\n                  onClick: () => this.setState({\n                    responderPopup: false\n                  }),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 23\n                }, this), !mailChimp.isValidate ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cz_btn cz_orange_btn\",\n                  type: \"button\",\n                  onClick: () => {\n                    // this.setState({ mailServer : \"MAILCHIMP\"}); \n                    this.onSave(mailChimp);\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cz_btn cz_orange_btn\",\n                  type: \"button\",\n                  onClick: () => {\n                    // this.setState({ mailServer : \"MAILCHIMP\"}); \n                    this.disconnectAr(mailChimp);\n                  },\n                  children: \"Disconnect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 17\n          }, this) : null, this.state.formId === 2 ? /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Active Campaign\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cz_responder_form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-elements\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"API Access URL*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"cz_custom_input\",\n                  type: \"text\",\n                  placeholder: \"Enter api Access url\",\n                  value: activeCampaign.url,\n                  onChange: e => this.setState({\n                    activeCampaign: { ...activeCampaign,\n                      url: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-elements\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"API Access Key*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"cz_custom_input\",\n                  type: \"text\",\n                  placeholder: \"Enter api Access Key\",\n                  value: activeCampaign.apikey,\n                  onChange: e => this.setState({\n                    activeCampaign: { ...activeCampaign,\n                      apikey: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cz_responder_btns\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"cz_btn cz_light_btn\",\n                  onClick: () => this.setState({\n                    responderPopup: false\n                  }),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 23\n                }, this), !activeCampaign.isValidate ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cz_btn cz_orange_btn\",\n                  type: \"button\",\n                  onClick: () => {\n                    // this.setState({ mailServer : \"ACTIVE_CAMPAIGN\"});\n                    this.onSave(activeCampaign);\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cz_btn cz_orange_btn\",\n                  type: \"button\",\n                  onClick: () => {\n                    // this.setState({ mailServer : \"MAILCHIMP\"}); \n                    this.disconnectAr(activeCampaign);\n                  },\n                  children: \"Disconnect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 17\n          }, this) : null, this.state.formId === 3 ? /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Aweber\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cz_responder_form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-elements\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Client ID*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"cz_custom_input\",\n                  type: \"text\",\n                  placeholder: \"Enter Client id\",\n                  value: aweber.clientId,\n                  onChange: e => this.setState({\n                    aweber: { ...aweber,\n                      clientId: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-elements\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Client Secret*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 576,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"cz_custom_input\",\n                  type: \"text\",\n                  placeholder: \"Enter Client Secret\",\n                  value: aweber.clientSecret,\n                  onChange: e => this.setState({\n                    aweber: { ...aweber,\n                      clientSecret: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cz_responder_btns\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"cz_btn cz_light_btn\",\n                  onClick: () => this.setState({\n                    responderPopup: false\n                  }),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 23\n                }, this), !aweber.isValidate ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cz_btn cz_orange_btn\",\n                  type: \"button\",\n                  onClick: () => {\n                    // this.setState({ mailServer : \"AWEBER\"});\n                    this.onSave(aweber);\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 583,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cz_btn cz_orange_btn\",\n                  type: \"button\",\n                  onClick: () => {\n                    // this.setState({ mailServer : \"MAILCHIMP\"}); \n                    this.disconnectAr(aweber);\n                  },\n                  children: \"Disconnect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 17\n          }, this) : null, this.state.formId === 4 ? /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Constant Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cz_responder_form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-elements\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"clientId*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"cz_custom_input\",\n                  type: \"text\",\n                  placeholder: \"Enter clientId\",\n                  autoComplete: \"Off\",\n                  value: constantContact.clientId,\n                  onChange: e => this.setState({\n                    constantContact: { ...constantContact,\n                      clientId: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 603,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-elements\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Client Secret*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"cz_custom_input\",\n                  type: \"text\",\n                  placeholder: \"Enter Client Secret\",\n                  autoComplete: \"Off\",\n                  defaultValue: constantContact.username,\n                  onChange: e => this.setState({\n                    constantContact: { ...constantContact,\n                      clientSecret: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 614,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cz_responder_btns\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"cz_btn cz_light_btn\",\n                  onClick: () => this.setState({\n                    responderPopup: false\n                  }),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 624,\n                  columnNumber: 23\n                }, this), !constantContact.isValidate ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cz_btn cz_orange_btn\",\n                  type: \"button\",\n                  onClick: () => {\n                    // this.setState({ mailServer : \"MAILCHIMP\"}); \n                    this.onSave(constantContact);\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 626,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cz_btn cz_orange_btn\",\n                  type: \"button\",\n                  onClick: () => {\n                    // this.setState({ mailServer : \"MAILCHIMP\"}); \n                    this.disconnectAr(constantContact);\n                  },\n                  children: \"Disconnect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 629,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 17\n          }, this) : null, this.state.formId === 5 ? /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Convert Kit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cz_responder_form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-elements\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"API Key*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 643,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"cz_custom_input\",\n                  type: \"text\",\n                  placeholder: \"Enter api key\",\n                  value: convertKit.apikey,\n                  onChange: e => this.setState({\n                    convertKit: { ...convertKit,\n                      apikey: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 644,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 642,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-elements\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"API Secret*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"cz_custom_input\",\n                  type: \"text\",\n                  placeholder: \"Enter api secret\",\n                  value: convertKit.apiSecret,\n                  onChange: e => this.setState({\n                    convertKit: { ...convertKit,\n                      apiSecret: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cz_responder_btns\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"cz_btn cz_light_btn\",\n                  onClick: () => this.setState({\n                    responderPopup: false\n                  }),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 654,\n                  columnNumber: 23\n                }, this), !convertKit.isValidate ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cz_btn cz_orange_btn\",\n                  type: \"button\",\n                  onClick: () => {\n                    // this.setState({ mailServer : \"ACTIVE_CAMPAIGN\"});\n                    this.onSave(convertKit);\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 656,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cz_btn cz_orange_btn\",\n                  type: \"button\",\n                  onClick: () => {\n                    // this.setState({ mailServer : \"MAILCHIMP\"}); \n                    this.disconnectAr(convertKit);\n                  },\n                  children: \"Disconnect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 660,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 17\n          }, this) : null, this.state.formId === 6 ? /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Infusionsoft\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cz_responder_form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-elements\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Client Id*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"cz_custom_input\",\n                  type: \"text\",\n                  placeholder: \"Enter Client Id\",\n                  value: infusionSoft.clientId,\n                  onChange: e => this.setState({\n                    infusionSoft: { ...infusionSoft,\n                      clientId: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 675,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-elements\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Client Secret*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 680,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"cz_custom_input\",\n                  type: \"text\",\n                  placeholder: \"Enter Client Secret\",\n                  value: infusionSoft.clientSecret,\n                  onChange: e => this.setState({\n                    infusionSoft: { ...infusionSoft,\n                      clientSecret: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 681,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cz_responder_btns\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"cz_btn cz_light_btn\",\n                  onClick: () => this.setState({\n                    responderPopup: false\n                  }),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 686,\n                  columnNumber: 23\n                }, this), !infusionSoft.isValidate ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cz_btn cz_orange_btn\",\n                  type: \"button\",\n                  onClick: () => {\n                    // this.setState({ mailServer : \"ACTIVE_CAMPAIGN\"});\n                    this.onSave(infusionSoft);\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 688,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cz_btn cz_orange_btn\",\n                  type: \"button\",\n                  onClick: () => {\n                    // this.setState({ mailServer : \"MAILCHIMP\"}); \n                    this.disconnectAr(infusionSoft);\n                  },\n                  children: \"Disconnect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 692,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 17\n          }, this) : null, this.state.formId === 7 ? /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Sendiio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cz_responder_form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-elements\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"API Token*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 706,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"cz_custom_input\",\n                  type: \"text\",\n                  placeholder: \"Enter api token\",\n                  value: sendiio.apiToken,\n                  onChange: e => this.setState({\n                    sendiio: { ...sendiio,\n                      apiToken: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 705,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-elements\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"API Secret*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 711,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"cz_custom_input\",\n                  type: \"text\",\n                  placeholder: \"Enter api secret\",\n                  value: sendiio.apiSecret,\n                  onChange: e => this.setState({\n                    sendiio: { ...sendiio,\n                      apiSecret: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 712,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cz_responder_btns\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"cz_btn cz_light_btn\",\n                  onClick: () => this.setState({\n                    responderPopup: false\n                  }),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 716,\n                  columnNumber: 23\n                }, this), !sendiio.isValidate ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cz_btn cz_orange_btn\",\n                  type: \"button\",\n                  onClick: () => {\n                    // this.setState({ mailServer : \"ACTIVE_CAMPAIGN\"});\n                    this.onSave(sendiio);\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 718,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cz_btn cz_orange_btn\",\n                  type: \"button\",\n                  onClick: () => {\n                    // this.setState({ mailServer : \"MAILCHIMP\"}); \n                    this.disconnectAr(sendiio);\n                  },\n                  children: \"Disconnect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 722,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 715,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 17\n          }, this) : null, this.state.formId === 8 ? /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Mailvio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cz_responder_form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-elements\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"API Key*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 736,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"cz_custom_input\",\n                  type: \"text\",\n                  placeholder: \"Enter api key\",\n                  value: mailVio.apikey,\n                  onChange: e => this.setState({\n                    mailVio: { ...mailVio,\n                      apikey: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 737,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 735,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cz_responder_btns\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"cz_btn cz_light_btn\",\n                  onClick: () => this.setState({\n                    responderPopup: false\n                  }),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 741,\n                  columnNumber: 23\n                }, this), !mailVio.isValidate ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cz_btn cz_orange_btn\",\n                  type: \"button\",\n                  onClick: () => {\n                    // this.setState({ mailServer : \"ACTIVE_CAMPAIGN\"});\n                    this.onSave(mailVio);\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cz_btn cz_orange_btn\",\n                  type: \"button\",\n                  onClick: () => {\n                    // this.setState({ mailServer : \"MAILCHIMP\"}); \n                    this.disconnectAr(mailVio);\n                  },\n                  children: \"Disconnect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 747,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 740,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 17\n          }, this) : null, this.state.formId === 9 ? /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"GetResponse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cz_responder_form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-elements\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"API Key*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 761,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"cz_custom_input\",\n                  type: \"text\",\n                  placeholder: \"Enter api key\",\n                  value: getResponse.apikey,\n                  onChange: e => this.setState({\n                    getResponse: { ...getResponse,\n                      apikey: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 762,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 760,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cz_responder_btns\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"cz_btn cz_light_btn\",\n                  onClick: () => this.setState({\n                    responderPopup: false\n                  }),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 766,\n                  columnNumber: 23\n                }, this), !getResponse.isValidate ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cz_btn cz_orange_btn\",\n                  type: \"button\",\n                  onClick: () => {\n                    // this.setState({ mailServer : \"ACTIVE_CAMPAIGN\"});\n                    this.onSave(getResponse);\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 768,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cz_btn cz_orange_btn\",\n                  type: \"button\",\n                  onClick: () => {\n                    // this.setState({ mailServer : \"MAILCHIMP\"}); \n                    this.disconnectAr(getResponse);\n                  },\n                  children: \"Disconnect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 772,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 765,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 759,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 17\n          }, this) : null, this.state.formId === 10 ? /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Sendlane\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 783,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cz_responder_form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-elements\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"API Key*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 786,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"cz_custom_input\",\n                  type: \"text\",\n                  placeholder: \"Enter api key\",\n                  value: sendlane.apikey,\n                  onChange: e => this.setState({\n                    sendlane: { ...sendlane,\n                      apikey: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 787,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-elements\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"API URL*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 792,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"cz_custom_input\",\n                  type: \"text\",\n                  placeholder: \"yourapi.sendlane.com\",\n                  value: sendlane.apiUrl,\n                  onChange: e => this.setState({\n                    sendlane: { ...sendlane,\n                      apiUrl: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 793,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 791,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-elements\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Hash Key*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 798,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"cz_custom_input\",\n                  type: \"text\",\n                  placeholder: \"Enter hash key\",\n                  value: sendlane.hashkey,\n                  onChange: e => this.setState({\n                    sendlane: { ...sendlane,\n                      hashkey: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 799,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 797,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cz_responder_btns\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"cz_btn cz_light_btn\",\n                  onClick: () => this.setState({\n                    responderPopup: false\n                  }),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 803,\n                  columnNumber: 23\n                }, this), !sendlane.isValidate ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cz_btn cz_orange_btn\",\n                  type: \"button\",\n                  onClick: () => {\n                    // this.setState({ mailServer : \"ACTIVE_CAMPAIGN\"});\n                    this.onSave(sendlane);\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 805,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cz_btn cz_orange_btn\",\n                  type: \"button\",\n                  onClick: () => {\n                    // this.setState({ mailServer : \"MAILCHIMP\"}); \n                    this.disconnectAr(sendlane);\n                  },\n                  children: \"Disconnect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 809,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 784,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 17\n          }, this) : null, this.state.formId === 11 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"cz_custom_responder_form\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"custom_responder_heading\",\n                children: \"Custom Auto Responder \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 821,\n                columnNumber: 19\n              }, this), displayData.map((elem, i) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: this.detectFunction,\n                  dangerouslySetInnerHTML: {\n                    __html: elem\n                  }\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 837,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cz_responder_btns\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"cz_btn cz_light_btn\",\n                onClick: () => this.setState({\n                  responderPopup: false\n                }),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 842,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cz_btn cz_orange_btn\",\n                type: \"button\",\n                onClick: () => this.appendData(),\n                children: \"Add Form\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 843,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 841,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/AutoResponderConfig.js"],"names":["React","PureComponent","useState","Input","Avatar","Modal","DropDown","RequestHandler","ToolUtil","getToolsPermission","CampaignNameInput","LockTool","AUTO_RESPONDER","GET_AUTO_RESPONDER","BASE_URL","AUTHORIZATION","AWEBERAUTHORIZATION","CONSTANTCONTACTAUTH","AUTORESPONDER_AUTHORIZE","ADD_CUSTOME_AR","EDIT_CUSTOME_AR","DELETE_CUSTOME_AR","DISCONNECT_AR","axios","Storage","AutoResponderConfig","state","mailServer","showdata","displayData","mailData","responderPopup","formId","connectedAR","auto_data","id","name","serverName","icon","stateName","active","mailChimp","apikey","activeCampaign","url","aweber","clientId","clientSecret","constantContact","convertKit","apiSecret","infusionSoft","sendiio","apiToken","mailVio","getResponse","sendlane","apiUrl","hashkey","getDefaultResponderData","PostRequest","res","err","autoresponderData","data","autoResponder","newFormData","length","i","j","setState","Object","keys","ar","map","ad","push","nf","formData","_id","JSON","parse","console","log","onMailServerChange","value","onSave","authorizeConstantContact","authorizeAweber","authorizeInfusionSoft","onInstall","userData","success","window","gs","message","popupwin","setTimeout","params","URLSearchParams","query","toString","Url","open","client_id","redirect_uri","response_type","scope","authorizeAutoResponder","postData","status","_this","popupTick","setInterval","closed","clearInterval","appendData","e","onFormSubmit","target","parentElem","parentNode","getAttribute","element","children","formName","getElementsByTagName","URL","stringify","detectFunction","classList","contains","removeForm","confirm","title","content","okText","onOk","remove","cancelText","disconnectAr","handleResponderPopup","componentDidMount","navTitle","render","item","index","concat","isValidate","username","elem","__html"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,QAAqC,MAArC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,QAAP,IAAmBC,kBAAnB,QAA6C,sBAA7C;AACA,SAASC,iBAAT,EAA4BC,QAA5B,QAA4C,iBAA5C;AACA,SACEC,cADF,EAEEC,kBAFF,EAGEC,QAHF,EAIEC,aAJF,EAKEC,mBALF,EAMEC,mBANF,EAOEC,uBAPF,EAQEC,cARF,EASEC,eATF,EAUEC,iBAVF,EAWEC,aAXF,QAYO,oBAZP;AAaA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,qBAAxB;;;AAEA,eAAe,MAAMC,mBAAN,SAAkCxB,aAAlC,CAAgD;AAAA;AAAA;AAAA,SAC7DyB,KAD6D,GACrD;AACNC,MAAAA,UAAU,EAAE,WADN;AAENC,MAAAA,QAAQ,EAAC,KAFH;AAGNC,MAAAA,WAAW,EAAC,EAHN;AAINC,MAAAA,QAAQ,EAAE,EAJJ;AAKNC,MAAAA,cAAc,EAAC,KALT;AAMNC,MAAAA,MAAM,EAAC,CAND;AAONC,MAAAA,WAAW,EAAE,EAPP;AAQNC,MAAAA,SAAS,EAAG,CACV;AACEC,QAAAA,EAAE,EAAG,CADP;AAEEC,QAAAA,IAAI,EAAG,WAFT;AAGEC,QAAAA,UAAU,EAAG,WAHf;AAIEC,QAAAA,IAAI,EAAG,2BAJT;AAKEC,QAAAA,SAAS,EAAG,WALd;AAMEC,QAAAA,MAAM,EAAE;AANV,OADU,EASV;AACEL,QAAAA,EAAE,EAAG,CADP;AAEEC,QAAAA,IAAI,EAAG,iBAFT;AAGEC,QAAAA,UAAU,EAAG,iBAHf;AAIEC,QAAAA,IAAI,EAAG,gCAJT;AAKEC,QAAAA,SAAS,EAAG,gBALd;AAMEC,QAAAA,MAAM,EAAE;AANV,OATU,EAiBV;AACEL,QAAAA,EAAE,EAAG,CADP;AAEEC,QAAAA,IAAI,EAAG,QAFT;AAGEC,QAAAA,UAAU,EAAG,QAHf;AAIEC,QAAAA,IAAI,EAAG,wBAJT;AAKEC,QAAAA,SAAS,EAAG,QALd;AAMEC,QAAAA,MAAM,EAAE;AANV,OAjBU,EAyBV;AACEL,QAAAA,EAAE,EAAG,CADP;AAEEC,QAAAA,IAAI,EAAG,kBAFT;AAGEC,QAAAA,UAAU,EAAG,kBAHf;AAIEC,QAAAA,IAAI,EAAG,iCAJT;AAKEC,QAAAA,SAAS,EAAG,iBALd;AAMEC,QAAAA,MAAM,EAAE;AANV,OAzBU,EAiCV;AACEL,QAAAA,EAAE,EAAG,CADP;AAEEC,QAAAA,IAAI,EAAG,aAFT;AAGEC,QAAAA,UAAU,EAAG,aAHf;AAIEC,QAAAA,IAAI,EAAG,2BAJT;AAKEC,QAAAA,SAAS,EAAG,YALd;AAMEC,QAAAA,MAAM,EAAE;AANV,OAjCU,EAyCV;AACEL,QAAAA,EAAE,EAAG,CADP;AAEEC,QAAAA,IAAI,EAAG,eAFT;AAGEC,QAAAA,UAAU,EAAG,eAHf;AAIEC,QAAAA,IAAI,EAAG,6BAJT;AAKEC,QAAAA,SAAS,EAAG,cALd;AAMEC,QAAAA,MAAM,EAAE;AANV,OAzCU,EAkDV;AACEL,QAAAA,EAAE,EAAG,CADP;AAEEC,QAAAA,IAAI,EAAG,SAFT;AAGEC,QAAAA,UAAU,EAAG,SAHf;AAIEC,QAAAA,IAAI,EAAG,wBAJT;AAKEC,QAAAA,SAAS,EAAG,SALd;AAMEC,QAAAA,MAAM,EAAE;AANV,OAlDU,EA0DV;AACEL,QAAAA,EAAE,EAAG,CADP;AAEEC,QAAAA,IAAI,EAAG,SAFT;AAGEC,QAAAA,UAAU,EAAG,SAHf;AAIEC,QAAAA,IAAI,EAAG,wBAJT;AAKEC,QAAAA,SAAS,EAAG,SALd;AAMEC,QAAAA,MAAM,EAAE;AANV,OA1DU,EAkEV;AACEL,QAAAA,EAAE,EAAG,CADP;AAEEC,QAAAA,IAAI,EAAG,aAFT;AAGEC,QAAAA,UAAU,EAAG,aAHf;AAIEC,QAAAA,IAAI,EAAG,4BAJT;AAKEC,QAAAA,SAAS,EAAG,aALd;AAMEC,QAAAA,MAAM,EAAE;AANV,OAlEU,EA0EV;AACEL,QAAAA,EAAE,EAAG,EADP;AAEEC,QAAAA,IAAI,EAAG,UAFT;AAGEC,QAAAA,UAAU,EAAG,UAHf;AAIEC,QAAAA,IAAI,EAAG,yBAJT;AAKEC,QAAAA,SAAS,EAAG,UALd;AAMEC,QAAAA,MAAM,EAAE;AANV,OA1EU,EAkFV;AACEL,QAAAA,EAAE,EAAG,EADP;AAEEC,QAAAA,IAAI,EAAG,QAFT;AAGEC,QAAAA,UAAU,EAAG,QAHf;AAIEC,QAAAA,IAAI,EAAG,4BAJT;AAKEC,QAAAA,SAAS,EAAG,QALd;AAMEC,QAAAA,MAAM,EAAE;AANV,OAlFU,CARN;AAmGNC,MAAAA,SAAS,EAAG;AACVC,QAAAA,MAAM,EAAE;AADE,OAnGN;AAsGNC,MAAAA,cAAc,EAAG;AACfC,QAAAA,GAAG,EAAE,EADU;AAEfF,QAAAA,MAAM,EAAE;AAFO,OAtGX;AA0GNG,MAAAA,MAAM,EAAG;AACPC,QAAAA,QAAQ,EAAE,EADH;AAEPC,QAAAA,YAAY,EAAE;AAFP,OA1GH;AA8GNC,MAAAA,eAAe,EAAG;AAChBF,QAAAA,QAAQ,EAAE,EADM;AAEhBC,QAAAA,YAAY,EAAE;AAFE,OA9GZ;AAkHNE,MAAAA,UAAU,EAAG;AACXP,QAAAA,MAAM,EAAE,EADG;AAEXQ,QAAAA,SAAS,EAAE;AAFA,OAlHP;AAsHNC,MAAAA,YAAY,EAAG;AACbL,QAAAA,QAAQ,EAAE,EADG;AAEbC,QAAAA,YAAY,EAAE;AAFD,OAtHT;AA0HNK,MAAAA,OAAO,EAAG;AACRC,QAAAA,QAAQ,EAAE,EADF;AAERH,QAAAA,SAAS,EAAE;AAFH,OA1HJ;AA8HNI,MAAAA,OAAO,EAAG;AACRZ,QAAAA,MAAM,EAAE;AADA,OA9HJ;AAiINa,MAAAA,WAAW,EAAG;AACZb,QAAAA,MAAM,EAAE;AADI,OAjIR;AAoINc,MAAAA,QAAQ,EAAG;AACTd,QAAAA,MAAM,EAAE,EADC;AAETe,QAAAA,MAAM,EAAE,EAFC;AAGTC,QAAAA,OAAO,EAAE;AAHA;AApIL,KADqD;;AAAA,SA6J7DC,uBA7J6D,GA6JnC,MAAM;AAC9BpD,MAAAA,cAAc,CAACqD,WAAf,CAA2B/C,kBAA3B,EAA+C,EAA/C,EAAmD,OAAOgD,GAAP,EAAYC,GAAZ,KAAoB;AACrE,YAAGD,GAAH,EAAQ;AACN,cAAI3B,SAAS,GAAG,KAAKR,KAAL,CAAWQ,SAA3B;AAAA,cAAsC6B,iBAAiB,GAAGF,GAAG,CAACG,IAAJ,CAASC,aAAnE;AAAA,cAAkFC,WAAW,GAAGL,GAAG,CAACG,IAAJ,CAASnC,WAAzG;AACA,cAAIA,WAAW,GAAG,KAAKH,KAAL,CAAWG,WAA7B;;AACA,cAAGkC,iBAAiB,CAACI,MAAlB,GAA0B,CAA7B,EAAgC;AAC9B,iBAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAClC,SAAS,CAACiC,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AACpC,mBAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACN,iBAAiB,CAACI,MAAjC,EAAyCE,CAAC,EAA1C,EAA8C;AAC5C,oBAAGnC,SAAS,CAACkC,CAAD,CAAT,CAAa/B,UAAb,KAA4B0B,iBAAiB,CAACM,CAAD,CAAjB,CAAqB1C,UAApD,EAAgE;AAC9D,uBAAK2C,QAAL,CAAc,EACZ,GAAG,KAAK5C,KADI;AAEZ,qBAACQ,SAAS,CAACkC,CAAD,CAAT,CAAa7B,SAAd,GAA2BwB,iBAAiB,CAACM,CAAD;AAFhC,mBAAd;;AAIA,sBAAGE,MAAM,CAACC,IAAP,CAAYT,iBAAiB,CAACM,CAAD,CAA7B,EAAkCF,MAAlC,GAAyC,CAA5C,EAA+C;AAC7CjC,oBAAAA,SAAS,CAACkC,CAAD,CAAT,CAAa5B,MAAb,GAAsB,IAAtB;AACD;AACF;AACF;AACF;AACF,WAdD,MAcO;AACL,gBAAIiC,EAAE,GAAG,EAAT;AACAvC,YAAAA,SAAS,CAACwC,GAAV,CAAeC,EAAE,IAAI;AACnBA,cAAAA,EAAE,CAACnC,MAAH,GAAY,KAAZ;AACAiC,cAAAA,EAAE,CAACG,IAAH,CAAQD,EAAR;AACD,aAHD;AAIA,iBAAKL,QAAL,CAAc;AAACpC,cAAAA,SAAS,EAAEuC;AAAZ,aAAd;AACD;;AACD,cAAGP,WAAW,CAACC,MAAZ,GAAmB,CAAtB,EAAyB;AACvBjC,YAAAA,SAAS,CAACA,SAAS,CAACiC,MAAV,GAAiB,CAAlB,CAAT,CAA8B3B,MAA9B,GAAuC,IAAvC;;AACA,iBAAI,IAAIqC,EAAR,IAAcX,WAAd,EAA2B;AACzB,kBAAIY,QAAQ,2DAAiDD,EAAE,CAACE,GAApD,8NAGqFF,EAAE,CAACzC,IAHxF,gQAOyD4C,IAAI,CAACC,KAAL,CAAWJ,EAAE,CAACC,QAAd,CAPzD,oTAAZ;AAeAjD,cAAAA,WAAW,CAAC+C,IAAZ,CAAiBE,QAAjB;AACD;AACF;;AACD,eAAKR,QAAL,CAAcpC,SAAd,EAAyB,MAAM;AAACgD,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzD,KAAL,CAAWQ,SAAvB;AAAkC,WAAlE;AACA,eAAKoC,QAAL,CAAczC,WAAd,EAA2B,MAAM,CAAE,CAAnC;AACD;AACF,OAlDD;AAmDD,KAjN4D;;AAAA,SAmN7DuD,kBAnN6D,GAmNvCC,KAAD,IAAW;AAC9B,WAAKf,QAAL,CAAc;AAAE3C,QAAAA,UAAU,EAAE0D;AAAd,OAAd;AACD,KArN4D;;AAAA,SAuN7DC,MAvN6D,GAuNnDtB,IAAD,IAAU;AACjB,YAAM;AAAErC,QAAAA;AAAF,UAAiB,KAAKD,KAA5B;;AACA,UAAGC,UAAU,KAAK,kBAAlB,EAAsC;AACpC,aAAK4D,wBAAL,CAA8BvB,IAA9B,EAAoCrC,UAApC;AACD,OAFD,MAEO,IAAGA,UAAU,KAAK,QAAlB,EAA6B;AAClC,aAAK6D,eAAL,CAAqBxB,IAArB,EAA2BrC,UAA3B;AACD,OAFM,MAEA,IAAGA,UAAU,KAAK,eAAlB,EAAoC;AACzC,aAAK8D,qBAAL,CAA2BzB,IAA3B,EAAiCrC,UAAjC;AACD,OAFM,MAED;AACJ,aAAK2C,QAAL,CAAc;AAAExC,UAAAA,QAAQ,EAAE;AAAEH,YAAAA,UAAF;AAAc,eAAGqC;AAAjB;AAAZ,SAAd,EAAqD,MAAM;AACzD,eAAK0B,SAAL;AACD,SAFD;AAGD;AACF,KApO4D;;AAAA,SAsO7DA,SAtO6D,GAsOjD,MAAM;AAChB,YAAM;AAAE5D,QAAAA;AAAF,UAAe,KAAKJ,KAA1B;AACAnB,MAAAA,cAAc,CAACqD,WAAf,CAA2BhD,cAA3B,EAA2C;AAAE+E,QAAAA,QAAQ,EAAE,EAAE,GAAG7D;AAAL;AAAZ,OAA3C,EAA0E,CAAC+B,GAAD,EAAMC,GAAN,KAAc;AACtF,YAAID,GAAJ,EAAS;AACP,cAAIA,GAAG,CAACG,IAAJ,CAAS4B,OAAb,EAAsB;AACpBpF,YAAAA,QAAQ,CAACyD,aAAT,GAAyBnC,QAAzB;AACA+D,YAAAA,MAAM,CAACC,EAAP,CAAUF,OAAV,CAAkB,IAAlB,EAAwB/B,GAAG,CAACG,IAAJ,CAAS+B,OAAjC;AACA,iBAAKzB,QAAL,CAAc;AAACvC,cAAAA,cAAc,EAAC;AAAhB,aAAd;AACA,iBAAK4B,uBAAL;AACD,WALD,MAKO;AACLkC,YAAAA,MAAM,CAACC,EAAP,CAAUF,OAAV,CAAkB,KAAlB,EAAyB/B,GAAG,CAACG,IAAJ,CAAS+B,OAAlC;AACD;AACF,SATD,MASO;AACLF,UAAAA,MAAM,CAACC,EAAP,CAAUF,OAAV,CAAkB,KAAlB,EAAyB,sBAAzB;AACD;AACF,OAbD;AAcD,KAtP4D;;AAAA,SAwP7DH,qBAxP6D,GAwPrC,CAACzB,IAAD,EAAOrC,UAAP,KAAsB;AAC5C,YAAM;AAAEwB,QAAAA;AAAF,UAAmB,KAAKzB,KAA9B;AAEA,UAAIsE,QAAJ;AACA,WAAK1B,QAAL,CAAc;AAAExC,QAAAA,QAAQ,EAAE;AAAEH,UAAAA,UAAF;AAAc,aAAGqC;AAAjB;AAAZ,OAAd,EAAqD,MAAM;AACzD,aAAK0B,SAAL;AACD,OAFD;AAGAO,MAAAA,UAAU,CAAE,MAAM;AAChB,YAAIC,MAAM,GAAG,IAAIC,eAAJ,CAAoB;AAC/B,mBAAS,MADsB;AAE/B,2BAAiB,MAFc;AAG/B,uBAAahD,YAAY,CAACL,QAHK;AAI/B,2BAAiBK,YAAY,CAACJ,YAJC;AAK/B,0BAAgBjC,QAAQ,GAACC;AALM,SAApB,CAAb;AAOA,YAAIqF,KAAK,GAAGF,MAAM,CAACG,QAAP,EAAZ;AACA,YAAIC,GAAG,iEAA0DF,KAA1D,CAAP;AACAJ,QAAAA,QAAQ,GAAGH,MAAM,CAACU,IAAP,CAAYD,GAAZ,EAAiB,QAAjB,EAA2B,6DAA3B,CAAX;AAEAL,QAAAA,UAAU,CAAE,MAAM;AAChB,eAAK3B,QAAL,CAAc;AAAExC,YAAAA,QAAQ,EAAE;AAAEH,cAAAA,UAAF;AAAc,iBAAGqC;AAAjB;AAAZ,WAAd,EAAqD,MAAM;AACzD,iBAAK0B,SAAL;AACD,WAFD;AAGD,SAJS,EAIP,KAJO,CAAV;AAKD,OAjBS,EAiBP,IAjBO,CAAV;AAkBD,KAjR4D;;AAAA,SAmR7DH,wBAnR6D,GAmRlC,CAACvB,IAAD,EAAOrC,UAAP,KAAsB;AAC/C,UAAIuE,MAAM,GAAG,IAAIC,eAAJ,CAAoB;AAC/BK,QAAAA,SAAS,EAAGxC,IAAI,CAAClB,QADc;AAE/B2D,QAAAA,YAAY,EAAE3F,QAAQ,GAACG,mBAFQ;AAG/ByF,QAAAA,aAAa,EAAE,MAHgB;AAI/BC,QAAAA,KAAK,EAAE;AAJwB,OAApB,CAAb;AAOA,UAAIP,KAAK,GAAGF,MAAM,CAACG,QAAP,EAAZ;AAEA,UAAIzD,GAAG,2CAAoCwD,KAApC,CAAP;AAEA,WAAKQ,sBAAL,CAA4B5C,IAA5B,EAAkCrC,UAAlC,EAA8CiB,GAA9C;AACD,KAhS4D;;AAAA,SAkS7DgE,sBAlS6D,GAkSpC,CAAC5C,IAAD,EAAOrC,UAAP,EAAmBiB,GAAnB,KAA2B;AAClD,UAAIiE,QAAQ,GAAG7C,IAAf;AACA,UAAIgC,QAAJ;AAEAa,MAAAA,QAAQ,CAAC,YAAD,CAAR,GAAyBlF,UAAzB;AAEApB,MAAAA,cAAc,CAACqD,WAAf,CAA2B1C,uBAA3B,EAAoD2F,QAApD,EAA8D,CAAChD,GAAD,EAAKC,GAAL,KAAa;AACzE,YAAID,GAAG,CAACG,IAAJ,CAAS8C,MAAb,EAAqB;AACnBd,UAAAA,QAAQ,GAAGH,MAAM,CAACU,IAAP,CAAY3D,GAAZ,EAAiB,QAAjB,EAA2B,6DAA3B,CAAX;AACAqD,UAAAA,UAAU,CAAE,MAAM;AAChB,iBAAK3B,QAAL,CAAc;AAAExC,cAAAA,QAAQ,EAAE;AAAEH,gBAAAA,UAAF;AAAc,mBAAGqC;AAAjB;AAAZ,aAAd,EAAqD,MAAM;AACzD,mBAAK0B,SAAL;AACD,aAFD;AAGD,WAJS,EAIP,KAJO,CAAV;AAKD,SAPD,MAOO;AACLG,UAAAA,MAAM,CAACC,EAAP,CAAUF,OAAV,CAAkB,KAAlB,EAAyB,sBAAzB;AACD;AACF,OAXD;AAYD,KApT4D;;AAAA,SAsT7DJ,eAtT6D,GAsT3C,CAACxB,IAAD,EAAMrC,UAAN,KAAqB;AACrC,YAAM;AAAEkB,QAAAA;AAAF,UAAa,KAAKnB,KAAxB;AACA,UAAIsE,QAAJ;AAEA,UAAIa,QAAQ,GAAG;AACb,oBAAahE,MAAM,CAACC,QADP;AAEb,wBAAiBD,MAAM,CAACE,YAFX;AAGb,sBAAepB;AAHF,OAAf;AAMApB,MAAAA,cAAc,CAACqD,WAAf,CAA2B5C,mBAA3B,EAAgD6F,QAAhD,EAA0D,CAAChD,GAAD,EAAKC,GAAL,KAAa;AACrE,YAAID,GAAG,CAACG,IAAJ,CAAS8C,MAAb,EAAqB;AACnBd,UAAAA,QAAQ,GAAGH,MAAM,CAACU,IAAP,CAAY1C,GAAG,CAACG,IAAJ,CAASpB,GAArB,EAA0B,QAA1B,EAAoC,6DAApC,CAAX;;AACA,cAAImE,KAAK,GAAG,IAAZ;;AACA,cAAIC,SAAS,GAAGC,WAAW,CAAC,YAAW;AACrC,gBAAIjB,QAAQ,CAACkB,MAAb,EAAqB;AACjBC,cAAAA,aAAa,CAACH,SAAD,CAAb;AACA9B,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAc,cAAAA,UAAU,CAAC,MAAM;AACfc,gBAAAA,KAAK,CAACzC,QAAN,CAAe;AAAEtC,kBAAAA,MAAM,EAAE,CAAV;AAAaD,kBAAAA,cAAc,EAAC;AAA5B,iBAAf;;AACAgF,gBAAAA,KAAK,CAACpD,uBAAN;AACD,eAHS,EAGP,GAHO,CAAV;AAIH;AACF,WAT0B,EASxB,GATwB,CAA3B;AAUD,SAbD,MAaO;AACLkC,UAAAA,MAAM,CAACC,EAAP,CAAUF,OAAV,CAAkB,KAAlB,EAAyB,sBAAzB;AACD;AACF,OAjBD;AAkBD,KAlV4D;;AAAA,SAoV7DwB,UApV6D,GAoV/CC,CAAD,IAAO;AAClB,UAAIvC,QAAQ,oqBAAZ;AAeA,WAAKpD,KAAL,CAAWG,WAAX,CAAuB+C,IAAvB,CAA4BE,QAA5B;AACA,WAAKR,QAAL,CAAc,KAAK5C,KAAL,CAAWG,WAAzB,EAAsC,MAAM,CAAE,CAA9C;AACD,KAtW4D;;AAAA,SAwW7DyF,YAxW6D,GAwW7CC,MAAD,IAAY;AACzB,UAAIC,UAAU,GAAGD,MAAM,CAACE,UAAP,CAAkBA,UAAnC;AACA,UAAItF,EAAE,GAAGqF,UAAU,CAACE,YAAX,CAAwB,YAAxB,CAAT;AACA,UAAIC,OAAO,GAAGH,UAAU,CAACI,QAAzB;AACA,UAAIC,QAAQ,GAAGF,OAAO,CAAC,CAAD,CAAP,CAAWG,oBAAX,CAAgC,OAAhC,EAAyC,CAAzC,EAA4CzC,KAA3D;AACA,UAAIP,QAAQ,GAAG6C,OAAO,CAAC,CAAD,CAAP,CAAWG,oBAAX,CAAgC,UAAhC,EAA4C,CAA5C,EAA+CzC,KAA9D;AACA,UAAI0C,GAAG,GAAG5G,cAAV;AACA,UAAI0F,QAAQ,GAAG;AACb,gBAASgB,QADI;AAEb,oBAAa7C,IAAI,CAACgD,SAAL,CAAelD,QAAf;AAFA,OAAf;;AAKA,UAAG3C,EAAH,EAAO;AACL4F,QAAAA,GAAG,GAAG3G,eAAN;AACAyF,QAAAA,QAAQ,CAAC,IAAD,CAAR,GAAiB1E,EAAjB;AACD;;AACD5B,MAAAA,cAAc,CAACqD,WAAf,CAA2BmE,GAA3B,EAAgClB,QAAhC,EAA0C,CAAChD,GAAD,EAAMC,GAAN,KAAc;AACtD,YAAID,GAAG,CAACG,IAAJ,CAAS4B,OAAb,EAAsB;AACpB,eAAKtB,QAAL,CAAc;AAACvC,YAAAA,cAAc,EAAC,KAAhB;AAAuBF,YAAAA,WAAW,EAAE;AAApC,WAAd,EAAuD,MAAM,CAAE,CAA/D;AACAoE,UAAAA,UAAU,CAAC,MAAM;AACf,iBAAKtC,uBAAL;AACAkC,YAAAA,MAAM,CAACC,EAAP,CAAUF,OAAV,CAAkB,IAAlB,EAAwB/B,GAAG,CAACG,IAAJ,CAAS+B,OAAjC;AACD,WAHS,EAGR,GAHQ,CAAV;AAID,SAND,MAMO;AACLF,UAAAA,MAAM,CAACC,EAAP,CAAUF,OAAV,CAAkB,KAAlB,EAAyB/B,GAAG,CAACG,IAAJ,CAAS+B,OAAlC;AACD;AACF,OAVD;AAWD,KAnY4D;;AAAA,SAqY7DkC,cArY6D,GAqY3CZ,CAAD,IAAO;AACtB,UAAGA,CAAC,CAACE,MAAF,CAASW,SAAT,CAAmBC,QAAnB,CAA4B,aAA5B,CAAH,EAA+C;AAC7C,aAAKC,UAAL,CAAgBf,CAAC,CAACE,MAAlB;AACD,OAFD,MAEO,IAAGF,CAAC,CAACE,MAAF,CAASW,SAAT,CAAmBC,QAAnB,CAA4B,aAA5B,CAAH,EAA+C;AACpD,aAAKb,YAAL,CAAkBD,CAAC,CAACE,MAApB;AACD;AACF,KA3Y4D;;AAAA,SA6Y7Da,UA7Y6D,GA6Y/Cb,MAAD,IAAY;AACvB,UAAIC,UAAU,GAAGD,MAAM,CAACE,UAAP,CAAkBA,UAAnC;AACA,UAAItF,EAAE,GAAGqF,UAAU,CAACE,YAAX,CAAwB,YAAxB,CAAT;AACArH,MAAAA,KAAK,CAACgI,OAAN,CAAc;AACZC,QAAAA,KAAK,EAAE,SADK;AAEZC,QAAAA,OAAO,EAAE,6CAFG;AAGZC,QAAAA,MAAM,EAAE,QAHI;AAIZC,QAAAA,IAAI,EAAE,MAAM;AACV,cAAGtG,EAAH,EAAO;AACL5B,YAAAA,cAAc,CAACqD,WAAf,CAA2BvC,iBAA3B,EAA8C;AAAEsE,cAAAA,QAAQ,EAAE;AAAExD,gBAAAA;AAAF;AAAZ,aAA9C,EAAoE,CAAC0B,GAAD,EAAMC,GAAN,KAAc;AAChF,kBAAID,GAAJ,EAAS;AACP,sBAAM;AAAEG,kBAAAA;AAAF,oBAAWH,GAAjB;;AACA,oBAAIG,IAAI,CAAC4B,OAAT,EAAkB;AAChBC,kBAAAA,MAAM,CAACC,EAAP,CAAUF,OAAV,CAAkB,IAAlB,EAAwB5B,IAAI,CAAC+B,OAA7B;AACA,uBAAKzB,QAAL,CAAc;AAACvC,oBAAAA,cAAc,EAAC,KAAhB;AAAuBF,oBAAAA,WAAW,EAAE;AAApC,mBAAd,EAAuD,MAAM,CAAE,CAA/D;AACAoE,kBAAAA,UAAU,CAAC,MAAM;AACf,yBAAKtC,uBAAL;AACD,mBAFS,EAER,GAFQ,CAAV;AAGD;AACF;AACF,aAXD;AAYD,WAbD,MAaO;AACL6D,YAAAA,UAAU,CAACkB,MAAX;AACD;AACF,SArBW;AAsBZC,QAAAA,UAAU,EAAE;AAtBA,OAAd;AAwBD,KAxa4D;;AAAA,SA0a7DC,YA1a6D,GA0a7CjD,QAAD,IAAc;AAC3BtF,MAAAA,KAAK,CAACgI,OAAN,CAAc;AACZC,QAAAA,KAAK,EAAE,SADK;AAEZC,QAAAA,OAAO,EAAE,uCAFG;AAGZC,QAAAA,MAAM,EAAE,YAHI;AAIZC,QAAAA,IAAI,EAAE,MAAM;AACVlI,UAAAA,cAAc,CAACqD,WAAf,CAA2BtC,aAA3B,EAA0C;AAAEqE,YAAAA;AAAF,WAA1C,EAAwD,CAAC9B,GAAD,EAAMC,GAAN,KAAc;AACpE,gBAAID,GAAJ,EAAS;AACP,oBAAM;AAAEG,gBAAAA;AAAF,kBAAWH,GAAjB;;AACA,kBAAIG,IAAI,CAAC4B,OAAT,EAAkB;AAChBC,gBAAAA,MAAM,CAACC,EAAP,CAAUF,OAAV,CAAkB,IAAlB,EAAwB5B,IAAI,CAAC+B,OAA7B;AACA,qBAAKzB,QAAL,CAAc;AAACvC,kBAAAA,cAAc,EAAC;AAAhB,iBAAd,EAAsC,MAAM,CAAE,CAA9C;AACA,oBAAI0C,EAAE,GAAG,EAAT;AACA,qBAAK/C,KAAL,CAAWQ,SAAX,CAAqBwC,GAArB,CAA0BC,EAAE,IAAI;AAC9B,sBAAGA,EAAE,CAACtC,UAAH,KAAkBsD,QAAQ,CAAChE,UAA9B,EAA0C;AACxCgD,oBAAAA,EAAE,CAACnC,MAAH,GAAY,KAAZ;AACD;;AACDiC,kBAAAA,EAAE,CAACG,IAAH,CAAQD,EAAR;AACD,iBALD;AAMA,qBAAKL,QAAL,CAAc;AAACpC,kBAAAA,SAAS,EAAEuC;AAAZ,iBAAd;AACAwB,gBAAAA,UAAU,CAAC,MAAM;AACf,uBAAKtC,uBAAL;AACD,iBAFS,EAEP,GAFO,CAAV;AAGD;AACF;AACF,WAnBD;AAoBD,SAzBW;AA0BZgF,QAAAA,UAAU,EAAE;AA1BA,OAAd;AA4BD,KAvc4D;AAAA;;AA4I7DE,EAAAA,oBAAoB,CAAC1G,EAAD,EAAKE,UAAL,EAAgB;AAClC,SAAKiC,QAAL,CAAc;AACZvC,MAAAA,cAAc,EAAC,IADH;AAEZC,MAAAA,MAAM,EAACG,EAFK;AAGZR,MAAAA,UAAU,EAACU;AAHC,KAAd;AAKD;;AACDyG,EAAAA,iBAAiB,GAAG;AAClBjD,IAAAA,MAAM,CAACC,EAAP,CAAUiD,QAAV,CAAmB,sBAAnB;AACA9C,IAAAA,UAAU,CAAE,MAAM;AAChB,UAAIzF,QAAQ,CAACyD,aAAb,EAA4B;AAC1B,aAAKK,QAAL,CAAc;AAAE3C,UAAAA,UAAU,EAAEnB,QAAQ,CAACyD,aAAT,CAAuBtC,UAArC;AAAiDG,UAAAA,QAAQ,EAAEtB,QAAQ,CAACyD;AAApE,SAAd;AACA,aAAKN,uBAAL;AACD;AACF,KALS,EAKP,GALO,CAAV;AAMD;;AA8SDqF,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEvG,MAAAA,SAAF;AAAaE,MAAAA,cAAb;AAA6BE,MAAAA,MAA7B;AAAqCG,MAAAA,eAArC;AAAsDC,MAAAA,UAAtD;AAAkEE,MAAAA,YAAlE;AAAgFC,MAAAA,OAAhF;AAAyFE,MAAAA,OAAzF;AAAkGC,MAAAA,WAAlG;AAA+GC,MAAAA,QAA/G;AAAyH3B,MAAAA;AAAzH,QAAyI,KAAKH,KAApJ;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,sBACG,KAAKA,KAAL,CAAWQ,SAAX,CAAqBwC,GAArB,CAAyB,CAACuE,IAAD,EAAOC,KAAP,KAAgB;AACxC,kCACE;AAAK,gBAAA,SAAS,EAAE,gBAAgBC,MAAhB,CAAuBF,IAAI,CAACzG,MAAL,GAAc,SAAd,GAA0B,EAAjD,CAAhB;AAAkF,gBAAA,OAAO,EAAE,MAAI;AAC7F,uBAAKqG,oBAAL,CAA0BI,IAAI,CAAC9G,EAA/B,EAAmC8G,IAAI,CAAC5G,UAAxC;AACD,iBAFD;AAAA,wCAGE;AAAG,kBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAK,kBAAA,GAAG,EAAE4G,IAAI,CAAC3G,IAAf;AAAqB,kBAAA,GAAG,EAAE2G,IAAI,CAAC7G;AAA/B;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA,iBAA2E8G,KAA3E;AAAA;AAAA;AAAA;AAAA,sBADF;AAQD,aATA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAkBE;AAAK,QAAA,SAAS,EAAE,KAAKxH,KAAL,CAAWK,cAAX,KAA8B,IAA9B,GAAqC,+BAArC,GAAuE,wBAAvF;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAgC,UAAA,OAAO,EAAE,MAAI,KAAKuC,QAAL,CAAc;AAACvC,YAAAA,cAAc,EAAC;AAAhB,WAAd;AAA7C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,qBACG,KAAKL,KAAL,CAAWM,MAAX,KAAsB,CAAtB,gBACC;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,kBAAA,SAAS,EAAC,iBADZ;AAEE,kBAAA,IAAI,EAAC,MAFP;AAGE,kBAAA,WAAW,EAAC,eAHd;AAIE,kBAAA,KAAK,EAAES,SAAS,CAACC,MAJnB;AAKE,kBAAA,QAAQ,EAAG2E,CAAD,IAAO,KAAK/C,QAAL,CAAc;AAAC7B,oBAAAA,SAAS,EAAG,EAAC,GAAGA,SAAJ;AAAeC,sBAAAA,MAAM,EAAE2E,CAAC,CAACE,MAAF,CAASlC;AAAhC;AAAb,mBAAd;AALnB;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAWE;AAAK,gBAAA,SAAS,EAAC,mBAAf;AAAA,wCACE;AAAM,kBAAA,SAAS,EAAC,qBAAhB;AAAsC,kBAAA,OAAO,EAAE,MAAI,KAAKf,QAAL,CAAc;AAACvC,oBAAAA,cAAc,EAAC;AAAhB,mBAAd,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEI,CAACU,SAAS,CAAC2G,UAAX,gBACF;AAAQ,kBAAA,SAAS,EAAC,sBAAlB;AAAyC,kBAAA,IAAI,EAAC,QAA9C;AAAuD,kBAAA,OAAO,EAAE,MAAM;AACpE;AACA,yBAAK9D,MAAL,CAAY7C,SAAZ;AAAuB,mBAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADE,gBAKF;AAAQ,kBAAA,SAAS,EAAC,sBAAlB;AAAyC,kBAAA,IAAI,EAAC,QAA9C;AAAuD,kBAAA,OAAO,EAAE,MAAM;AACpE;AACA,yBAAKmG,YAAL,CAAkBnG,SAAlB;AAA6B,mBAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GA6BC,IA9BJ,EAgCG,KAAKf,KAAL,CAAWM,MAAX,KAAsB,CAAtB,gBACC;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAO,kBAAA,SAAS,EAAC,iBAAjB;AAAmC,kBAAA,IAAI,EAAC,MAAxC;AAA+C,kBAAA,WAAW,EAAC,sBAA3D;AAAkF,kBAAA,KAAK,EAAEW,cAAc,CAACC,GAAxG;AACE,kBAAA,QAAQ,EAAGyE,CAAD,IAAM,KAAK/C,QAAL,CAAc;AAAC3B,oBAAAA,cAAc,EAAG,EAAC,GAAGA,cAAJ;AAAoBC,sBAAAA,GAAG,EAAEyE,CAAC,CAACE,MAAF,CAASlC;AAAlC;AAAlB,mBAAd;AADlB;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAME;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAO,kBAAA,SAAS,EAAC,iBAAjB;AAAmC,kBAAA,IAAI,EAAC,MAAxC;AAA+C,kBAAA,WAAW,EAAC,sBAA3D;AAAkF,kBAAA,KAAK,EAAE1C,cAAc,CAACD,MAAxG;AACE,kBAAA,QAAQ,EAAG2E,CAAD,IAAM,KAAK/C,QAAL,CAAc;AAAC3B,oBAAAA,cAAc,EAAG,EAAC,GAAGA,cAAJ;AAAoBD,sBAAAA,MAAM,EAAE2E,CAAC,CAACE,MAAF,CAASlC;AAArC;AAAlB,mBAAd;AADlB;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eAWE;AAAK,gBAAA,SAAS,EAAC,mBAAf;AAAA,wCACE;AAAM,kBAAA,SAAS,EAAC,qBAAhB;AAAsC,kBAAA,OAAO,EAAE,MAAI,KAAKf,QAAL,CAAc;AAACvC,oBAAAA,cAAc,EAAC;AAAhB,mBAAd,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEI,CAACY,cAAc,CAACyG,UAAhB,gBACA;AAAQ,kBAAA,SAAS,EAAC,sBAAlB;AAAyC,kBAAA,IAAI,EAAC,QAA9C;AAAuD,kBAAA,OAAO,EAAE,MAAM;AACtE;AACA,yBAAK9D,MAAL,CAAY3C,cAAZ;AACC,mBAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,gBAKA;AAAQ,kBAAA,SAAS,EAAC,sBAAlB;AAAyC,kBAAA,IAAI,EAAC,QAA9C;AAAuD,kBAAA,OAAO,EAAE,MAAM;AACpE;AACA,yBAAKiG,YAAL,CAAkBjG,cAAlB;AAAkC,mBAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GA6BC,IA7DJ,EA+DG,KAAKjB,KAAL,CAAWM,MAAX,KAAsB,CAAtB,gBACC;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAO,kBAAA,SAAS,EAAC,iBAAjB;AAAmC,kBAAA,IAAI,EAAC,MAAxC;AAA+C,kBAAA,WAAW,EAAC,iBAA3D;AAA6E,kBAAA,KAAK,EAAEa,MAAM,CAACC,QAA3F;AACE,kBAAA,QAAQ,EAAGuE,CAAD,IAAM,KAAK/C,QAAL,CAAc;AAACzB,oBAAAA,MAAM,EAAG,EAAC,GAAGA,MAAJ;AAAYC,sBAAAA,QAAQ,EAAEuE,CAAC,CAACE,MAAF,CAASlC;AAA/B;AAAV,mBAAd;AADlB;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAME;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAO,kBAAA,SAAS,EAAC,iBAAjB;AAAmC,kBAAA,IAAI,EAAC,MAAxC;AAA+C,kBAAA,WAAW,EAAC,qBAA3D;AAAiF,kBAAA,KAAK,EAAExC,MAAM,CAACE,YAA/F;AACE,kBAAA,QAAQ,EAAGsE,CAAD,IAAM,KAAK/C,QAAL,CAAc;AAACzB,oBAAAA,MAAM,EAAG,EAAC,GAAGA,MAAJ;AAAYE,sBAAAA,YAAY,EAAEsE,CAAC,CAACE,MAAF,CAASlC;AAAnC;AAAV,mBAAd;AADlB;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eAWE;AAAK,gBAAA,SAAS,EAAC,mBAAf;AAAA,wCACE;AAAM,kBAAA,SAAS,EAAC,qBAAhB;AAAsC,kBAAA,OAAO,EAAE,MAAI,KAAKf,QAAL,CAAc;AAACvC,oBAAAA,cAAc,EAAC;AAAhB,mBAAd,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,CAACc,MAAM,CAACuG,UAAR,gBACA;AAAQ,kBAAA,SAAS,EAAC,sBAAlB;AAAyC,kBAAA,IAAI,EAAC,QAA9C;AAAuD,kBAAA,OAAO,EAAE,MAAM;AACpE;AACA,yBAAK9D,MAAL,CAAYzC,MAAZ;AACD,mBAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,gBAKA;AAAQ,kBAAA,SAAS,EAAC,sBAAlB;AAAyC,kBAAA,IAAI,EAAC,QAA9C;AAAuD,kBAAA,OAAO,EAAE,MAAM;AACpE;AACA,yBAAK+F,YAAL,CAAkB/F,MAAlB;AAA0B,mBAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GA8BC,IA7FJ,EA8FG,KAAKnB,KAAL,CAAWM,MAAX,KAAsB,CAAtB,gBACC;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,kBAAA,SAAS,EAAC,iBADZ;AAEE,kBAAA,IAAI,EAAC,MAFP;AAGE,kBAAA,WAAW,EAAC,gBAHd;AAIE,kBAAA,YAAY,EAAC,KAJf;AAKE,kBAAA,KAAK,EAAEgB,eAAe,CAACF,QALzB;AAME,kBAAA,QAAQ,EAAGuE,CAAD,IAAO,KAAK/C,QAAL,CAAc;AAACtB,oBAAAA,eAAe,EAAG,EAAC,GAAGA,eAAJ;AAAqBF,sBAAAA,QAAQ,EAAEuE,CAAC,CAACE,MAAF,CAASlC;AAAxC;AAAnB,mBAAd;AANnB;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAYE;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,kBAAA,SAAS,EAAC,iBADZ;AAEE,kBAAA,IAAI,EAAC,MAFP;AAGE,kBAAA,WAAW,EAAC,qBAHd;AAIE,kBAAA,YAAY,EAAC,KAJf;AAKE,kBAAA,YAAY,EAAErC,eAAe,CAACqG,QALhC;AAME,kBAAA,QAAQ,EAAGhC,CAAD,IAAM,KAAK/C,QAAL,CAAc;AAACtB,oBAAAA,eAAe,EAAG,EAAC,GAAGA,eAAJ;AAAqBD,sBAAAA,YAAY,EAAEsE,CAAC,CAACE,MAAF,CAASlC;AAA5C;AAAnB,mBAAd;AANlB;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZF,eAuBE;AAAK,gBAAA,SAAS,EAAC,mBAAf;AAAA,wCACE;AAAM,kBAAA,SAAS,EAAC,qBAAhB;AAAsC,kBAAA,OAAO,EAAE,MAAI,KAAKf,QAAL,CAAc;AAACvC,oBAAAA,cAAc,EAAC;AAAhB,mBAAd,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEI,CAACiB,eAAe,CAACoG,UAAjB,gBACA;AAAQ,kBAAA,SAAS,EAAC,sBAAlB;AAAyC,kBAAA,IAAI,EAAC,QAA9C;AAAuD,kBAAA,OAAO,EAAE,MAAM;AACtE;AACA,yBAAK9D,MAAL,CAAYtC,eAAZ;AAA6B,mBAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,gBAIA;AAAQ,kBAAA,SAAS,EAAC,sBAAlB;AAAyC,kBAAA,IAAI,EAAC,QAA9C;AAAuD,kBAAA,OAAO,EAAE,MAAM;AACpE;AACA,yBAAK4F,YAAL,CAAkB5F,eAAlB;AAAmC,mBAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAwCC,IAtIJ,EAuIG,KAAKtB,KAAL,CAAWM,MAAX,KAAsB,CAAtB,gBACC;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAO,kBAAA,SAAS,EAAC,iBAAjB;AAAmC,kBAAA,IAAI,EAAC,MAAxC;AAA+C,kBAAA,WAAW,EAAC,eAA3D;AAA2E,kBAAA,KAAK,EAAEiB,UAAU,CAACP,MAA7F;AACE,kBAAA,QAAQ,EAAG2E,CAAD,IAAM,KAAK/C,QAAL,CAAc;AAACrB,oBAAAA,UAAU,EAAG,EAAC,GAAGA,UAAJ;AAAgBP,sBAAAA,MAAM,EAAE2E,CAAC,CAACE,MAAF,CAASlC;AAAjC;AAAd,mBAAd;AADlB;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAME;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAO,kBAAA,SAAS,EAAC,iBAAjB;AAAmC,kBAAA,IAAI,EAAC,MAAxC;AAA+C,kBAAA,WAAW,EAAC,kBAA3D;AAA8E,kBAAA,KAAK,EAAEpC,UAAU,CAACC,SAAhG;AACE,kBAAA,QAAQ,EAAGmE,CAAD,IAAM,KAAK/C,QAAL,CAAc;AAACrB,oBAAAA,UAAU,EAAG,EAAC,GAAGA,UAAJ;AAAgBC,sBAAAA,SAAS,EAAEmE,CAAC,CAACE,MAAF,CAASlC;AAApC;AAAd,mBAAd;AADlB;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eAYE;AAAK,gBAAA,SAAS,EAAC,mBAAf;AAAA,wCACE;AAAM,kBAAA,SAAS,EAAC,qBAAhB;AAAsC,kBAAA,OAAO,EAAE,MAAI,KAAKf,QAAL,CAAc;AAACvC,oBAAAA,cAAc,EAAC;AAAhB,mBAAd,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEI,CAACkB,UAAU,CAACmG,UAAZ,gBACA;AAAQ,kBAAA,SAAS,EAAC,sBAAlB;AAAyC,kBAAA,IAAI,EAAC,QAA9C;AAAuD,kBAAA,OAAO,EAAE,MAAM;AACpE;AACA,yBAAK9D,MAAL,CAAYrC,UAAZ;AACD,mBAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,gBAKA;AAAQ,kBAAA,SAAS,EAAC,sBAAlB;AAAyC,kBAAA,IAAI,EAAC,QAA9C;AAAuD,kBAAA,OAAO,EAAE,MAAM;AACpE;AACA,yBAAK2F,YAAL,CAAkB3F,UAAlB;AAA8B,mBAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GA8BC,IArKJ,EAsKG,KAAKvB,KAAL,CAAWM,MAAX,KAAsB,CAAtB,gBACC;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAO,kBAAA,SAAS,EAAC,iBAAjB;AAAmC,kBAAA,IAAI,EAAC,MAAxC;AAA+C,kBAAA,WAAW,EAAC,iBAA3D;AAA6E,kBAAA,KAAK,EAAEmB,YAAY,CAACL,QAAjG;AACE,kBAAA,QAAQ,EAAGuE,CAAD,IAAM,KAAK/C,QAAL,CAAc;AAACnB,oBAAAA,YAAY,EAAG,EAAE,GAAGA,YAAL;AAAmBL,sBAAAA,QAAQ,EAAEuE,CAAC,CAACE,MAAF,CAASlC;AAAtC;AAAhB,mBAAd;AADlB;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAOE;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAO,kBAAA,SAAS,EAAC,iBAAjB;AAAmC,kBAAA,IAAI,EAAC,MAAxC;AAA+C,kBAAA,WAAW,EAAC,qBAA3D;AAAiF,kBAAA,KAAK,EAAElC,YAAY,CAACJ,YAArG;AACE,kBAAA,QAAQ,EAAGsE,CAAD,IAAO,KAAK/C,QAAL,CAAc;AAACnB,oBAAAA,YAAY,EAAG,EAAE,GAAGA,YAAL;AAAmBJ,sBAAAA,YAAY,EAAEsE,CAAC,CAACE,MAAF,CAASlC;AAA1C;AAAhB,mBAAd;AADnB;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,eAaE;AAAK,gBAAA,SAAS,EAAC,mBAAf;AAAA,wCACE;AAAM,kBAAA,SAAS,EAAC,qBAAhB;AAAsC,kBAAA,OAAO,EAAE,MAAI,KAAKf,QAAL,CAAc;AAACvC,oBAAAA,cAAc,EAAC;AAAhB,mBAAd,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEI,CAACoB,YAAY,CAACiG,UAAd,gBACA;AAAQ,kBAAA,SAAS,EAAC,sBAAlB;AAAyC,kBAAA,IAAI,EAAC,QAA9C;AAAuD,kBAAA,OAAO,EAAE,MAAM;AACpE;AACA,yBAAK9D,MAAL,CAAYnC,YAAZ;AACD,mBAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,gBAKA;AAAQ,kBAAA,SAAS,EAAC,sBAAlB;AAAyC,kBAAA,IAAI,EAAC,QAA9C;AAAuD,kBAAA,OAAO,EAAE,MAAM;AACpE;AACA,yBAAKyF,YAAL,CAAkBzF,YAAlB;AAAgC,mBAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GA+BC,IArMJ,EAsMG,KAAKzB,KAAL,CAAWM,MAAX,KAAsB,CAAtB,gBACC;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAO,kBAAA,SAAS,EAAC,iBAAjB;AAAmC,kBAAA,IAAI,EAAC,MAAxC;AAA+C,kBAAA,WAAW,EAAC,iBAA3D;AAA6E,kBAAA,KAAK,EAAEoB,OAAO,CAACC,QAA5F;AACE,kBAAA,QAAQ,EAAGgE,CAAD,IAAM,KAAK/C,QAAL,CAAc;AAAClB,oBAAAA,OAAO,EAAG,EAAC,GAAGA,OAAJ;AAAaC,sBAAAA,QAAQ,EAAEgE,CAAC,CAACE,MAAF,CAASlC;AAAhC;AAAX,mBAAd;AADlB;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAME;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAO,kBAAA,SAAS,EAAC,iBAAjB;AAAmC,kBAAA,IAAI,EAAC,MAAxC;AAA+C,kBAAA,WAAW,EAAC,kBAA3D;AAA8E,kBAAA,KAAK,EAAEjC,OAAO,CAACF,SAA7F;AACE,kBAAA,QAAQ,EAAGmE,CAAD,IAAM,KAAK/C,QAAL,CAAc;AAAClB,oBAAAA,OAAO,EAAG,EAAC,GAAGA,OAAJ;AAAaF,sBAAAA,SAAS,EAAEmE,CAAC,CAACE,MAAF,CAASlC;AAAjC;AAAX,mBAAd;AADlB;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eAWE;AAAK,gBAAA,SAAS,EAAC,mBAAf;AAAA,wCACE;AAAM,kBAAA,SAAS,EAAC,qBAAhB;AAAsC,kBAAA,OAAO,EAAE,MAAI,KAAKf,QAAL,CAAc;AAACvC,oBAAAA,cAAc,EAAC;AAAhB,mBAAd,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEI,CAACqB,OAAO,CAACgG,UAAT,gBACA;AAAQ,kBAAA,SAAS,EAAC,sBAAlB;AAAyC,kBAAA,IAAI,EAAC,QAA9C;AAAuD,kBAAA,OAAO,EAAE,MAAM;AACpE;AACA,yBAAK9D,MAAL,CAAYlC,OAAZ;AACD,mBAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,gBAKA;AAAQ,kBAAA,SAAS,EAAC,sBAAlB;AAAyC,kBAAA,IAAI,EAAC,QAA9C;AAAuD,kBAAA,OAAO,EAAE,MAAM;AACpE;AACA,yBAAKwF,YAAL,CAAkBxF,OAAlB;AAA2B,mBAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GA6BC,IAnOJ,EAoOG,KAAK1B,KAAL,CAAWM,MAAX,KAAsB,CAAtB,gBACC;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAO,kBAAA,SAAS,EAAC,iBAAjB;AAAmC,kBAAA,IAAI,EAAC,MAAxC;AAA+C,kBAAA,WAAW,EAAC,eAA3D;AAA2E,kBAAA,KAAK,EAAEsB,OAAO,CAACZ,MAA1F;AACE,kBAAA,QAAQ,EAAG2E,CAAD,IAAM,KAAK/C,QAAL,CAAc;AAAChB,oBAAAA,OAAO,EAAG,EAAC,GAAGA,OAAJ;AAAaZ,sBAAAA,MAAM,EAAE2E,CAAC,CAACE,MAAF,CAASlC;AAA9B;AAAX,mBAAd;AADlB;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAME;AAAK,gBAAA,SAAS,EAAC,mBAAf;AAAA,wCACE;AAAM,kBAAA,SAAS,EAAC,qBAAhB;AAAsC,kBAAA,OAAO,EAAE,MAAI,KAAKf,QAAL,CAAc;AAACvC,oBAAAA,cAAc,EAAC;AAAhB,mBAAd,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEI,CAACuB,OAAO,CAAC8F,UAAT,gBACA;AAAQ,kBAAA,SAAS,EAAC,sBAAlB;AAAyC,kBAAA,IAAI,EAAC,QAA9C;AAAuD,kBAAA,OAAO,EAAE,MAAM;AACpE;AACA,yBAAK9D,MAAL,CAAYhC,OAAZ;AACD,mBAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,gBAKA;AAAQ,kBAAA,SAAS,EAAC,sBAAlB;AAAyC,kBAAA,IAAI,EAAC,QAA9C;AAAuD,kBAAA,OAAO,EAAE,MAAM;AACpE;AACA,yBAAKsF,YAAL,CAAkBtF,OAAlB;AAA2B,mBAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAwBC,IA5PJ,EA6PG,KAAK5B,KAAL,CAAWM,MAAX,KAAsB,CAAtB,gBACC;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAO,kBAAA,SAAS,EAAC,iBAAjB;AAAmC,kBAAA,IAAI,EAAC,MAAxC;AAA+C,kBAAA,WAAW,EAAC,eAA3D;AAA2E,kBAAA,KAAK,EAAEuB,WAAW,CAACb,MAA9F;AACE,kBAAA,QAAQ,EAAG2E,CAAD,IAAM,KAAK/C,QAAL,CAAc;AAACf,oBAAAA,WAAW,EAAG,EAAC,GAAGA,WAAJ;AAAiBb,sBAAAA,MAAM,EAAE2E,CAAC,CAACE,MAAF,CAASlC;AAAlC;AAAf,mBAAd;AADlB;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAME;AAAK,gBAAA,SAAS,EAAC,mBAAf;AAAA,wCACE;AAAM,kBAAA,SAAS,EAAC,qBAAhB;AAAsC,kBAAA,OAAO,EAAE,MAAI,KAAKf,QAAL,CAAc;AAACvC,oBAAAA,cAAc,EAAC;AAAhB,mBAAd,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEI,CAACwB,WAAW,CAAC6F,UAAb,gBACA;AAAQ,kBAAA,SAAS,EAAC,sBAAlB;AAAyC,kBAAA,IAAI,EAAC,QAA9C;AAAuD,kBAAA,OAAO,EAAE,MAAM;AACpE;AACA,yBAAK9D,MAAL,CAAY/B,WAAZ;AACD,mBAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,gBAKA;AAAQ,kBAAA,SAAS,EAAC,sBAAlB;AAAyC,kBAAA,IAAI,EAAC,QAA9C;AAAuD,kBAAA,OAAO,EAAE,MAAM;AACpE;AACA,yBAAKqF,YAAL,CAAkBrF,WAAlB;AAA+B,mBAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAwBC,IArRJ,EAsRG,KAAK7B,KAAL,CAAWM,MAAX,KAAsB,EAAtB,gBACC;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAO,kBAAA,SAAS,EAAC,iBAAjB;AAAmC,kBAAA,IAAI,EAAC,MAAxC;AAA+C,kBAAA,WAAW,EAAC,eAA3D;AAA2E,kBAAA,KAAK,EAAEwB,QAAQ,CAACd,MAA3F;AACE,kBAAA,QAAQ,EAAG2E,CAAD,IAAM,KAAK/C,QAAL,CAAc;AAACd,oBAAAA,QAAQ,EAAE,EAAC,GAAGA,QAAJ;AAAcd,sBAAAA,MAAM,EAAC2E,CAAC,CAACE,MAAF,CAASlC;AAA9B;AAAX,mBAAd;AADlB;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAOE;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAO,kBAAA,SAAS,EAAC,iBAAjB;AAAmC,kBAAA,IAAI,EAAC,MAAxC;AAA+C,kBAAA,WAAW,EAAC,sBAA3D;AAAkF,kBAAA,KAAK,EAAE7B,QAAQ,CAACC,MAAlG;AACE,kBAAA,QAAQ,EAAG4D,CAAD,IAAM,KAAK/C,QAAL,CAAc;AAACd,oBAAAA,QAAQ,EAAE,EAAC,GAAGA,QAAJ;AAAcC,sBAAAA,MAAM,EAAC4D,CAAC,CAACE,MAAF,CAASlC;AAA9B;AAAX,mBAAd;AADlB;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,eAaE;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAO,kBAAA,SAAS,EAAC,iBAAjB;AAAmC,kBAAA,IAAI,EAAC,MAAxC;AAA+C,kBAAA,WAAW,EAAC,gBAA3D;AAA4E,kBAAA,KAAK,EAAE7B,QAAQ,CAACE,OAA5F;AACE,kBAAA,QAAQ,EAAG2D,CAAD,IAAM,KAAK/C,QAAL,CAAc;AAACd,oBAAAA,QAAQ,EAAE,EAAC,GAAGA,QAAJ;AAAcE,sBAAAA,OAAO,EAAC2D,CAAC,CAACE,MAAF,CAASlC;AAA/B;AAAX,mBAAd;AADlB;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAbF,eAkBE;AAAK,gBAAA,SAAS,EAAC,mBAAf;AAAA,wCACE;AAAM,kBAAA,SAAS,EAAC,qBAAhB;AAAsC,kBAAA,OAAO,EAAE,MAAI,KAAKf,QAAL,CAAc;AAACvC,oBAAAA,cAAc,EAAC;AAAhB,mBAAd,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEI,CAACyB,QAAQ,CAAC4F,UAAV,gBACA;AAAQ,kBAAA,SAAS,EAAC,sBAAlB;AAAyC,kBAAA,IAAI,EAAC,QAA9C;AAAuD,kBAAA,OAAO,EAAE,MAAM;AACpE;AACA,yBAAK9D,MAAL,CAAY9B,QAAZ;AACD,mBAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,gBAKA;AAAQ,kBAAA,SAAS,EAAC,sBAAlB;AAAyC,kBAAA,IAAI,EAAC,QAA9C;AAAuD,kBAAA,OAAO,EAAE,MAAM;AACpE;AACA,yBAAKoF,YAAL,CAAkBpF,QAAlB;AAA4B,mBAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAoCC,IA1TJ,EA2TG,KAAK9B,KAAL,CAAWM,MAAX,KAAsB,EAAtB,gBACC;AAAA,oCACA;AAAM,cAAA,SAAS,EAAC,0BAAhB;AAAA,sCACE;AAAI,gBAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAeGH,WAAW,CAAC6C,GAAZ,CAAiB,CAAC4E,IAAD,EAAOlF,CAAP,KAAa;AAC7B,oCACE;AAAK,kBAAA,OAAO,EAAE,KAAK6D,cAAnB;AAAmC,kBAAA,uBAAuB,EAAE;AAAEsB,oBAAAA,MAAM,EAAED;AAAV;AAA5D,mBAAmFlF,CAAnF;AAAA;AAAA;AAAA;AAAA,wBADF;AAGD,eAJA,CAfH;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAsBA;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,sCACE;AAAM,gBAAA,SAAS,EAAC,qBAAhB;AAAsC,gBAAA,OAAO,EAAE,MAAI,KAAKE,QAAL,CAAc;AAACvC,kBAAAA,cAAc,EAAC;AAAhB,iBAAd,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAQ,gBAAA,SAAS,EAAC,sBAAlB;AAAyC,gBAAA,IAAI,EAAC,QAA9C;AAAuD,gBAAA,OAAO,EAAE,MAAK,KAAKqF,UAAL,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtBA;AAAA,0BADD,GA4BC,IAvVJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmXD;;AA9zB4D","sourcesContent":["import React, { PureComponent, useState } from \"react\";\r\nimport { Input, Avatar, Modal } from \"antd\";\r\nimport DropDown from \"./DropDown\";\r\nimport RequestHandler from \"../../actions/RequestHandler\";\r\nimport ToolUtil, { getToolsPermission } from \"../../utils/ToolUtil\";\r\nimport { CampaignNameInput, LockTool } from \"../comman/Popup\";\r\nimport { \r\n  AUTO_RESPONDER,\r\n  GET_AUTO_RESPONDER,\r\n  BASE_URL,\r\n  AUTHORIZATION,\r\n  AWEBERAUTHORIZATION,\r\n  CONSTANTCONTACTAUTH,\r\n  AUTORESPONDER_AUTHORIZE,\r\n  ADD_CUSTOME_AR,\r\n  EDIT_CUSTOME_AR,\r\n  DELETE_CUSTOME_AR,\r\n  DISCONNECT_AR\r\n} from \"../../actions/URLs\";\r\nimport axios from \"axios\";\r\nimport { Storage } from \"../../utils/Storage\";\r\n\r\nexport default class AutoResponderConfig extends PureComponent {\r\n  state = {\r\n    mailServer: \"MAILCHIMP\",\r\n    showdata:false,\r\n    displayData:[],\r\n    mailData: {},\r\n    responderPopup:false,\r\n    formId:0,\r\n    connectedAR: {},\r\n    auto_data : [\r\n      {\r\n        id : 1,\r\n        name : 'Mailchimp',\r\n        serverName : 'MAILCHIMP',\r\n        icon : '/asset/auto/mailchimp.png',\r\n        stateName : \"mailChimp\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 2,\r\n        name : 'Active Campaign',\r\n        serverName : 'ACTIVE_CAMPAIGN',\r\n        icon : '/asset/auto/activecampaign.png',\r\n        stateName : \"activeCampaign\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 3,\r\n        name : 'Aweber',\r\n        serverName : 'AWEBER',\r\n        icon : '/asset/auto/aweber.png',\r\n        stateName : \"aweber\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 4,\r\n        name : 'Constant Contact',\r\n        serverName : 'CONSTANT_CONTACT',\r\n        icon : 'asset/auto/constant_contact.png',\r\n        stateName : \"constantContact\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 5,\r\n        name : 'Convert Kit',\r\n        serverName : 'CONVERT_KIT',\r\n        icon : 'asset/auto/convertkit.png',\r\n        stateName : \"convertKit\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 6,\r\n        name : 'Infusion Soft',\r\n        serverName : 'INFUSION_SOFT',\r\n        icon : 'asset/auto/infusionsoft.png',\r\n        stateName : \"infusionSoft\",\r\n        active: false\r\n      },\r\n      \r\n      {\r\n        id : 7,\r\n        name : 'Sendiio',\r\n        serverName : 'SENDIIO',\r\n        icon : 'asset/auto/sendiio.png',\r\n        stateName : \"sendiio\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 8,\r\n        name : 'Mailvio',\r\n        serverName : 'MAILVIO',\r\n        icon : 'asset/auto/mailvio.png',\r\n        stateName : \"mailVio\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 9,\r\n        name : 'Getresponse',\r\n        serverName : 'GETRESPONSE',\r\n        icon : 'asset/auto/getresponse.png',\r\n        stateName : \"getResponse\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 10,\r\n        name : 'Sendlane',\r\n        serverName : 'SENDLANE',\r\n        icon : 'asset/auto/sendlane.png',\r\n        stateName : \"sendlane\",\r\n        active: false\r\n      },\r\n      {\r\n        id : 11,\r\n        name : 'Custom',\r\n        serverName : 'CUSTOM',\r\n        icon : 'asset/auto/custom_html.png',\r\n        stateName : \"custom\",\r\n        active: false\r\n      }\r\n    ],\r\n    mailChimp : {\r\n      apikey: \"\"\r\n    },\r\n    activeCampaign : {\r\n      url: \"\",\r\n      apikey: \"\"\r\n    },\r\n    aweber : {\r\n      clientId: \"\",\r\n      clientSecret: \"\"\r\n    },\r\n    constantContact : {\r\n      clientId: \"\",\r\n      clientSecret: \"\"\r\n    },\r\n    convertKit : {\r\n      apikey: \"\",\r\n      apiSecret: \"\"\r\n    },\r\n    infusionSoft : {\r\n      clientId: \"\",\r\n      clientSecret: \"\"\r\n    },\r\n    sendiio : {\r\n      apiToken: \"\",\r\n      apiSecret: \"\"\r\n    },\r\n    mailVio : {\r\n      apikey: \"\"\r\n    },\r\n    getResponse : {\r\n      apikey: \"\"\r\n    },\r\n    sendlane : {\r\n      apikey: \"\",\r\n      apiUrl: \"\",\r\n      hashkey: \"\"\r\n    },\r\n  };\r\n\r\n  handleResponderPopup(id, serverName){\r\n    this.setState({\r\n      responderPopup:true,\r\n      formId:id,\r\n      mailServer:serverName\r\n    })\r\n  }\r\n  componentDidMount() {\r\n    window.gs.navTitle(\"Setup Auto-Responder\");\r\n    setTimeout( () => {\r\n      if (ToolUtil.autoResponder) {\r\n        this.setState({ mailServer: ToolUtil.autoResponder.mailServer, mailData: ToolUtil.autoResponder });\r\n        this.getDefaultResponderData();\r\n      }\r\n    }, 500);\r\n  }\r\n\r\n  getDefaultResponderData = () => {\r\n    RequestHandler.PostRequest(GET_AUTO_RESPONDER, {} ,async (res, err) => {\r\n      if(res) {\r\n        let auto_data = this.state.auto_data, autoresponderData = res.data.autoResponder, newFormData = res.data.displayData;\r\n        let displayData = this.state.displayData;\r\n        if(autoresponderData.length> 0) {\r\n          for(let i=0; i<auto_data.length; i++) {\r\n            for(let j=0; j<autoresponderData.length; j++) {\r\n              if(auto_data[i].serverName === autoresponderData[j].mailServer) {\r\n                this.setState({\r\n                  ...this.state, \r\n                  [auto_data[i].stateName] : autoresponderData[j]\r\n                });\r\n                if(Object.keys(autoresponderData[j]).length>1) {\r\n                  auto_data[i].active = true;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          let ar = [];\r\n          auto_data.map( ad => {\r\n            ad.active = false;\r\n            ar.push(ad);\r\n          });\r\n          this.setState({auto_data: ar});\r\n        }\r\n        if(newFormData.length>0) {\r\n          auto_data[auto_data.length-1].active = true;\r\n          for(let nf of newFormData) {\r\n            let formData = `<div class=\"cz_responder_form\" data-label=\"${nf._id}\">\r\n              <div class=\"form-elements\">\r\n                <label>Form Name*</label>\r\n                <input class=\"cz_custom_input\" type=\"text\" placeholder=\"Enter name\" name=\"formName\" value=\"${nf.name}\"/>\r\n              </div>\r\n              <div class=\"form-elements\">\r\n                <label>Enter your custom HTML form below and click on submit.</label>\r\n                <textarea class=\"customhtml_code form-control\" name=\"formData\">${JSON.parse(nf.formData)}</textarea>\r\n              </div>\r\n              <div class=\"cz_responder_btns\">\r\n                <span class=\"cz_btn cz_light_btn remove_form\">Remove</span>\r\n                <button class=\"cz_btn cz_orange_btn submit_form\" type=\"button\">Submit</button>\r\n              </div>\r\n            </div>`;\r\n\r\n            displayData.push(formData);\r\n          }\r\n        }\r\n        this.setState(auto_data, () => {console.log(this.state.auto_data)});\r\n        this.setState(displayData, () => {})\r\n      }\r\n    });\r\n  }\r\n\r\n  onMailServerChange = (value) => {\r\n    this.setState({ mailServer: value });\r\n  };\r\n\r\n  onSave = (data) => {\r\n    const { mailServer } = this.state;\r\n    if(mailServer === \"CONSTANT_CONTACT\" ){\r\n      this.authorizeConstantContact(data, mailServer);\r\n    } else if(mailServer === \"AWEBER\" ) {\r\n      this.authorizeAweber(data, mailServer);\r\n    } else if(mailServer === \"INFUSION_SOFT\" ) {\r\n      this.authorizeInfusionSoft(data, mailServer);\r\n    }else {\r\n      this.setState({ mailData: { mailServer, ...data } }, () => {\r\n        this.onInstall();\r\n      });\r\n    }\r\n  };\r\n\r\n  onInstall = () => {\r\n    const { mailData } = this.state;\r\n    RequestHandler.PostRequest(AUTO_RESPONDER, { userData: { ...mailData } }, (res, err) => {\r\n      if (res) {\r\n        if (res.data.success) {\r\n          ToolUtil.autoResponder = mailData;\r\n          window.gs.success(true, res.data.message);\r\n          this.setState({responderPopup:false});\r\n          this.getDefaultResponderData();\r\n        } else {\r\n          window.gs.success(false, res.data.message);\r\n        }\r\n      } else {\r\n        window.gs.success(false, \"Something Went Wrong\");\r\n      }\r\n    });\r\n  };\r\n\r\n  authorizeInfusionSoft = (data, mailServer) => {\r\n    const { infusionSoft } = this.state;\r\n\r\n    let popupwin;\r\n    this.setState({ mailData: { mailServer, ...data } }, () => {\r\n      this.onInstall();\r\n    });\r\n    setTimeout( () => {\r\n      let params = new URLSearchParams({\r\n        \"scope\": \"full\",\r\n        \"response_type\": \"code\",\r\n        \"client_id\": infusionSoft.clientId,\r\n        \"client_secret\": infusionSoft.clientSecret,\r\n        \"redirect_uri\": BASE_URL+AUTHORIZATION\r\n      })\r\n      let query = params.toString();\r\n      let Url = `https://signin.infusionsoft.com/app/oauth/authorize?${query}`;\r\n      popupwin = window.open(Url, '_blank', 'location=yes,height=570,width=520,scrollbars=yes,status=yes');\r\n      \r\n      setTimeout( () => {\r\n        this.setState({ mailData: { mailServer, ...data } }, () => {\r\n          this.onInstall();\r\n        });\r\n      }, 10000);\r\n    }, 1000);\r\n  }\r\n\r\n  authorizeConstantContact = (data, mailServer) => {\r\n    let params = new URLSearchParams({\r\n      client_id : data.clientId,\r\n      redirect_uri: BASE_URL+CONSTANTCONTACTAUTH,\r\n      response_type: \"code\",\r\n      scope: \"contact_data+campaign_data+account_read+account_update\"\r\n    })\r\n\r\n    let query = params.toString();\r\n\r\n    let url = `https://api.cc.email/v3/idfed?${query}`;\r\n\r\n    this.authorizeAutoResponder(data, mailServer, url);\r\n  }\r\n  \r\n  authorizeAutoResponder = (data, mailServer, url) => {\r\n    let postData = data;\r\n    let popupwin;\r\n \r\n    postData[\"mailServer\"] = mailServer;\r\n\r\n    RequestHandler.PostRequest(AUTORESPONDER_AUTHORIZE, postData, (res,err) => {\r\n      if (res.data.status) {\r\n        popupwin = window.open(url, '_blank', 'location=yes,height=570,width=720,scrollbars=yes,status=yes');\r\n        setTimeout( () => {\r\n          this.setState({ mailData: { mailServer, ...data } }, () => {\r\n            this.onInstall();\r\n          });\r\n        }, 10000)\r\n      } else {\r\n        window.gs.success(false, \"Something Went Wrong\");\r\n      }\r\n    });\r\n  }\r\n\r\n  authorizeAweber = (data,mailServer) => {\r\n    const { aweber } = this.state;\r\n    let popupwin;\r\n \r\n    let postData = {\r\n      \"clientId\" : aweber.clientId,\r\n      \"clientSecret\" : aweber.clientSecret, \r\n      \"mailServer\" : mailServer\r\n    }\r\n\r\n    RequestHandler.PostRequest(AWEBERAUTHORIZATION, postData, (res,err) => {\r\n      if (res.data.status) {\r\n        popupwin = window.open(res.data.url, '_blank', 'location=yes,height=570,width=520,scrollbars=yes,status=yes');\r\n        let _this = this;\r\n        var popupTick = setInterval(function() {\r\n          if (popupwin.closed) {\r\n              clearInterval(popupTick);\r\n              console.log('window closed!');\r\n              setTimeout(() => {\r\n                _this.setState({ formId: 0, responderPopup:false });\r\n                _this.getDefaultResponderData();\r\n              }, 200);\r\n          }\r\n        }, 500);\r\n      } else {\r\n        window.gs.success(false, \"Something Went Wrong\");\r\n      }\r\n    })\r\n  }\r\n\r\n  appendData = (e) => {\r\n    let formData = `<div class=\"cz_responder_form\">\r\n      <div class=\"form-elements\">\r\n        <label>Form Name*</label>\r\n        <input class=\"cz_custom_input\" type=\"text\" placeholder=\"Enter name\" name=\"formName\" />\r\n      </div>\r\n      <div class=\"form-elements\">\r\n        <label>Enter your custom HTML form below and click on submit.</label>\r\n        <textarea class=\"customhtml_code form-control\" name=\"formData\"></textarea>\r\n      </div>\r\n      <div class=\"cz_responder_btns\">\r\n        <span class=\"cz_btn cz_light_btn remove_form\">Remove</span>\r\n        <button class=\"cz_btn cz_orange_btn submit_form\" type=\"button\">Submit</button>\r\n      </div>\r\n    </div>`;\r\n\r\n    this.state.displayData.push(formData);\r\n    this.setState(this.state.displayData, () => {});\r\n  }\r\n\r\n  onFormSubmit = (target) => {\r\n    let parentElem = target.parentNode.parentNode;\r\n    let id = parentElem.getAttribute(\"data-label\");\r\n    let element = parentElem.children;\r\n    let formName = element[0].getElementsByTagName(\"input\")[0].value;\r\n    let formData = element[1].getElementsByTagName(\"textarea\")[0].value;\r\n    let URL = ADD_CUSTOME_AR;\r\n    let postData = {\r\n      \"name\" : formName,\r\n      \"formData\" : JSON.stringify(formData)\r\n    }\r\n\r\n    if(id) {\r\n      URL = EDIT_CUSTOME_AR;\r\n      postData[\"id\"] = id;\r\n    }\r\n    RequestHandler.PostRequest(URL, postData, (res, err) => {\r\n      if (res.data.success) {\r\n        this.setState({responderPopup:false, displayData: []}, () => {});\r\n        setTimeout(() => {\r\n          this.getDefaultResponderData();\r\n          window.gs.success(true, res.data.message);\r\n        },100);\r\n      } else {\r\n        window.gs.success(false, res.data.message);\r\n      }\r\n    })\r\n  }\r\n\r\n  detectFunction = (e) => {\r\n    if(e.target.classList.contains(\"remove_form\")) {\r\n      this.removeForm(e.target);\r\n    } else if(e.target.classList.contains(\"submit_form\")) {\r\n      this.onFormSubmit(e.target);\r\n    }\r\n  }\r\n\r\n  removeForm = (target) => {\r\n    let parentElem = target.parentNode.parentNode;\r\n    let id = parentElem.getAttribute(\"data-label\");\r\n    Modal.confirm({\r\n      title: \"Confirm\",\r\n      content: \"Are you Sure you want to delete this form ?\",\r\n      okText: \"Remove\",\r\n      onOk: () => {\r\n        if(id) {\r\n          RequestHandler.PostRequest(DELETE_CUSTOME_AR, { userData: { id } }, (res, err) => {\r\n            if (res) {\r\n              const { data } = res;\r\n              if (data.success) {\r\n                window.gs.success(true, data.message);\r\n                this.setState({responderPopup:false, displayData: []}, () => {});\r\n                setTimeout(() => {\r\n                  this.getDefaultResponderData();\r\n                },100);\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          parentElem.remove();\r\n        }\r\n      },\r\n      cancelText: \"Cancel\",\r\n    });\r\n  }\r\n\r\n  disconnectAr = (userData) => {\r\n    Modal.confirm({\r\n      title: \"Confirm\",\r\n      content: \"Are you Sure you want to disconnect ?\",\r\n      okText: \"Disconnect\",\r\n      onOk: () => {\r\n        RequestHandler.PostRequest(DISCONNECT_AR, { userData }, (res, err) => {\r\n          if (res) {\r\n            const { data } = res;\r\n            if (data.success) {\r\n              window.gs.success(true, data.message);\r\n              this.setState({responderPopup:false}, () => {});\r\n              let ar = [];\r\n              this.state.auto_data.map( ad => {\r\n                if(ad.serverName === userData.mailServer) {\r\n                  ad.active = false;\r\n                }\r\n                ar.push(ad);\r\n              });\r\n              this.setState({auto_data: ar});\r\n              setTimeout(() => {\r\n                this.getDefaultResponderData();\r\n              }, 300);\r\n            }\r\n          }\r\n        });\r\n      },\r\n      cancelText: \"Cancel\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { mailChimp, activeCampaign, aweber, constantContact, convertKit, infusionSoft, sendiio, mailVio, getResponse, sendlane, displayData } = this.state;\r\n    return (\r\n      <div className=\"cz_auto_responder_wrapper\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 col-sm-12\">\r\n            <div className=\"cz_responder_box\">\r\n              {this.state.auto_data.map((item, index) =>{\r\n                return (\r\n                  <div className={\"cz_responders\".concat(item.active ? \" active\" : \"\")} key={index} onClick={()=>{\r\n                    this.handleResponderPopup(item.id, item.serverName);\r\n                  }}>\r\n                    <i className=\"fa fa-check-circle\"></i>\r\n                    <img src={item.icon} alt={item.name} /> \r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* autoresponder popup  */}\r\n        <div className={this.state.responderPopup === true ? 'cz_autoresponder_popup active' : 'cz_autoresponder_popup'}>\r\n            <div className=\"cz_popup_close\" onClick={()=>this.setState({responderPopup:false})}></div>\r\n            <div className=\"cz_popup_box\">\r\n              {this.state.formId === 1 ? \r\n                <form>\r\n                  <h2>Mailchimp</h2>\r\n                  <div className=\"cz_responder_form\">\r\n                    <div className=\"form-elements\">\r\n                      <label>Api Key*</label>\r\n                      <input \r\n                        className=\"cz_custom_input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Enter api Key\" \r\n                        value={mailChimp.apikey} \r\n                        onChange={(e)=>  this.setState({mailChimp : {...mailChimp, apikey :e.target.value}})}\r\n                      />\r\n                    </div>\r\n                    <div className=\"cz_responder_btns\">\r\n                      <span className=\"cz_btn cz_light_btn\" onClick={()=>this.setState({responderPopup:false})}>Cancel</span>\r\n                      { !mailChimp.isValidate ?\r\n                      <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                        // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                        this.onSave(mailChimp)}}\r\n                      >Submit</button> :\r\n                      <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                        // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                        this.disconnectAr(mailChimp)}}\r\n                      >Disconnect</button>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </form> \r\n              : null}\r\n\r\n              {this.state.formId === 2 ? \r\n                <form>\r\n                  <h2>Active Campaign</h2>\r\n                  <div className=\"cz_responder_form\">\r\n                    <div className=\"form-elements\">\r\n                      <label>API Access URL*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter api Access url\" value={activeCampaign.url} \r\n                        onChange={(e)=> this.setState({activeCampaign : {...activeCampaign, url :e.target.value}})}/>\r\n                    </div>\r\n                    <div className=\"form-elements\">\r\n                      <label>API Access Key*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter api Access Key\" value={activeCampaign.apikey} \r\n                        onChange={(e)=> this.setState({activeCampaign : {...activeCampaign, apikey :e.target.value}})}/>\r\n                    </div>\r\n                    <div className=\"cz_responder_btns\">\r\n                      <span className=\"cz_btn cz_light_btn\" onClick={()=>this.setState({responderPopup:false})}>Cancel</span>\r\n                      { !activeCampaign.isValidate ?\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                        // this.setState({ mailServer : \"ACTIVE_CAMPAIGN\"});\r\n                        this.onSave(activeCampaign)\r\n                        }}>Submit</button> :\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                          this.disconnectAr(activeCampaign)}}\r\n                        >Disconnect</button>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </form> \r\n              : null}\r\n\r\n              {this.state.formId === 3 ? \r\n                <form>\r\n                  <h2>Aweber</h2>\r\n                  <div className=\"cz_responder_form\">\r\n                    <div className=\"form-elements\">\r\n                      <label>Client ID*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter Client id\" value={aweber.clientId} \r\n                        onChange={(e)=> this.setState({aweber : {...aweber, clientId :e.target.value}})}/>\r\n                    </div>\r\n                    <div className=\"form-elements\">\r\n                      <label>Client Secret*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter Client Secret\" value={aweber.clientSecret} \r\n                        onChange={(e)=> this.setState({aweber : {...aweber, clientSecret :e.target.value}})}/>\r\n                    </div>\r\n                    <div className=\"cz_responder_btns\">\r\n                      <span className=\"cz_btn cz_light_btn\" onClick={()=>this.setState({responderPopup:false})}>Cancel</span>\r\n                    { !aweber.isValidate ?\r\n                      <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                        // this.setState({ mailServer : \"AWEBER\"});\r\n                        this.onSave(aweber)\r\n                      }}>Submit</button>:\r\n                      <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                        // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                        this.disconnectAr(aweber)}}\r\n                      >Disconnect</button>\r\n                    }\r\n                    </div>\r\n                    {/* <a href=\"https://auth.aweber.com/1.0/oauth/authorize_app/b2d4f695\">Click Here</a> to get the code. */}\r\n                  </div>\r\n                </form> \r\n              : null}\r\n              {this.state.formId === 4 ? \r\n                <form>\r\n                  <h2>Constant Contact</h2>\r\n                  <div className=\"cz_responder_form\">\r\n                    <div className=\"form-elements\">\r\n                      <label>clientId*</label>\r\n                      <input \r\n                        className=\"cz_custom_input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Enter clientId\" \r\n                        autoComplete=\"Off\"\r\n                        value={constantContact.clientId} \r\n                        onChange={(e) => this.setState({constantContact : {...constantContact, clientId :e.target.value}})}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-elements\">\r\n                      <label>Client Secret*</label>\r\n                      <input \r\n                        className=\"cz_custom_input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Enter Client Secret\" \r\n                        autoComplete=\"Off\"\r\n                        defaultValue={constantContact.username} \r\n                        onChange={(e)=> this.setState({constantContact : {...constantContact, clientSecret :e.target.value}})}\r\n                      />\r\n                    </div>\r\n                    <div className=\"cz_responder_btns\">\r\n                      <span className=\"cz_btn cz_light_btn\" onClick={()=>this.setState({responderPopup:false})}>Cancel</span>\r\n                      { !constantContact.isValidate ?\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                        // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                        this.onSave(constantContact)}}>Submit</button> :\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                          this.disconnectAr(constantContact)}}\r\n                        >Disconnect</button>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </form>  \r\n              : null}\r\n              {this.state.formId === 5 ? \r\n                <form>\r\n                  <h2>Convert Kit</h2>\r\n                  <div className=\"cz_responder_form\">\r\n                    <div className=\"form-elements\">\r\n                      <label>API Key*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter api key\" value={convertKit.apikey} \r\n                        onChange={(e)=> this.setState({convertKit : {...convertKit, apikey :e.target.value}})}/>\r\n                    </div>\r\n                    <div className=\"form-elements\">\r\n                      <label>API Secret*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter api secret\" value={convertKit.apiSecret} \r\n                        onChange={(e)=> this.setState({convertKit : {...convertKit, apiSecret :e.target.value}})}/>\r\n                    </div>\r\n                    \r\n                    <div className=\"cz_responder_btns\">\r\n                      <span className=\"cz_btn cz_light_btn\" onClick={()=>this.setState({responderPopup:false})}>Cancel</span>\r\n                      { !convertKit.isValidate ?\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"ACTIVE_CAMPAIGN\"});\r\n                          this.onSave(convertKit)\r\n                        }}>Submit</button> :\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                          this.disconnectAr(convertKit)}}\r\n                        >Disconnect</button>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </form> \r\n              : null}\r\n              {this.state.formId === 6 ? \r\n                <form>\r\n                  <h2>Infusionsoft</h2>\r\n                  <div className=\"cz_responder_form\">\r\n                    <div className=\"form-elements\">\r\n                      <label>Client Id*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter Client Id\" value={infusionSoft.clientId} \r\n                        onChange={(e)=> this.setState({infusionSoft : { ...infusionSoft, clientId: e.target.value}})}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-elements\">\r\n                      <label>Client Secret*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter Client Secret\" value={infusionSoft.clientSecret} \r\n                        onChange={(e) => this.setState({infusionSoft : { ...infusionSoft, clientSecret: e.target.value}})}/>\r\n                    </div>\r\n                    \r\n                    <div className=\"cz_responder_btns\">\r\n                      <span className=\"cz_btn cz_light_btn\" onClick={()=>this.setState({responderPopup:false})}>Cancel</span>\r\n                      { !infusionSoft.isValidate ?\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"ACTIVE_CAMPAIGN\"});\r\n                          this.onSave(infusionSoft)\r\n                        }}>Submit</button> :\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                          this.disconnectAr(infusionSoft)}}\r\n                        >Disconnect</button>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </form>  \r\n              : null}\r\n              {this.state.formId === 7 ? \r\n                <form>\r\n                  <h2>Sendiio</h2>\r\n                  <div className=\"cz_responder_form\">\r\n                    <div className=\"form-elements\">\r\n                      <label>API Token*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter api token\" value={sendiio.apiToken} \r\n                        onChange={(e)=> this.setState({sendiio : {...sendiio, apiToken :e.target.value}})}/>\r\n                    </div>\r\n                    <div className=\"form-elements\">\r\n                      <label>API Secret*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter api secret\" value={sendiio.apiSecret} \r\n                        onChange={(e)=> this.setState({sendiio : {...sendiio, apiSecret :e.target.value}})}/>\r\n                    </div>\r\n                    <div className=\"cz_responder_btns\">\r\n                      <span className=\"cz_btn cz_light_btn\" onClick={()=>this.setState({responderPopup:false})}>Cancel</span>\r\n                      { !sendiio.isValidate ?\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"ACTIVE_CAMPAIGN\"});\r\n                          this.onSave(sendiio)\r\n                        }}>Submit</button>:\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                          this.disconnectAr(sendiio)}}\r\n                        >Disconnect</button>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </form>  \r\n              : null}\r\n              {this.state.formId === 8 ? \r\n                <form>\r\n                  <h2>Mailvio</h2>\r\n                  <div className=\"cz_responder_form\">\r\n                    <div className=\"form-elements\">\r\n                      <label>API Key*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter api key\" value={mailVio.apikey} \r\n                        onChange={(e)=> this.setState({mailVio : {...mailVio, apikey :e.target.value}})}/>\r\n                    </div>\r\n                    <div className=\"cz_responder_btns\">\r\n                      <span className=\"cz_btn cz_light_btn\" onClick={()=>this.setState({responderPopup:false})}>Cancel</span>\r\n                      { !mailVio.isValidate ?\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"ACTIVE_CAMPAIGN\"});\r\n                          this.onSave(mailVio)\r\n                        }}>Submit</button>:\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                          this.disconnectAr(mailVio)}}\r\n                        >Disconnect</button>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </form>  \r\n              : null}\r\n              {this.state.formId === 9 ? \r\n                <form>\r\n                  <h2>GetResponse</h2>\r\n                  <div className=\"cz_responder_form\">\r\n                    <div className=\"form-elements\">\r\n                      <label>API Key*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter api key\" value={getResponse.apikey} \r\n                        onChange={(e)=> this.setState({getResponse : {...getResponse, apikey :e.target.value}})}/>\r\n                    </div>\r\n                    <div className=\"cz_responder_btns\">\r\n                      <span className=\"cz_btn cz_light_btn\" onClick={()=>this.setState({responderPopup:false})}>Cancel</span>\r\n                      { !getResponse.isValidate ?\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"ACTIVE_CAMPAIGN\"});\r\n                          this.onSave(getResponse)\r\n                        }}>Submit</button>:\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                          this.disconnectAr(getResponse)}}\r\n                        >Disconnect</button>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </form>  \r\n              : null}\r\n              {this.state.formId === 10 ? \r\n                <form>\r\n                  <h2>Sendlane</h2>\r\n                  <div className=\"cz_responder_form\">\r\n                    <div className=\"form-elements\">\r\n                      <label>API Key*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter api key\" value={sendlane.apikey} \r\n                        onChange={(e)=> this.setState({sendlane: {...sendlane, apikey:e.target.value}})}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-elements\">\r\n                      <label>API URL*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"yourapi.sendlane.com\" value={sendlane.apiUrl} \r\n                        onChange={(e)=> this.setState({sendlane: {...sendlane, apiUrl:e.target.value}})}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-elements\">\r\n                      <label>Hash Key*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter hash key\" value={sendlane.hashkey} \r\n                        onChange={(e)=> this.setState({sendlane: {...sendlane, hashkey:e.target.value}})}/>\r\n                    </div>\r\n                    <div className=\"cz_responder_btns\">\r\n                      <span className=\"cz_btn cz_light_btn\" onClick={()=>this.setState({responderPopup:false})}>Cancel</span>\r\n                      { !sendlane.isValidate ?\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"ACTIVE_CAMPAIGN\"});\r\n                          this.onSave(sendlane)\r\n                        }}>Submit</button>:\r\n                        <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={() => {\r\n                          // this.setState({ mailServer : \"MAILCHIMP\"}); \r\n                          this.disconnectAr(sendlane)}}\r\n                        >Disconnect</button>\r\n                    }\r\n                    </div>\r\n                  </div>\r\n                </form>  \r\n              : null}\r\n              {this.state.formId === 11 ? \r\n                <>\r\n                <form className=\"cz_custom_responder_form\">\r\n                  <h2 className=\"custom_responder_heading\">Custom Auto Responder </h2>\r\n                  {/* <div className=\"cz_responder_form\">\r\n                    <div className=\"form-elements\">\r\n                      <label>Form Name*</label>\r\n                      <input className=\"cz_custom_input\" type=\"text\" placeholder=\"Enter name\" name=\"formName\" />\r\n                    </div>\r\n                    <div className=\"form-elements\">\r\n                      <label>Enter your custom HTML form below and click on submit.</label>\r\n                      <textarea className=\"customhtml_code form-control\" name=\"formData\"></textarea>\r\n                    </div>\r\n                    <div className=\"cz_responder_btns\">\r\n                      <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={(e) => this.onFormSubmit(e.target)}>Submit</button>\r\n                    </div>\r\n                  </div> */}\r\n                  {displayData.map( (elem, i) => {\r\n                    return (\r\n                      <div onClick={this.detectFunction} dangerouslySetInnerHTML={{ __html: elem }} key={i}></div>\r\n                    )\r\n                  })}\r\n                </form>  \r\n                <div className=\"cz_responder_btns\">\r\n                  <span className=\"cz_btn cz_light_btn\" onClick={()=>this.setState({responderPopup:false})}>Cancel</span>\r\n                  <button className=\"cz_btn cz_orange_btn\" type=\"button\" onClick={()=> this.appendData()}>Add Form</button>\r\n                </div>\r\n                </>\r\n              : null}\r\n            </div>\r\n        </div>\r\n        {/* autoresponder popup  */}\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}