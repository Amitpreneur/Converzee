{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Club/Style.js\";\nimport React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport { ColorSelector } from \"../layout/LayoutSelector\";\nimport Uploader from \"../comman/Uploader\";\nimport { Switch } from \"antd\";\nexport default class Style extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // style: this.props.style,\n      // bgImg: this.props.bgImg,\n      logo: this.props.logo // selectedIndex: 0,\n      // count: 0,\n\n    };\n\n    this.onUploadDone = image => {\n      this.setState({\n        logo: image.image\n      }, () => {\n        this.props.onChange({\n          logo: this.state.logo\n        });\n      });\n    };\n\n    this.onReset = () => {\n      this.setState({\n        logo: \"\"\n      }, () => {\n        this.props.onChange({\n          logo: this.state.logo\n        });\n      });\n    };\n  }\n\n  render() {\n    // const { style, selectedIndex, isBGIMG, logo } = this.state;\n    const props = {\n      onUploadDone: this.onUploadDone\n    };\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Uploader, Object.assign({}, props, {\n      onReset: this.onReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/Club/Style.js"],"names":["React","Component","SketchPicker","ColorSelector","Uploader","Switch","Style","state","logo","props","onUploadDone","image","setState","onChange","onReset","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,eAAe,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC3CM,KAD2C,GACnC;AACN;AACA;AACAC,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IAHX,CAIN;AACA;;AALM,KADmC;;AAAA,SA+B3CE,YA/B2C,GA+B3BC,KAAD,IAAW;AACxB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAEG,KAAK,CAACA;AAAd,OAAd,EAAqC,MAAM;AACzC,aAAKF,KAAL,CAAWI,QAAX,CAAoB;AAAEL,UAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC;AAAnB,SAApB;AACD,OAFD;AAGD,KAnC0C;;AAAA,SA2C3CM,OA3C2C,GA2CjC,MAAM;AACd,WAAKF,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAE;AAAR,OAAd,EAA4B,MAAM;AAChC,aAAKC,KAAL,CAAWI,QAAX,CAAoB;AAAEL,UAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC;AAAnB,SAApB;AACD,OAFD;AAGD,KA/C0C;AAAA;;AAiD3CO,EAAAA,MAAM,GAAG;AACP;AACA,UAAMN,KAAK,GAAG;AACZC,MAAAA,YAAY,EAAE,KAAKA;AADP,KAAd;AAGA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAkBE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD,oBAAcD,KAAd;AAAqB,MAAA,OAAO,EAAE,KAAKK,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CAlBF,CADF;AAyBD;;AA/E0C","sourcesContent":["import React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport { ColorSelector } from \"../layout/LayoutSelector\";\nimport Uploader from \"../comman/Uploader\";\nimport { Switch } from \"antd\";\nexport default class Style extends Component {\n  state = {\n    // style: this.props.style,\n    // bgImg: this.props.bgImg,\n    logo: this.props.logo,\n    // selectedIndex: 0,\n    // count: 0,\n  };\n\n  // onColorChange = (value) => {\n  //   const { style, selectedIndex, count } = this.state;\n  //   if (selectedIndex === 3) {\n  //     this.setState({ bgImg: value.hex }, () => {\n  //       this.props.onChange({ bgImg: this.state.bgImg });\n  //     });\n  //   } else {\n  //     style[selectedIndex].value = value.hex;\n  //     this.setState({ count: count + 1 }, () => {\n  //       this.props.onChange({ style: this.state.style });\n  //     });\n  //   }\n  // };\n\n  // onColorBoxClick = (index) => {\n  //   this.setState({ selectedIndex: index });\n  // };\n\n  // componentWillUnmount() {\n  //   this.props.onChange({ style: this.state.style });\n  // }\n\n  onUploadDone = (image) => {\n    this.setState({ logo: image.image }, () => {\n      this.props.onChange({ logo: this.state.logo });\n    });\n  };\n\n  // onToggle = () => {\n  //   this.setState({ isBGIMG: !this.state.isBGIMG, selectedIndex: 0 }, () => {\n  //     this.props.onChange({ isBGIMG: this.state.isBGIMG });\n  //   });\n  // };\n\n  onReset = () => {\n    this.setState({ logo: \"\" }, () => {\n      this.props.onChange({ logo: this.state.logo });\n    });\n  };\n\n  render() {\n    // const { style, selectedIndex, isBGIMG, logo } = this.state;\n    const props = {\n      onUploadDone: this.onUploadDone,\n    };\n    return (\n      <div className=\"row\">\n        {/* {this.props.layout === 2 ? ( */}\n        {/* <div className=\"col-12\">\n          Use Background Color Or Image <Switch className=\"m-2\" onChange={this.onToggle} size=\"small\" defaultChecked={isBGIMG} />\n        </div> */}\n        {/* ) : null} */}\n        {/* <div className=\"col-4\">\n          {style.map((e, i) => (\n            <ColorSelector showName={true} {...e} selectedIndex={selectedIndex} onClick={this.onColorBoxClick} index={i} key={i} />\n          ))}\n          {!isBGIMG && this.props.layout === 2 ? (\n            <ColorSelector showName={true} name={\"Mat Background\"} id={\"bgImg\"} value={bgImg} selectedIndex={selectedIndex} onClick={this.onColorBoxClick} index={3} key={3} />\n          ) : null}\n        </div>\n        <div className=\"col-8\">\n          <SketchPicker defaultValue=\"#452135\" color={selectedIndex === 3 && this.props.layout === 2 && !isBGIMG ? bgImg : style[selectedIndex].value} onChangeComplete={this.onColorChange} />\n        </div>\n        {isBGIMG ? ( */}\n        <div className=\"col-12 \">\n          <Uploader {...props} onReset={this.onReset} />\n        </div>\n        {/* ) : null} */}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}