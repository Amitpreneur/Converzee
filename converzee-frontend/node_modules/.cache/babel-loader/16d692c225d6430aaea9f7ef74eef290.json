{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/TabMessaging/index.js\";\nimport React, { Component } from \"react\";\nimport \"../../Create.css\";\nimport Favicon from \"./Favicon\";\nimport Timing from \"./Timing\";\nimport Code from \"../../../subpages/create/Code\";\nimport RequestHandler from \"../../../../actions/RequestHandler\";\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath } from \"../../../../actions/URLs\";\nimport Text from \"./Text\";\nimport SideBar from \"./SideBar\";\nimport ToolUtil from \"../../../../utils/ToolUtil\";\nimport Util from \"../../../Util\";\nimport \"./Tab.css\";\nimport { TabMessagingModal, TabMessagingModalResponse } from \"../../../utils/Modal\";\nimport { ToolLayout, ButtonsGroup } from \"../../../layout/ToolLayout\";\nimport { Modal } from \"antd\";\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\nconst tabMessgae = {\n  name: \"\",\n  activeTab: 1,\n  isImage: false,\n  emoji: \"ðŸ”¥\",\n  FAVICON: \"\",\n  messages: [],\n  timeFirstMsg: 0,\n  timeBetweenTwoMsg: 2,\n  SOUND: false,\n  CODE: {\n    include: [{\n      type: \"contains\",\n      url: \"\"\n    }],\n    exclude: [{\n      type: \"contains\",\n      url: \"\"\n    }]\n  }\n};\nexport default class TabMessaging extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = tabMessgae;\n\n    this.onChangeActive = tabIndex => {\n      const {\n        activeTab\n      } = this.state;\n\n      if (activeTab !== tabIndex) {\n        this.setState({\n          activeTab: tabIndex\n        });\n      }\n    };\n\n    this.onUpdate = (index, data) => {\n      switch (index) {\n        case 1:\n          this.setState({\n            messages: data\n          });\n          break;\n\n        case 2:\n          this.setState({\n            FAVICON: data\n          });\n          break;\n\n        case 3:\n          this.setState({\n            TIMING: data\n          });\n          break;\n\n        case 4:\n          this.setState({\n            SOUND: data\n          });\n          break;\n\n        case 5:\n          this.setState({\n            CODE: data\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.updateChange = value => {\n      this.setState(value);\n    };\n\n    this.renderMain = () => {\n      const {\n        activeTab,\n        messages,\n        isImage,\n        emoji,\n        FAVICON,\n        timeFirstMsg,\n        timeBetweenTwoMsg,\n        TIMING,\n        SOUND,\n        CODE\n      } = this.state;\n      let component = null;\n\n      switch (activeTab) {\n        case 1:\n          component = React.createElement(Text, {\n            messages: messages,\n            onChange: this.updateChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          });\n          break;\n\n        case 2:\n          component = React.createElement(Favicon, {\n            isImage: isImage,\n            emoji: emoji,\n            FAVICON: FAVICON,\n            onChange: this.updateChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          });\n          break;\n\n        case 3:\n          component = React.createElement(Timing, {\n            timeFirstMsg: timeFirstMsg,\n            SOUND: SOUND,\n            timeBetweenTwoMsg: timeBetweenTwoMsg,\n            onChange: this.updateChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          });\n          break;\n\n        case 5:\n          component = React.createElement(Code, Object.assign({}, CODE, {\n            case: 5,\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }));\n          break;\n\n        default:\n          component = React.createElement(Text, {\n            messages: messages,\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          });\n          break;\n      }\n\n      return component;\n    };\n\n    this.onClickSave = () => {\n      const toolData = this.state;\n\n      if (this.state.CODE.include[0].url !== \"\") {\n        if (!Util.isArrayEqual(tabMessgae, this.state, 3)) {\n          RequestHandler.PostRequest(SAVE_TOOL, {\n            toolData: TabMessagingModal(toolData)\n          }, (res, err) => {\n            if (res) {\n              if (res.data.success) {\n                Modal.success({\n                  content: \"Campaign Save SuccessFully\"\n                });\n                setTimeout(() => {\n                  this.props.history.push(\"/Campaigns\");\n                }, 2000);\n              } else {\n                window.gs.toast(res.data.message, {\n                  position: \"bottom-right\",\n                  autoClose: false,\n                  type: window.gs.toast.TYPE.ERROR\n                });\n              }\n            }\n          });\n        }\n      } else {\n        Modal.warning({\n          content: \"Should Contain atleast one trigger point\"\n        });\n      }\n    };\n\n    this.renderRight = () => {\n      return React.createElement(ReponsiveImage, {\n        isAs: true,\n        url: \"asset/tab.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      });\n    };\n\n    this.onDrawerClose = () => {\n      if (this.state.visible) this.setState({\n        visible: false\n      });else this.setState({\n        visible: true\n      });\n    };\n\n    this.back = () => {\n      this.props.history.push(\"/Create\");\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match ? this.props.match.params ? this.props.match.params.id : null : null;\n\n    if (id) {\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\n        if (res) {\n          Util.isRedirected = true;\n          const data = TabMessagingModalResponse(res);\n\n          if (data) {\n            this.setState(data, () => {\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\n            });\n          }\n        }\n      });\n    } else {\n      const toolId = 1;\n      this.setState({\n        toolId: toolId,\n        toolName: ToolUtil.getTool(toolId),\n        name: Util.CAMPAIGNS_NAME\n      });\n      Util.RedirectWhenCampaignEmpty(this.props);\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\n    }\n  }\n\n  render() {\n    return React.createElement(ToolLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-10 toolItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.renderMain()), React.createElement(\"div\", {\n      className: \"col-md-6 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, this.renderRight()), React.createElement(ButtonsGroup, {\n      backUrl: this.back,\n      save: this.onClickSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-1 sideBarButtomPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(SideBar, {\n      activeTab: this.state.activeTab,\n      onChangeActive: this.onChangeActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/TabMessaging/index.js"],"names":["React","Component","Favicon","Timing","Code","RequestHandler","GET_ONE_TOOL","SAVE_TOOL","getPath","Text","SideBar","ToolUtil","Util","TabMessagingModal","TabMessagingModalResponse","ToolLayout","ButtonsGroup","Modal","ReponsiveImage","tabMessgae","name","activeTab","isImage","emoji","FAVICON","messages","timeFirstMsg","timeBetweenTwoMsg","SOUND","CODE","include","type","url","exclude","TabMessaging","state","onChangeActive","tabIndex","setState","onUpdate","index","data","TIMING","updateChange","value","renderMain","component","onClickSave","toolData","isArrayEqual","PostRequest","res","err","success","content","setTimeout","props","history","push","window","gs","toast","message","position","autoClose","TYPE","ERROR","warning","renderRight","onDrawerClose","visible","back","componentDidMount","id","match","params","isRedirected","navTitle","getTool","toolId","toolName","CAMPAIGNS_NAME","RedirectWhenCampaignEmpty","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../Create.css\";\nimport Favicon from \"./Favicon\";\nimport Timing from \"./Timing\";\nimport Code from \"../../../subpages/create/Code\";\nimport RequestHandler from \"../../../../actions/RequestHandler\";\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath } from \"../../../../actions/URLs\";\nimport Text from \"./Text\";\nimport SideBar from \"./SideBar\";\nimport ToolUtil from \"../../../../utils/ToolUtil\";\nimport Util from \"../../../Util\";\nimport \"./Tab.css\";\nimport { TabMessagingModal, TabMessagingModalResponse } from \"../../../utils/Modal\";\nimport { ToolLayout, ButtonsGroup } from \"../../../layout/ToolLayout\";\nimport { Modal } from \"antd\";\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\n\nconst tabMessgae = {\n  name: \"\",\n  activeTab: 1,\n  isImage: false,\n  emoji: \"ðŸ”¥\",\n  FAVICON: \"\",\n  messages: [],\n  timeFirstMsg: 0,\n  timeBetweenTwoMsg: 2,\n  SOUND: false,\n  CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: \"\" }] },\n};\nexport default class TabMessaging extends Component {\n  state = tabMessgae;\n  componentDidMount() {\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\n    if (id) {\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\n        if (res) {\n          Util.isRedirected = true;\n          const data = TabMessagingModalResponse(res);\n          if (data) {\n            this.setState(data, () => {\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\n            });\n          }\n        }\n      });\n    } else {\n      const toolId = 1;\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\n      Util.RedirectWhenCampaignEmpty(this.props);\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\n    }\n  }\n  onChangeActive = (tabIndex) => {\n    const { activeTab } = this.state;\n    if (activeTab !== tabIndex) {\n      this.setState({ activeTab: tabIndex });\n    }\n  };\n  onUpdate = (index, data) => {\n    switch (index) {\n      case 1:\n        this.setState({ messages: data });\n        break;\n      case 2:\n        this.setState({ FAVICON: data });\n        break;\n      case 3:\n        this.setState({ TIMING: data });\n        break;\n      case 4:\n        this.setState({ SOUND: data });\n        break;\n      case 5:\n        this.setState({ CODE: data });\n        break;\n      default:\n        break;\n    }\n  };\n  updateChange = (value) => {\n    this.setState(value);\n  };\n  renderMain = () => {\n    const { activeTab, messages, isImage, emoji, FAVICON, timeFirstMsg, timeBetweenTwoMsg, TIMING, SOUND, CODE } = this.state;\n    let component = null;\n    switch (activeTab) {\n      case 1:\n        component = <Text messages={messages} onChange={this.updateChange} />;\n        break;\n      case 2:\n        component = <Favicon isImage={isImage} emoji={emoji} FAVICON={FAVICON} onChange={this.updateChange} />;\n        break;\n      case 3:\n        component = <Timing timeFirstMsg={timeFirstMsg} SOUND={SOUND} timeBetweenTwoMsg={timeBetweenTwoMsg} onChange={this.updateChange} />;\n        break;\n      case 5:\n        component = <Code {...CODE} case={5} onChange={this.onUpdate} />;\n        break;\n      default:\n        component = <Text messages={messages} onChange={this.onUpdate} />;\n        break;\n    }\n    return component;\n  };\n\n  onClickSave = () => {\n    const toolData = this.state;\n    if (this.state.CODE.include[0].url !== \"\") {\n      if (!Util.isArrayEqual(tabMessgae, this.state, 3)) {\n        RequestHandler.PostRequest(SAVE_TOOL, { toolData: TabMessagingModal(toolData) }, (res, err) => {\n          if (res) {\n            if (res.data.success) {\n              Modal.success({\n                content: \"Campaign Save SuccessFully\",\n              });\n              setTimeout(() => {\n                this.props.history.push(\"/Campaigns\");\n              }, 2000);\n            } else {\n              window.gs.toast(res.data.message, { position: \"bottom-right\", autoClose: false, type: window.gs.toast.TYPE.ERROR });\n            }\n          }\n        });\n      }\n    } else {\n      Modal.warning({\n        content: \"Should Contain atleast one trigger point\",\n      });\n    }\n  };\n\n  renderRight = () => {\n    return <ReponsiveImage isAs={true} url={\"asset/tab.png\"} />;\n  };\n\n  onDrawerClose = () => {\n    if (this.state.visible) this.setState({ visible: false });\n    else this.setState({ visible: true });\n  };\n\n  back = () => {\n    this.props.history.push(\"/Create\");\n  };\n\n  render() {\n    return (\n      <ToolLayout>\n        <div className=\"row\">\n          <div className=\"col-10 toolItem\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">{this.renderMain()}</div>\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\n              <ButtonsGroup backUrl={this.back} save={this.onClickSave} />\n            </div>\n          </div>\n          <div className=\"col-1 sideBarButtomPanel\">\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\n          </div>\n        </div>\n      </ToolLayout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}