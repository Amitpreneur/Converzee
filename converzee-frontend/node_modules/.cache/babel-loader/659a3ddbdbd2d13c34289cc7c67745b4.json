{"ast":null,"code":"import RequestHandler from \"../../actions/RequestHandler\";\nimport { GET_USERS } from \"../../actions/URLs\";\nexport function getUserList(userType = null, cb) {\n  const getType = userType ? GET_USERS + \"/\" + userType : GET_USERS; // return new Promise((resolve, reject) => {\n\n  RequestHandler.PostRequest(getType, {}, (res, err) => {\n    if (res) cb(res.data.data, null);else cb(null, \"Error\");\n  }); // });\n}\nexport const parseUserData = function (data) {\n  const newData = new Array();\n  data.forEach(e => {\n    newData.push({\n      id: e._id,\n      firstname: e.firstname,\n      email: e.email,\n      isActive: e.isActive,\n      date: e.createdAt\n    });\n  });\n  return newData;\n};\nexport const parseResellerData = function (data) {\n  const newData = new Array();\n  data.forEach(e => {\n    newData.push({\n      id: e._id,\n      firstname: e.firstname,\n      email: e.email,\n      isActive: e.isActive,\n      date: e.createdAt,\n      totallicence: e.totallicence,\n      consumeLicence: e.consumeLicence\n    });\n  });\n  return newData;\n};","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/TableWithData.js"],"names":["RequestHandler","GET_USERS","getUserList","userType","cb","getType","PostRequest","res","err","data","parseUserData","newData","Array","forEach","e","push","id","_id","firstname","email","isActive","date","createdAt","parseResellerData","totallicence","consumeLicence"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,8BAA3B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,OAAO,SAASC,WAAT,CAAqBC,QAAQ,GAAG,IAAhC,EAAsCC,EAAtC,EAA0C;AAC/C,QAAMC,OAAO,GAAGF,QAAQ,GAAGF,SAAS,GAAG,GAAZ,GAAkBE,QAArB,GAAgCF,SAAxD,CAD+C,CAE/C;;AACAD,EAAAA,cAAc,CAACM,WAAf,CAA2BD,OAA3B,EAAoC,EAApC,EAAwC,CAACE,GAAD,EAAMC,GAAN,KAAc;AACpD,QAAID,GAAJ,EAASH,EAAE,CAACG,GAAG,CAACE,IAAJ,CAASA,IAAV,EAAgB,IAAhB,CAAF,CAAT,KACKL,EAAE,CAAC,IAAD,EAAO,OAAP,CAAF;AACN,GAHD,EAH+C,CAO/C;AACD;AAED,OAAO,MAAMM,aAAa,GAAG,UAASD,IAAT,EAAe;AAC1C,QAAME,OAAO,GAAG,IAAIC,KAAJ,EAAhB;AACAH,EAAAA,IAAI,CAACI,OAAL,CAAaC,CAAC,IAAI;AAChBH,IAAAA,OAAO,CAACI,IAAR,CAAa;AACXC,MAAAA,EAAE,EAAEF,CAAC,CAACG,GADK;AAEXC,MAAAA,SAAS,EAAEJ,CAAC,CAACI,SAFF;AAGXC,MAAAA,KAAK,EAAEL,CAAC,CAACK,KAHE;AAIXC,MAAAA,QAAQ,EAAEN,CAAC,CAACM,QAJD;AAKXC,MAAAA,IAAI,EAAEP,CAAC,CAACQ;AALG,KAAb;AAOD,GARD;AASA,SAAOX,OAAP;AACD,CAZM;AAcP,OAAO,MAAMY,iBAAiB,GAAG,UAASd,IAAT,EAAe;AAC9C,QAAME,OAAO,GAAG,IAAIC,KAAJ,EAAhB;AACAH,EAAAA,IAAI,CAACI,OAAL,CAAaC,CAAC,IAAI;AAChBH,IAAAA,OAAO,CAACI,IAAR,CAAa;AACXC,MAAAA,EAAE,EAAEF,CAAC,CAACG,GADK;AAEXC,MAAAA,SAAS,EAAEJ,CAAC,CAACI,SAFF;AAGXC,MAAAA,KAAK,EAAEL,CAAC,CAACK,KAHE;AAIXC,MAAAA,QAAQ,EAAEN,CAAC,CAACM,QAJD;AAKXC,MAAAA,IAAI,EAAEP,CAAC,CAACQ,SALG;AAMXE,MAAAA,YAAY,EAAEV,CAAC,CAACU,YANL;AAOXC,MAAAA,cAAc,EAAEX,CAAC,CAACW;AAPP,KAAb;AASD,GAVD;AAWA,SAAOd,OAAP;AACD,CAdM","sourcesContent":["import RequestHandler from \"../../actions/RequestHandler\";\nimport { GET_USERS } from \"../../actions/URLs\";\n\nexport function getUserList(userType = null, cb) {\n  const getType = userType ? GET_USERS + \"/\" + userType : GET_USERS;\n  // return new Promise((resolve, reject) => {\n  RequestHandler.PostRequest(getType, {}, (res, err) => {\n    if (res) cb(res.data.data, null);\n    else cb(null, \"Error\");\n  });\n  // });\n}\n\nexport const parseUserData = function(data) {\n  const newData = new Array();\n  data.forEach(e => {\n    newData.push({\n      id: e._id,\n      firstname: e.firstname,\n      email: e.email,\n      isActive: e.isActive,\n      date: e.createdAt\n    });\n  });\n  return newData;\n};\n\nexport const parseResellerData = function(data) {\n  const newData = new Array();\n  data.forEach(e => {\n    newData.push({\n      id: e._id,\n      firstname: e.firstname,\n      email: e.email,\n      isActive: e.isActive,\n      date: e.createdAt,\n      totallicence: e.totallicence,\n      consumeLicence: e.consumeLicence\n    });\n  });\n  return newData;\n};\n"]},"metadata":{},"sourceType":"module"}