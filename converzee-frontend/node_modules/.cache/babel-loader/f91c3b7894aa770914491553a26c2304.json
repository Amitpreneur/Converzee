{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/Preview.js\";\nimport React, { Component } from \"react\";\nimport \"./Preview.css\";\nimport { parseImgUrl, youtubeUrlParse, vimeoUrlParse } from \"../../../Util\";\nimport Portal from \"../../../comman/Portal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Preview extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.getStyle = () => {\n      const {\n        elements\n      } = this.props.STYLE;\n      const style = {};\n      Object.assign(style, {\n        background: this.getcolor(elements, \"background\")\n      });\n      return style;\n    };\n\n    this.isUrlVideo = url => {\n      if (url.indexOf(\"youtube\") !== -1 || url.indexOf(\"youtu\") !== -1 || url.indexOf(\"vimeo\") !== -1) {\n        return true;\n      }\n\n      return false;\n    };\n  }\n\n  getcolor(element, key) {\n    let color = \"#fff\";\n    element.forEach(value => {\n      if (value.name === key) {\n        color = value.color;\n      }\n    });\n    return color;\n  }\n\n  getVideoURL(url) {\n    return parseImgUrl(url);\n  }\n\n  render() {\n    const video = this.props.video.url || \"\";\n    const style = {}; //this.getStyle();\n\n    const autoPlayvideo = this.props.STYLE.switchElement || false;\n    return /*#__PURE__*/_jsxDEV(Portal, {\n      defaultOpen: true,\n      closeOnEsc: true,\n      closeOnOutsideClick: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-popup\",\n        style: style,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popUpTitlebar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-main-preview\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: \"700px\",\n                  width: \"70%\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: () => {\n                    this.props.closePopup();\n                  },\n                  className: \"popupCloseButton\",\n                  style: {\n                    position: \"relative\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-close\",\n                    style: {\n                      paddingLeft: \"102%\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 19\n                }, this), this.isUrlVideo(video) ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n                  width: \"100%\",\n                  height: \"100%\",\n                  frameborder: \"0\",\n                  allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n                  allowfullscreen: true,\n                  src: \"https://www.youtube.com/embed/\" + youtubeUrlParse(video) + (autoPlayvideo ? \"?autoplay=1\" : \"\"),\n                  frameborder: \"0\",\n                  allowfullscreen: true,\n                  auto: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(\"iframe\", {\n                  width: \"100%\",\n                  height: \"100%\",\n                  frameborder: \"0\",\n                  allowfullscreen: true,\n                  src: \"https://player.vimeo.com/video/\" + vimeoUrlParse(video) + (autoPlayvideo ? \"?autoplay=1\" : \"\"),\n                  frameborder: \"0\",\n                  allowfullscreen: true,\n                  auto: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/Preview.js"],"names":["React","Component","parseImgUrl","youtubeUrlParse","vimeoUrlParse","Portal","Preview","getStyle","elements","props","STYLE","style","Object","assign","background","getcolor","isUrlVideo","url","indexOf","element","key","color","forEach","value","name","getVideoURL","render","video","autoPlayvideo","switchElement","height","width","closePopup","position","paddingLeft"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Preview.css\";\r\nimport { parseImgUrl, youtubeUrlParse, vimeoUrlParse } from \"../../../Util\";\r\nimport Portal from \"../../../comman/Portal\";\r\nexport default class Preview extends Component {\r\n  getStyle = () => {\r\n    const { elements } = this.props.STYLE;\r\n    const style = {};\r\n    Object.assign(style, { background: this.getcolor(elements, \"background\") });\r\n    return style;\r\n  };\r\n  getcolor(element, key) {\r\n    let color = \"#fff\";\r\n    element.forEach((value) => {\r\n      if (value.name === key) {\r\n        color = value.color;\r\n      }\r\n    });\r\n    return color;\r\n  }\r\n  isUrlVideo = (url) => {\r\n    if (url.indexOf(\"youtube\") !== -1 || url.indexOf(\"youtu\") !== -1 || url.indexOf(\"vimeo\") !== -1) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  getVideoURL(url) {\r\n    return parseImgUrl(url);\r\n  }\r\n  render() {\r\n    const video = this.props.video.url || \"\";\r\n    const style = {}; //this.getStyle();\r\n    const autoPlayvideo = this.props.STYLE.switchElement || false;\r\n    return (\r\n      <Portal defaultOpen={true} closeOnEsc={true} closeOnOutsideClick={true}>\r\n        <div className=\"image-popup\" style={style}>\r\n          <div className=\"image-preview\">\r\n            <div className=\"popUpTitlebar\"></div>\r\n            <center>\r\n              <div className=\"image-main-preview\">\r\n                <div style={{ height: \"700px\", width: \"70%\" }}>\r\n                  <div\r\n                    onClick={() => {\r\n                      this.props.closePopup();\r\n                    }}\r\n                    className=\"popupCloseButton\"\r\n                    style={{ position: \"relative\" }}\r\n                  >\r\n                    <i className=\"fa fa-close\" style={{ paddingLeft: \"102%\" }} />\r\n                  </div>\r\n                  {this.isUrlVideo(video) ? (\r\n                    <iframe\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                      frameborder=\"0\"\r\n                      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                      allowfullscreen\r\n                      src={\"https://www.youtube.com/embed/\" + youtubeUrlParse(video) + (autoPlayvideo ? \"?autoplay=1\" : \"\")}\r\n                      frameborder=\"0\"\r\n                      allowfullscreen\r\n                      auto\r\n                    ></iframe>\r\n                  ) : (\r\n                    <iframe\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                      frameborder=\"0\"\r\n                      allowfullscreen\r\n                      src={\"https://player.vimeo.com/video/\" + vimeoUrlParse(video) + (autoPlayvideo ? \"?autoplay=1\" : \"\")}\r\n                      frameborder=\"0\"\r\n                      allowfullscreen\r\n                      auto\r\n                    ></iframe>\r\n                  )}\r\n                </div>\r\n\r\n                {/* <img src={BASE_URL + parseImgUrl(video)} /> */}\r\n              </div>\r\n            </center>\r\n          </div>\r\n        </div>\r\n      </Portal>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}