{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/MobileVibrator/Timer.js\";\nimport React, { Component } from \"react\";\nimport Util from \"../../../Util\";\nimport { Info } from \"../../../comman/Info\";\nexport default class Timer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      firstVib: this.props.firstVib,\n      pause: this.props.pause,\n      secondVib: this.props.secondVib\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      this.props.onChange(1, this.state);\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (Util.isRedirected) {\n      Util.isRedirected = false;\n      const {\n        firstVib,\n        pause,\n        secondVib\n      } = nextProps;\n      this.setState({\n        firstVib,\n        pause,\n        secondVib\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.onChange(1, this.state);\n  }\n\n  render() {\n    const {\n      firstVib,\n      pause,\n      secondVib\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Duration of 1st vibration *\", React.createElement(Info, {\n      text: \"Mobile vibrator intial vibration duration \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"firstVib\",\n      min: \"0\",\n      className: \"form-control\",\n      value: firstVib,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Pause between first and second vibration *\", React.createElement(Info, {\n      text: \"timing between first and second vibration \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"pause\",\n      min: \"0\",\n      className: \"form-control\",\n      value: pause,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Duration of 2nd vibration *\", React.createElement(Info, {\n      text: \"Second vibration duration \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"secondVib\",\n      min: \"0\",\n      className: \"form-control\",\n      value: secondVib,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/MobileVibrator/Timer.js"],"names":["React","Component","Util","Info","Timer","state","firstVib","props","pause","secondVib","onChange","e","setState","target","name","value","componentWillReceiveProps","nextProps","isRedirected","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Util from \"../../../Util\";\nimport { Info } from \"../../../comman/Info\";\nexport default class Timer extends Component {\n  state = {\n    firstVib: this.props.firstVib,\n    pause: this.props.pause,\n    secondVib: this.props.secondVib,\n  };\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n    this.props.onChange(1, this.state);\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (Util.isRedirected) {\n      Util.isRedirected = false;\n      const { firstVib, pause, secondVib } = nextProps;\n      this.setState({ firstVib, pause, secondVib });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.onChange(1, this.state);\n  }\n\n  render() {\n    const { firstVib, pause, secondVib } = this.state;\n    return (\n      <div>\n        <div className=\"form-element\">\n          <div className=\"label-text\">\n            Duration of 1st vibration *<Info text=\"Mobile vibrator intial vibration duration \" />\n          </div>\n          <input type=\"number\" name=\"firstVib\" min=\"0\" className=\"form-control\" value={firstVib} onChange={this.onChange} />\n        </div>\n        <div className=\"form-element\">\n          <div className=\"label-text\">\n            Pause between first and second vibration *<Info text=\"timing between first and second vibration \" />\n          </div>\n          <input type=\"number\" name=\"pause\" min=\"0\" className=\"form-control\" value={pause} onChange={this.onChange} />\n        </div>\n        <div className=\"form-element\">\n          <div className=\"label-text\">\n            Duration of 2nd vibration *<Info text=\"Second vibration duration \" />\n          </div>\n          <input type=\"number\" name=\"secondVib\" min=\"0\" className=\"form-control\" value={secondVib} onChange={this.onChange} />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}