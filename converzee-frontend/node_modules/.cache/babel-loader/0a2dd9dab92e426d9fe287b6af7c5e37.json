{"ast":null,"code":"/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.10.2 (2021-11-17)\n */\n(function () {\n  'use strict';\n\n  var global$1 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n  var getDateFormat = function (editor) {\n    return editor.getParam('insertdatetime_dateformat', editor.translate('%Y-%m-%d'));\n  };\n\n  var getTimeFormat = function (editor) {\n    return editor.getParam('insertdatetime_timeformat', editor.translate('%H:%M:%S'));\n  };\n\n  var getFormats = function (editor) {\n    return editor.getParam('insertdatetime_formats', ['%H:%M:%S', '%Y-%m-%d', '%I:%M:%S %p', '%D']);\n  };\n\n  var getDefaultDateTime = function (editor) {\n    var formats = getFormats(editor);\n    return formats.length > 0 ? formats[0] : getTimeFormat(editor);\n  };\n\n  var shouldInsertTimeElement = function (editor) {\n    return editor.getParam('insertdatetime_element', false);\n  };\n\n  var daysShort = 'Sun Mon Tue Wed Thu Fri Sat Sun'.split(' ');\n  var daysLong = 'Sunday Monday Tuesday Wednesday Thursday Friday Saturday Sunday'.split(' ');\n  var monthsShort = 'Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec'.split(' ');\n  var monthsLong = 'January February March April May June July August September October November December'.split(' ');\n\n  var addZeros = function (value, len) {\n    value = '' + value;\n\n    if (value.length < len) {\n      for (var i = 0; i < len - value.length; i++) {\n        value = '0' + value;\n      }\n    }\n\n    return value;\n  };\n\n  var getDateTime = function (editor, fmt, date) {\n    if (date === void 0) {\n      date = new Date();\n    }\n\n    fmt = fmt.replace('%D', '%m/%d/%Y');\n    fmt = fmt.replace('%r', '%I:%M:%S %p');\n    fmt = fmt.replace('%Y', '' + date.getFullYear());\n    fmt = fmt.replace('%y', '' + date.getYear());\n    fmt = fmt.replace('%m', addZeros(date.getMonth() + 1, 2));\n    fmt = fmt.replace('%d', addZeros(date.getDate(), 2));\n    fmt = fmt.replace('%H', '' + addZeros(date.getHours(), 2));\n    fmt = fmt.replace('%M', '' + addZeros(date.getMinutes(), 2));\n    fmt = fmt.replace('%S', '' + addZeros(date.getSeconds(), 2));\n    fmt = fmt.replace('%I', '' + ((date.getHours() + 11) % 12 + 1));\n    fmt = fmt.replace('%p', '' + (date.getHours() < 12 ? 'AM' : 'PM'));\n    fmt = fmt.replace('%B', '' + editor.translate(monthsLong[date.getMonth()]));\n    fmt = fmt.replace('%b', '' + editor.translate(monthsShort[date.getMonth()]));\n    fmt = fmt.replace('%A', '' + editor.translate(daysLong[date.getDay()]));\n    fmt = fmt.replace('%a', '' + editor.translate(daysShort[date.getDay()]));\n    fmt = fmt.replace('%%', '%');\n    return fmt;\n  };\n\n  var updateElement = function (editor, timeElm, computerTime, userTime) {\n    var newTimeElm = editor.dom.create('time', {\n      datetime: computerTime\n    }, userTime);\n    timeElm.parentNode.insertBefore(newTimeElm, timeElm);\n    editor.dom.remove(timeElm);\n    editor.selection.select(newTimeElm, true);\n    editor.selection.collapse(false);\n  };\n\n  var insertDateTime = function (editor, format) {\n    if (shouldInsertTimeElement(editor)) {\n      var userTime = getDateTime(editor, format);\n      var computerTime = void 0;\n\n      if (/%[HMSIp]/.test(format)) {\n        computerTime = getDateTime(editor, '%Y-%m-%dT%H:%M');\n      } else {\n        computerTime = getDateTime(editor, '%Y-%m-%d');\n      }\n\n      var timeElm = editor.dom.getParent(editor.selection.getStart(), 'time');\n\n      if (timeElm) {\n        updateElement(editor, timeElm, computerTime, userTime);\n      } else {\n        editor.insertContent('<time datetime=\"' + computerTime + '\">' + userTime + '</time>');\n      }\n    } else {\n      editor.insertContent(getDateTime(editor, format));\n    }\n  };\n\n  var register$1 = function (editor) {\n    editor.addCommand('mceInsertDate', function (_ui, value) {\n      insertDateTime(editor, value !== null && value !== void 0 ? value : getDateFormat(editor));\n    });\n    editor.addCommand('mceInsertTime', function (_ui, value) {\n      insertDateTime(editor, value !== null && value !== void 0 ? value : getTimeFormat(editor));\n    });\n  };\n\n  var Cell = function (initial) {\n    var value = initial;\n\n    var get = function () {\n      return value;\n    };\n\n    var set = function (v) {\n      value = v;\n    };\n\n    return {\n      get: get,\n      set: set\n    };\n  };\n\n  var global = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n  var register = function (editor) {\n    var formats = getFormats(editor);\n    var defaultFormat = Cell(getDefaultDateTime(editor));\n\n    var insertDateTime = function (format) {\n      return editor.execCommand('mceInsertDate', false, format);\n    };\n\n    editor.ui.registry.addSplitButton('insertdatetime', {\n      icon: 'insert-time',\n      tooltip: 'Insert date/time',\n      select: function (value) {\n        return value === defaultFormat.get();\n      },\n      fetch: function (done) {\n        done(global.map(formats, function (format) {\n          return {\n            type: 'choiceitem',\n            text: getDateTime(editor, format),\n            value: format\n          };\n        }));\n      },\n      onAction: function (_api) {\n        insertDateTime(defaultFormat.get());\n      },\n      onItemAction: function (_api, value) {\n        defaultFormat.set(value);\n        insertDateTime(value);\n      }\n    });\n\n    var makeMenuItemHandler = function (format) {\n      return function () {\n        defaultFormat.set(format);\n        insertDateTime(format);\n      };\n    };\n\n    editor.ui.registry.addNestedMenuItem('insertdatetime', {\n      icon: 'insert-time',\n      text: 'Date/time',\n      getSubmenuItems: function () {\n        return global.map(formats, function (format) {\n          return {\n            type: 'menuitem',\n            text: getDateTime(editor, format),\n            onAction: makeMenuItemHandler(format)\n          };\n        });\n      }\n    });\n  };\n\n  function Plugin() {\n    global$1.add('insertdatetime', function (editor) {\n      register$1(editor);\n      register(editor);\n    });\n  }\n\n  Plugin();\n})();","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/node_modules/tinymce/plugins/insertdatetime/plugin.js"],"names":["global$1","tinymce","util","Tools","resolve","getDateFormat","editor","getParam","translate","getTimeFormat","getFormats","getDefaultDateTime","formats","length","shouldInsertTimeElement","daysShort","split","daysLong","monthsShort","monthsLong","addZeros","value","len","i","getDateTime","fmt","date","Date","replace","getFullYear","getYear","getMonth","getDate","getHours","getMinutes","getSeconds","getDay","updateElement","timeElm","computerTime","userTime","newTimeElm","dom","create","datetime","parentNode","insertBefore","remove","selection","select","collapse","insertDateTime","format","test","getParent","getStart","insertContent","register$1","addCommand","_ui","Cell","initial","get","set","v","global","register","defaultFormat","execCommand","ui","registry","addSplitButton","icon","tooltip","fetch","done","map","type","text","onAction","_api","onItemAction","makeMenuItemHandler","addNestedMenuItem","getSubmenuItems","Plugin","add"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,aAAY;AACT;;AAEA,MAAIA,QAAQ,GAAGC,OAAO,CAACC,IAAR,CAAaC,KAAb,CAAmBC,OAAnB,CAA2B,uBAA3B,CAAf;;AAEA,MAAIC,aAAa,GAAG,UAAUC,MAAV,EAAkB;AACpC,WAAOA,MAAM,CAACC,QAAP,CAAgB,2BAAhB,EAA6CD,MAAM,CAACE,SAAP,CAAiB,UAAjB,CAA7C,CAAP;AACD,GAFD;;AAGA,MAAIC,aAAa,GAAG,UAAUH,MAAV,EAAkB;AACpC,WAAOA,MAAM,CAACC,QAAP,CAAgB,2BAAhB,EAA6CD,MAAM,CAACE,SAAP,CAAiB,UAAjB,CAA7C,CAAP;AACD,GAFD;;AAGA,MAAIE,UAAU,GAAG,UAAUJ,MAAV,EAAkB;AACjC,WAAOA,MAAM,CAACC,QAAP,CAAgB,wBAAhB,EAA0C,CAC/C,UAD+C,EAE/C,UAF+C,EAG/C,aAH+C,EAI/C,IAJ+C,CAA1C,CAAP;AAMD,GAPD;;AAQA,MAAII,kBAAkB,GAAG,UAAUL,MAAV,EAAkB;AACzC,QAAIM,OAAO,GAAGF,UAAU,CAACJ,MAAD,CAAxB;AACA,WAAOM,OAAO,CAACC,MAAR,GAAiB,CAAjB,GAAqBD,OAAO,CAAC,CAAD,CAA5B,GAAkCH,aAAa,CAACH,MAAD,CAAtD;AACD,GAHD;;AAIA,MAAIQ,uBAAuB,GAAG,UAAUR,MAAV,EAAkB;AAC9C,WAAOA,MAAM,CAACC,QAAP,CAAgB,wBAAhB,EAA0C,KAA1C,CAAP;AACD,GAFD;;AAIA,MAAIQ,SAAS,GAAG,kCAAkCC,KAAlC,CAAwC,GAAxC,CAAhB;AACA,MAAIC,QAAQ,GAAG,kEAAkED,KAAlE,CAAwE,GAAxE,CAAf;AACA,MAAIE,WAAW,GAAG,kDAAkDF,KAAlD,CAAwD,GAAxD,CAAlB;AACA,MAAIG,UAAU,GAAG,wFAAwFH,KAAxF,CAA8F,GAA9F,CAAjB;;AACA,MAAII,QAAQ,GAAG,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AACnCD,IAAAA,KAAK,GAAG,KAAKA,KAAb;;AACA,QAAIA,KAAK,CAACR,MAAN,GAAeS,GAAnB,EAAwB;AACtB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,GAAGD,KAAK,CAACR,MAAhC,EAAwCU,CAAC,EAAzC,EAA6C;AAC3CF,QAAAA,KAAK,GAAG,MAAMA,KAAd;AACD;AACF;;AACD,WAAOA,KAAP;AACD,GARD;;AASA,MAAIG,WAAW,GAAG,UAAUlB,MAAV,EAAkBmB,GAAlB,EAAuBC,IAAvB,EAA6B;AAC7C,QAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;AACnBA,MAAAA,IAAI,GAAG,IAAIC,IAAJ,EAAP;AACD;;AACDF,IAAAA,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,IAAZ,EAAkB,UAAlB,CAAN;AACAH,IAAAA,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,IAAZ,EAAkB,aAAlB,CAAN;AACAH,IAAAA,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,IAAZ,EAAkB,KAAKF,IAAI,CAACG,WAAL,EAAvB,CAAN;AACAJ,IAAAA,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,IAAZ,EAAkB,KAAKF,IAAI,CAACI,OAAL,EAAvB,CAAN;AACAL,IAAAA,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,IAAZ,EAAkBR,QAAQ,CAACM,IAAI,CAACK,QAAL,KAAkB,CAAnB,EAAsB,CAAtB,CAA1B,CAAN;AACAN,IAAAA,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,IAAZ,EAAkBR,QAAQ,CAACM,IAAI,CAACM,OAAL,EAAD,EAAiB,CAAjB,CAA1B,CAAN;AACAP,IAAAA,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,IAAZ,EAAkB,KAAKR,QAAQ,CAACM,IAAI,CAACO,QAAL,EAAD,EAAkB,CAAlB,CAA/B,CAAN;AACAR,IAAAA,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,IAAZ,EAAkB,KAAKR,QAAQ,CAACM,IAAI,CAACQ,UAAL,EAAD,EAAoB,CAApB,CAA/B,CAAN;AACAT,IAAAA,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,IAAZ,EAAkB,KAAKR,QAAQ,CAACM,IAAI,CAACS,UAAL,EAAD,EAAoB,CAApB,CAA/B,CAAN;AACAV,IAAAA,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,IAAZ,EAAkB,MAAM,CAACF,IAAI,CAACO,QAAL,KAAkB,EAAnB,IAAyB,EAAzB,GAA8B,CAApC,CAAlB,CAAN;AACAR,IAAAA,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,IAAZ,EAAkB,MAAMF,IAAI,CAACO,QAAL,KAAkB,EAAlB,GAAuB,IAAvB,GAA8B,IAApC,CAAlB,CAAN;AACAR,IAAAA,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,IAAZ,EAAkB,KAAKtB,MAAM,CAACE,SAAP,CAAiBW,UAAU,CAACO,IAAI,CAACK,QAAL,EAAD,CAA3B,CAAvB,CAAN;AACAN,IAAAA,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,IAAZ,EAAkB,KAAKtB,MAAM,CAACE,SAAP,CAAiBU,WAAW,CAACQ,IAAI,CAACK,QAAL,EAAD,CAA5B,CAAvB,CAAN;AACAN,IAAAA,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,IAAZ,EAAkB,KAAKtB,MAAM,CAACE,SAAP,CAAiBS,QAAQ,CAACS,IAAI,CAACU,MAAL,EAAD,CAAzB,CAAvB,CAAN;AACAX,IAAAA,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,IAAZ,EAAkB,KAAKtB,MAAM,CAACE,SAAP,CAAiBO,SAAS,CAACW,IAAI,CAACU,MAAL,EAAD,CAA1B,CAAvB,CAAN;AACAX,IAAAA,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,IAAZ,EAAkB,GAAlB,CAAN;AACA,WAAOH,GAAP;AACD,GArBD;;AAsBA,MAAIY,aAAa,GAAG,UAAU/B,MAAV,EAAkBgC,OAAlB,EAA2BC,YAA3B,EAAyCC,QAAzC,EAAmD;AACrE,QAAIC,UAAU,GAAGnC,MAAM,CAACoC,GAAP,CAAWC,MAAX,CAAkB,MAAlB,EAA0B;AAAEC,MAAAA,QAAQ,EAAEL;AAAZ,KAA1B,EAAsDC,QAAtD,CAAjB;AACAF,IAAAA,OAAO,CAACO,UAAR,CAAmBC,YAAnB,CAAgCL,UAAhC,EAA4CH,OAA5C;AACAhC,IAAAA,MAAM,CAACoC,GAAP,CAAWK,MAAX,CAAkBT,OAAlB;AACAhC,IAAAA,MAAM,CAAC0C,SAAP,CAAiBC,MAAjB,CAAwBR,UAAxB,EAAoC,IAApC;AACAnC,IAAAA,MAAM,CAAC0C,SAAP,CAAiBE,QAAjB,CAA0B,KAA1B;AACD,GAND;;AAOA,MAAIC,cAAc,GAAG,UAAU7C,MAAV,EAAkB8C,MAAlB,EAA0B;AAC7C,QAAItC,uBAAuB,CAACR,MAAD,CAA3B,EAAqC;AACnC,UAAIkC,QAAQ,GAAGhB,WAAW,CAAClB,MAAD,EAAS8C,MAAT,CAA1B;AACA,UAAIb,YAAY,GAAG,KAAK,CAAxB;;AACA,UAAI,WAAWc,IAAX,CAAgBD,MAAhB,CAAJ,EAA6B;AAC3Bb,QAAAA,YAAY,GAAGf,WAAW,CAAClB,MAAD,EAAS,gBAAT,CAA1B;AACD,OAFD,MAEO;AACLiC,QAAAA,YAAY,GAAGf,WAAW,CAAClB,MAAD,EAAS,UAAT,CAA1B;AACD;;AACD,UAAIgC,OAAO,GAAGhC,MAAM,CAACoC,GAAP,CAAWY,SAAX,CAAqBhD,MAAM,CAAC0C,SAAP,CAAiBO,QAAjB,EAArB,EAAkD,MAAlD,CAAd;;AACA,UAAIjB,OAAJ,EAAa;AACXD,QAAAA,aAAa,CAAC/B,MAAD,EAASgC,OAAT,EAAkBC,YAAlB,EAAgCC,QAAhC,CAAb;AACD,OAFD,MAEO;AACLlC,QAAAA,MAAM,CAACkD,aAAP,CAAqB,qBAAqBjB,YAArB,GAAoC,IAApC,GAA2CC,QAA3C,GAAsD,SAA3E;AACD;AACF,KAdD,MAcO;AACLlC,MAAAA,MAAM,CAACkD,aAAP,CAAqBhC,WAAW,CAAClB,MAAD,EAAS8C,MAAT,CAAhC;AACD;AACF,GAlBD;;AAoBA,MAAIK,UAAU,GAAG,UAAUnD,MAAV,EAAkB;AACjCA,IAAAA,MAAM,CAACoD,UAAP,CAAkB,eAAlB,EAAmC,UAAUC,GAAV,EAAetC,KAAf,EAAsB;AACvD8B,MAAAA,cAAc,CAAC7C,MAAD,EAASe,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAAjC,GAAqCA,KAArC,GAA6ChB,aAAa,CAACC,MAAD,CAAnE,CAAd;AACD,KAFD;AAGAA,IAAAA,MAAM,CAACoD,UAAP,CAAkB,eAAlB,EAAmC,UAAUC,GAAV,EAAetC,KAAf,EAAsB;AACvD8B,MAAAA,cAAc,CAAC7C,MAAD,EAASe,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAAjC,GAAqCA,KAArC,GAA6CZ,aAAa,CAACH,MAAD,CAAnE,CAAd;AACD,KAFD;AAGD,GAPD;;AASA,MAAIsD,IAAI,GAAG,UAAUC,OAAV,EAAmB;AAC5B,QAAIxC,KAAK,GAAGwC,OAAZ;;AACA,QAAIC,GAAG,GAAG,YAAY;AACpB,aAAOzC,KAAP;AACD,KAFD;;AAGA,QAAI0C,GAAG,GAAG,UAAUC,CAAV,EAAa;AACrB3C,MAAAA,KAAK,GAAG2C,CAAR;AACD,KAFD;;AAGA,WAAO;AACLF,MAAAA,GAAG,EAAEA,GADA;AAELC,MAAAA,GAAG,EAAEA;AAFA,KAAP;AAID,GAZD;;AAcA,MAAIE,MAAM,GAAGhE,OAAO,CAACC,IAAR,CAAaC,KAAb,CAAmBC,OAAnB,CAA2B,oBAA3B,CAAb;;AAEA,MAAI8D,QAAQ,GAAG,UAAU5D,MAAV,EAAkB;AAC/B,QAAIM,OAAO,GAAGF,UAAU,CAACJ,MAAD,CAAxB;AACA,QAAI6D,aAAa,GAAGP,IAAI,CAACjD,kBAAkB,CAACL,MAAD,CAAnB,CAAxB;;AACA,QAAI6C,cAAc,GAAG,UAAUC,MAAV,EAAkB;AACrC,aAAO9C,MAAM,CAAC8D,WAAP,CAAmB,eAAnB,EAAoC,KAApC,EAA2ChB,MAA3C,CAAP;AACD,KAFD;;AAGA9C,IAAAA,MAAM,CAAC+D,EAAP,CAAUC,QAAV,CAAmBC,cAAnB,CAAkC,gBAAlC,EAAoD;AAClDC,MAAAA,IAAI,EAAE,aAD4C;AAElDC,MAAAA,OAAO,EAAE,kBAFyC;AAGlDxB,MAAAA,MAAM,EAAE,UAAU5B,KAAV,EAAiB;AACvB,eAAOA,KAAK,KAAK8C,aAAa,CAACL,GAAd,EAAjB;AACD,OALiD;AAMlDY,MAAAA,KAAK,EAAE,UAAUC,IAAV,EAAgB;AACrBA,QAAAA,IAAI,CAACV,MAAM,CAACW,GAAP,CAAWhE,OAAX,EAAoB,UAAUwC,MAAV,EAAkB;AACzC,iBAAO;AACLyB,YAAAA,IAAI,EAAE,YADD;AAELC,YAAAA,IAAI,EAAEtD,WAAW,CAAClB,MAAD,EAAS8C,MAAT,CAFZ;AAGL/B,YAAAA,KAAK,EAAE+B;AAHF,WAAP;AAKD,SANI,CAAD,CAAJ;AAOD,OAdiD;AAelD2B,MAAAA,QAAQ,EAAE,UAAUC,IAAV,EAAgB;AACxB7B,QAAAA,cAAc,CAACgB,aAAa,CAACL,GAAd,EAAD,CAAd;AACD,OAjBiD;AAkBlDmB,MAAAA,YAAY,EAAE,UAAUD,IAAV,EAAgB3D,KAAhB,EAAuB;AACnC8C,QAAAA,aAAa,CAACJ,GAAd,CAAkB1C,KAAlB;AACA8B,QAAAA,cAAc,CAAC9B,KAAD,CAAd;AACD;AArBiD,KAApD;;AAuBA,QAAI6D,mBAAmB,GAAG,UAAU9B,MAAV,EAAkB;AAC1C,aAAO,YAAY;AACjBe,QAAAA,aAAa,CAACJ,GAAd,CAAkBX,MAAlB;AACAD,QAAAA,cAAc,CAACC,MAAD,CAAd;AACD,OAHD;AAID,KALD;;AAMA9C,IAAAA,MAAM,CAAC+D,EAAP,CAAUC,QAAV,CAAmBa,iBAAnB,CAAqC,gBAArC,EAAuD;AACrDX,MAAAA,IAAI,EAAE,aAD+C;AAErDM,MAAAA,IAAI,EAAE,WAF+C;AAGrDM,MAAAA,eAAe,EAAE,YAAY;AAC3B,eAAOnB,MAAM,CAACW,GAAP,CAAWhE,OAAX,EAAoB,UAAUwC,MAAV,EAAkB;AAC3C,iBAAO;AACLyB,YAAAA,IAAI,EAAE,UADD;AAELC,YAAAA,IAAI,EAAEtD,WAAW,CAAClB,MAAD,EAAS8C,MAAT,CAFZ;AAGL2B,YAAAA,QAAQ,EAAEG,mBAAmB,CAAC9B,MAAD;AAHxB,WAAP;AAKD,SANM,CAAP;AAOD;AAXoD,KAAvD;AAaD,GAhDD;;AAkDA,WAASiC,MAAT,GAAmB;AACjBrF,IAAAA,QAAQ,CAACsF,GAAT,CAAa,gBAAb,EAA+B,UAAUhF,MAAV,EAAkB;AAC/CmD,MAAAA,UAAU,CAACnD,MAAD,CAAV;AACA4D,MAAAA,QAAQ,CAAC5D,MAAD,CAAR;AACD,KAHD;AAID;;AAED+E,EAAAA,MAAM;AAET,CA7KA,GAAD","sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.10.2 (2021-11-17)\n */\n(function () {\n    'use strict';\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var getDateFormat = function (editor) {\n      return editor.getParam('insertdatetime_dateformat', editor.translate('%Y-%m-%d'));\n    };\n    var getTimeFormat = function (editor) {\n      return editor.getParam('insertdatetime_timeformat', editor.translate('%H:%M:%S'));\n    };\n    var getFormats = function (editor) {\n      return editor.getParam('insertdatetime_formats', [\n        '%H:%M:%S',\n        '%Y-%m-%d',\n        '%I:%M:%S %p',\n        '%D'\n      ]);\n    };\n    var getDefaultDateTime = function (editor) {\n      var formats = getFormats(editor);\n      return formats.length > 0 ? formats[0] : getTimeFormat(editor);\n    };\n    var shouldInsertTimeElement = function (editor) {\n      return editor.getParam('insertdatetime_element', false);\n    };\n\n    var daysShort = 'Sun Mon Tue Wed Thu Fri Sat Sun'.split(' ');\n    var daysLong = 'Sunday Monday Tuesday Wednesday Thursday Friday Saturday Sunday'.split(' ');\n    var monthsShort = 'Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec'.split(' ');\n    var monthsLong = 'January February March April May June July August September October November December'.split(' ');\n    var addZeros = function (value, len) {\n      value = '' + value;\n      if (value.length < len) {\n        for (var i = 0; i < len - value.length; i++) {\n          value = '0' + value;\n        }\n      }\n      return value;\n    };\n    var getDateTime = function (editor, fmt, date) {\n      if (date === void 0) {\n        date = new Date();\n      }\n      fmt = fmt.replace('%D', '%m/%d/%Y');\n      fmt = fmt.replace('%r', '%I:%M:%S %p');\n      fmt = fmt.replace('%Y', '' + date.getFullYear());\n      fmt = fmt.replace('%y', '' + date.getYear());\n      fmt = fmt.replace('%m', addZeros(date.getMonth() + 1, 2));\n      fmt = fmt.replace('%d', addZeros(date.getDate(), 2));\n      fmt = fmt.replace('%H', '' + addZeros(date.getHours(), 2));\n      fmt = fmt.replace('%M', '' + addZeros(date.getMinutes(), 2));\n      fmt = fmt.replace('%S', '' + addZeros(date.getSeconds(), 2));\n      fmt = fmt.replace('%I', '' + ((date.getHours() + 11) % 12 + 1));\n      fmt = fmt.replace('%p', '' + (date.getHours() < 12 ? 'AM' : 'PM'));\n      fmt = fmt.replace('%B', '' + editor.translate(monthsLong[date.getMonth()]));\n      fmt = fmt.replace('%b', '' + editor.translate(monthsShort[date.getMonth()]));\n      fmt = fmt.replace('%A', '' + editor.translate(daysLong[date.getDay()]));\n      fmt = fmt.replace('%a', '' + editor.translate(daysShort[date.getDay()]));\n      fmt = fmt.replace('%%', '%');\n      return fmt;\n    };\n    var updateElement = function (editor, timeElm, computerTime, userTime) {\n      var newTimeElm = editor.dom.create('time', { datetime: computerTime }, userTime);\n      timeElm.parentNode.insertBefore(newTimeElm, timeElm);\n      editor.dom.remove(timeElm);\n      editor.selection.select(newTimeElm, true);\n      editor.selection.collapse(false);\n    };\n    var insertDateTime = function (editor, format) {\n      if (shouldInsertTimeElement(editor)) {\n        var userTime = getDateTime(editor, format);\n        var computerTime = void 0;\n        if (/%[HMSIp]/.test(format)) {\n          computerTime = getDateTime(editor, '%Y-%m-%dT%H:%M');\n        } else {\n          computerTime = getDateTime(editor, '%Y-%m-%d');\n        }\n        var timeElm = editor.dom.getParent(editor.selection.getStart(), 'time');\n        if (timeElm) {\n          updateElement(editor, timeElm, computerTime, userTime);\n        } else {\n          editor.insertContent('<time datetime=\"' + computerTime + '\">' + userTime + '</time>');\n        }\n      } else {\n        editor.insertContent(getDateTime(editor, format));\n      }\n    };\n\n    var register$1 = function (editor) {\n      editor.addCommand('mceInsertDate', function (_ui, value) {\n        insertDateTime(editor, value !== null && value !== void 0 ? value : getDateFormat(editor));\n      });\n      editor.addCommand('mceInsertTime', function (_ui, value) {\n        insertDateTime(editor, value !== null && value !== void 0 ? value : getTimeFormat(editor));\n      });\n    };\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      return {\n        get: get,\n        set: set\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var register = function (editor) {\n      var formats = getFormats(editor);\n      var defaultFormat = Cell(getDefaultDateTime(editor));\n      var insertDateTime = function (format) {\n        return editor.execCommand('mceInsertDate', false, format);\n      };\n      editor.ui.registry.addSplitButton('insertdatetime', {\n        icon: 'insert-time',\n        tooltip: 'Insert date/time',\n        select: function (value) {\n          return value === defaultFormat.get();\n        },\n        fetch: function (done) {\n          done(global.map(formats, function (format) {\n            return {\n              type: 'choiceitem',\n              text: getDateTime(editor, format),\n              value: format\n            };\n          }));\n        },\n        onAction: function (_api) {\n          insertDateTime(defaultFormat.get());\n        },\n        onItemAction: function (_api, value) {\n          defaultFormat.set(value);\n          insertDateTime(value);\n        }\n      });\n      var makeMenuItemHandler = function (format) {\n        return function () {\n          defaultFormat.set(format);\n          insertDateTime(format);\n        };\n      };\n      editor.ui.registry.addNestedMenuItem('insertdatetime', {\n        icon: 'insert-time',\n        text: 'Date/time',\n        getSubmenuItems: function () {\n          return global.map(formats, function (format) {\n            return {\n              type: 'menuitem',\n              text: getDateTime(editor, format),\n              onAction: makeMenuItemHandler(format)\n            };\n          });\n        }\n      });\n    };\n\n    function Plugin () {\n      global$1.add('insertdatetime', function (editor) {\n        register$1(editor);\n        register(editor);\n      });\n    }\n\n    Plugin();\n\n}());\n"]},"metadata":{},"sourceType":"script"}