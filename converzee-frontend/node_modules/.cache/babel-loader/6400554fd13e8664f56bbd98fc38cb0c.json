{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/subpages/create/Style.js\";\nimport React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport \"react-color-picker/index.css\";\nimport { ColorSelector } from \"../../layout/LayoutSelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nexport default class Style extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      elements: this.props.elements,\n      selected: this.props.selected\n    };\n\n    this.onClickElement = i => {\n      const cases = this.props.case || 1;\n      this.setState({\n        selected: i\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onColorChange = color => {\n      const cases = this.props.case || 1;\n      const {\n        elements,\n        selected\n      } = this.state;\n      elements[selected].color = color.hex;\n      this.setState({\n        elements\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.renderElements = (ele, i) => {\n      const {\n        selected\n      } = this.state;\n      const selectedDiv = selected === i ? \"element-div-active\" : \"\";\n      const selectedText = selected === i ? \"element-text-active\" : \"\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element-list\",\n        onClick: () => this.onClickElement(i),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-list-text \" + selectedText,\n          children: ele.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-list-div \" + selectedDiv,\n          style: {\n            backgroundColor: ele.color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  componentWillUnmount() {\n    const cases = this.props.case || 1;\n    this.props.onChange(cases, this.state);\n  }\n\n  render() {\n    const {\n      elements,\n      selected\n    } = this.state;\n    return (\n      /*#__PURE__*/\n      // <div className=\"row\">\n      //   <div className=\"col-md-6 col-sm-12\">\n      //     <SketchPicker defaultValue=\"#452135\" color={elements[selected].color} onChangeComplete={this.onColorChange} />\n      //   </div>\n      //   <div className=\"col-md-6 col-sm-12\">{elements.map(this.renderElements)}</div>\n      // </div>\n      _jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 col-sm-12 order-sm-2\",\n          children: elements.map((e, i) => /*#__PURE__*/_createElement(ColorSelector, { ...e,\n            selectedIndex: selected,\n            onClick: this.onClickElement,\n            index: i,\n            key: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 13\n            }\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8 col-sm-12\",\n          children: /*#__PURE__*/_jsxDEV(SketchPicker, {\n            defaultValue: \"#452135\",\n            color: elements[selected].color,\n            onChangeComplete: this.onColorChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/subpages/create/Style.js"],"names":["React","Component","SketchPicker","ColorSelector","Style","state","elements","props","selected","onClickElement","i","cases","case","setState","onChange","onColorChange","color","hex","renderElements","ele","selectedDiv","selectedText","text","backgroundColor","componentWillUnmount","render","map","e"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\n\r\nimport \"react-color-picker/index.css\";\r\nimport { ColorSelector } from \"../../layout/LayoutSelector\";\r\nexport default class Style extends Component {\r\n  state = {\r\n    elements: this.props.elements,\r\n    selected: this.props.selected,\r\n  };\r\n\r\n  onClickElement = (i) => {\r\n    const cases = this.props.case || 1;\r\n    this.setState({ selected: i });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const cases = this.props.case || 1;\r\n    this.props.onChange(cases, this.state);\r\n  }\r\n\r\n  onColorChange = (color) => {\r\n    const cases = this.props.case || 1;\r\n    const { elements, selected } = this.state;\r\n    elements[selected].color = color.hex;\r\n    this.setState({ elements });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  renderElements = (ele, i) => {\r\n    const { selected } = this.state;\r\n    const selectedDiv = selected === i ? \"element-div-active\" : \"\";\r\n    const selectedText = selected === i ? \"element-text-active\" : \"\";\r\n    return (\r\n      <div className={\"element-list\"} onClick={() => this.onClickElement(i)}>\r\n        <div className={\"element-list-text \" + selectedText}>{ele.text}</div>\r\n        <div className={\"element-list-div \" + selectedDiv} style={{ backgroundColor: ele.color }}></div>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    const { elements, selected } = this.state;\r\n    return (\r\n      // <div className=\"row\">\r\n      //   <div className=\"col-md-6 col-sm-12\">\r\n      //     <SketchPicker defaultValue=\"#452135\" color={elements[selected].color} onChangeComplete={this.onColorChange} />\r\n      //   </div>\r\n      //   <div className=\"col-md-6 col-sm-12\">{elements.map(this.renderElements)}</div>\r\n      // </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4 col-sm-12 order-sm-2\">\r\n          {elements.map((e, i) => (\r\n            <ColorSelector {...e} selectedIndex={selected} onClick={this.onClickElement} index={i} key={i} />\r\n          ))}\r\n        </div>\r\n        <div className=\"col-md-8 col-sm-12\">\r\n          <SketchPicker defaultValue=\"#452135\" color={elements[selected].color} onChangeComplete={this.onColorChange} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}