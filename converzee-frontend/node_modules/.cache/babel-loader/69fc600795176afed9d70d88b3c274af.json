{"ast":null,"code":"import axios from \"axios\";\nimport { Storage } from \"../utils/Storage\";\nimport { BASE_URL } from \"./URLs\";\nexport default class RequestHandler {}\n\nRequestHandler.getHeader = function () {\n  const token = Storage.get(\"x-access-token\");\n  return {\n    headers: {\n      \"x-access-token\": token\n    }\n  };\n};\n\nRequestHandler.RegRequest = function (URL, data, callBack) {\n  // window.gs.loader(true);\n  const header = RequestHandler.getHeader();\n  const NEW_URL = BASE_URL + URL;\n  axios.post(NEW_URL, data, header).then(res => {\n    if (res.status === 205) {\n      Storage.removeAll();\n      window.gs.setAuth(false);\n    }\n\n    callBack(res, null);\n  }).catch(err => callBack(null, err)).finally(() => {// window.gs.loader(false);\n  });\n};\n\nRequestHandler.PostRequest = function (URL, data, callBack) {\n  window.gs.loader(true);\n  const header = RequestHandler.getHeader();\n  const NEW_URL = BASE_URL + URL;\n\n  try {\n    axios.post(NEW_URL, data, header).then(res => {\n      if (res.status === 205) {\n        Storage.removeAll();\n        window.gs.setAuth(false);\n      }\n\n      callBack(res, null);\n    }).catch(err => {\n      console.log(err);\n      window.gs.toast(\"Something wrong\", {\n        position: \"bottom-right\",\n        autoClose: false,\n        type: window.gs.toast.TYPE.ERROR\n      });\n      callBack(null, err);\n    }).finally(() => {\n      window.gs.loader(false);\n    });\n  } catch (e) {\n    window.gs.loader(false);\n  }\n};\n\nRequestHandler.GETRequest = function (URL, callBack) {\n  window.gs.loader(true);\n  const header = RequestHandler.getHeader();\n  axios.get(BASE_URL + URL, header).then(res => callBack(res, null)).catch(err => callBack(null, err)).finally(() => {\n    window.gs.loader(false);\n  });\n};\n\nRequestHandler.ForgotRequest = function (URL, data, callBack) {\n  const NEW_URL = BASE_URL + URL;\n  axios.post(NEW_URL, data).then(res => {\n    callBack(res, null);\n  }).catch(err => callBack(null, err)).finally(() => {});\n};","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/actions/RequestHandler.js"],"names":["axios","Storage","BASE_URL","RequestHandler","getHeader","token","get","headers","RegRequest","URL","data","callBack","header","NEW_URL","post","then","res","status","removeAll","window","gs","setAuth","catch","err","finally","PostRequest","loader","console","log","toast","position","autoClose","type","TYPE","ERROR","e","GETRequest","ForgotRequest"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { Storage } from \"../utils/Storage\";\nimport { BASE_URL } from \"./URLs\";\nexport default class RequestHandler {\n  static getHeader = function () {\n    const token = Storage.get(\"x-access-token\");\n    return {\n      headers: { \"x-access-token\": token },\n    };\n  };\n\n  static RegRequest = function (URL, data, callBack) {\n    // window.gs.loader(true);\n    const header = RequestHandler.getHeader();\n    const NEW_URL = BASE_URL + URL;\n    axios\n      .post(NEW_URL, data, header)\n      .then((res) => {\n        if (res.status === 205) {\n          Storage.removeAll();\n          window.gs.setAuth(false);\n        }\n        callBack(res, null);\n      })\n      .catch((err) => callBack(null, err))\n      .finally(() => {\n        // window.gs.loader(false);\n      });\n  };\n\n  static PostRequest = function (URL, data, callBack) {\n    window.gs.loader(true);\n    const header = RequestHandler.getHeader();\n    const NEW_URL = BASE_URL + URL;\n    try {\n      axios\n        .post(NEW_URL, data, header)\n        .then((res) => {\n          if (res.status === 205) {\n            Storage.removeAll();\n            window.gs.setAuth(false);\n          }\n          callBack(res, null);\n        })\n        .catch((err) => {\n          console.log(err);\n          window.gs.toast(\"Something wrong\", { position: \"bottom-right\", autoClose: false, type: window.gs.toast.TYPE.ERROR });\n          callBack(null, err);\n        })\n        .finally(() => {\n          window.gs.loader(false);\n        });\n    } catch (e) {\n      window.gs.loader(false);\n    }\n  };\n  static GETRequest = function (URL, callBack) {\n    window.gs.loader(true);\n    const header = RequestHandler.getHeader();\n    axios\n      .get(BASE_URL + URL, header)\n      .then((res) => callBack(res, null))\n      .catch((err) => callBack(null, err))\n      .finally(() => {\n        window.gs.loader(false);\n      });\n  };\n\n  static ForgotRequest = function (URL, data, callBack) {\n    const NEW_URL = BASE_URL + URL;\n    axios\n      .post(NEW_URL, data)\n      .then((res) => {\n        callBack(res, null);\n      })\n      .catch((err) => callBack(null, err))\n      .finally(() => {});\n  };\n}\n"]},"metadata":{},"sourceType":"module"}