{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/TimeCounter.js\";\nimport React from \"react\";\nimport \"./TimeCounter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TimeCounter extends React.Component {\n  constructor() {\n    super();\n    let someDate = new Date();\n    let numberOfDaysToAdd = 6;\n    someDate.setDate(someDate.getDate() + numberOfDaysToAdd);\n    this.state = {\n      time: {},\n      seconds: 5000000\n    };\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n  }\n\n  secondsToTime(secs) {\n    const difference = +(new Date(this.props.date) || new Date().setHours(5)) - +new Date();\n    let timeLeft = {};\n\n    if (difference > 0) {\n      timeLeft = {\n        d: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        h: Math.floor(difference / (1000 * 60 * 60) % 24),\n        m: Math.floor(difference / 1000 / 60 % 60),\n        s: Math.floor(difference / 1000 % 60)\n      };\n    } else {\n      timeLeft = {\n        d: 0,\n        h: 0,\n        m: 0,\n        s: 0\n      };\n    }\n\n    return timeLeft; // let days = Math.floor(secs / (24 * 60 * 60 * 1000));\n    // let divisor_for_hours = secs % 24;\n    // let hours = Math.floor(divisor_for_hours / 60);\n    // let divisor_for_minutes = secs % (60 * 60);\n    // let minutes = Math.floor(divisor_for_minutes / 60);\n    // let divisor_for_seconds = divisor_for_minutes % 60;\n    // let seconds = Math.ceil(divisor_for_seconds);\n    // let obj = {\n    //   d: days,\n    //   h: hours,\n    //   m: minutes,\n    //   s: seconds\n    // };\n    // return obj;\n  }\n\n  componentDidMount() {\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\n    this.setState({\n      time: timeLeftVar\n    });\n    this.startTimer();\n  }\n\n  startTimer() {\n    if (this.timer == 0 && this.state.seconds > 0) {\n      this.timer = setInterval(this.countDown, 1000);\n    }\n  }\n\n  countDown() {\n    // Remove one second, set state so a re-render happens.\n    let seconds = this.state.seconds - 1;\n    this.setState({\n      time: this.secondsToTime(seconds),\n      seconds: seconds\n    }); // Check if we're at zero.\n\n    if (seconds == 0) {\n      clearInterval(this.timer);\n    }\n  }\n\n  render() {\n    const {\n      d,\n      h,\n      m,\n      s\n    } = this.state.time;\n    const {\n      timerType,\n      color,\n      textcolor\n    } = this.props;\n    const textFontcolor = textcolor ? {\n      color: textcolor\n    } : {};\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: timerType == \"BOX\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hellobartimer1-timer\",\n        style: textcolor ? {\n          color: textcolor\n        } : {},\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"blockTimer\",\n          style: {\n            backgroundColor: color,\n            color: textcolor\n          },\n          children: [d, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"blockTimer\",\n          style: {\n            backgroundColor: color,\n            color: textcolor\n          },\n          children: [h, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"blockTimer\",\n          style: {\n            backgroundColor: color,\n            color: textcolor\n          },\n          children: [m, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Minutes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"blockTimer\",\n          style: {\n            backgroundColor: color,\n            color: textcolor\n          },\n          children: [s, \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Seconds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hellobartimer1-timer\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          style: textFontcolor,\n          children: [d, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: textFontcolor,\n          children: [h, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: textFontcolor,\n          children: [m, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Minutes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: textFontcolor,\n          children: [s, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Seconds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/TimeCounter.js"],"names":["React","TimeCounter","Component","constructor","someDate","Date","numberOfDaysToAdd","setDate","getDate","state","time","seconds","timer","startTimer","bind","countDown","secondsToTime","secs","difference","props","date","setHours","timeLeft","d","Math","floor","h","m","s","componentDidMount","timeLeftVar","setState","setInterval","clearInterval","render","timerType","color","textcolor","textFontcolor","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./TimeCounter.css\";\r\nexport default class TimeCounter extends React.Component {\r\n  constructor() {\r\n    super();\r\n    let someDate = new Date();\r\n    let numberOfDaysToAdd = 6;\r\n    someDate.setDate(someDate.getDate() + numberOfDaysToAdd);\r\n    this.state = { time: {}, seconds: 5000000 };\r\n    this.timer = 0;\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.countDown = this.countDown.bind(this);\r\n  }\r\n\r\n  secondsToTime(secs) {\r\n    const difference = +(new Date(this.props.date) || new Date().setHours(5)) - +new Date();\r\n    let timeLeft = {};\r\n    if (difference > 0) {\r\n      timeLeft = {\r\n        d: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n        h: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n        m: Math.floor((difference / 1000 / 60) % 60),\r\n        s: Math.floor((difference / 1000) % 60),\r\n      };\r\n    } else {\r\n      timeLeft = {\r\n        d: 0,\r\n        h: 0,\r\n        m: 0,\r\n        s: 0,\r\n      };\r\n    }\r\n\r\n    return timeLeft;\r\n    // let days = Math.floor(secs / (24 * 60 * 60 * 1000));\r\n    // let divisor_for_hours = secs % 24;\r\n    // let hours = Math.floor(divisor_for_hours / 60);\r\n\r\n    // let divisor_for_minutes = secs % (60 * 60);\r\n    // let minutes = Math.floor(divisor_for_minutes / 60);\r\n\r\n    // let divisor_for_seconds = divisor_for_minutes % 60;\r\n    // let seconds = Math.ceil(divisor_for_seconds);\r\n\r\n    // let obj = {\r\n    //   d: days,\r\n    //   h: hours,\r\n    //   m: minutes,\r\n    //   s: seconds\r\n    // };\r\n    // return obj;\r\n  }\r\n\r\n  componentDidMount() {\r\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\r\n    this.setState({ time: timeLeftVar });\r\n    this.startTimer();\r\n  }\r\n\r\n  startTimer() {\r\n    if (this.timer == 0 && this.state.seconds > 0) {\r\n      this.timer = setInterval(this.countDown, 1000);\r\n    }\r\n  }\r\n\r\n  countDown() {\r\n    // Remove one second, set state so a re-render happens.\r\n    let seconds = this.state.seconds - 1;\r\n    this.setState({\r\n      time: this.secondsToTime(seconds),\r\n      seconds: seconds,\r\n    });\r\n\r\n    // Check if we're at zero.\r\n    if (seconds == 0) {\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { d, h, m, s } = this.state.time;\r\n    const { timerType, color, textcolor } = this.props;\r\n    const textFontcolor = textcolor ? { color: textcolor } : {};\r\n    return (\r\n      <div>\r\n        {/* m: {this.state.time.m} s: {this.state.time.s} */}\r\n        {timerType == \"BOX\" ? (\r\n          <div className=\"hellobartimer1-timer\" style={textcolor ? { color: textcolor } : {}}>\r\n            <li className=\"blockTimer\" style={{ backgroundColor: color, color: textcolor }}>\r\n              {d}<div>Days</div>\r\n            </li>\r\n            <li className=\"blockTimer\" style={{ backgroundColor: color, color: textcolor }}>\r\n              {h}<div>Hours</div>\r\n            </li>\r\n            <li className=\"blockTimer\" style={{ backgroundColor: color, color: textcolor }}>\r\n              {m}<div>Minutes</div>\r\n            </li>\r\n            <li className=\"blockTimer\" style={{ backgroundColor: color, color: textcolor }}>\r\n              {s} <div>Seconds</div>\r\n            </li>\r\n          </div>\r\n        ) : (\r\n          <div className=\"hellobartimer1-timer\">\r\n            <li style={textFontcolor}>\r\n              {d}\r\n              <br />\r\n              <span>Days</span>\r\n            </li>\r\n            <li style={textFontcolor}>\r\n              {h}\r\n              <br />\r\n              <span>Hours</span>\r\n            </li>\r\n            <li style={textFontcolor}>\r\n              {m}\r\n              <br />\r\n              <span>Minutes</span>\r\n            </li>\r\n            <li style={textFontcolor}>\r\n              {s}\r\n              <br />\r\n              <span>Seconds</span>\r\n            </li>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}