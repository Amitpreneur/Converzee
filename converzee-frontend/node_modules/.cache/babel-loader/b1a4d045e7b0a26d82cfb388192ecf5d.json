{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Bonus/EmailTimer.js\";\nimport React, { Component } from \"react\";\nimport { ToolLayout, ButtonsGroup } from \"../../layout/ToolLayout\";\nimport Datetime from \"react-datetime\";\nimport moment from \"moment\";\nimport { ReponsiveImage } from \"../../comman/PreviewAble\";\nimport Style from \"../../subpages/create/Style\";\nimport { SketchPicker } from \"react-color\";\nexport default class EmailTimer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      date: \"\",\n      color: \"\",\n      size: 14,\n      preview: true\n    };\n\n    this.onDropDownChange2 = value => {\n      const newValu = value.format(\"YYYY-MM-DD HH:mm:ss\");\n      this.setState({\n        date: newValu\n      });\n    };\n\n    this.onColorChange = color => {\n      this.setState({\n        color: color.rgb\n      });\n    };\n\n    this.changeFont = e => {\n      this.setState({\n        size: e.target.value\n      });\n    };\n\n    this.renderMain = () => {\n      const {\n        date,\n        color,\n        size\n      } = this.state;\n      return React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"label-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Time*\"), React.createElement(Datetime, {\n        defaultValue: moment(date),\n        onChange: this.onDropDownChange2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"label-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Font Size*\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"cpCode\",\n        className: \"form-control\",\n        value: size,\n        onChange: this.changeFont,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"label-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Font Color*\"), React.createElement(SketchPicker, {\n        defaultValue: \"#452135\",\n        color: color,\n        onChangeComplete: this.onColorChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })));\n    };\n\n    this.onClickSave = () => {\n      let script = \"\";\n      const {\n        date,\n        color,\n        size\n      } = this.state;\n      let newColor = \"\".concat(color.r, \",\").concat(color.g, \",\").concat(color.b);\n      let newtime = date.replace(\" \", \"+\");\n      let url = \"https://spiety.com/emailTimer/gif.php?time=\".concat(newtime, \"&width=640&height=110&boxColor=8B2860&font=BebasNeue&fontColor=\").concat(newColor, \"&fontSize=\").concat(size, \"&xOffset=155&yOffset=70&labelOffsets=1.4,5,8,11\");\n      script = \"<img src='\" + url + \"' />\";\n      window.gs.setScript(script, true);\n    };\n\n    this.togglePreview = () => {\n      this.setState({\n        preview: !this.state.preview\n      }, () => {\n        setTimeout(() => {\n          this.setState({\n            preview: !this.state.preview\n          });\n        }, 1000);\n      });\n    };\n\n    this.renderRight = () => {\n      const {\n        date,\n        color,\n        size,\n        preview\n      } = this.state;\n      if (!preview) return \"\";\n      let newColor = \"\".concat(color.r, \",\").concat(color.g, \",\").concat(color.b);\n      let newtime = date.replace(\" \", \"+\");\n      let url = \"https://spiety.com/emailTimer/gif.php?time=\".concat(newtime, \"&width=640&height=110&boxColor=8B2860&font=BebasNeue&fontColor=\").concat(newColor, \"&fontSize=\").concat(size, \"&xOffset=155&yOffset=70&labelOffsets=1.4,5,8,11\");\n      return React.createElement(\"img\", {\n        style: {\n          height: \"auto\",\n          width: \"100%\",\n          paddingTop: \"51px\"\n        },\n        src: url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n    };\n  }\n\n  componentDidMount() {\n    window.gs.navTitle(\"Email Timer\");\n  }\n\n  render() {\n    return React.createElement(ToolLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-10 toolItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.renderMain()), React.createElement(\"div\", {\n      className: \"col-md-6 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.renderRight()), React.createElement(ButtonsGroup, {\n      backUrl: this.back,\n      preview: this.togglePreview,\n      save: this.onClickSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-1 sideBarButtomPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Bonus/EmailTimer.js"],"names":["React","Component","ToolLayout","ButtonsGroup","Datetime","moment","ReponsiveImage","Style","SketchPicker","EmailTimer","state","date","color","size","preview","onDropDownChange2","value","newValu","format","setState","onColorChange","rgb","changeFont","e","target","renderMain","onClickSave","script","newColor","r","g","b","newtime","replace","url","window","gs","setScript","togglePreview","setTimeout","renderRight","height","width","paddingTop","componentDidMount","navTitle","render","back"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,yBAAzC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,SAASC,YAAT,QAA6B,aAA7B;AAEA,eAAe,MAAMC,UAAN,SAAyBR,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAChDS,KADgD,GACxC;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,OAAO,EAAE;AAJH,KADwC;;AAAA,SAUhDC,iBAVgD,GAU3BC,KAAD,IAAW;AAC7B,YAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAa,qBAAb,CAAhB;AACA,WAAKC,QAAL,CAAc;AAAER,QAAAA,IAAI,EAAEM;AAAR,OAAd;AACD,KAb+C;;AAAA,SAchDG,aAdgD,GAc/BR,KAAD,IAAW;AACzB,WAAKO,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAEA,KAAK,CAACS;AAAf,OAAd;AACD,KAhB+C;;AAAA,SAiBhDC,UAjBgD,GAiBlCC,CAAD,IAAO;AAClB,WAAKJ,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAEU,CAAC,CAACC,MAAF,CAASR;AAAjB,OAAd;AACD,KAnB+C;;AAAA,SAqBhDS,UArBgD,GAqBnC,MAAM;AACjB,YAAM;AAAEd,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA;AAAf,UAAwB,KAAKH,KAAnC;AACA,aACE;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,QAAD;AAAU,QAAA,YAAY,EAAEL,MAAM,CAACM,IAAD,CAA9B;AAAsC,QAAA,QAAQ,EAAE,KAAKI,iBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,QAAxB;AAAiC,QAAA,SAAS,EAAC,cAA3C;AAA0D,QAAA,KAAK,EAAEF,IAAjE;AAAuE,QAAA,QAAQ,EAAE,KAAKS,UAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CALF,EASE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,YAAD;AAAc,QAAA,YAAY,EAAC,SAA3B;AAAqC,QAAA,KAAK,EAAEV,KAA5C;AAAmD,QAAA,gBAAgB,EAAE,KAAKQ,aAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CATF,CADF;AAgBD,KAvC+C;;AAAA,SAyChDM,WAzCgD,GAyClC,MAAM;AAClB,UAAIC,MAAM,GAAG,EAAb;AACA,YAAM;AAAEhB,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA;AAAf,UAAwB,KAAKH,KAAnC;AACA,UAAIkB,QAAQ,aAAMhB,KAAK,CAACiB,CAAZ,cAAiBjB,KAAK,CAACkB,CAAvB,cAA4BlB,KAAK,CAACmB,CAAlC,CAAZ;AACA,UAAIC,OAAO,GAAGrB,IAAI,CAACsB,OAAL,CAAa,GAAb,EAAkB,GAAlB,CAAd;AACA,UAAIC,GAAG,wDAAiDF,OAAjD,4EAA0HJ,QAA1H,uBAA+If,IAA/I,oDAAP;AACAc,MAAAA,MAAM,GAAG,eAAeO,GAAf,GAAqB,MAA9B;AACAC,MAAAA,MAAM,CAACC,EAAP,CAAUC,SAAV,CAAoBV,MAApB,EAA4B,IAA5B;AACD,KAjD+C;;AAAA,SAmDhDW,aAnDgD,GAmDhC,MAAM;AACpB,WAAKnB,QAAL,CAAc;AAAEL,QAAAA,OAAO,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AAAvB,OAAd,EAAgD,MAAM;AACpDyB,QAAAA,UAAU,CAAC,MAAM;AACf,eAAKpB,QAAL,CAAc;AAAEL,YAAAA,OAAO,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AAAvB,WAAd;AACD,SAFS,EAEP,IAFO,CAAV;AAGD,OAJD;AAKD,KAzD+C;;AAAA,SA2DhD0B,WA3DgD,GA2DlC,MAAM;AAClB,YAAM;AAAE7B,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA,IAAf;AAAqBC,QAAAA;AAArB,UAAiC,KAAKJ,KAA5C;AACA,UAAI,CAACI,OAAL,EAAc,OAAO,EAAP;AACd,UAAIc,QAAQ,aAAMhB,KAAK,CAACiB,CAAZ,cAAiBjB,KAAK,CAACkB,CAAvB,cAA4BlB,KAAK,CAACmB,CAAlC,CAAZ;AACA,UAAIC,OAAO,GAAGrB,IAAI,CAACsB,OAAL,CAAa,GAAb,EAAkB,GAAlB,CAAd;AACA,UAAIC,GAAG,wDAAiDF,OAAjD,4EAA0HJ,QAA1H,uBAA+If,IAA/I,oDAAP;AACA,aAAO;AAAK,QAAA,KAAK,EAAE;AAAE4B,UAAAA,MAAM,EAAE,MAAV;AAAkBC,UAAAA,KAAK,EAAE,MAAzB;AAAiCC,UAAAA,UAAU,EAAE;AAA7C,SAAZ;AAAmE,QAAA,GAAG,EAAET,GAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAlE+C;AAAA;;AAOhDU,EAAAA,iBAAiB,GAAG;AAClBT,IAAAA,MAAM,CAACC,EAAP,CAAUS,QAAV,CAAmB,aAAnB;AACD;;AA2DDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKrB,UAAL,EAA3B,CADF,EAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAKe,WAAL,EAAhC,CAFF,EAGE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,KAAKO,IAA5B;AAAkC,MAAA,OAAO,EAAE,KAAKT,aAAhD;AAA+D,MAAA,IAAI,EAAE,KAAKZ,WAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,CADF,EAQE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF,CADF;AAcD;;AAnF+C","sourcesContent":["import React, { Component } from \"react\";\nimport { ToolLayout, ButtonsGroup } from \"../../layout/ToolLayout\";\nimport Datetime from \"react-datetime\";\nimport moment from \"moment\";\nimport { ReponsiveImage } from \"../../comman/PreviewAble\";\nimport Style from \"../../subpages/create/Style\";\nimport { SketchPicker } from \"react-color\";\n\nexport default class EmailTimer extends Component {\n  state = {\n    date: \"\",\n    color: \"\",\n    size: 14,\n    preview: true,\n  };\n  componentDidMount() {\n    window.gs.navTitle(\"Email Timer\");\n  }\n  onDropDownChange2 = (value) => {\n    const newValu = value.format(\"YYYY-MM-DD HH:mm:ss\");\n    this.setState({ date: newValu });\n  };\n  onColorChange = (color) => {\n    this.setState({ color: color.rgb });\n  };\n  changeFont = (e) => {\n    this.setState({ size: e.target.value });\n  };\n\n  renderMain = () => {\n    const { date, color, size } = this.state;\n    return (\n      <div className=\"\">\n        <div className=\"form-element\">\n          <div className=\"label-text\">Time*</div>\n          <Datetime defaultValue={moment(date)} onChange={this.onDropDownChange2} />\n        </div>\n        <div className=\"form-element\">\n          <div className=\"label-text\">Font Size*</div>\n          <input type=\"text\" name=\"cpCode\" className=\"form-control\" value={size} onChange={this.changeFont} />\n        </div>\n        <div className=\"form-element\">\n          <div className=\"label-text\">Font Color*</div>\n          <SketchPicker defaultValue=\"#452135\" color={color} onChangeComplete={this.onColorChange} />\n        </div>\n      </div>\n    );\n  };\n\n  onClickSave = () => {\n    let script = \"\";\n    const { date, color, size } = this.state;\n    let newColor = `${color.r},${color.g},${color.b}`;\n    let newtime = date.replace(\" \", \"+\");\n    let url = `https://spiety.com/emailTimer/gif.php?time=${newtime}&width=640&height=110&boxColor=8B2860&font=BebasNeue&fontColor=${newColor}&fontSize=${size}&xOffset=155&yOffset=70&labelOffsets=1.4,5,8,11`;\n    script = \"<img src='\" + url + \"' />\";\n    window.gs.setScript(script, true);\n  };\n\n  togglePreview = () => {\n    this.setState({ preview: !this.state.preview }, () => {\n      setTimeout(() => {\n        this.setState({ preview: !this.state.preview });\n      }, 1000);\n    });\n  };\n\n  renderRight = () => {\n    const { date, color, size, preview } = this.state;\n    if (!preview) return \"\";\n    let newColor = `${color.r},${color.g},${color.b}`;\n    let newtime = date.replace(\" \", \"+\");\n    let url = `https://spiety.com/emailTimer/gif.php?time=${newtime}&width=640&height=110&boxColor=8B2860&font=BebasNeue&fontColor=${newColor}&fontSize=${size}&xOffset=155&yOffset=70&labelOffsets=1.4,5,8,11`;\n    return <img style={{ height: \"auto\", width: \"100%\", paddingTop: \"51px\" }} src={url} />;\n  };\n\n  render() {\n    return (\n      <ToolLayout>\n        <div className=\"row\">\n          <div className=\"col-10 toolItem\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">{this.renderMain()}</div>\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\n              <ButtonsGroup backUrl={this.back} preview={this.togglePreview} save={this.onClickSave} />\n            </div>\n          </div>\n          <div className=\"col-1 sideBarButtomPanel\">{/* <SideBar layout={this.state.toolData.layout} activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} /> */}</div>\n        </div>\n      </ToolLayout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}