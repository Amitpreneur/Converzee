{"ast":null,"code":"import React,{Component}from\"react\";import DropDown from\"../../../comman/DropDown\";import Datetime from\"react-datetime\";import moment from\"moment\";import Util from\"../../../Util\";import{Info}from\"../../../comman/Info\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default class Timer extends Component{constructor(){super(...arguments);this._timerType=[{label:\"Date and Time Based\",value:\"DATE_AND_TIME_BASED\"},{label:\"Cookie Based\",value:\"COOKIE_BASED\"},{label:\"Ever green\",value:\"EVERGREEN\"}];this._timeZone=Util.getTimeZoneList();this._whenTimeExp=[{label:\"Hide the timer\",value:\"hide\"},{label:\"Redirect the page\",value:\"redirect\"},{label:\"Show static central time as 00:00\",value:\"static\"}];this.state={timerType:this.props.timerType,endDateTime:this.props.endDateTime,timeZone:this.props.timeZone,whenTimeExp:this.props.whenTimeExp};this.onDropDownChange1=value=>{const{cases}=this.props;this.setState({timerType:value});this.props.onChange(cases,this.state);};this.onDropDownChange2=value=>{const{cases}=this.props;const newValu=value.format(\"YYYY-MM-DD HH:mm:ss\");this.setState({endDateTime:newValu});this.props.onChange(cases,this.state);};this.onDropDownChange3=value=>{const{cases}=this.props;this.setState({timeZone:value});this.props.onChange(cases,this.state);};this.onDropDownChange4=value=>{const{cases}=this.props;this.setState({whenTimeExp:value});this.props.onChange(cases,this.state);};this.onChange=e=>{const{cases}=this.props;this.setState({[e.target.name]:e.target.value});this.props.onChange(cases,this.state);};this.onTextChange=ctaText=>{const{cases}=this.props;this.setState({ctaText});this.props.onChange(cases,this.state);};}componentWillUnmount(){const{cases}=this.props;this.props.onChange(cases,this.state);}render(){const{timerType,endDateTime,timeZone,whenTimeExp}=this.state;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"center\",{children:/*#__PURE__*/_jsxs(\"div\",{style:{width:\"80%\",padding:\"20px\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-element\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"label-text\",children:[\"Timer Type*\",/*#__PURE__*/_jsx(Info,{text:\"Select timer type for different action\"})]}),/*#__PURE__*/_jsx(DropDown,{options:this._timerType,onChange:this.onDropDownChange1,value:timerType,class:\"dropdown-style\",style:{width:\"\"}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-element\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"label-text\",children:[\"End Date and Time* \",/*#__PURE__*/_jsx(Info,{text:\"Select your end date & time of timer\"})]}),/*#__PURE__*/_jsx(Datetime,{defaultValue:moment(endDateTime),onChange:this.onDropDownChange2})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-element\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"label-text\",children:[\"Time Zone* \",/*#__PURE__*/_jsx(Info,{text:\"Select timezone to set the timer in particular timezone.\"})]}),/*#__PURE__*/_jsx(DropDown,{options:this._timeZone,onChange:this.onDropDownChange3,value:timeZone,class:\"dropdown-style\",style:{width:\"\"}})]}),timerType!=='EVERGREEN'?/*#__PURE__*/_jsxs(\"div\",{className:\"form-element\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"label-text\",children:[\"When Time Expires* \",/*#__PURE__*/_jsx(Info,{text:\"Select the action when time is up.\"})]}),/*#__PURE__*/_jsx(DropDown,{options:this._whenTimeExp,onChange:this.onDropDownChange4,value:whenTimeExp,class:\"dropdown-style\",style:{width:\"\"}})]}):null]})})});}}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/Timer.js"],"names":["React","Component","DropDown","Datetime","moment","Util","Info","Timer","_timerType","label","value","_timeZone","getTimeZoneList","_whenTimeExp","state","timerType","props","endDateTime","timeZone","whenTimeExp","onDropDownChange1","cases","setState","onChange","onDropDownChange2","newValu","format","onDropDownChange3","onDropDownChange4","e","target","name","onTextChange","ctaText","componentWillUnmount","render","width","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport DropDown from \"../../../comman/DropDown\";\r\nimport Datetime from \"react-datetime\";\r\nimport moment from \"moment\";\r\nimport Util from \"../../../Util\";\r\nimport { Info } from \"../../../comman/Info\";\r\n\r\nexport default class Timer extends Component {\r\n  _timerType = [\r\n    { label: \"Date and Time Based\", value: \"DATE_AND_TIME_BASED\" },\r\n    { label: \"Cookie Based\", value: \"COOKIE_BASED\" },\r\n    { label: \"Ever green\", value: \"EVERGREEN\" },\r\n  ];\r\n  // _endDateTime = [{ label: \"A\", value: \"A\" }, { label: \"B\", value: \"B\" }, { label: \"C\", value: \"C\" }, { label: \"D\", value: \"D\" }];\r\n  _timeZone = Util.getTimeZoneList();\r\n  _whenTimeExp = [\r\n    { label: \"Hide the timer\", value: \"hide\" },\r\n    { label: \"Redirect the page\", value: \"redirect\" },\r\n    { label: \"Show static central time as 00:00\", value: \"static\" },\r\n  ];\r\n\r\n  state = {\r\n    timerType: this.props.timerType,\r\n    endDateTime: this.props.endDateTime,\r\n    timeZone: this.props.timeZone,\r\n    whenTimeExp: this.props.whenTimeExp,\r\n  };\r\n  onDropDownChange1 = (value) => {\r\n    const { cases } = this.props;\r\n    this.setState({ timerType: value });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n  onDropDownChange2 = (value) => {\r\n    const { cases } = this.props;\r\n    const newValu = value.format(\"YYYY-MM-DD HH:mm:ss\");\r\n    this.setState({ endDateTime: newValu });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n  onDropDownChange3 = (value) => {\r\n    const { cases } = this.props;\r\n    this.setState({ timeZone: value });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n  onDropDownChange4 = (value) => {\r\n    const { cases } = this.props;\r\n    this.setState({ whenTimeExp: value });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n  onChange = (e) => {\r\n    const { cases } = this.props;\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n  onTextChange = (ctaText) => {\r\n    const { cases } = this.props;\r\n    this.setState({ ctaText });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const { cases } = this.props;\r\n    this.props.onChange(cases, this.state);\r\n  }\r\n\r\n  render() {\r\n    const { timerType, endDateTime, timeZone, whenTimeExp } = this.state;\r\n    return (\r\n      <div>\r\n        <center>\r\n          <div style={{ width: \"80%\", padding: \"20px\" }}>\r\n            <div className=\"form-element\">\r\n              <div className=\"label-text\">\r\n                Timer Type*\r\n                <Info text=\"Select timer type for different action\" />\r\n              </div>\r\n              <DropDown options={this._timerType} onChange={this.onDropDownChange1} value={timerType} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n            </div>\r\n            <div className=\"form-element\">\r\n              <div className=\"label-text\">\r\n                End Date and Time* <Info text=\"Select your end date & time of timer\" />\r\n              </div>\r\n              <Datetime defaultValue={moment(endDateTime)} onChange={this.onDropDownChange2} />\r\n              {/* <DropDown options={this._endDateTime} onChange={this.onDropDownChange2} value={endDateTime} class=\"dropdown-style\" style={{ width: \"\" }} /> */}\r\n            </div>\r\n            <div className=\"form-element\">\r\n              <div className=\"label-text\">\r\n                Time Zone* <Info text=\"Select timezone to set the timer in particular timezone.\" />\r\n              </div>\r\n              <DropDown options={this._timeZone} onChange={this.onDropDownChange3} value={timeZone} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n            </div>\r\n            {timerType!== 'EVERGREEN' ?<div className=\"form-element\">\r\n              <div className=\"label-text\">\r\n                When Time Expires* <Info text=\"Select the action when time is up.\" />\r\n              </div>\r\n              {/* <input type=\"text\" name=\"whenTimeExp\" className=\"form-control\" value={whenTimeExp} onChange={this.onChange} /> */}\r\n              <DropDown options={this._whenTimeExp} onChange={this.onDropDownChange4} value={whenTimeExp} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n            </div>: null}\r\n          </div>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}