{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/DynamicElements/index.js\";\nimport React, { Component } from \"react\";\nimport \"../../Create.css\";\nimport Code from \"../../../subpages/create/Code\";\nimport RequestHandler from \"../../../../actions/RequestHandler\";\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath } from \"../../../../actions/URLs\";\nimport Text from \"./Text\";\nimport SideBar from \"./SideBar\";\nimport ToolUtil from \"../../../../utils/ToolUtil\";\nimport { DynemicElementModal, DynemicElementModalResponse } from \"../../../utils/Modal\";\nimport Util from \"../../../Util\";\nimport Style from \"./Style\";\nimport { Drawer, Modal } from \"antd\";\nimport SuccessPopup from \"../../../comman/SuccessPopUp\";\nimport { ToolLayout, ButtonsGroup } from \"../../../layout/ToolLayout\";\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\nconst dyelement = {\n  activeTab: 1,\n  STYLE: {\n    elements: [{\n      name: \"background\",\n      text: \"Background Color\",\n      color: \"\"\n    }, {\n      name: \"textColor\",\n      text: \"Text Color\",\n      color: \"\"\n    }],\n    selected: 0,\n    position: \"TL\",\n    fontSize: \"15\"\n  },\n  items: [{\n    icon: \"\",\n    text: \"\",\n    link: \"\"\n  }],\n  CODE: {\n    include: [{\n      type: \"contains\",\n      url: \"\"\n    }],\n    exclude: [{\n      type: \"contains\",\n      url: \"\"\n    }]\n  }\n};\nexport default class DynamicElement extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = dyelement;\n\n    this.onChangeActive = tabIndex => {\n      const {\n        activeTab\n      } = this.state;\n\n      if (activeTab !== tabIndex) {\n        this.setState({\n          activeTab: tabIndex\n        });\n      }\n    };\n\n    this.onUpdate = (index, data) => {\n      switch (index) {\n        case 1:\n          this.setState({\n            STYLE: data\n          });\n          break;\n\n        case 2:\n          this.setState({\n            CODE: data\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.onChange = value => {\n      this.setState(value);\n    };\n\n    this.renderMain = () => {\n      const {\n        activeTab,\n        items,\n        STYLE,\n        CODE\n      } = this.state;\n      let component = null;\n\n      switch (activeTab) {\n        case 1:\n          component = React.createElement(Text, {\n            items: items,\n            onChange: this.onChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          });\n          break;\n\n        case 2:\n          component = React.createElement(Style, Object.assign({}, STYLE, {\n            case: 1,\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }));\n          break;\n\n        case 3:\n          component = React.createElement(Code, Object.assign({}, CODE, {\n            case: 2,\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }));\n          break;\n\n        default:\n          component = React.createElement(Text, {\n            items: items,\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          });\n          break;\n      }\n\n      return component;\n    };\n\n    this.onClickSave = () => {\n      const toolData = this.state;\n\n      if (this.state.CODE.include[0].url !== \"\") {\n        if (!Util.isArrayEqual(dyelement, this.state, 3)) {\n          RequestHandler.PostRequest(SAVE_TOOL, {\n            toolData: DynemicElementModal(toolData)\n          }, (res, err) => {\n            if (res) {\n              if (res.data) {\n                Modal.success({\n                  content: \"Campaign Save SuccessFully\"\n                });\n                setTimeout(() => {\n                  this.props.history.push(\"/Campaigns\");\n                }, 1000);\n              }\n            } else {\n              console.log(err);\n            }\n          });\n        }\n      } else {\n        Modal.warning({\n          content: \"Should Contain atleast one trigger point\"\n        });\n      }\n    };\n\n    this.renderRight = () => {\n      return React.createElement(ReponsiveImage, {\n        isAs: true,\n        url: \"asset/dynamic.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      });\n    };\n\n    this.back = () => {\n      this.props.history.push(\"/Create\");\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match ? this.props.match.params ? this.props.match.params.id : null : null;\n\n    if (id) {\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\n        if (res) {\n          Util.isRedirected = true;\n          const data = DynemicElementModalResponse(res);\n\n          if (data) {\n            this.setState(data, () => {\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\n            });\n          }\n        }\n      });\n    } else {\n      const toolId = 13;\n      this.setState({\n        toolId: toolId,\n        toolName: ToolUtil.getTool(toolId),\n        name: Util.CAMPAIGNS_NAME\n      });\n      Util.RedirectWhenCampaignEmpty(this.props);\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\n    }\n  }\n\n  render() {\n    return React.createElement(ToolLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-10 toolItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.renderMain()), React.createElement(\"div\", {\n      className: \"col-md-6 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.renderRight()), React.createElement(ButtonsGroup, {\n      backUrl: this.back,\n      save: this.onClickSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-1 sideBarButtomPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(SideBar, {\n      activeTab: this.state.activeTab,\n      onChangeActive: this.onChangeActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/DynamicElements/index.js"],"names":["React","Component","Code","RequestHandler","GET_ONE_TOOL","SAVE_TOOL","getPath","Text","SideBar","ToolUtil","DynemicElementModal","DynemicElementModalResponse","Util","Style","Drawer","Modal","SuccessPopup","ToolLayout","ButtonsGroup","ReponsiveImage","dyelement","activeTab","STYLE","elements","name","text","color","selected","position","fontSize","items","icon","link","CODE","include","type","url","exclude","DynamicElement","state","onChangeActive","tabIndex","setState","onUpdate","index","data","onChange","value","renderMain","component","onClickSave","toolData","isArrayEqual","PostRequest","res","err","success","content","setTimeout","props","history","push","console","log","warning","renderRight","back","componentDidMount","id","match","params","isRedirected","window","gs","navTitle","getTool","toolId","toolName","CAMPAIGNS_NAME","RedirectWhenCampaignEmpty","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../Create.css\";\nimport Code from \"../../../subpages/create/Code\";\nimport RequestHandler from \"../../../../actions/RequestHandler\";\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath } from \"../../../../actions/URLs\";\nimport Text from \"./Text\";\nimport SideBar from \"./SideBar\";\nimport ToolUtil from \"../../../../utils/ToolUtil\";\nimport { DynemicElementModal, DynemicElementModalResponse } from \"../../../utils/Modal\";\nimport Util from \"../../../Util\";\nimport Style from \"./Style\";\nimport { Drawer, Modal } from \"antd\";\nimport SuccessPopup from \"../../../comman/SuccessPopUp\";\nimport { ToolLayout, ButtonsGroup } from \"../../../layout/ToolLayout\";\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\n\nconst dyelement = {\n  activeTab: 1,\n  STYLE: {\n    elements: [\n      { name: \"background\", text: \"Background Color\", color: \"\" },\n      { name: \"textColor\", text: \"Text Color\", color: \"\" },\n    ],\n    selected: 0,\n    position: \"TL\",\n    fontSize: \"15\",\n  },\n  items: [{ icon: \"\", text: \"\", link: \"\" }],\n  CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: \"\" }] },\n};\nexport default class DynamicElement extends Component {\n  state = dyelement;\n  componentDidMount() {\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\n    if (id) {\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\n        if (res) {\n          Util.isRedirected = true;\n          const data = DynemicElementModalResponse(res);\n          if (data) {\n            this.setState(data, () => {\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\n            });\n          }\n        }\n      });\n    } else {\n      const toolId = 13;\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\n      Util.RedirectWhenCampaignEmpty(this.props);\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\n    }\n  }\n  onChangeActive = (tabIndex) => {\n    const { activeTab } = this.state;\n    if (activeTab !== tabIndex) {\n      this.setState({ activeTab: tabIndex });\n    }\n  };\n  onUpdate = (index, data) => {\n    switch (index) {\n      case 1:\n        this.setState({ STYLE: data });\n        break;\n      case 2:\n        this.setState({ CODE: data });\n        break;\n      default:\n        break;\n    }\n  };\n\n  onChange = (value) => {\n    this.setState(value);\n  };\n\n  renderMain = () => {\n    const { activeTab, items, STYLE, CODE } = this.state;\n    let component = null;\n    switch (activeTab) {\n      case 1:\n        component = <Text items={items} onChange={this.onChange} />;\n        break;\n      case 2:\n        component = <Style {...STYLE} case={1} onChange={this.onUpdate} />;\n        break;\n      case 3:\n        component = <Code {...CODE} case={2} onChange={this.onUpdate} />;\n        break;\n      default:\n        component = <Text items={items} onChange={this.onUpdate} />;\n        break;\n    }\n    return component;\n  };\n\n  onClickSave = () => {\n    const toolData = this.state;\n    if (this.state.CODE.include[0].url !== \"\") {\n      if (!Util.isArrayEqual(dyelement, this.state, 3)) {\n        RequestHandler.PostRequest(SAVE_TOOL, { toolData: DynemicElementModal(toolData) }, (res, err) => {\n          if (res) {\n            if (res.data) {\n              Modal.success({\n                content: \"Campaign Save SuccessFully\",\n              });\n              setTimeout(() => {\n                this.props.history.push(\"/Campaigns\");\n              }, 1000);\n            }\n          } else {\n            console.log(err);\n          }\n        });\n      }\n    } else {\n      Modal.warning({\n        content: \"Should Contain atleast one trigger point\",\n      });\n    }\n  };\n\n  renderRight = () => {\n    return <ReponsiveImage isAs={true} url={\"asset/dynamic.png\"} />;\n  };\n\n  back = () => {\n    this.props.history.push(\"/Create\");\n  };\n\n  render() {\n    return (\n      <ToolLayout>\n        <div className=\"row\">\n          <div className=\"col-10 toolItem\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">{this.renderMain()}</div>\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\n              <ButtonsGroup backUrl={this.back} save={this.onClickSave} />\n            </div>\n          </div>\n          <div className=\"col-1 sideBarButtomPanel\">\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\n          </div>\n        </div>\n      </ToolLayout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}