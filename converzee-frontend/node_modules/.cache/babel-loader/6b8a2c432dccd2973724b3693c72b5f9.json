{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/Style.js\";\nimport React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport \"react-color-picker/index.css\";\nimport Switch1 from \"../../../comman/Switch\";\nexport default class Style extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      elements: this.props.elements,\n      switchElement: this.props.switchElement,\n      selected: this.props.selected\n    };\n\n    this.onClickElement = i => {\n      const cases = this.props.case || 1;\n      this.setState({\n        selected: i\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onColorChange = color => {\n      const cases = this.props.case || 1;\n      const {\n        elements,\n        selected\n      } = this.state;\n      elements[selected].color = color.hex;\n      this.setState({\n        elements\n      }, () => {\n        this.props.onChange(cases, this.state);\n      });\n    };\n\n    this.onChange = value => {\n      const cases = this.props.case || 1;\n      this.setState({\n        switchElement: value\n      }, () => {\n        this.props.onChange(cases, this.state);\n      });\n    };\n\n    this.renderElements = (ele, i) => {\n      const {\n        selected\n      } = this.state;\n      const selectedDiv = selected === i ? \"element-div-active\" : \"\";\n      const selectedText = selected === i ? \"element-text-active\" : \"\";\n      return React.createElement(\"div\", {\n        className: \"element-list\",\n        onClick: () => this.onClickElement(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"element-list-text \" + selectedText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, ele.text), React.createElement(\"div\", {\n        className: \"element-list-div \" + selectedDiv,\n        style: {\n          backgroundColor: ele.color\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    };\n  }\n\n  componentWillUnmount() {\n    const cases = this.props.case || 1;\n    this.props.onChange(cases, this.state);\n  }\n\n  render() {\n    const {\n      elements,\n      selected,\n      switchElement\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"80%\",\n        padding: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      style: {\n        paddingBottom: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Autoplay*\"), React.createElement(Switch1, {\n      onChange: this.onChange,\n      isChecked: switchElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })))))));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/Style.js"],"names":["React","Component","SketchPicker","Switch1","Style","state","elements","props","switchElement","selected","onClickElement","i","cases","case","setState","onChange","onColorChange","color","hex","value","renderElements","ele","selectedDiv","selectedText","text","backgroundColor","componentWillUnmount","render","width","padding","paddingBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\n\nimport \"react-color-picker/index.css\";\nimport Switch1 from \"../../../comman/Switch\";\nexport default class Style extends Component {\n  state = {\n    elements: this.props.elements,\n    switchElement: this.props.switchElement,\n    selected: this.props.selected\n  };\n\n  onClickElement = i => {\n    const cases = this.props.case || 1;\n    this.setState({ selected: i });\n    this.props.onChange(cases, this.state);\n  };\n\n  componentWillUnmount() {\n    const cases = this.props.case || 1;\n    this.props.onChange(cases, this.state);\n  }\n\n  onColorChange = color => {\n    const cases = this.props.case || 1;\n    const { elements, selected } = this.state;\n    elements[selected].color = color.hex;\n    this.setState({ elements }, () => {\n      this.props.onChange(cases, this.state);\n    });\n  };\n  onChange = value => {\n    const cases = this.props.case || 1;\n    this.setState({ switchElement: value }, () => {\n      this.props.onChange(cases, this.state);\n    });\n  };\n  renderElements = (ele, i) => {\n    const { selected } = this.state;\n    const selectedDiv = selected === i ? \"element-div-active\" : \"\";\n    const selectedText = selected === i ? \"element-text-active\" : \"\";\n    return (\n      <div className={\"element-list\"} onClick={() => this.onClickElement(i)}>\n        <div className={\"element-list-text \" + selectedText}>{ele.text}</div>\n        <div className={\"element-list-div \" + selectedDiv} style={{ backgroundColor: ele.color }}></div>\n      </div>\n    );\n  };\n  render() {\n    const { elements, selected, switchElement } = this.state;\n    return (\n      <div>\n        <center>\n          <div style={{ width: \"80%\", padding: \"20px\" }}>\n            <div className=\"row\">\n              <div className=\"col-md-12\" style={{ paddingBottom: \"5px\" }}>\n                <div className=\"form-element\">\n                  <div className=\"label-text\">Autoplay*</div>\n                  <Switch1 onChange={this.onChange} isChecked={switchElement} />\n                </div>\n              </div>\n              {/* <div className=\"col-md-6\">\n                <SketchPicker defaultValue=\"#452135\" color={elements[selected].color} onChangeComplete={this.onColorChange} />\n              </div> */}\n              {/* <div className=\"col-md-6\">{elements.map(this.renderElements)}</div> */}\n            </div>\n          </div>\n        </center>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}