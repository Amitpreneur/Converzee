{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/TabMessaging/Text.js\";\nimport React, { Component } from \"react\";\nimport Util from \"../../../Util\";\nimport { Info } from \"../../../comman/Info\";\nexport default class Text extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      messages: this.props.messages\n    };\n    this.randomText = [\"Hey \\ud83d\\udc4b, Don't Miss Out\", \"Don’t forget…\", \"Buy Now\"];\n    this.i = 0;\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.addmessage = () => {\n      const {\n        randomMsg,\n        messages\n      } = this.state;\n\n      if (randomMsg !== null && randomMsg !== \"\" && !messages.includes(randomMsg)) {\n        messages.push(randomMsg);\n        this.setState({\n          messages\n        }, () => {\n          const newObj = {\n            messages: this.state.messages\n          };\n          this.props.onChange({\n            messages: newObj\n          });\n        });\n      } else {\n        window.gs.toast(\"Message Should be unique\", {\n          position: \"top-right\",\n          type: window.gs.toast.TYPE.ERROR\n        });\n      }\n    };\n\n    this.renderMsgList = (item, index) => {\n      return React.createElement(\"li\", {\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        key: item + index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, item, React.createElement(\"span\", {\n        class: \"badge badge-primary badge-pill\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        onClick: () => this.removeListItem(index),\n        title: \"Remove\",\n        className: \"fa fa-minus-circle\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })));\n    };\n\n    this.removeListItem = index => {\n      const {\n        messages\n      } = this.state;\n      messages.splice(index, 1);\n      this.setState({\n        messages\n      }, () => {\n        const newObj = this.state.messages;\n        this.props.onChange({\n          messages: newObj\n        });\n      });\n    };\n\n    this.randomClick = () => {\n      if (this.i === this.randomText.length - 1) this.i = 0;else this.i++;\n      this.setState({\n        randomMsg: this.randomText[this.i]\n      });\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (Util.isRedirected) {\n      Util.isRedirected = false;\n      this.setState({\n        messages: nextProps.messages\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.onChange({\n      messages: this.state.messages\n    });\n  }\n\n  render() {\n    const {\n      randomMsg,\n      messages\n    } = this.state;\n    console.log(\"messages\", messages);\n    console.log(\"randomMsg\", randomMsg);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Message*\"), React.createElement(\"div\", {\n      class: \"input-group mb-2 cz_messaging_input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"randomMsg\",\n      value: randomMsg,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"input-group-text\",\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: this.addmessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Add\"))), React.createElement(\"div\", {\n      style: {\n        textAlign: \"end\",\n        cursor: \"pointer\",\n        fontWeight: 600\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.randomClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Random Message\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"list-group list-group-flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, messages.map(this.renderMsgList))));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/TabMessaging/Text.js"],"names":["React","Component","Util","Info","Text","state","messages","props","randomText","i","onChange","e","setState","target","name","value","addmessage","randomMsg","includes","push","newObj","window","gs","toast","position","type","TYPE","ERROR","renderMsgList","item","index","removeListItem","splice","randomClick","length","componentWillReceiveProps","nextProps","isRedirected","componentWillUnmount","render","console","log","cursor","textAlign","fontWeight","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Util from \"../../../Util\";\nimport { Info } from \"../../../comman/Info\";\nexport default class Text extends Component {\n  state = {\n    messages: this.props.messages,\n  };\n\n  randomText = [\"Hey \\ud83d\\udc4b, Don't Miss Out\", \"Don’t forget…\", \"Buy Now\"];\n  i = 0;\n\n  componentWillReceiveProps(nextProps) {\n    if (Util.isRedirected) {\n      Util.isRedirected = false;\n      this.setState({ messages: nextProps.messages });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  addmessage = () => {\n    const { randomMsg, messages } = this.state;\n    if (randomMsg !== null && randomMsg !== \"\" && !messages.includes(randomMsg)) {\n      messages.push(randomMsg);\n      this.setState({ messages }, () => {\n        const newObj = { messages: this.state.messages };\n        this.props.onChange({ messages: newObj });\n      });\n    } else {\n      window.gs.toast(\"Message Should be unique\", { position: \"top-right\", type: window.gs.toast.TYPE.ERROR });\n    }\n  };\n\n  componentWillUnmount() {\n    this.props.onChange({ messages: this.state.messages });\n  }\n\n  renderMsgList = (item, index) => {\n    return (\n      <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={item + index}>\n        {item}\n        <span class=\"badge badge-primary badge-pill\">\n          <i onClick={() => this.removeListItem(index)} title=\"Remove\" className=\"fa fa-minus-circle\" aria-hidden=\"true\" />\n        </span>\n      </li>\n    );\n  };\n\n  removeListItem = (index) => {\n    const { messages } = this.state;\n    messages.splice(index, 1);\n    this.setState({ messages }, () => {\n      const newObj = this.state.messages;\n      this.props.onChange({ messages: newObj });\n    });\n  };\n\n  randomClick = () => {\n    if (this.i === this.randomText.length - 1) this.i = 0;\n    else this.i++;\n    this.setState({ randomMsg: this.randomText[this.i] });\n  };\n\n  render() {\n    const { randomMsg, messages } = this.state;\n    console.log(\"messages\", messages);\n    console.log(\"randomMsg\", randomMsg);\n\n    return (\n      <div>\n        <div class=\"col-auto\">\n          <div className=\"label-text\">Message*</div>\n          <div class=\"input-group mb-2 cz_messaging_input\">\n            <input type=\"text\" className=\"form-control\" name=\"randomMsg\" value={randomMsg} onChange={this.onChange} />\n            <div class=\"input-group-append\">\n              <span class=\"input-group-text\" style={{ cursor: \"pointer\" }} onClick={this.addmessage}>\n                Add\n              </span>\n            </div>\n          </div>\n          <div style={{ textAlign: \"end\", cursor: \"pointer\",fontWeight: 600 }}>\n            <span onClick={this.randomClick}>Random Message</span>\n          </div>\n        </div>\n        <div>\n          <ul className=\"list-group list-group-flush\">{messages.map(this.renderMsgList)}</ul>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}