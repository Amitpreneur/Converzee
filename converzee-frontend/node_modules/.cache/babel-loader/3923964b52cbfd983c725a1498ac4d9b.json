{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/subpages/create/CreateText.js\";\nimport React, { Component } from \"react\";\nimport DropDown from \"../../comman/DropDown\";\nimport Editor from \"../../comman/Editor\";\nexport default class CreateText extends Component {\n  constructor(...args) {\n    super(...args);\n    this.options = [{\n      label: \"Top\",\n      value: \"TOP\"\n    }, {\n      label: \"Bottom\",\n      value: \"BOTTOM\"\n    }];\n    this.state = {\n      campaignName: this.props.campaignName,\n      helloBarPos: this.props.helloBarPos,\n      textBody: this.props.textBody\n    };\n\n    this.onDropDownChange = value => {\n      this.setState({\n        helloBarPos: value\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      this.props.onChange(1, this.state);\n    };\n\n    this.onTextChange = textBody => {\n      this.setState({\n        textBody\n      });\n      this.props.onChange(1, this.state);\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      campaignName,\n      helloBarPos,\n      textBody\n    } = this.state;\n\n    if (campaignName !== nextProps.campaignName || helloBarPos !== nextProps.helloBarPos || textBody !== nextProps.textBody) {\n      this.setState({\n        campaignName: nextProps.campaignName,\n        helloBarPos: nextProps.helloBarPos,\n        textBody: nextProps.textBody\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.onChange(1, this.state);\n  }\n\n  render() {\n    const {\n      campaignName,\n      helloBarPos,\n      textBody\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"80%\",\n        padding: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Campaign Name*\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"campaignName\",\n      className: \"form-control\",\n      value: campaignName,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Hellobar Text*\"), React.createElement(\"div\", {\n      style: {\n        height: \"130px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Editor, {\n      value: textBody,\n      name: \"textBody\",\n      onChange: this.onTextChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Hellobar Position*\"), React.createElement(DropDown, {\n      options: this.options,\n      onChange: this.onDropDownChange,\n      value: helloBarPos,\n      class: \"dropdown-style\",\n      style: {\n        width: \"\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/subpages/create/CreateText.js"],"names":["React","Component","DropDown","Editor","CreateText","options","label","value","state","campaignName","props","helloBarPos","textBody","onDropDownChange","setState","onChange","e","target","name","onTextChange","componentWillReceiveProps","nextProps","componentWillUnmount","render","width","padding","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DropDown from \"../../comman/DropDown\";\nimport Editor from \"../../comman/Editor\";\nexport default class CreateText extends Component {\n  options = [\n    { label: \"Top\", value: \"TOP\" },\n    { label: \"Bottom\", value: \"BOTTOM\" },\n  ];\n  state = {\n    campaignName: this.props.campaignName,\n    helloBarPos: this.props.helloBarPos,\n    textBody: this.props.textBody,\n  };\n  componentWillReceiveProps(nextProps) {\n    const { campaignName, helloBarPos, textBody } = this.state;\n    if (campaignName !== nextProps.campaignName || helloBarPos !== nextProps.helloBarPos || textBody !== nextProps.textBody) {\n      this.setState({ campaignName: nextProps.campaignName, helloBarPos: nextProps.helloBarPos, textBody: nextProps.textBody });\n    }\n  }\n  onDropDownChange = (value) => {\n    this.setState({ helloBarPos: value });\n  };\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n    this.props.onChange(1, this.state);\n  };\n  onTextChange = (textBody) => {\n    this.setState({ textBody });\n    this.props.onChange(1, this.state);\n  };\n\n  componentWillUnmount() {\n    this.props.onChange(1, this.state);\n  }\n\n  render() {\n    const { campaignName, helloBarPos, textBody } = this.state;\n    return (\n      <div>\n        <center>\n          <div style={{ width: \"80%\", padding: \"20px\" }}>\n            <div className=\"form-element\">\n              <div className=\"label-text\">Campaign Name*</div>\n              <input type=\"text\" name=\"campaignName\" className=\"form-control\" value={campaignName} onChange={this.onChange} />\n            </div>\n            <div className=\"form-element\">\n              <div className=\"label-text\">Hellobar Text*</div>\n              <div style={{ height: \"130px\" }}>\n                <Editor value={textBody} name=\"textBody\" onChange={this.onTextChange} />\n              </div>\n            </div>\n            <div className=\"form-element\">\n              <div className=\"label-text\">Hellobar Position*</div>\n              <DropDown options={this.options} onChange={this.onDropDownChange} value={helloBarPos} class=\"dropdown-style\" style={{ width: \"\" }} />\n            </div>\n          </div>\n        </center>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}