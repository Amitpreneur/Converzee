{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ReviewEngin/index.js\";\nimport React, { Component } from \"react\";\nimport SideBar from \"./SideBar\";\nimport ToolUtil from \"../../utils/ToolUtil\";\nimport Util from \"../Util\";\nimport Text from \"./Text\";\nimport { ToolLayout, ButtonsGroup } from \"../layout/ToolLayout\";\nimport { SAVE_TOOL, GET_ONE_TOOL } from \"../../actions/URLs\";\nimport { OTO2 } from \"../../utils/Routes\";\nimport RequestHandler from \"../../actions/RequestHandler\";\nimport { Modal } from \"antd\";\nimport Style from \"./Style\";\nimport Code from \"./Code\";\nimport { OptinFormModalResponse, OptinFormModal } from \"../utils/Modal\";\nimport { Preview } from \"./Preview\";\nimport { ReponsiveImage } from \"../comman/PreviewAble\";\nexport default class ReviewEngin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      toolName: \"\",\n      toolId: \"\",\n      preview: false,\n      _id: null,\n      activeTab: 2,\n      toolData: {\n        style: [{\n          name: \"Background\",\n          id: \"backgound\",\n          value: \"#fff3ea\"\n        }],\n        items: [],\n        position: \"left\"\n      },\n      CODE: {\n        include: [{\n          type: \"contains\",\n          url: \"\"\n        }],\n        exclude: [{\n          type: \"contains\",\n          url: null\n        }]\n      }\n    };\n    this.loaded = false;\n\n    this.onChangeActive = tabIndex => {\n      const {\n        activeTab\n      } = this.state;\n\n      if (activeTab !== tabIndex) {\n        this.setState({\n          activeTab: tabIndex\n        });\n      }\n    };\n\n    this.codeChange = data => {\n      this.setState({\n        CODE: data\n      });\n    };\n\n    this.onUpdate = data => {\n      const {\n        toolData\n      } = this.state;\n      this.setState({\n        toolData: { ...toolData,\n          ...data\n        }\n      });\n    };\n\n    this.renderMain = () => {\n      const {\n        activeTab,\n        toolData,\n        CODE\n      } = this.state;\n      let component = null;\n      if (!this.loaded) return null;\n\n      switch (activeTab) {\n        case 2:\n          component = React.createElement(Text, {\n            items: toolData.items,\n            position: toolData.position,\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          });\n          break;\n\n        case 4:\n          component = React.createElement(Style, {\n            style: toolData.style,\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          });\n          break;\n\n        case 5:\n          component = React.createElement(Code, Object.assign({}, CODE, {\n            onChange: this.codeChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }));\n          break;\n\n        default:\n          component = React.createElement(Text, {\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          });\n          break;\n      }\n\n      return component;\n    };\n\n    this.onClickSave = () => {\n      if (this.state.CODE.include[0].url !== \"\") {\n        RequestHandler.PostRequest(SAVE_TOOL, {\n          toolData: OptinFormModal(this.state)\n        }, (res, err) => {\n          if (res) {\n            const data1 = res.data;\n\n            if (data1.success) {\n              Modal.success({\n                content: data1.message\n              });\n              setTimeout(() => {\n                this.props.history.push(\"/Campaigns\");\n              }, 1000);\n            }\n          }\n        });\n      } else {\n        Modal.warning({\n          content: \"Should Contain atleast one trigger point\"\n        });\n      }\n    };\n\n    this.renderRight = () => {\n      return React.createElement(ReponsiveImage, {\n        isAs: true,\n        url: \"asset/hb3.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      });\n    };\n\n    this.back = () => {\n      this.props.history.push(OTO2);\n    };\n\n    this.togglePreview = () => {\n      const {\n        preview\n      } = this.state;\n      console.log(\"preview\", preview);\n      this.setState({\n        preview: !preview\n      });\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match ? this.props.match.params ? this.props.match.params.id : null : null;\n\n    if (id) {\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\n        this.loaded = true;\n\n        if (res) {\n          Util.isRedirected = true;\n          const data = OptinFormModalResponse(res);\n\n          if (data) {\n            this.setState(data, () => {\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\n            });\n          }\n        }\n      });\n    } else {\n      const toolId = 21;\n      this.loaded = true;\n      this.setState({\n        toolId: toolId,\n        toolName: ToolUtil.getTool(toolId),\n        name: Util.CAMPAIGNS_NAME\n      });\n      Util.RedirectWhenCampaignEmpty(this.props);\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \" \" + \"(\" + Util.CAMPAIGNS_NAME + \")\");\n      delete window.gs.defaultLayout;\n    }\n  }\n\n  render() {\n    const {\n      preview\n    } = this.state;\n    return React.createElement(ToolLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, preview ? React.createElement(Preview, Object.assign({}, this.state, {\n      onClose: this.togglePreview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-10 toolItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.renderMain()), React.createElement(\"div\", {\n      className: \"col-md-6 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, this.renderRight()), React.createElement(ButtonsGroup, {\n      backUrl: this.back,\n      preview: this.togglePreview,\n      save: this.onClickSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-1 sideBarButtomPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(SideBar, {\n      activeTab: this.state.activeTab,\n      onChangeActive: this.onChangeActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ReviewEngin/index.js"],"names":["React","Component","SideBar","ToolUtil","Util","Text","ToolLayout","ButtonsGroup","SAVE_TOOL","GET_ONE_TOOL","OTO2","RequestHandler","Modal","Style","Code","OptinFormModalResponse","OptinFormModal","Preview","ReponsiveImage","ReviewEngin","state","toolName","toolId","preview","_id","activeTab","toolData","style","name","id","value","items","position","CODE","include","type","url","exclude","loaded","onChangeActive","tabIndex","setState","codeChange","data","onUpdate","renderMain","component","onClickSave","PostRequest","res","err","data1","success","content","message","setTimeout","props","history","push","warning","renderRight","back","togglePreview","console","log","componentDidMount","match","params","isRedirected","window","gs","navTitle","getTool","CAMPAIGNS_NAME","RedirectWhenCampaignEmpty","defaultLayout","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SideBar from \"./SideBar\";\nimport ToolUtil from \"../../utils/ToolUtil\";\nimport Util from \"../Util\";\nimport Text from \"./Text\";\nimport { ToolLayout, ButtonsGroup } from \"../layout/ToolLayout\";\nimport { SAVE_TOOL, GET_ONE_TOOL } from \"../../actions/URLs\";\nimport { OTO2 } from \"../../utils/Routes\";\nimport RequestHandler from \"../../actions/RequestHandler\";\nimport { Modal } from \"antd\";\nimport Style from \"./Style\";\nimport Code from \"./Code\";\nimport { OptinFormModalResponse, OptinFormModal } from \"../utils/Modal\";\nimport { Preview } from \"./Preview\";\nimport { ReponsiveImage } from \"../comman/PreviewAble\";\n\nexport default class ReviewEngin extends Component {\n  state = {\n    toolName: \"\",\n    toolId: \"\",\n    preview: false,\n    _id: null,\n    activeTab: 2,\n    toolData: {\n      style: [{ name: \"Background\", id: \"backgound\", value: \"#fff3ea\" }],\n      items: [],\n      position: \"left\",\n    },\n    CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: null }] },\n  };\n  loaded = false;\n\n  componentDidMount() {\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\n    if (id) {\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\n        this.loaded = true;\n        if (res) {\n          Util.isRedirected = true;\n          const data = OptinFormModalResponse(res);\n          if (data) {\n            this.setState(data, () => {\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\n            });\n          }\n        }\n      });\n    } else {\n      const toolId = 21;\n      this.loaded = true;\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\n      Util.RedirectWhenCampaignEmpty(this.props);\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \" \" + \"(\" + Util.CAMPAIGNS_NAME + \")\");\n      delete window.gs.defaultLayout;\n    }\n  }\n\n  onChangeActive = (tabIndex) => {\n    const { activeTab } = this.state;\n    if (activeTab !== tabIndex) {\n      this.setState({ activeTab: tabIndex });\n    }\n  };\n\n  codeChange = (data) => {\n    this.setState({ CODE: data });\n  };\n\n  onUpdate = (data) => {\n    const { toolData } = this.state;\n    this.setState({ toolData: { ...toolData, ...data } });\n  };\n\n  renderMain = () => {\n    const { activeTab, toolData, CODE } = this.state;\n    let component = null;\n    if (!this.loaded) return null;\n    switch (activeTab) {\n      case 2:\n        component = <Text items={toolData.items} position={toolData.position} onChange={this.onUpdate} />;\n        break;\n      case 4:\n        component = <Style style={toolData.style} onChange={this.onUpdate} />;\n        break;\n      case 5:\n        component = <Code {...CODE} onChange={this.codeChange} />;\n        break;\n      default:\n        component = <Text onChange={this.onUpdate} />;\n        break;\n    }\n    return component;\n  };\n\n  onClickSave = () => {\n    if (this.state.CODE.include[0].url !== \"\") {\n      RequestHandler.PostRequest(SAVE_TOOL, { toolData: OptinFormModal(this.state) }, (res, err) => {\n        if (res) {\n          const data1 = res.data;\n          if (data1.success) {\n            Modal.success({\n              content: data1.message,\n            });\n            setTimeout(() => {\n              this.props.history.push(\"/Campaigns\");\n            }, 1000);\n          }\n        }\n      });\n    } else {\n      Modal.warning({\n        content: \"Should Contain atleast one trigger point\",\n      });\n    }\n  };\n\n  renderRight = () => {\n    return <ReponsiveImage isAs={true} url={\"asset/hb3.png\"} />;\n  };\n\n  back = () => {\n    this.props.history.push(OTO2);\n  };\n\n  togglePreview = () => {\n    const { preview } = this.state;\n    console.log(\"preview\", preview);\n    this.setState({ preview: !preview });\n  };\n\n  render() {\n    const { preview } = this.state;\n    return (\n      <ToolLayout>\n        {preview ? <Preview {...this.state} onClose={this.togglePreview} /> : null}\n        <div className=\"row\">\n          <div className=\"col-10 toolItem\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">{this.renderMain()}</div>\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\n              <ButtonsGroup backUrl={this.back} preview={this.togglePreview} save={this.onClickSave} />\n            </div>\n          </div>\n          <div className=\"col-1 sideBarButtomPanel\">\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\n          </div>\n        </div>\n      </ToolLayout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}