{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/Style.js\";\nimport React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport \"react-color-picker/index.css\";\nimport { ColorSelector } from \"../../../layout/LayoutSelector\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Style extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      elements: this.props.elements,\n      selected: this.props.selected,\n      layout: this.props.layout\n    };\n\n    this.onClickElement = i => {\n      const {\n        cases\n      } = this.props;\n      this.setState({\n        selected: i\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onColorChange = color => {\n      const {\n        cases\n      } = this.props;\n      const {\n        elements,\n        selected\n      } = this.state;\n      elements[selected].color = color.hex;\n      this.setState({\n        elements\n      });\n      this.props.onChange(cases, this.state);\n    };\n  }\n\n  componentWillUnmount() {\n    const {\n      cases\n    } = this.props;\n    this.props.onChange(cases, this.state);\n  }\n\n  render() {\n    const {\n      elements,\n      selected,\n      layout\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: elements.map((e, i) => {\n          return layout === 1 && e.name !== \"highlightCTA\" || layout !== 1 ? /*#__PURE__*/_createElement(ColorSelector, { ...e,\n            selectedIndex: selected,\n            onClick: this.onClickElement,\n            index: i,\n            key: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 86\n            }\n          }) : null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8\",\n        children: /*#__PURE__*/_jsxDEV(SketchPicker, {\n          defaultValue: \"#452135\",\n          color: elements[selected].color,\n          onChangeComplete: this.onColorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/Style.js"],"names":["React","Component","SketchPicker","ColorSelector","Style","state","elements","props","selected","layout","onClickElement","i","cases","setState","onChange","onColorChange","color","hex","componentWillUnmount","render","map","e","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAO,8BAAP;AACA,SAASC,aAAT,QAA8B,gCAA9B;;;AACA,eAAe,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC3CI,KAD2C,GACnC;AACNC,MAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWD,QADf;AAENE,MAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAFf;AAGNC,MAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE;AAHb,KADmC;;AAAA,SAO3CC,cAP2C,GAOzBC,CAAD,IAAO;AACtB,YAAM;AAAEC,QAAAA;AAAF,UAAY,KAAKL,KAAvB;AACA,WAAKM,QAAL,CAAc;AAAEL,QAAAA,QAAQ,EAAEG;AAAZ,OAAd;AACA,WAAKJ,KAAL,CAAWO,QAAX,CAAoBF,KAApB,EAA2B,KAAKP,KAAhC;AACD,KAX0C;;AAAA,SAkB3CU,aAlB2C,GAkB1BC,KAAD,IAAW;AACzB,YAAM;AAAEJ,QAAAA;AAAF,UAAY,KAAKL,KAAvB;AACA,YAAM;AAAED,QAAAA,QAAF;AAAYE,QAAAA;AAAZ,UAAyB,KAAKH,KAApC;AACAC,MAAAA,QAAQ,CAACE,QAAD,CAAR,CAAmBQ,KAAnB,GAA2BA,KAAK,CAACC,GAAjC;AACA,WAAKJ,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACA,WAAKC,KAAL,CAAWO,QAAX,CAAoBF,KAApB,EAA2B,KAAKP,KAAhC;AACD,KAxB0C;AAAA;;AAa3Ca,EAAAA,oBAAoB,GAAG;AACrB,UAAM;AAAEN,MAAAA;AAAF,QAAY,KAAKL,KAAvB;AACA,SAAKA,KAAL,CAAWO,QAAX,CAAoBF,KAApB,EAA2B,KAAKP,KAAhC;AACD;;AAUDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA,QAAF;AAAYE,MAAAA,QAAZ;AAAsBC,MAAAA;AAAtB,QAAiC,KAAKJ,KAA5C;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBACGC,QAAQ,CAACc,GAAT,CAAa,CAACC,CAAD,EAAIV,CAAJ,KAAU;AACpB,iBAASF,MAAM,KAAK,CAAX,IAAgBY,CAAC,CAACC,IAAF,KAAW,cAA5B,IAA+Cb,MAAM,KAAK,CAA1D,gBAA+D,eAAC,aAAD,OAAmBY,CAAnB;AAAsB,YAAA,aAAa,EAAEb,QAArC;AAA+C,YAAA,OAAO,EAAE,KAAKE,cAA7D;AAA6E,YAAA,KAAK,EAAEC,CAApF;AAAuF,YAAA,GAAG,EAAEA,CAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA/D,GAAmK,IAA3K;AACH,SAFA;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,YAAY,EAAC,SAA3B;AAAqC,UAAA,KAAK,EAAEL,QAAQ,CAACE,QAAD,CAAR,CAAmBQ,KAA/D;AAAsE,UAAA,gBAAgB,EAAE,KAAKD;AAA7F;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAzC0C","sourcesContent":["import React, { Component } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport \"react-color-picker/index.css\";\r\nimport { ColorSelector } from \"../../../layout/LayoutSelector\";\r\nexport default class Style extends Component {\r\n  state = {\r\n    elements: this.props.elements,\r\n    selected: this.props.selected,\r\n    layout: this.props.layout,\r\n  };\r\n\r\n  onClickElement = (i) => {\r\n    const { cases } = this.props;\r\n    this.setState({ selected: i });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const { cases } = this.props;\r\n    this.props.onChange(cases, this.state);\r\n  }\r\n\r\n  onColorChange = (color) => {\r\n    const { cases } = this.props;\r\n    const { elements, selected } = this.state;\r\n    elements[selected].color = color.hex;\r\n    this.setState({ elements });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  render() {\r\n    const { elements, selected, layout } = this.state;\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-4\">\r\n          {elements.map((e, i) => {\r\n              return ((layout === 1 && e.name !== \"highlightCTA\") || layout !== 1  ? <ColorSelector {...e} selectedIndex={selected} onClick={this.onClickElement} index={i} key={i} /> : null)\r\n          }\r\n          )}\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <SketchPicker defaultValue=\"#452135\" color={elements[selected].color} onChangeComplete={this.onColorChange} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}