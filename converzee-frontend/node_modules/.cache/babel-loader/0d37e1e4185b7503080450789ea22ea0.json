{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/GeoRedirection/Redirection.js\";\nimport React, { Component } from \"react\";\nimport DropDown from \"../../../comman/DropDown\";\nimport UrlInput from \"../../../comman/UrlInput\";\nimport Util, { getCountryList } from \"../../../Util\";\nimport { Info } from \"../../../comman/Info\";\nexport default class Code extends Component {\n  constructor(...args) {\n    super(...args);\n    this.options = getCountryList();\n    this.state = {\n      redirection: this.props.redirection\n    };\n\n    this.onDropDownChange = (value, index) => {\n      const {\n        redirection\n      } = this.state;\n      redirection[index].country = value;\n      this.setState({\n        redirection\n      });\n    };\n\n    this.onItemChange = (index, e) => {\n      const cases = this.props.case || 1;\n      let {\n        redirection\n      } = this.state;\n      const value = e.target.value;\n      console.log(value);\n      redirection[index].redirectUrl = value;\n      this.setState({\n        redirection\n      });\n      this.props.onChange(cases, this.state.redirection);\n    };\n\n    this.onAddClick = typ => {\n      const cases = this.props.case || 1;\n      const {\n        redirection\n      } = this.state;\n      redirection.push({\n        country: \"\",\n        redirectUrl: \"\"\n      });\n      this.setState({\n        redirection\n      });\n      this.props.onChange(cases, this.state.redirection);\n    };\n\n    this.onRemoveClick = (typ, index) => {\n      const cases = this.props.case || 1;\n      const redirection = this.state.redirection || [\"\"];\n      redirection.splice(index, 1);\n      this.setState({\n        redirection\n      });\n      this.props.onChange(cases, this.state.redirection);\n    };\n\n    this.renderItems = (item, index) => {\n      const redirection = this.state.redirection;\n      const props = {\n        value: item.country,\n        value1: item.redirectUrl,\n        onChange: this.onItemChange,\n        index,\n        size: redirection.length,\n        onAddClick: this.onAddClick,\n        onRemoveClick: this.onRemoveClick\n      };\n      return React.createElement(\"div\", {\n        className: \"col-12\",\n        style: {\n          display: \"flex\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"col-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(DropDown, {\n        options: this.options,\n        value: item.country,\n        index: index,\n        onChange: e => this.onDropDownChange(e, index),\n        class: \"dropdown-style\",\n        style: {\n          width: \"\"\n        },\n        disable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"col-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(TextInput, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }))));\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (Util.isRedirected) {\n      Util.isRedirected = false;\n      this.setState({\n        redirection: nextProps.redirection\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const cases = this.props.case || 1;\n    this.props.onChange(cases, this.state.redirection);\n  }\n\n  render() {\n    const redirection = this.state.redirection || [\"\"];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"URL Settings*\", React.createElement(Info, {\n      text: \"Enter Redirection URL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, redirection.map(this.renderItems), React.createElement(\"div\", {\n      class: \"w-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst TextInput = props => {\n  return React.createElement(\"div\", {\n    className: \"code-input-block \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(UrlInput, {\n    value: props.value1,\n    onChange: e => props.onChange(props.index, e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"code-plusIcon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, props.size - 1 === props.index ? React.createElement(\"i\", {\n    onClick: () => props.onAddClick(props.typ),\n    className: \"fa fa-plus-circle\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }) : React.createElement(\"i\", {\n    onClick: () => props.onRemoveClick(props.typ, props.index),\n    className: \"fa fa-minus-circle\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/GeoRedirection/Redirection.js"],"names":["React","Component","DropDown","UrlInput","Util","getCountryList","Info","Code","options","state","redirection","props","onDropDownChange","value","index","country","setState","onItemChange","e","cases","case","target","console","log","redirectUrl","onChange","onAddClick","typ","push","onRemoveClick","splice","renderItems","item","value1","size","length","display","width","componentWillReceiveProps","nextProps","isRedirected","componentWillUnmount","render","map","TextInput"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DropDown from \"../../../comman/DropDown\";\nimport UrlInput from \"../../../comman/UrlInput\";\nimport Util, { getCountryList } from \"../../../Util\";\nimport { Info } from \"../../../comman/Info\";\nexport default class Code extends Component {\n  options = getCountryList();\n  state = {\n    redirection: this.props.redirection,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (Util.isRedirected) {\n      Util.isRedirected = false;\n      this.setState({ redirection: nextProps.redirection });\n    }\n  }\n\n  onDropDownChange = (value, index) => {\n    const { redirection } = this.state;\n    redirection[index].country = value;\n    this.setState({ redirection });\n  };\n\n  componentWillUnmount() {\n    const cases = this.props.case || 1;\n    this.props.onChange(cases, this.state.redirection);\n  }\n\n  onItemChange = (index, e) => {\n    const cases = this.props.case || 1;\n    let { redirection } = this.state;\n    const value = e.target.value;\n    console.log(value);\n    redirection[index].redirectUrl = value;\n    this.setState({ redirection });\n    this.props.onChange(cases, this.state.redirection);\n  };\n\n  onAddClick = (typ) => {\n    const cases = this.props.case || 1;\n    const { redirection } = this.state;\n    redirection.push({ country: \"\", redirectUrl: \"\" });\n    this.setState({ redirection });\n    this.props.onChange(cases, this.state.redirection);\n  };\n\n  onRemoveClick = (typ, index) => {\n    const cases = this.props.case || 1;\n    const redirection = this.state.redirection || [\"\"];\n    redirection.splice(index, 1);\n    this.setState({ redirection });\n    this.props.onChange(cases, this.state.redirection);\n  };\n\n  renderItems = (item, index) => {\n    const redirection = this.state.redirection;\n    const props = {\n      value: item.country,\n      value1: item.redirectUrl,\n      onChange: this.onItemChange,\n      index,\n      size: redirection.length,\n      onAddClick: this.onAddClick,\n      onRemoveClick: this.onRemoveClick,\n    };\n    return (\n      <div className=\"col-12\" style={{ display: \"flex\" }}>\n        <div class=\"col-4\">\n          <DropDown options={this.options} value={item.country} index={index} onChange={(e) => this.onDropDownChange(e, index)} class=\"dropdown-style\" style={{ width: \"\" }} disable={false} />\n        </div>\n        <div class=\"col-8\">\n          <TextInput {...props} />\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    const redirection = this.state.redirection || [\"\"];\n    return (\n      <div>\n        <div className=\"label-text\">\n          URL Settings*\n          <Info text=\"Enter Redirection URL\" />\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            {redirection.map(this.renderItems)}\n            <div class=\"w-100\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst TextInput = (props) => {\n  return (\n    <div className=\"code-input-block \">\n      <UrlInput value={props.value1} onChange={(e) => props.onChange(props.index, e)} />\n      <div className=\"code-plusIcon\">\n        {props.size - 1 === props.index ? (\n          <i onClick={() => props.onAddClick(props.typ)} className=\"fa fa-plus-circle\" aria-hidden=\"true\" />\n        ) : (\n          <i onClick={() => props.onRemoveClick(props.typ, props.index)} className=\"fa fa-minus-circle\" aria-hidden=\"true\" />\n        )}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}