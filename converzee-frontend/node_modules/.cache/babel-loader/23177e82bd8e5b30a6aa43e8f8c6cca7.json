{"ast":null,"code":"/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.10.2 (2021-11-17)\n */\n(function () {\n  'use strict';\n\n  var global$1 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n  var getKeyboardSpaces = function (editor) {\n    var spaces = editor.getParam('nonbreaking_force_tab', 0);\n\n    if (typeof spaces === 'boolean') {\n      return spaces === true ? 3 : 0;\n    } else {\n      return spaces;\n    }\n  };\n\n  var wrapNbsps = function (editor) {\n    return editor.getParam('nonbreaking_wrap', true, 'boolean');\n  };\n\n  var stringRepeat = function (string, repeats) {\n    var str = '';\n\n    for (var index = 0; index < repeats; index++) {\n      str += string;\n    }\n\n    return str;\n  };\n\n  var isVisualCharsEnabled = function (editor) {\n    return editor.plugins.visualchars ? editor.plugins.visualchars.isEnabled() : false;\n  };\n\n  var insertNbsp = function (editor, times) {\n    var classes = function () {\n      return isVisualCharsEnabled(editor) ? 'mce-nbsp-wrap mce-nbsp' : 'mce-nbsp-wrap';\n    };\n\n    var nbspSpan = function () {\n      return '<span class=\"' + classes() + '\" contenteditable=\"false\">' + stringRepeat('&nbsp;', times) + '</span>';\n    };\n\n    var shouldWrap = wrapNbsps(editor);\n    var html = shouldWrap || editor.plugins.visualchars ? nbspSpan() : stringRepeat('&nbsp;', times);\n    editor.undoManager.transact(function () {\n      return editor.insertContent(html);\n    });\n  };\n\n  var register$1 = function (editor) {\n    editor.addCommand('mceNonBreaking', function () {\n      insertNbsp(editor, 1);\n    });\n  };\n\n  var global = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n  var setup = function (editor) {\n    var spaces = getKeyboardSpaces(editor);\n\n    if (spaces > 0) {\n      editor.on('keydown', function (e) {\n        if (e.keyCode === global.TAB && !e.isDefaultPrevented()) {\n          if (e.shiftKey) {\n            return;\n          }\n\n          e.preventDefault();\n          e.stopImmediatePropagation();\n          insertNbsp(editor, spaces);\n        }\n      });\n    }\n  };\n\n  var register = function (editor) {\n    var onAction = function () {\n      return editor.execCommand('mceNonBreaking');\n    };\n\n    editor.ui.registry.addButton('nonbreaking', {\n      icon: 'non-breaking',\n      tooltip: 'Nonbreaking space',\n      onAction: onAction\n    });\n    editor.ui.registry.addMenuItem('nonbreaking', {\n      icon: 'non-breaking',\n      text: 'Nonbreaking space',\n      onAction: onAction\n    });\n  };\n\n  function Plugin() {\n    global$1.add('nonbreaking', function (editor) {\n      register$1(editor);\n      register(editor);\n      setup(editor);\n    });\n  }\n\n  Plugin();\n})();","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/node_modules/tinymce/plugins/nonbreaking/plugin.js"],"names":["global$1","tinymce","util","Tools","resolve","getKeyboardSpaces","editor","spaces","getParam","wrapNbsps","stringRepeat","string","repeats","str","index","isVisualCharsEnabled","plugins","visualchars","isEnabled","insertNbsp","times","classes","nbspSpan","shouldWrap","html","undoManager","transact","insertContent","register$1","addCommand","global","setup","on","e","keyCode","TAB","isDefaultPrevented","shiftKey","preventDefault","stopImmediatePropagation","register","onAction","execCommand","ui","registry","addButton","icon","tooltip","addMenuItem","text","Plugin","add"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.10.2 (2021-11-17)\n */\n(function () {\n    'use strict';\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var getKeyboardSpaces = function (editor) {\n      var spaces = editor.getParam('nonbreaking_force_tab', 0);\n      if (typeof spaces === 'boolean') {\n        return spaces === true ? 3 : 0;\n      } else {\n        return spaces;\n      }\n    };\n    var wrapNbsps = function (editor) {\n      return editor.getParam('nonbreaking_wrap', true, 'boolean');\n    };\n\n    var stringRepeat = function (string, repeats) {\n      var str = '';\n      for (var index = 0; index < repeats; index++) {\n        str += string;\n      }\n      return str;\n    };\n    var isVisualCharsEnabled = function (editor) {\n      return editor.plugins.visualchars ? editor.plugins.visualchars.isEnabled() : false;\n    };\n    var insertNbsp = function (editor, times) {\n      var classes = function () {\n        return isVisualCharsEnabled(editor) ? 'mce-nbsp-wrap mce-nbsp' : 'mce-nbsp-wrap';\n      };\n      var nbspSpan = function () {\n        return '<span class=\"' + classes() + '\" contenteditable=\"false\">' + stringRepeat('&nbsp;', times) + '</span>';\n      };\n      var shouldWrap = wrapNbsps(editor);\n      var html = shouldWrap || editor.plugins.visualchars ? nbspSpan() : stringRepeat('&nbsp;', times);\n      editor.undoManager.transact(function () {\n        return editor.insertContent(html);\n      });\n    };\n\n    var register$1 = function (editor) {\n      editor.addCommand('mceNonBreaking', function () {\n        insertNbsp(editor, 1);\n      });\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    var setup = function (editor) {\n      var spaces = getKeyboardSpaces(editor);\n      if (spaces > 0) {\n        editor.on('keydown', function (e) {\n          if (e.keyCode === global.TAB && !e.isDefaultPrevented()) {\n            if (e.shiftKey) {\n              return;\n            }\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            insertNbsp(editor, spaces);\n          }\n        });\n      }\n    };\n\n    var register = function (editor) {\n      var onAction = function () {\n        return editor.execCommand('mceNonBreaking');\n      };\n      editor.ui.registry.addButton('nonbreaking', {\n        icon: 'non-breaking',\n        tooltip: 'Nonbreaking space',\n        onAction: onAction\n      });\n      editor.ui.registry.addMenuItem('nonbreaking', {\n        icon: 'non-breaking',\n        text: 'Nonbreaking space',\n        onAction: onAction\n      });\n    };\n\n    function Plugin () {\n      global$1.add('nonbreaking', function (editor) {\n        register$1(editor);\n        register(editor);\n        setup(editor);\n      });\n    }\n\n    Plugin();\n\n}());\n"]},"metadata":{},"sourceType":"script"}