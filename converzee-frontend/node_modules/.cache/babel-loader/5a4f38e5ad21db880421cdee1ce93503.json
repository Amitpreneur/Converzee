{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/Timer.js\";\nimport React, { Component } from \"react\";\nimport DropDown from \"../../../comman/DropDown\";\nimport Datetime from \"react-datetime\";\nimport moment from \"moment\";\nimport Util from \"../../../Util\";\nimport { Info } from \"../../../comman/Info\";\nexport default class Timer extends Component {\n  constructor(...args) {\n    super(...args);\n    this._timerType = [{\n      label: \"Date and Time Based\",\n      value: \"DATE_AND_TIME_BASED\"\n    }, {\n      label: \"Cookie Based\",\n      value: \"COOKIE_BASED\"\n    }, {\n      label: \"Ever green\",\n      value: \"EVERGREEN\"\n    }];\n    this._timeZone = Util.getTimeZoneList();\n    this._whenTimeExp = [{\n      label: \"Hide the timer\",\n      value: \"hide\"\n    }, {\n      label: \"Redirect the page\",\n      value: \"redirect\"\n    }, {\n      label: \"Show static central time as 00:00\",\n      value: \"static\"\n    }];\n    this.state = {\n      timerType: this.props.timerType,\n      endDateTime: this.props.endDateTime,\n      timeZone: this.props.timeZone,\n      whenTimeExp: this.props.whenTimeExp\n    };\n\n    this.onDropDownChange1 = value => {\n      const {\n        cases\n      } = this.props;\n      this.setState({\n        timerType: value\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onDropDownChange2 = value => {\n      const {\n        cases\n      } = this.props;\n      const newValu = value.format(\"YYYY-MM-DD HH:mm:ss\");\n      this.setState({\n        endDateTime: newValu\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onDropDownChange3 = value => {\n      const {\n        cases\n      } = this.props;\n      this.setState({\n        timeZone: value\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onDropDownChange4 = value => {\n      const {\n        cases\n      } = this.props;\n      this.setState({\n        whenTimeExp: value\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onChange = e => {\n      const {\n        cases\n      } = this.props;\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onTextChange = ctaText => {\n      const {\n        cases\n      } = this.props;\n      this.setState({\n        ctaText\n      });\n      this.props.onChange(cases, this.state);\n    };\n  }\n\n  componentWillUnmount() {\n    const {\n      cases\n    } = this.props;\n    this.props.onChange(cases, this.state);\n  }\n\n  render() {\n    const {\n      timerType,\n      endDateTime,\n      timeZone,\n      whenTimeExp\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"80%\",\n        padding: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Timer Type*\", React.createElement(Info, {\n      text: \"Select timer type to complete action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(DropDown, {\n      options: this._timerType,\n      onChange: this.onDropDownChange1,\n      value: timerType,\n      class: \"dropdown-style\",\n      style: {\n        width: \"\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"End Date and Time* \", React.createElement(Info, {\n      text: \"date and time when timer expair\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(Datetime, {\n      defaultValue: moment(endDateTime),\n      onChange: this.onDropDownChange2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Time Zone* \", React.createElement(Info, {\n      text: \"Select time zone \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(DropDown, {\n      options: this._timeZone,\n      onChange: this.onDropDownChange3,\n      value: timeZone,\n      class: \"dropdown-style\",\n      style: {\n        width: \"\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), timerType !== 'EVERGREEN' ? React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"When Time Expires* \", React.createElement(Info, {\n      text: \"Action when timer expair\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(DropDown, {\n      options: this._whenTimeExp,\n      onChange: this.onDropDownChange4,\n      value: whenTimeExp,\n      class: \"dropdown-style\",\n      style: {\n        width: \"\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })) : null)));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/Timer.js"],"names":["React","Component","DropDown","Datetime","moment","Util","Info","Timer","_timerType","label","value","_timeZone","getTimeZoneList","_whenTimeExp","state","timerType","props","endDateTime","timeZone","whenTimeExp","onDropDownChange1","cases","setState","onChange","onDropDownChange2","newValu","format","onDropDownChange3","onDropDownChange4","e","target","name","onTextChange","ctaText","componentWillUnmount","render","width","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DropDown from \"../../../comman/DropDown\";\nimport Datetime from \"react-datetime\";\nimport moment from \"moment\";\nimport Util from \"../../../Util\";\nimport { Info } from \"../../../comman/Info\";\n\nexport default class Timer extends Component {\n  _timerType = [\n    { label: \"Date and Time Based\", value: \"DATE_AND_TIME_BASED\" },\n    { label: \"Cookie Based\", value: \"COOKIE_BASED\" },\n    { label: \"Ever green\", value: \"EVERGREEN\" },\n  ];\n  // _endDateTime = [{ label: \"A\", value: \"A\" }, { label: \"B\", value: \"B\" }, { label: \"C\", value: \"C\" }, { label: \"D\", value: \"D\" }];\n  _timeZone = Util.getTimeZoneList();\n  _whenTimeExp = [\n    { label: \"Hide the timer\", value: \"hide\" },\n    { label: \"Redirect the page\", value: \"redirect\" },\n    { label: \"Show static central time as 00:00\", value: \"static\" },\n  ];\n\n  state = {\n    timerType: this.props.timerType,\n    endDateTime: this.props.endDateTime,\n    timeZone: this.props.timeZone,\n    whenTimeExp: this.props.whenTimeExp,\n  };\n  onDropDownChange1 = (value) => {\n    const { cases } = this.props;\n    this.setState({ timerType: value });\n    this.props.onChange(cases, this.state);\n  };\n  onDropDownChange2 = (value) => {\n    const { cases } = this.props;\n    const newValu = value.format(\"YYYY-MM-DD HH:mm:ss\");\n    this.setState({ endDateTime: newValu });\n    this.props.onChange(cases, this.state);\n  };\n  onDropDownChange3 = (value) => {\n    const { cases } = this.props;\n    this.setState({ timeZone: value });\n    this.props.onChange(cases, this.state);\n  };\n  onDropDownChange4 = (value) => {\n    const { cases } = this.props;\n    this.setState({ whenTimeExp: value });\n    this.props.onChange(cases, this.state);\n  };\n  onChange = (e) => {\n    const { cases } = this.props;\n    this.setState({ [e.target.name]: e.target.value });\n    this.props.onChange(cases, this.state);\n  };\n  onTextChange = (ctaText) => {\n    const { cases } = this.props;\n    this.setState({ ctaText });\n    this.props.onChange(cases, this.state);\n  };\n\n  componentWillUnmount() {\n    const { cases } = this.props;\n    this.props.onChange(cases, this.state);\n  }\n\n  render() {\n    const { timerType, endDateTime, timeZone, whenTimeExp } = this.state;\n    return (\n      <div>\n        <center>\n          <div style={{ width: \"80%\", padding: \"20px\" }}>\n            <div className=\"form-element\">\n              <div className=\"label-text\">\n                Timer Type*\n                <Info text=\"Select timer type to complete action\" />\n              </div>\n              <DropDown options={this._timerType} onChange={this.onDropDownChange1} value={timerType} class=\"dropdown-style\" style={{ width: \"\" }} />\n            </div>\n            <div className=\"form-element\">\n              <div className=\"label-text\">\n                End Date and Time* <Info text=\"date and time when timer expair\" />\n              </div>\n              <Datetime defaultValue={moment(endDateTime)} onChange={this.onDropDownChange2} />\n              {/* <DropDown options={this._endDateTime} onChange={this.onDropDownChange2} value={endDateTime} class=\"dropdown-style\" style={{ width: \"\" }} /> */}\n            </div>\n            <div className=\"form-element\">\n              <div className=\"label-text\">\n                Time Zone* <Info text=\"Select time zone \" />\n              </div>\n              <DropDown options={this._timeZone} onChange={this.onDropDownChange3} value={timeZone} class=\"dropdown-style\" style={{ width: \"\" }} />\n            </div>\n            {timerType!== 'EVERGREEN' ?<div className=\"form-element\">\n              <div className=\"label-text\">\n                When Time Expires* <Info text=\"Action when timer expair\" />\n              </div>\n              {/* <input type=\"text\" name=\"whenTimeExp\" className=\"form-control\" value={whenTimeExp} onChange={this.onChange} /> */}\n              <DropDown options={this._whenTimeExp} onChange={this.onDropDownChange4} value={whenTimeExp} class=\"dropdown-style\" style={{ width: \"\" }} />\n            </div>: null}\n          </div>\n        </center>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}