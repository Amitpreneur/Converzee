{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/CreateText.js\";\nimport React, { Component } from \"react\";\nimport DropDown from \"../../../comman/DropDown\";\nimport Editor from \"../../../comman/Editor\";\nimport Util from \"../../../Util\";\nimport { Info } from \"../../../comman/Info\";\nexport default class CreateText extends Component {\n  constructor(...args) {\n    super(...args);\n    this.options = [{\n      label: \"Top\",\n      value: \"top\"\n    }, {\n      label: \"Bottom\",\n      value: \"bottom\"\n    }];\n    this.state = {\n      campaignName: this.props.campaignName,\n      helloBarPos: this.props.helloBarPos,\n      textBody: this.props.textBody || \"\",\n      cpCode: this.props.cpCode,\n      codeText: this.props.codeText\n    };\n\n    this.onDropDownChange = value => {\n      const {\n        cases\n      } = this.props;\n      this.setState({\n        helloBarPos: value\n      }, () => {\n        this.props.onChange(cases, this.state);\n      });\n    };\n\n    this.onChange = e => {\n      const {\n        cases\n      } = this.props;\n      this.setState({\n        [e.target.name]: e.target.value\n      }, () => {\n        this.props.onChange(cases, this.state);\n      });\n    };\n\n    this.onTextChange = textBody => {\n      const {\n        cases\n      } = this.props;\n      this.setState({\n        textBody\n      }, () => {\n        this.props.onChange(cases, this.state);\n      });\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (Util.isRedirected) {\n      Util.isRedirected = false;\n      const {\n        helloBarPos,\n        textBody\n      } = nextProps;\n      this.setState({\n        helloBarPos,\n        textBody\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const {\n      cases\n    } = this.props;\n    this.props.onChange(cases, this.state);\n  }\n\n  render() {\n    const {\n      campaignName,\n      helloBarPos,\n      textBody,\n      cpCode,\n      codeText\n    } = this.state;\n    const {\n      layout\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Hellobar Text* \", React.createElement(Info, {\n      text: \"enter text to show on hello bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Editor, {\n      value: textBody,\n      name: \"textBody\",\n      onChange: this.onTextChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Hellobar Position* \", React.createElement(Info, {\n      text: \"Select position on screen like top or bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(DropDown, {\n      options: this.options,\n      onChange: this.onDropDownChange,\n      value: helloBarPos,\n      className: \"dropdown-style\",\n      style: {\n        width: \"\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), layout === 0 ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Cupon Code* \", React.createElement(Info, {\n      text: \"Coupen code text to be displied\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"cpCode\",\n      className: \"form-control\",\n      value: cpCode,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))) : null);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/CreateText.js"],"names":["React","Component","DropDown","Editor","Util","Info","CreateText","options","label","value","state","campaignName","props","helloBarPos","textBody","cpCode","codeText","onDropDownChange","cases","setState","onChange","e","target","name","onTextChange","componentWillReceiveProps","nextProps","isRedirected","componentWillUnmount","render","layout","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DropDown from \"../../../comman/DropDown\";\nimport Editor from \"../../../comman/Editor\";\nimport Util from \"../../../Util\";\nimport { Info } from \"../../../comman/Info\";\nexport default class CreateText extends Component {\n  options = [\n    { label: \"Top\", value: \"top\" },\n    { label: \"Bottom\", value: \"bottom\" },\n  ];\n  state = {\n    campaignName: this.props.campaignName,\n    helloBarPos: this.props.helloBarPos,\n    textBody: this.props.textBody || \"\",\n    cpCode: this.props.cpCode,\n    codeText: this.props.codeText,\n  };\n  componentWillReceiveProps(nextProps) {\n    if (Util.isRedirected) {\n      Util.isRedirected = false;\n      const { helloBarPos, textBody } = nextProps;\n      this.setState({ helloBarPos, textBody });\n    }\n  }\n  onDropDownChange = (value) => {\n    const { cases } = this.props;\n    this.setState({ helloBarPos: value }, () => {\n      this.props.onChange(cases, this.state);\n    });\n  };\n  onChange = (e) => {\n    const { cases } = this.props;\n    this.setState({ [e.target.name]: e.target.value }, () => {\n      this.props.onChange(cases, this.state);\n    });\n  };\n  onTextChange = (textBody) => {\n    const { cases } = this.props;\n    this.setState({ textBody }, () => {\n      this.props.onChange(cases, this.state);\n    });\n  };\n\n  componentWillUnmount() {\n    const { cases } = this.props;\n    this.props.onChange(cases, this.state);\n  }\n\n  render() {\n    const { campaignName, helloBarPos, textBody, cpCode, codeText } = this.state;\n    const { layout } = this.props;\n    return (\n      <div>\n        <div className=\"form-element\">\n          <div className=\"label-text\">\n            Hellobar Text* <Info text=\"enter text to show on hello bar\" />\n          </div>\n          <div>\n            <Editor value={textBody} name=\"textBody\" onChange={this.onTextChange} />\n          </div>\n        </div>\n        <div className=\"form-element\">\n          <div className=\"label-text\">\n            Hellobar Position* <Info text=\"Select position on screen like top or bottom\" />\n          </div>\n          <DropDown options={this.options} onChange={this.onDropDownChange} value={helloBarPos} className=\"dropdown-style\" style={{ width: \"\" }} />\n        </div>\n        {layout === 0 ? (\n          <React.Fragment>\n            <div className=\"form-element\">\n              <div className=\"label-text\">\n                Cupon Code* <Info text=\"Coupen code text to be displied\" />\n              </div>\n              <input type=\"text\" name=\"cpCode\" className=\"form-control\" value={cpCode} onChange={this.onChange} />\n            </div>\n          </React.Fragment>\n        ) : null}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}