{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Editor.js\";\nimport React from \"react\";\nimport ReactSummernote from \"react-summernote\";\nimport \"react-summernote/dist/react-summernote.css\";\nimport \"bootstrap/js/dist/modal\";\nimport \"bootstrap/js/dist/dropdown\";\nimport \"bootstrap/js/dist/tooltip\";\nimport \"./Editor.css\";\nexport default class Editor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = value => {\n      this.props.onChange(value);\n      this.setState({\n        content: value\n      });\n    };\n\n    this.state = {\n      content: props.value\n    };\n  }\n\n  componentDidMount() {\n    const {\n      value\n    } = this.props;\n\n    if (value) {\n      this.setState({\n        content: value\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.onChange(this.state.content);\n  }\n\n  render() {\n    const {\n      content\n    } = this.state;\n    return React.createElement(\"div\", {\n      style: {\n        wordBreak: \"break-all\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(ReactSummernote, {\n      value: content,\n      options: {\n        lang: \"ru-RU\",\n        height: 60,\n        dialogsInBody: true,\n        toolbar: [[\"style\", [\"bold\", \"italic\", \"underline\", \"clear\"]], [\"font\", [\"strikethrough\"]], [\"fontsize\", [\"fontsize\"]], [\"color\", [\"color\"]], // [\"para\", [\"ul\", \"paragraph\"]],\n        [\"insert\", [\"link\"]], [\"fontname\", [\"fontname\"]]]\n      },\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Editor.js"],"names":["React","ReactSummernote","Editor","Component","constructor","props","onChange","value","setState","content","state","componentDidMount","componentWillUnmount","render","wordBreak","lang","height","dialogsInBody","toolbar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,kBAA5B;AACA,OAAO,4CAAP;AACA,OAAO,yBAAP;AACA,OAAO,4BAAP;AACA,OAAO,2BAAP;AACA,OAAO,cAAP;AACA,eAAe,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiBnBC,QAjBmB,GAiBPC,KAAD,IAAW;AACpB,WAAKF,KAAL,CAAWC,QAAX,CAAoBC,KAApB;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAEF;AAAX,OAAd;AACD,KApBkB;;AAEjB,SAAKG,KAAL,GAAa;AACXD,MAAAA,OAAO,EAAEJ,KAAK,CAACE;AADJ,KAAb;AAGD;;AAEDI,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEJ,MAAAA;AAAF,QAAY,KAAKF,KAAvB;;AACA,QAAIE,KAAJ,EAAW;AACT,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAEF;AAAX,OAAd;AACD;AACF;;AAEDK,EAAAA,oBAAoB,GAAG;AACrB,SAAKP,KAAL,CAAWC,QAAX,CAAoB,KAAKI,KAAL,CAAWD,OAA/B;AACD;;AAKDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,WACE;AAAK,MAAA,KAAK,EAAE;AAAEI,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AACE,MAAA,KAAK,EAAEL,OADT;AAEE,MAAA,OAAO,EAAE;AACPM,QAAAA,IAAI,EAAE,OADC;AAEPC,QAAAA,MAAM,EAAE,EAFD;AAGPC,QAAAA,aAAa,EAAE,IAHR;AAIPC,QAAAA,OAAO,EAAE,CACP,CAAC,OAAD,EAAU,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,EAAgC,OAAhC,CAAV,CADO,EAEP,CAAC,MAAD,EAAS,CAAC,eAAD,CAAT,CAFO,EAGP,CAAC,UAAD,EAAa,CAAC,UAAD,CAAb,CAHO,EAIP,CAAC,OAAD,EAAU,CAAC,OAAD,CAAV,CAJO,EAKP;AACA,SAAC,QAAD,EAAW,CAAC,MAAD,CAAX,CANO,EAOP,CAAC,UAAD,EAAa,CAAC,UAAD,CAAb,CAPO;AAJF,OAFX;AAgBE,MAAA,QAAQ,EAAE,KAAKZ,QAhBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAsBD;;AA9CiD","sourcesContent":["import React from \"react\";\nimport ReactSummernote from \"react-summernote\";\nimport \"react-summernote/dist/react-summernote.css\";\nimport \"bootstrap/js/dist/modal\";\nimport \"bootstrap/js/dist/dropdown\";\nimport \"bootstrap/js/dist/tooltip\";\nimport \"./Editor.css\";\nexport default class Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: props.value,\n    };\n  }\n\n  componentDidMount() {\n    const { value } = this.props;\n    if (value) {\n      this.setState({ content: value });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.onChange(this.state.content);\n  }\n  onChange = (value) => {\n    this.props.onChange(value);\n    this.setState({ content: value });\n  };\n  render() {\n    const { content } = this.state;\n    return (\n      <div style={{ wordBreak: \"break-all\" }}>\n        <ReactSummernote\n          value={content}\n          options={{\n            lang: \"ru-RU\",\n            height: 60,\n            dialogsInBody: true,\n            toolbar: [\n              [\"style\", [\"bold\", \"italic\", \"underline\", \"clear\"]],\n              [\"font\", [\"strikethrough\"]],\n              [\"fontsize\", [\"fontsize\"]],\n              [\"color\", [\"color\"]],\n              // [\"para\", [\"ul\", \"paragraph\"]],\n              [\"insert\", [\"link\"]],\n              [\"fontname\", [\"fontname\"]],\n            ],\n          }}\n          onChange={this.onChange}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}