{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/Helper.js\";\nimport React, { Component } from \"react\";\nimport Loader from \"./components/comman/Loader\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { SuccessModel, SayUpdate, CopyScript, ErrorModel } from \"./components/comman/Popup\";\nexport default class Helper extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      visible: false,\n      update: false,\n      showError: false\n    };\n    this.isSuccess = \"\";\n    this.msg = \"\";\n    this.defaultUpdateMsg = \"Follow to Update your App.\";\n    this.updateMsg = \"\";\n    this.hideUpdate = false;\n    this.link = \"\";\n\n    this.setVisible = (isSuccess, msg = \"\") => {\n      this.isSuccess = isSuccess;\n      this.msg = msg;\n      this.setState({\n        visible: true\n      }, () => {\n        setTimeout(() => {\n          this.setState({\n            visible: false\n          });\n        }, 2000);\n      });\n    };\n\n    this.setScript = (script = \"\", isShow = true) => {\n      if (isShow) {\n        this.setState({\n          showCopyScript: true,\n          script\n        });\n      } else {\n        this.setState({\n          showCopyScript: false,\n          script\n        });\n      }\n    };\n\n    this.sayupdatePopup = (msg = null, hideButton = false, link = \"\") => {\n      if (msg) {\n        this.updateMsg = msg;\n      } else {\n        this.updateMsg = this.defaultUpdateMsg;\n      }\n\n      this.link = link;\n      this.hideUpdate = hideButton;\n      this.setState({\n        update: true\n      });\n    };\n\n    this.closeUpdate = () => {\n      this.setState({\n        update: false\n      });\n    };\n\n    this.initLoader = isOn => {\n      this.setState({\n        loading: isOn\n      });\n    };\n\n    this.showErrorWithHtml = err => {\n      const {\n        showError\n      } = this.state;\n\n      if (showError) {\n        this.setState({\n          showError: false\n        });\n      } else {\n        this.setState({\n          showError: err\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.gs.toast = toast;\n    window.gs.loader = this.initLoader;\n    window.gs.success = this.setVisible;\n    window.gs.sayUpdate = this.sayupdatePopup;\n    window.gs.setScript = this.setScript;\n    window.gs.showErrorWithHtml = this.showErrorWithHtml;\n  }\n\n  render() {\n    const {\n      loading,\n      update,\n      showCopyScript,\n      script,\n      showError\n    } = this.state;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, loading ? React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }) : null, React.createElement(ToastContainer, {\n      autoClose: 1500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), showError ? React.createElement(ErrorModel, Object.assign({\n      visible: showError ? true : false,\n      Close: this.showErrorWithHtml\n    }, showError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })) : null, React.createElement(SuccessModel, {\n      isSuccess: this.isSuccess,\n      msg: this.msg,\n      visible: this.state.visible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(SayUpdate, {\n      msg: this.updateMsg,\n      link: this.link,\n      hideButton: this.hideUpdate,\n      visible: update,\n      Close: this.closeUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(CopyScript, {\n      script: script,\n      Close: () => this.setScript(\"\", false),\n      visible: showCopyScript,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/Helper.js"],"names":["React","Component","Loader","ToastContainer","toast","SuccessModel","SayUpdate","CopyScript","ErrorModel","Helper","state","loading","visible","update","showError","isSuccess","msg","defaultUpdateMsg","updateMsg","hideUpdate","link","setVisible","setState","setTimeout","setScript","script","isShow","showCopyScript","sayupdatePopup","hideButton","closeUpdate","initLoader","isOn","showErrorWithHtml","err","componentDidMount","window","gs","loader","success","sayUpdate","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Loader from \"./components/comman/Loader\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { SuccessModel, SayUpdate, CopyScript, ErrorModel } from \"./components/comman/Popup\";\n\nexport default class Helper extends Component {\n  state = {\n    loading: false,\n    visible: false,\n    update: false,\n    showError: false,\n  };\n  isSuccess = \"\";\n  msg = \"\";\n  defaultUpdateMsg = \"Follow to Update your App.\";\n  updateMsg = \"\";\n  hideUpdate = false;\n  link = \"\";\n  componentDidMount() {\n    window.gs.toast = toast;\n    window.gs.loader = this.initLoader;\n    window.gs.success = this.setVisible;\n    window.gs.sayUpdate = this.sayupdatePopup;\n    window.gs.setScript = this.setScript;\n    window.gs.showErrorWithHtml = this.showErrorWithHtml;\n  }\n  setVisible = (isSuccess, msg = \"\") => {\n    this.isSuccess = isSuccess;\n    this.msg = msg;\n    this.setState({ visible: true }, () => {\n      setTimeout(() => {\n        this.setState({ visible: false });\n      }, 2000);\n    });\n  };\n\n  setScript = (script = \"\", isShow = true) => {\n    if (isShow) {\n      this.setState({ showCopyScript: true, script });\n    } else {\n      this.setState({ showCopyScript: false, script });\n    }\n  };\n\n  sayupdatePopup = (msg = null, hideButton = false, link = \"\") => {\n    if (msg) {\n      this.updateMsg = msg;\n    } else {\n      this.updateMsg = this.defaultUpdateMsg;\n    }\n    this.link = link;\n    this.hideUpdate = hideButton;\n    this.setState({ update: true });\n  };\n\n  closeUpdate = () => {\n    this.setState({ update: false });\n  };\n\n  initLoader = (isOn) => {\n    this.setState({ loading: isOn });\n  };\n\n  showErrorWithHtml = (err) => {\n    const { showError } = this.state;\n    if (showError) {\n      this.setState({ showError: false });\n    } else {\n      this.setState({ showError: err });\n    }\n  };\n\n  render() {\n    const { loading, update, showCopyScript, script, showError } = this.state;\n    return (\n      <React.Fragment>\n        {loading ? <Loader /> : null}\n        <ToastContainer autoClose={1500} />\n        {showError ? <ErrorModel visible={showError ? true : false} Close={this.showErrorWithHtml} {...showError} /> : null}\n        <SuccessModel isSuccess={this.isSuccess} msg={this.msg} visible={this.state.visible} />\n        <SayUpdate msg={this.updateMsg} link={this.link} hideButton={this.hideUpdate} visible={update} Close={this.closeUpdate} />\n        <CopyScript script={script} Close={() => this.setScript(\"\", false)} visible={showCopyScript} />\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}