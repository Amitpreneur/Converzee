{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/CentralTimer/Style.js\";\nimport React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport \"react-color-picker/index.css\";\nimport { Info } from \"../../../comman/Info\";\nimport { ColorSelector } from \"../../../layout/LayoutSelector\";\nexport default class Style extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      elements: this.props.elements,\n      selected: this.props.selected,\n      timerFont: this.props.timerFont,\n      timerLabelFont: this.props.timerLabelFont\n    };\n\n    this.onClickElement = i => {\n      const cases = this.props.case || 1;\n      this.setState({\n        selected: i\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onColorChange = color => {\n      const cases = this.props.case || 1;\n      const {\n        elements,\n        selected\n      } = this.state;\n      elements[selected].color = color.hex;\n      this.setState({\n        elements\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onChange = e => {\n      let value = e.target.value;\n      if (value > e.target.max) value = e.target.max;\n      const cases = this.props.case || 1;\n      this.setState({\n        [e.target.name]: value\n      }, () => {\n        this.props.onChange(cases, this.state);\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    const cases = this.props.case || 1;\n    this.props.onChange(cases, this.state);\n  }\n\n  render() {\n    const {\n      elements,\n      selected,\n      timerFont,\n      timerLabelFont\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-4 col-sm-12 order-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, elements.map((e, i) => React.createElement(ColorSelector, Object.assign({}, e, {\n      selectedIndex: selected,\n      onClick: this.onClickElement,\n      index: i,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"col-md-8 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(SketchPicker, {\n      defaultValue: \"#452135\",\n      color: elements[selected].color,\n      onChangeComplete: this.onColorChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Timer Font*\", React.createElement(Info, {\n      text: \"Timer font size keep minimum 14px \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"number\",\n      max: 50,\n      name: \"timerFont\",\n      min: 14,\n      className: \"form-control\",\n      value: timerFont,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Timer Label Font*\", React.createElement(Info, {\n      text: \"Timer font size keep minimum 14px \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"number\",\n      max: 20,\n      name: \"timerLabelFont\",\n      className: \"form-control\",\n      value: timerLabelFont,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/CentralTimer/Style.js"],"names":["React","Component","SketchPicker","Info","ColorSelector","Style","state","elements","props","selected","timerFont","timerLabelFont","onClickElement","i","cases","case","setState","onChange","onColorChange","color","hex","e","value","target","max","name","componentWillUnmount","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\n\nimport \"react-color-picker/index.css\";\nimport { Info } from \"../../../comman/Info\";\nimport { ColorSelector } from \"../../../layout/LayoutSelector\";\nexport default class Style extends Component {\n  state = {\n    elements: this.props.elements,\n    selected: this.props.selected,\n    timerFont: this.props.timerFont,\n    timerLabelFont: this.props.timerLabelFont,\n  };\n\n  onClickElement = (i) => {\n    const cases = this.props.case || 1;\n    this.setState({ selected: i });\n    this.props.onChange(cases, this.state);\n  };\n\n  componentWillUnmount() {\n    const cases = this.props.case || 1;\n    this.props.onChange(cases, this.state);\n  }\n\n  onColorChange = (color) => {\n    const cases = this.props.case || 1;\n    const { elements, selected } = this.state;\n    elements[selected].color = color.hex;\n    this.setState({ elements });\n    this.props.onChange(cases, this.state);\n  };\n\n  onChange = (e) => {\n    let value = e.target.value;\n    if (value > e.target.max) value = e.target.max;\n    const cases = this.props.case || 1;\n    this.setState({ [e.target.name]: value }, () => {\n      this.props.onChange(cases, this.state);\n    });\n  };\n  render() {\n    const { elements, selected, timerFont, timerLabelFont } = this.state;\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col-md-4 col-sm-12 order-sm-2\">\n            {elements.map((e, i) => (\n              <ColorSelector {...e} selectedIndex={selected} onClick={this.onClickElement} index={i} key={i} />\n            ))}\n          </div>\n          <div className=\"col-md-8 col-sm-12\">\n            <SketchPicker defaultValue=\"#452135\" color={elements[selected].color} onChangeComplete={this.onColorChange} />\n          </div>\n        </div>\n        <div className=\"form-element\">\n          <div className=\"label-text\">\n            Timer Font*\n            <Info text=\"Timer font size keep minimum 14px \" />\n          </div>\n          <input type=\"number\" max={50} name=\"timerFont\" min={14} className=\"form-control\" value={timerFont} onChange={this.onChange} />\n        </div>\n        <div className=\"form-element\">\n          <div className=\"label-text\">\n            Timer Label Font*\n            <Info text=\"Timer font size keep minimum 14px \" />\n          </div>\n          <input type=\"number\" max={20} name=\"timerLabelFont\" className=\"form-control\" value={timerLabelFont} onChange={this.onChange} />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}