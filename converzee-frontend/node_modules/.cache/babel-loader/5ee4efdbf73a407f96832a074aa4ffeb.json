{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ImagePopup/Preview.js\";\nimport React, { Component } from \"react\";\nimport \"./Preview.css\";\nimport { parseImgUrl } from \"../../../Util\";\nimport { BASE_URL } from \"../../../../actions/URLs\";\nimport Portal from \"../../../comman/Portal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Preview extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.getStyle = () => {\n      const {\n        elements\n      } = this.props.STYLE;\n      const style = {};\n      Object.assign(style, {\n        background: this.getcolor(elements, \"highlightBackground\")\n      });\n      return style;\n    };\n  }\n\n  getcolor(element, key) {\n    let color = \"#fff\";\n    element.forEach(value => {\n      if (value.name === key) {\n        color = value.color;\n      }\n    });\n    return color;\n  }\n\n  render() {\n    const image = this.props.image || \"\";\n    const style = {}; //this.getStyle();\n\n    return /*#__PURE__*/_jsxDEV(Portal, {\n      defaultOpen: true,\n      closeOnOutsideClick: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-preview align-self-center\",\n          style: {\n            height: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popUpTitlebar\",\n            style: {\n              height: \"unset\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                this.props.closePopup();\n              },\n              className: \"popupCloseButton\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-main-preview container-item align-self-center\",\n            style: {\n              backgroundColor: \"unset\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-class\",\n              src: parseImgUrl(image)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ImagePopup/Preview.js"],"names":["React","Component","parseImgUrl","BASE_URL","Portal","Preview","getStyle","elements","props","STYLE","style","Object","assign","background","getcolor","element","key","color","forEach","value","name","render","image","height","closePopup","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AACA,eAAe,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAC7CK,QAD6C,GAClC,MAAM;AACf,YAAM;AAAEC,QAAAA;AAAF,UAAe,KAAKC,KAAL,CAAWC,KAAhC;AACA,YAAMC,KAAK,GAAG,EAAd;AACAC,MAAAA,MAAM,CAACC,MAAP,CAAcF,KAAd,EAAqB;AAAEG,QAAAA,UAAU,EAAE,KAAKC,QAAL,CAAcP,QAAd,EAAwB,qBAAxB;AAAd,OAArB;AACA,aAAOG,KAAP;AACD,KAN4C;AAAA;;AAO7CI,EAAAA,QAAQ,CAACC,OAAD,EAAUC,GAAV,EAAe;AACrB,QAAIC,KAAK,GAAG,MAAZ;AACAF,IAAAA,OAAO,CAACG,OAAR,CAAiBC,KAAD,IAAW;AACzB,UAAIA,KAAK,CAACC,IAAN,KAAeJ,GAAnB,EAAwB;AACtBC,QAAAA,KAAK,GAAGE,KAAK,CAACF,KAAd;AACD;AACF,KAJD;AAKA,WAAOA,KAAP;AACD;;AACDI,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,KAAKd,KAAL,CAAWc,KAAX,IAAoB,EAAlC;AACA,UAAMZ,KAAK,GAAG,EAAd,CAFO,CAEW;;AAClB,wBACE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,IAArB;AAA2B,MAAA,mBAAmB,EAAE,IAAhD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,iCAAf;AAAiD,UAAA,KAAK,EAAE;AAAEa,YAAAA,MAAM,EAAE;AAAV,WAAxD;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,eAAf;AAA+B,YAAA,KAAK,EAAE;AAAEA,cAAAA,MAAM,EAAE;AAAV,aAAtC;AAAA,mCACE;AACE,cAAA,OAAO,EAAE,MAAM;AACb,qBAAKf,KAAL,CAAWgB,UAAX;AACD,eAHH;AAIE,cAAA,SAAS,EAAC,kBAJZ;AAAA,qCAME;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE;AAAK,YAAA,SAAS,EAAC,qDAAf;AAAqE,YAAA,KAAK,EAAE;AAAEC,cAAAA,eAAe,EAAE;AAAnB,aAA5E;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,WAAf;AAA2B,cAAA,GAAG,EAAEvB,WAAW,CAACoB,KAAD;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AA1C4C","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Preview.css\";\r\nimport { parseImgUrl } from \"../../../Util\";\r\nimport { BASE_URL } from \"../../../../actions/URLs\";\r\nimport Portal from \"../../../comman/Portal\";\r\nexport default class Preview extends Component {\r\n  getStyle = () => {\r\n    const { elements } = this.props.STYLE;\r\n    const style = {};\r\n    Object.assign(style, { background: this.getcolor(elements, \"highlightBackground\") });\r\n    return style;\r\n  };\r\n  getcolor(element, key) {\r\n    let color = \"#fff\";\r\n    element.forEach((value) => {\r\n      if (value.name === key) {\r\n        color = value.color;\r\n      }\r\n    });\r\n    return color;\r\n  }\r\n  render() {\r\n    const image = this.props.image || \"\";\r\n    const style = {}; //this.getStyle();\r\n    return (\r\n      <Portal defaultOpen={true} closeOnOutsideClick={true}>\r\n        <div className=\"image-popup\">\r\n          <div className=\"image-preview align-self-center\" style={{ height: \"100%\" }}>\r\n            <div className=\"popUpTitlebar\" style={{ height: \"unset\" }}>\r\n              <div\r\n                onClick={() => {\r\n                  this.props.closePopup();\r\n                }}\r\n                className=\"popupCloseButton\"\r\n              >\r\n                <i className=\"fa fa-close\" />\r\n              </div>\r\n            </div>\r\n            {/* <center> */}\r\n            <div className=\"image-main-preview container-item align-self-center\" style={{ backgroundColor: \"unset\" }}>\r\n              <img className=\"img-class\" src={parseImgUrl(image)} />\r\n            </div>\r\n            {/* </center> */}\r\n          </div>\r\n        </div>\r\n      </Portal>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}