{"ast":null,"code":"import React,{Component}from\"react\";import\"./Preview.css\";import{parseImgUrl,youtubeUrlParse,vimeoUrlParse}from\"../../../Util\";import Portal from\"../../../comman/Portal\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default class Preview extends Component{constructor(){super(...arguments);this.getStyle=()=>{const{elements}=this.props.STYLE;const style={};Object.assign(style,{background:this.getcolor(elements,\"background\")});return style;};this.isUrlVideo=url=>{if(url.indexOf(\"youtube\")!==-1||url.indexOf(\"youtu\")!==-1||url.indexOf(\"vimeo\")!==-1){return true;}return false;};}getcolor(element,key){let color=\"#fff\";element.forEach(value=>{if(value.name===key){color=value.color;}});return color;}getVideoURL(url){return parseImgUrl(url);}render(){const video=this.props.video.url||\"\";const style={};//this.getStyle();\nconst autoPlayvideo=this.props.STYLE.switchElement||false;return/*#__PURE__*/_jsx(Portal,{defaultOpen:true,closeOnEsc:true,closeOnOutsideClick:true,children:/*#__PURE__*/_jsx(\"div\",{className:\"image-popup\",style:style,children:/*#__PURE__*/_jsxs(\"div\",{className:\"image-preview\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"popUpTitlebar\"}),/*#__PURE__*/_jsx(\"center\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"image-main-preview\",children:/*#__PURE__*/_jsxs(\"div\",{style:{height:\"700px\",width:\"70%\"},children:[/*#__PURE__*/_jsx(\"div\",{onClick:()=>{this.props.closePopup();},className:\"popupCloseButton\",style:{position:\"relative\"},children:/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-close\",style:{paddingLeft:\"102%\"}})}),this.isUrlVideo(video)?/*#__PURE__*/_jsx(\"iframe\",{width:\"100%\",height:\"100%\",frameborder:\"0\",allow:\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",allowfullscreen:true,src:\"https://www.youtube.com/embed/\"+youtubeUrlParse(video)+(autoPlayvideo?\"?autoplay=1\":\"\"),frameborder:\"0\",allowfullscreen:true,auto:true}):/*#__PURE__*/_jsx(\"iframe\",{width:\"100%\",height:\"100%\",frameborder:\"0\",allowfullscreen:true,src:\"https://player.vimeo.com/video/\"+vimeoUrlParse(video)+(autoPlayvideo?\"?autoplay=1\":\"\"),frameborder:\"0\",allowfullscreen:true,auto:true})]})})})]})})});}}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/Preview.js"],"names":["React","Component","parseImgUrl","youtubeUrlParse","vimeoUrlParse","Portal","Preview","getStyle","elements","props","STYLE","style","Object","assign","background","getcolor","isUrlVideo","url","indexOf","element","key","color","forEach","value","name","getVideoURL","render","video","autoPlayvideo","switchElement","height","width","closePopup","position","paddingLeft"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Preview.css\";\r\nimport { parseImgUrl, youtubeUrlParse, vimeoUrlParse } from \"../../../Util\";\r\nimport Portal from \"../../../comman/Portal\";\r\nexport default class Preview extends Component {\r\n  getStyle = () => {\r\n    const { elements } = this.props.STYLE;\r\n    const style = {};\r\n    Object.assign(style, { background: this.getcolor(elements, \"background\") });\r\n    return style;\r\n  };\r\n  getcolor(element, key) {\r\n    let color = \"#fff\";\r\n    element.forEach((value) => {\r\n      if (value.name === key) {\r\n        color = value.color;\r\n      }\r\n    });\r\n    return color;\r\n  }\r\n  isUrlVideo = (url) => {\r\n    if (url.indexOf(\"youtube\") !== -1 || url.indexOf(\"youtu\") !== -1 || url.indexOf(\"vimeo\") !== -1) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  getVideoURL(url) {\r\n    return parseImgUrl(url);\r\n  }\r\n  render() {\r\n    const video = this.props.video.url || \"\";\r\n    const style = {}; //this.getStyle();\r\n    const autoPlayvideo = this.props.STYLE.switchElement || false;\r\n    return (\r\n      <Portal defaultOpen={true} closeOnEsc={true} closeOnOutsideClick={true}>\r\n        <div className=\"image-popup\" style={style}>\r\n          <div className=\"image-preview\">\r\n            <div className=\"popUpTitlebar\"></div>\r\n            <center>\r\n              <div className=\"image-main-preview\">\r\n                <div style={{ height: \"700px\", width: \"70%\" }}>\r\n                  <div\r\n                    onClick={() => {\r\n                      this.props.closePopup();\r\n                    }}\r\n                    className=\"popupCloseButton\"\r\n                    style={{ position: \"relative\" }}\r\n                  >\r\n                    <i className=\"fa fa-close\" style={{ paddingLeft: \"102%\" }} />\r\n                  </div>\r\n                  {this.isUrlVideo(video) ? (\r\n                    <iframe\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                      frameborder=\"0\"\r\n                      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                      allowfullscreen\r\n                      src={\"https://www.youtube.com/embed/\" + youtubeUrlParse(video) + (autoPlayvideo ? \"?autoplay=1\" : \"\")}\r\n                      frameborder=\"0\"\r\n                      allowfullscreen\r\n                      auto\r\n                    ></iframe>\r\n                  ) : (\r\n                    <iframe\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                      frameborder=\"0\"\r\n                      allowfullscreen\r\n                      src={\"https://player.vimeo.com/video/\" + vimeoUrlParse(video) + (autoPlayvideo ? \"?autoplay=1\" : \"\")}\r\n                      frameborder=\"0\"\r\n                      allowfullscreen\r\n                      auto\r\n                    ></iframe>\r\n                  )}\r\n                </div>\r\n\r\n                {/* <img src={BASE_URL + parseImgUrl(video)} /> */}\r\n              </div>\r\n            </center>\r\n          </div>\r\n        </div>\r\n      </Portal>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}