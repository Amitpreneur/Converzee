{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Uploader.js\";\nimport React from \"react\"; // import { Upload, Icon, message } from \"antd\";\n\nimport { Upload, message, Button, Icon } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./Uploader.css\";\nimport { BASE_URL, IMAGE_UPLOAD_LINK, IMAGE_OPTI_UPLOAD } from \"../../actions/URLs\";\n\nfunction vaildateFile(file) {\n  if (file) {\n    if (file.type.indexOf(\"image\")) return false;\n    return true;\n  }\n}\n\nconst Uploader = prop => {\n  const props = {\n    name: \"photo\",\n    multiple: prop.multiple ? prop.multiple : false,\n    action: BASE_URL + (prop.multiple ? IMAGE_OPTI_UPLOAD : IMAGE_UPLOAD_LINK),\n\n    onChange(info) {\n      const {\n        status\n      } = info.file;\n\n      if (status !== \"uploading\") {\n        prop.onUploadDone(info.fileList[0].response);\n      }\n\n      if (status === \"done\") {\n        message.success(\"\".concat(info.file.name, \" file uploaded successfully.\"));\n      } else if (status === \"error\") {\n        console.log(info);\n        message.error(\"\".concat(info.file.name, \" file upload failed.\"));\n      }\n    },\n\n    beforeUpload: file => {\n      if (!vaildateFile(file)) {\n        message.error(\"\".concat(file.name, \" file failed. Select A valid Image to upload\"));\n      }\n    }\n  };\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Upload, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    class: \"uploader-default\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"fa fa-cloud-upload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Select File to Upload\"))))), React.createElement(\"div\", {\n    className: \"col-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, prop.onReset ? React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-danger\",\n    style: {\n      position: \"absolute\",\n      top: \"0px\",\n      right: \"8px\"\n    },\n    onClick: prop.onReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Reset\"))) : null));\n};\n\nexport default Uploader;","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/Uploader.js"],"names":["React","Upload","message","Button","Icon","BASE_URL","IMAGE_UPLOAD_LINK","IMAGE_OPTI_UPLOAD","vaildateFile","file","type","indexOf","Uploader","prop","props","name","multiple","action","onChange","info","status","onUploadDone","fileList","response","success","console","log","error","beforeUpload","onReset","position","top","right"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import { Upload, Icon, message } from \"antd\";\nimport { Upload, message, Button, Icon } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./Uploader.css\";\nimport { BASE_URL, IMAGE_UPLOAD_LINK, IMAGE_OPTI_UPLOAD } from \"../../actions/URLs\";\nfunction vaildateFile(file) {\n  if (file) {\n    if (file.type.indexOf(\"image\")) return false;\n    return true;\n  }\n}\nconst Uploader = (prop) => {\n  const props = {\n    name: \"photo\",\n    multiple: prop.multiple ? prop.multiple : false,\n    action: BASE_URL + (prop.multiple ? IMAGE_OPTI_UPLOAD : IMAGE_UPLOAD_LINK),\n    onChange(info) {\n      const { status } = info.file;\n      if (status !== \"uploading\") {\n        prop.onUploadDone(info.fileList[0].response);\n      }\n      if (status === \"done\") {\n        message.success(`${info.file.name} file uploaded successfully.`);\n      } else if (status === \"error\") {\n        console.log(info);\n        message.error(`${info.file.name} file upload failed.`);\n      }\n    },\n    beforeUpload: (file) => {\n      if (!vaildateFile(file)) {\n        message.error(`${file.name} file failed. Select A valid Image to upload`);\n      }\n    },\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-10\">\n        <Upload {...props}>\n          <div class=\"uploader-default\">\n            <center>\n              <i class=\"fa fa-cloud-upload\"></i>\n              <div>Select File to Upload</div>\n            </center>\n          </div>\n        </Upload>\n      </div>\n      <div className=\"col-2\">\n        {prop.onReset ? (\n          <div className=\"row\">\n            <div className=\"pull-right\">\n              <button className=\"btn btn-sm btn-danger\" style={{ position: \"absolute\", top: \"0px\", right: \"8px\" }} onClick={prop.onReset}>\n                Reset\n              </button>\n            </div>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Uploader;\n"]},"metadata":{},"sourceType":"module"}