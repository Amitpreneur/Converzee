{"ast":null,"code":"import React,{Component}from\"react\";import{SketchPicker}from\"react-color\";import{ColorSelector}from\"../layout/LayoutSelector\";import Uploader from\"../comman/Uploader\";import{Switch}from\"antd\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{createElement as _createElement}from\"react\";export default class Style extends Component{constructor(){super(...arguments);this.state={style:this.props.style,bgImg:this.props.bgImg,isBGIMG:this.props.isBGIMG,selectedIndex:0,count:0};this.onColorChange=value=>{const{style,selectedIndex,count}=this.state;if(selectedIndex===3){this.setState({bgImg:value.hex},()=>{this.props.onChange({bgImg:this.state.bgImg});});}else{style[selectedIndex].value=value.hex;this.setState({count:count+1},()=>{this.props.onChange({style:this.state.style});});}};this.onColorBoxClick=index=>{this.setState({selectedIndex:index});};this.onUploadDone=image=>{this.setState({bgImg:image.image},()=>{this.props.onChange({bgImg:this.state.bgImg});});};this.onToggle=()=>{this.setState({isBGIMG:!this.state.isBGIMG,selectedIndex:0},()=>{this.props.onChange({isBGIMG:this.state.isBGIMG});});};this.onReset=()=>{this.setState({bgImg:\"\"},()=>{this.props.onChange({bgImg:this.state.bgImg});});};}componentWillUnmount(){this.props.onChange({style:this.state.style});}render(){const{style,selectedIndex,isBGIMG,bgImg}=this.state;const props={onUploadDone:this.onUploadDone};return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[this.props.layout===2?/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[\"Use Background Color Or Image \",/*#__PURE__*/_jsx(Switch,{className:\"m-2\",onChange:this.onToggle,size:\"small\",defaultChecked:isBGIMG})]}):null,/*#__PURE__*/_jsx(\"div\",{className:\"col-4\",children:style.map((e,i)=>/*#__PURE__*/_createElement(ColorSelector,{showName:true,...e,selectedIndex:selectedIndex,onClick:this.onColorBoxClick,index:i,key:i}))}),/*#__PURE__*/_jsx(\"div\",{className:\"col-8\",children:/*#__PURE__*/_jsx(SketchPicker,{defaultValue:\"#452135\",color:selectedIndex===3&&this.props.layout===2&&!isBGIMG?bgImg:style[selectedIndex].value,onChangeComplete:this.onColorChange})}),isBGIMG?/*#__PURE__*/_jsx(\"div\",{className:\"col-12 \",children:/*#__PURE__*/_jsx(Uploader,{...props,onReset:this.onReset})}):null]});}}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/Style.js"],"names":["React","Component","SketchPicker","ColorSelector","Uploader","Switch","Style","state","style","props","bgImg","isBGIMG","selectedIndex","count","onColorChange","value","setState","hex","onChange","onColorBoxClick","index","onUploadDone","image","onToggle","onReset","componentWillUnmount","render","layout","map","e","i"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { ColorSelector } from \"../layout/LayoutSelector\";\r\nimport Uploader from \"../comman/Uploader\";\r\nimport { Switch } from \"antd\";\r\nexport default class Style extends Component {\r\n  state = {\r\n    style: this.props.style,\r\n    bgImg: this.props.bgImg,\r\n    isBGIMG: this.props.isBGIMG,\r\n    selectedIndex: 0,\r\n    count: 0,\r\n  };\r\n\r\n  onColorChange = (value) => {\r\n    const { style, selectedIndex, count } = this.state;\r\n    if (selectedIndex === 3) {\r\n      this.setState({ bgImg: value.hex }, () => {\r\n        this.props.onChange({ bgImg: this.state.bgImg });\r\n      });\r\n    } else {\r\n      style[selectedIndex].value = value.hex;\r\n      this.setState({ count: count + 1 }, () => {\r\n        this.props.onChange({ style: this.state.style });\r\n      });\r\n    }\r\n  };\r\n\r\n  onColorBoxClick = (index) => {\r\n    this.setState({ selectedIndex: index });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.onChange({ style: this.state.style });\r\n  }\r\n\r\n  onUploadDone = (image) => {\r\n    this.setState({ bgImg: image.image }, () => {\r\n      this.props.onChange({ bgImg: this.state.bgImg });\r\n    });\r\n  };\r\n\r\n  onToggle = () => {\r\n    this.setState({ isBGIMG: !this.state.isBGIMG, selectedIndex: 0 }, () => {\r\n      this.props.onChange({ isBGIMG: this.state.isBGIMG });\r\n    });\r\n  };\r\n\r\n  onReset = () => {\r\n    this.setState({ bgImg: \"\" }, () => {\r\n      this.props.onChange({ bgImg: this.state.bgImg });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { style, selectedIndex, isBGIMG, bgImg } = this.state;\r\n    const props = {\r\n      onUploadDone: this.onUploadDone,\r\n    };\r\n    return (\r\n      <div className=\"row\">\r\n        {this.props.layout === 2 ? (\r\n          <div className=\"col-12\">\r\n            Use Background Color Or Image <Switch className=\"m-2\" onChange={this.onToggle} size=\"small\" defaultChecked={isBGIMG} />\r\n          </div>\r\n        ) : null}\r\n        <div className=\"col-4\">\r\n          {style.map((e, i) => (\r\n            <ColorSelector showName={true} {...e} selectedIndex={selectedIndex} onClick={this.onColorBoxClick} index={i} key={i} />\r\n          ))}\r\n          {/* {!isBGIMG && this.props.layout === 2 ? (\r\n            <ColorSelector showName={true} name={\"Mat Background\"} id={\"bgImg\"} value={bgImg} selectedIndex={selectedIndex} onClick={this.onColorBoxClick} index={3} key={3} />\r\n          ) : null} */}\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <SketchPicker defaultValue=\"#452135\" color={selectedIndex === 3 && this.props.layout === 2 && !isBGIMG ? bgImg : style[selectedIndex].value} onChangeComplete={this.onColorChange} />\r\n        </div>\r\n        {isBGIMG ? (\r\n          <div className=\"col-12 \">\r\n            <Uploader {...props} onReset={this.onReset} />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}