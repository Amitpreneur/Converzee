{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Bonus/EmailTimer.js\";\nimport React, { Component } from \"react\";\nimport { ToolLayout, ButtonsGroup } from \"../../layout/ToolLayout\";\nimport Datetime from \"react-datetime\";\nimport moment from \"moment\";\nimport { ReponsiveImage } from \"../../comman/PreviewAble\";\nimport Style from \"../../subpages/create/Style\";\nimport { SketchPicker } from \"react-color\";\nimport { BONUS_CREATE } from \"../../../utils/Routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class EmailTimer extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      date: new Date(),\n      color: \"\",\n      size: 20,\n      preview: true\n    };\n\n    this.onDropDownChange2 = value => {\n      const newValu = value.format(\"YYYY-MM-DD HH:mm:ss\");\n      this.setState({\n        date: newValu\n      });\n    };\n\n    this.onColorChange = color => {\n      this.setState({\n        color: color.rgb\n      });\n    };\n\n    this.changeFont = e => {\n      this.setState({\n        size: e.target.value\n      });\n    };\n\n    this.renderMain = () => {\n      const {\n        date,\n        color,\n        size\n      } = this.state;\n      let inputProps = {\n        placeholder: \"Select Date & Time\",\n        autoComplete: \"off\",\n        readOnly: true\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-element\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label-text\",\n            children: \"Time*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Datetime, {\n            inputProps: inputProps,\n            defaultValue: moment(date),\n            onChange: this.onDropDownChange2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-element\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label-text\",\n            children: \"Font Size*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"cpCode\",\n            className: \"form-control\",\n            value: size,\n            onChange: this.changeFont\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-element\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label-text\",\n            children: \"Font Color*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(SketchPicker, {\n            defaultValue: \"#452135\",\n            color: color,\n            onChangeComplete: this.onColorChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.onClickSave = () => {\n      let script = \"\";\n      const {\n        date,\n        color,\n        size\n      } = this.state;\n      let newColor = \"\".concat(color.r, \",\").concat(color.g, \",\").concat(color.b);\n      let newtime = date == \"\" ? date.replace(\" \", \"+\") : moment(date).format(\"YYYY-MM-DD HH:mm:ss\").replace(\" \", \"+\");\n      let url = \"https://spiety.com/emailTimer/gif.php?time=\".concat(newtime, \"&width=640&height=110&boxColor=8B2860&font=BebasNeue&fontColor=\").concat(newColor, \"&fontSize=\").concat(size, \"&xOffset=155&yOffset=70&labelOffsets=1.4,5,8,11\");\n      script = \"<img src='\" + url + \"' />\";\n      window.gs.setScript(script, true);\n    };\n\n    this.togglePreview = () => {\n      this.setState({\n        preview: !this.state.preview\n      }, () => {\n        setTimeout(() => {\n          this.setState({\n            preview: !this.state.preview\n          });\n        }, 1000);\n      });\n    };\n\n    this.renderRight = () => {\n      const {\n        date,\n        color,\n        size,\n        preview\n      } = this.state;\n      if (!preview) return \"\";\n      let newColor = color !== \"\" ? \"\".concat(color.r, \",\").concat(color.g, \",\").concat(color.b) : \"0,0,0\";\n      let newtime = date == \"\" ? date.replace(\" \", \"+\") : moment(date).format(\"YYYY-MM-DD HH:mm:ss\").replace(\" \", \"+\");\n      let url = \"https://spiety.com/emailTimer/gif.php?time=\".concat(newtime, \"&width=640&height=110&boxColor=8B2860&font=BebasNeue&fontColor=\").concat(newColor, \"&fontSize=\").concat(size || 20, \"&xOffset=155&yOffset=70&labelOffsets=1.4,5,8,11\");\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          height: \"auto\",\n          width: \"100%\",\n          paddingTop: \"51px\"\n        },\n        src: url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 12\n      }, this);\n    };\n\n    this.back = () => {\n      this.props.history.push(BONUS_CREATE);\n    };\n  }\n\n  componentDidMount() {\n    window.gs.navTitle(\"Email Timer\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ToolLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-10 toolItem\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: this.renderMain()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6 mt-2\",\n              children: this.renderRight()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonsGroup, {\n              backUrl: this.back,\n              save: this.onClickSave\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-1 sideBarButtomPanel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Bonus/EmailTimer.js"],"names":["React","Component","ToolLayout","ButtonsGroup","Datetime","moment","ReponsiveImage","Style","SketchPicker","BONUS_CREATE","EmailTimer","state","date","Date","color","size","preview","onDropDownChange2","value","newValu","format","setState","onColorChange","rgb","changeFont","e","target","renderMain","inputProps","placeholder","autoComplete","readOnly","onClickSave","script","newColor","r","g","b","newtime","replace","url","window","gs","setScript","togglePreview","setTimeout","renderRight","height","width","paddingTop","back","props","history","push","componentDidMount","navTitle","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { ToolLayout, ButtonsGroup } from \"../../layout/ToolLayout\";\r\nimport Datetime from \"react-datetime\";\r\nimport moment from \"moment\";\r\nimport { ReponsiveImage } from \"../../comman/PreviewAble\";\r\nimport Style from \"../../subpages/create/Style\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { BONUS_CREATE } from \"../../../utils/Routes\";\r\n\r\nexport default class EmailTimer extends Component {\r\n  state = {\r\n    date: new Date(),\r\n    color: \"\",\r\n    size: 20,\r\n    preview: true,\r\n  };\r\n  componentDidMount() {\r\n    window.gs.navTitle(\"Email Timer\");\r\n  }\r\n  onDropDownChange2 = (value) => {\r\n    const newValu = value.format(\"YYYY-MM-DD HH:mm:ss\");\r\n    this.setState({ date: newValu });\r\n  };\r\n  onColorChange = (color) => {\r\n    this.setState({ color: color.rgb });\r\n  };\r\n  changeFont = (e) => {\r\n    this.setState({ size: e.target.value});\r\n  };\r\n\r\n  renderMain = () => {\r\n    const { date, color, size } = this.state;\r\n    let inputProps = {\r\n      placeholder: \"Select Date & Time\",\r\n      autoComplete: \"off\",\r\n      readOnly: true\r\n    };\r\n\r\n    return (\r\n      <div className=\"\">\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Time*</div>\r\n          <Datetime inputProps={inputProps} defaultValue={moment(date)} onChange={this.onDropDownChange2} />\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Font Size*</div>\r\n          <input type=\"number\" name=\"cpCode\" className=\"form-control\" value={size} onChange={this.changeFont} />\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Font Color*</div>\r\n          <SketchPicker defaultValue=\"#452135\" color={color} onChangeComplete={this.onColorChange} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onClickSave = () => {\r\n    let script = \"\";\r\n    const { date, color, size } = this.state;\r\n    let newColor = `${color.r},${color.g},${color.b}`;\r\n    let newtime = (date == \"\") ? date.replace(\" \", \"+\") : moment(date).format(\"YYYY-MM-DD HH:mm:ss\").replace(\" \", \"+\");\r\n    let url = `https://spiety.com/emailTimer/gif.php?time=${newtime}&width=640&height=110&boxColor=8B2860&font=BebasNeue&fontColor=${newColor}&fontSize=${size}&xOffset=155&yOffset=70&labelOffsets=1.4,5,8,11`;\r\n    script = \"<img src='\" + url + \"' />\";\r\n    window.gs.setScript(script, true);\r\n  };\r\n\r\n  togglePreview = () => {\r\n    this.setState({ preview: !this.state.preview }, () => {\r\n      setTimeout(() => {\r\n        this.setState({ preview: !this.state.preview });\r\n      }, 1000);\r\n    });\r\n  };\r\n\r\n  renderRight = () => {\r\n    const { date, color, size, preview } = this.state;\r\n    if (!preview) return \"\";\r\n    let newColor = color !==\"\" ? `${color.r},${color.g},${color.b}`: `0,0,0` ;\r\n    let newtime = (date == \"\") ? date.replace(\" \", \"+\") : moment(date).format(\"YYYY-MM-DD HH:mm:ss\").replace(\" \", \"+\");\r\n    let url = `https://spiety.com/emailTimer/gif.php?time=${newtime}&width=640&height=110&boxColor=8B2860&font=BebasNeue&fontColor=${newColor}&fontSize=${size || 20}&xOffset=155&yOffset=70&labelOffsets=1.4,5,8,11`;\r\n    return <img style={{ height: \"auto\", width: \"100%\", paddingTop: \"51px\" }} src={url} />;\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(BONUS_CREATE);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ToolLayout>\r\n        <div className=\"row\">\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\r\n              {/* <ButtonsGroup backUrl={this.back} preview={this.togglePreview} save={this.onClickSave} /> */}\r\n              <ButtonsGroup backUrl={this.back} save={this.onClickSave} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">{/* <SideBar layout={this.state.toolData.layout} activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} /> */}</div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}