{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/CreateText.js\";\nimport React, { Component } from \"react\";\nimport DropDown from \"../../../comman/DropDown\";\nimport Editor from \"../../../comman/Editor\";\nimport Util from \"../../../Util\";\nimport { Info } from \"../../../comman/Info\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CreateText extends Component {\n  constructor() {\n    super(...arguments);\n    this.options = [{\n      label: \"Top\",\n      value: \"top\"\n    }, {\n      label: \"Bottom\",\n      value: \"bottom\"\n    }];\n    this.state = {\n      campaignName: this.props.campaignName || \"\",\n      helloBarPos: this.props.helloBarPos || \"\",\n      textBody: this.props.textBody || \"\",\n      cpCode: this.props.cpCode || \"\",\n      codeText: this.props.codeText || \"\"\n    };\n\n    this.onDropDownChange = value => {\n      const {\n        cases\n      } = this.props;\n      this.setState({\n        helloBarPos: value\n      }, () => {\n        this.props.onChange(cases, this.state);\n      });\n    };\n\n    this.onChange = e => {\n      const {\n        cases\n      } = this.props;\n      this.setState({\n        [e.target.name]: e.target.value\n      }, () => {\n        this.props.onChange(cases, this.state);\n      });\n    };\n\n    this.onTextChange = textBody => {\n      const {\n        cases\n      } = this.props;\n      this.setState({\n        textBody\n      }, () => {\n        this.props.onChange(cases, this.state);\n      });\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (Util.isRedirected) {\n      Util.isRedirected = false;\n      const {\n        helloBarPos,\n        textBody\n      } = nextProps;\n      this.setState({\n        helloBarPos,\n        textBody\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const {\n      cases\n    } = this.props;\n    this.props.onChange(cases, this.state);\n  }\n\n  render() {\n    const {\n      campaignName,\n      helloBarPos,\n      textBody,\n      cpCode,\n      codeText\n    } = this.state;\n    const {\n      layout\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-text\",\n          children: [\"Hellobar Text* \", /*#__PURE__*/_jsxDEV(Info, {\n            text: \"Enter text to show on hello bar.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Editor, {\n            value: textBody,\n            name: \"textBody\",\n            onChange: this.onTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-text\",\n          children: [\"Hellobar Position* \", /*#__PURE__*/_jsxDEV(Info, {\n            text: \"Select position on screen like top or bottom.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n          options: this.options,\n          onChange: this.onDropDownChange,\n          value: helloBarPos,\n          className: \"dropdown-style\",\n          style: {\n            width: \"\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), layout === 0 ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-element\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label-text\",\n            children: [\"Coupon Code* \", /*#__PURE__*/_jsxDEV(Info, {\n              text: \"Enter Coupon code text to be applied.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"cpCode\",\n            className: \"form-control\",\n            value: cpCode,\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/CreateText.js"],"names":["React","Component","DropDown","Editor","Util","Info","CreateText","options","label","value","state","campaignName","props","helloBarPos","textBody","cpCode","codeText","onDropDownChange","cases","setState","onChange","e","target","name","onTextChange","componentWillReceiveProps","nextProps","isRedirected","componentWillUnmount","render","layout","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport DropDown from \"../../../comman/DropDown\";\r\nimport Editor from \"../../../comman/Editor\";\r\nimport Util from \"../../../Util\";\r\nimport { Info } from \"../../../comman/Info\";\r\nexport default class CreateText extends Component {\r\n  options = [\r\n    { label: \"Top\", value: \"top\" },\r\n    { label: \"Bottom\", value: \"bottom\" },\r\n  ];\r\n  state = {\r\n    campaignName: this.props.campaignName || \"\",\r\n    helloBarPos: this.props.helloBarPos || \"\",\r\n    textBody: this.props.textBody || \"\",\r\n    cpCode: this.props.cpCode || \"\",\r\n    codeText: this.props.codeText || \"\",\r\n  };\r\n  componentWillReceiveProps(nextProps) {\r\n    if (Util.isRedirected) {\r\n      Util.isRedirected = false;\r\n      const { helloBarPos, textBody } = nextProps;\r\n      this.setState({ helloBarPos, textBody });\r\n    }\r\n  }\r\n  onDropDownChange = (value) => {\r\n    const { cases } = this.props;\r\n    this.setState({ helloBarPos: value }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n  onChange = (e) => {\r\n    const { cases } = this.props;\r\n    this.setState({ [e.target.name]: e.target.value }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n  onTextChange = (textBody) => {\r\n    const { cases } = this.props;\r\n    this.setState({ textBody }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const { cases } = this.props;\r\n    this.props.onChange(cases, this.state);\r\n  }\r\n\r\n  render() {\r\n    const { campaignName, helloBarPos, textBody, cpCode, codeText } = this.state;\r\n    const { layout } = this.props;\r\n    return (\r\n      <div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            Hellobar Text* <Info text=\"Enter text to show on hello bar.\" />\r\n          </div>\r\n          <div>\r\n            <Editor value={textBody} name=\"textBody\" onChange={this.onTextChange} />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">\r\n            Hellobar Position* <Info text=\"Select position on screen like top or bottom.\" />\r\n          </div>\r\n          <DropDown options={this.options} onChange={this.onDropDownChange} value={helloBarPos} className=\"dropdown-style\" style={{ width: \"\" }} />\r\n        </div>\r\n        {layout === 0 ? (\r\n          <React.Fragment>\r\n            <div className=\"form-element\">\r\n              <div className=\"label-text\">\r\n                Coupon Code* <Info text=\"Enter Coupon code text to be applied.\" />\r\n              </div>\r\n              <input type=\"text\" name=\"cpCode\" className=\"form-control\" value={cpCode} onChange={this.onChange} />\r\n            </div>\r\n          </React.Fragment>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}