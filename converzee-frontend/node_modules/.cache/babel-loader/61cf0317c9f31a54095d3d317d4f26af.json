{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/BonusUpsell/Style.js\";\nimport React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport \"react-color-picker/index.css\";\nimport { ColorSelector } from \"../layout/LayoutSelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nexport default class Style extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      elements: this.props.elements,\n      selected: this.props.selected\n    };\n\n    this.onClickElement = i => {\n      const {\n        cases\n      } = this.props;\n      this.setState({\n        selected: i\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onColorChange = color => {\n      const {\n        cases\n      } = this.props;\n      const {\n        elements,\n        selected\n      } = this.state;\n      elements[selected].color = color.hex;\n      this.setState({\n        elements\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.renderElements = (ele, i) => {\n      const {\n        selected\n      } = this.state;\n      const selectedDiv = selected === i ? \"element-div-active\" : \"\";\n      const selectedText = selected === i ? \"element-text-active\" : \"\";\n      const {\n        layout\n      } = this.props;\n      let dTemp = false;\n      if (layout !== 0 && ele.name == \"arrowBackground\") dTemp = true;\n      if (layout !== 2 && ele.name == \"timerBox\") dTemp = true;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element-list\",\n        style: dTemp ? {\n          display: \"none\"\n        } : {},\n        onClick: () => this.onClickElement(i),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-list-text \" + selectedText,\n          children: ele.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-list-div \" + selectedDiv,\n          style: {\n            backgroundColor: ele.color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  componentWillUnmount() {\n    const {\n      cases\n    } = this.props;\n    this.props.onChange(cases, this.state);\n  }\n\n  render() {\n    const {\n      elements,\n      selected\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: elements.map((e, i) => /*#__PURE__*/_createElement(ColorSelector, { ...e,\n          selectedIndex: selected,\n          onClick: this.onClickElement,\n          index: i,\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8\",\n        children: /*#__PURE__*/_jsxDEV(SketchPicker, {\n          defaultValue: \"#452135\",\n          color: elements[selected].color,\n          onChangeComplete: this.onColorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/BonusUpsell/Style.js"],"names":["React","Component","SketchPicker","ColorSelector","Style","state","elements","props","selected","onClickElement","i","cases","setState","onChange","onColorChange","color","hex","renderElements","ele","selectedDiv","selectedText","layout","dTemp","name","display","text","backgroundColor","componentWillUnmount","render","map","e"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\n\r\nimport \"react-color-picker/index.css\";\r\nimport { ColorSelector } from \"../layout/LayoutSelector\";\r\nexport default class Style extends Component {\r\n  state = {\r\n    elements: this.props.elements,\r\n    selected: this.props.selected,\r\n  };\r\n\r\n  onClickElement = (i) => {\r\n    const { cases } = this.props;\r\n    this.setState({ selected: i });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const { cases } = this.props;\r\n    this.props.onChange(cases, this.state);\r\n  }\r\n\r\n  onColorChange = (color) => {\r\n    const { cases } = this.props;\r\n    const { elements, selected } = this.state;\r\n    elements[selected].color = color.hex;\r\n    this.setState({ elements });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  renderElements = (ele, i) => {\r\n    const { selected } = this.state;\r\n    const selectedDiv = selected === i ? \"element-div-active\" : \"\";\r\n    const selectedText = selected === i ? \"element-text-active\" : \"\";\r\n    const { layout } = this.props;\r\n    let dTemp = false;\r\n    if (layout !== 0 && ele.name == \"arrowBackground\") dTemp = true;\r\n    if (layout !== 2 && ele.name == \"timerBox\") dTemp = true;\r\n    return (\r\n      <div className={\"element-list\"} style={dTemp ? { display: \"none\" } : {}} onClick={() => this.onClickElement(i)}>\r\n        <div className={\"element-list-text \" + selectedText}>{ele.text}</div>\r\n        <div className={\"element-list-div \" + selectedDiv} style={{ backgroundColor: ele.color }}></div>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    const { elements, selected } = this.state;\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-4\">\r\n          {elements.map((e, i) => (\r\n            <ColorSelector {...e} selectedIndex={selected} onClick={this.onClickElement} index={i} key={i} />\r\n          ))}\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <SketchPicker defaultValue=\"#452135\" color={elements[selected].color} onChangeComplete={this.onColorChange} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}