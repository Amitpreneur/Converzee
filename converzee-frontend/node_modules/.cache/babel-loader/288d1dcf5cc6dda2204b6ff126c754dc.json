{"ast":null,"code":"import React,{Component}from\"react\";import{ToolLayout,ButtonsGroup}from\"../../layout/ToolLayout\";import Datetime from\"react-datetime\";import moment from\"moment\";import{ReponsiveImage}from\"../../comman/PreviewAble\";import Style from\"../../subpages/create/Style\";import{SketchPicker}from\"react-color\";import{BONUS_CREATE}from\"../../../utils/Routes\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default class EmailTimer extends Component{constructor(){super(...arguments);this.state={date:new Date(),color:\"\",size:20,preview:true};this.onDropDownChange2=value=>{const newValu=value.format(\"YYYY-MM-DD HH:mm:ss\");this.setState({date:newValu});};this.onColorChange=color=>{this.setState({color:color.rgb});};this.changeFont=e=>{this.setState({size:e.target.value});};this.renderMain=()=>{const{date,color,size}=this.state;let inputProps={placeholder:\"Select Date & Time\",autoComplete:\"off\",readOnly:true};return/*#__PURE__*/_jsxs(\"div\",{className:\"\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-element\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"label-text\",children:\"Time*\"}),/*#__PURE__*/_jsx(Datetime,{inputProps:inputProps,defaultValue:moment(date),onChange:this.onDropDownChange2})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-element\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"label-text\",children:\"Font Size*\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"cpCode\",className:\"form-control\",value:size,onChange:this.changeFont})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-element\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"label-text\",children:\"Font Color*\"}),/*#__PURE__*/_jsx(SketchPicker,{defaultValue:\"#452135\",color:color,onChangeComplete:this.onColorChange})]})]});};this.onClickSave=()=>{let script=\"\";const{date,color,size}=this.state;let newColor=\"\".concat(color.r,\",\").concat(color.g,\",\").concat(color.b);let newtime=date==\"\"?date.replace(\" \",\"+\"):moment(date).format(\"YYYY-MM-DD HH:mm:ss\").replace(\" \",\"+\");let url=\"https://spiety.com/emailTimer/gif.php?time=\".concat(newtime,\"&width=640&height=110&boxColor=8B2860&font=BebasNeue&fontColor=\").concat(newColor,\"&fontSize=\").concat(size,\"&xOffset=155&yOffset=70&labelOffsets=1.4,5,8,11\");script=\"<img src='\"+url+\"' />\";window.gs.setScript(script,true);};this.togglePreview=()=>{this.setState({preview:!this.state.preview},()=>{setTimeout(()=>{this.setState({preview:!this.state.preview});},1000);});};this.renderRight=()=>{const{date,color,size,preview}=this.state;if(!preview)return\"\";let newColor=color!==\"\"?\"\".concat(color.r,\",\").concat(color.g,\",\").concat(color.b):\"0,0,0\";let newtime=date==\"\"?date.replace(\" \",\"+\"):moment(date).format(\"YYYY-MM-DD HH:mm:ss\").replace(\" \",\"+\");let url=\"https://spiety.com/emailTimer/gif.php?time=\".concat(newtime,\"&width=640&height=110&boxColor=8B2860&font=BebasNeue&fontColor=\").concat(newColor,\"&fontSize=\").concat(size||20,\"&xOffset=155&yOffset=70&labelOffsets=1.4,5,8,11\");return/*#__PURE__*/_jsx(\"img\",{style:{height:\"auto\",width:\"100%\",paddingTop:\"51px\"},src:url});};this.back=()=>{this.props.history.push(BONUS_CREATE);};}componentDidMount(){window.gs.navTitle(\"Email Timer\");}render(){return/*#__PURE__*/_jsx(ToolLayout,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-10 toolItem\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:this.renderMain()}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6 mt-2\",children:this.renderRight()}),/*#__PURE__*/_jsx(ButtonsGroup,{backUrl:this.back,save:this.onClickSave})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-1 sideBarButtomPanel\"})]})});}}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Bonus/EmailTimer.js"],"names":["React","Component","ToolLayout","ButtonsGroup","Datetime","moment","ReponsiveImage","Style","SketchPicker","BONUS_CREATE","EmailTimer","state","date","Date","color","size","preview","onDropDownChange2","value","newValu","format","setState","onColorChange","rgb","changeFont","e","target","renderMain","inputProps","placeholder","autoComplete","readOnly","onClickSave","script","newColor","r","g","b","newtime","replace","url","window","gs","setScript","togglePreview","setTimeout","renderRight","height","width","paddingTop","back","props","history","push","componentDidMount","navTitle","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { ToolLayout, ButtonsGroup } from \"../../layout/ToolLayout\";\r\nimport Datetime from \"react-datetime\";\r\nimport moment from \"moment\";\r\nimport { ReponsiveImage } from \"../../comman/PreviewAble\";\r\nimport Style from \"../../subpages/create/Style\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { BONUS_CREATE } from \"../../../utils/Routes\";\r\n\r\nexport default class EmailTimer extends Component {\r\n  state = {\r\n    date: new Date(),\r\n    color: \"\",\r\n    size: 20,\r\n    preview: true,\r\n  };\r\n  componentDidMount() {\r\n    window.gs.navTitle(\"Email Timer\");\r\n  }\r\n  onDropDownChange2 = (value) => {\r\n    const newValu = value.format(\"YYYY-MM-DD HH:mm:ss\");\r\n    this.setState({ date: newValu });\r\n  };\r\n  onColorChange = (color) => {\r\n    this.setState({ color: color.rgb });\r\n  };\r\n  changeFont = (e) => {\r\n    this.setState({ size: e.target.value});\r\n  };\r\n\r\n  renderMain = () => {\r\n    const { date, color, size } = this.state;\r\n    let inputProps = {\r\n      placeholder: \"Select Date & Time\",\r\n      autoComplete: \"off\",\r\n      readOnly: true\r\n    };\r\n\r\n    return (\r\n      <div className=\"\">\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Time*</div>\r\n          <Datetime inputProps={inputProps} defaultValue={moment(date)} onChange={this.onDropDownChange2} />\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Font Size*</div>\r\n          <input type=\"number\" name=\"cpCode\" className=\"form-control\" value={size} onChange={this.changeFont} />\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Font Color*</div>\r\n          <SketchPicker defaultValue=\"#452135\" color={color} onChangeComplete={this.onColorChange} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onClickSave = () => {\r\n    let script = \"\";\r\n    const { date, color, size } = this.state;\r\n    let newColor = `${color.r},${color.g},${color.b}`;\r\n    let newtime = (date == \"\") ? date.replace(\" \", \"+\") : moment(date).format(\"YYYY-MM-DD HH:mm:ss\").replace(\" \", \"+\");\r\n    let url = `https://spiety.com/emailTimer/gif.php?time=${newtime}&width=640&height=110&boxColor=8B2860&font=BebasNeue&fontColor=${newColor}&fontSize=${size}&xOffset=155&yOffset=70&labelOffsets=1.4,5,8,11`;\r\n    script = \"<img src='\" + url + \"' />\";\r\n    window.gs.setScript(script, true);\r\n  };\r\n\r\n  togglePreview = () => {\r\n    this.setState({ preview: !this.state.preview }, () => {\r\n      setTimeout(() => {\r\n        this.setState({ preview: !this.state.preview });\r\n      }, 1000);\r\n    });\r\n  };\r\n\r\n  renderRight = () => {\r\n    const { date, color, size, preview } = this.state;\r\n    if (!preview) return \"\";\r\n    let newColor = color !==\"\" ? `${color.r},${color.g},${color.b}`: `0,0,0` ;\r\n    let newtime = (date == \"\") ? date.replace(\" \", \"+\") : moment(date).format(\"YYYY-MM-DD HH:mm:ss\").replace(\" \", \"+\");\r\n    let url = `https://spiety.com/emailTimer/gif.php?time=${newtime}&width=640&height=110&boxColor=8B2860&font=BebasNeue&fontColor=${newColor}&fontSize=${size || 20}&xOffset=155&yOffset=70&labelOffsets=1.4,5,8,11`;\r\n    return <img style={{ height: \"auto\", width: \"100%\", paddingTop: \"51px\" }} src={url} />;\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(BONUS_CREATE);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ToolLayout>\r\n        <div className=\"row\">\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\r\n              {/* <ButtonsGroup backUrl={this.back} preview={this.togglePreview} save={this.onClickSave} /> */}\r\n              <ButtonsGroup backUrl={this.back} save={this.onClickSave} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">{/* <SideBar layout={this.state.toolData.layout} activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} /> */}</div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}