{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBarTimer/index.js\";\nimport React, { Component } from \"react\";\nimport \"./index.css\";\nimport CreateSideBar from \"./CreateSideBar\";\nimport CreateText from \"./CreateText\";\nimport Code from \"./Code\";\nimport Style from \"./Style\";\nimport Layout from \"./Layout\";\nimport Timer from \"./Timer\";\nimport CTA from \"./CTA\";\nimport RequestHandler from \"../../../../actions/RequestHandler\";\nimport { SAVE_TOOL, GET_ONE_TOOL, getPath } from \"../../../../actions/URLs\";\nimport ToolUtil from \"../../../../utils/ToolUtil\";\nimport Util from \"../../../Util\";\nimport Preview from \"./Preview\";\nimport { HelloBarTimerModalResponse, HelloBarTimerModal } from \"../../../utils/Modal\";\nimport { ButtonsGroup, ToolLayout } from \"../../../layout/ToolLayout\";\nimport { Modal } from \"antd\";\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\nconst helloBarTimerr = {\n  toolName: \"\",\n  activeTab: 4,\n  create: {\n    campaignName: Util.CAMPAIGNS_NAME,\n    helloBarPos: \"top\",\n    textBody: \"\",\n    cpCode: \"\",\n    codeText: \"\"\n  },\n  cta: {\n    ctaText: \"\",\n    ctaAction: \"redirect\",\n    redirectUrl: \"\"\n  },\n  timer: {\n    timerType: \"DATE_AND_TIME_BASED\",\n    endDateTime: new Date(),\n    timeZone: Util.getTimeZoneList()[0].value,\n    redirectUrl: \"\",\n    whenTimeExp: \"redirect\",\n    DD: 0,\n    HH: 0,\n    MM: 0,\n    SS: 0\n  },\n  layout: 1,\n  STYLE: {\n    elements: [{\n      name: \"highlight\",\n      text: \"HelloBar Background\",\n      color: \"#420068\"\n    }, {\n      name: \"highlightBackground\",\n      text: \"CTA Background\",\n      color: \"#ffcc00\"\n    }, {\n      name: \"arrowBackground\",\n      text: \"Arrow Background\",\n      color: \"#210b45\"\n    }, {\n      name: \"timerBox\",\n      text: \"Timer Box\",\n      color: \"#000\"\n    }, {\n      name: \"timerTextColor\",\n      text: \"Timer Color\",\n      color: \"#fff\"\n    }],\n    selected: 0\n  },\n  CODE: {\n    include: [{\n      type: \"contains\",\n      url: \"\"\n    }],\n    exclude: [{\n      type: \"contains\",\n      url: \"\"\n    }]\n  },\n  file: {\n    file: []\n  },\n  toolId: 0,\n  status: true,\n  openPopUp: false,\n  popUpScript: \"\",\n  preview: false,\n  _id: null // templateType: null\n\n};\nexport default class HelloBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.toolId = 0;\n    this.state = helloBarTimerr;\n    this.loaded = false;\n\n    this.onChangeActive = tabIndex => {\n      const {\n        activeTab\n      } = this.state;\n\n      if (activeTab !== tabIndex) {\n        this.setState({\n          activeTab: tabIndex\n        });\n      }\n    };\n\n    this.onUpdate = (index, data) => {\n      switch (index) {\n        case 1:\n          this.setState({\n            create: data\n          });\n          break;\n\n        case 2:\n          this.setState({\n            cta: data\n          });\n          break;\n\n        case 3:\n          this.setState({\n            timer: data\n          });\n          break;\n\n        case 4:\n          this.setState({\n            layout: data\n          });\n          break;\n\n        case 5:\n          this.setState({\n            STYLE: data\n          });\n          break;\n\n        case 6:\n          this.setState({\n            CODE: data\n          });\n          break;\n\n        case 7:\n          this.setState({\n            file: data\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.renderMain = () => {\n      const {\n        activeTab,\n        create,\n        cta,\n        timer,\n        layout,\n        STYLE,\n        CODE,\n        file\n      } = this.state;\n      if (!this.loaded) return null;\n      let component = null;\n\n      switch (activeTab) {\n        case 1:\n          component = React.createElement(CreateText, Object.assign({}, create, {\n            layout: layout,\n            cases: 1,\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }));\n          break;\n\n        case 2:\n          component = React.createElement(CTA, Object.assign({}, cta, {\n            cases: 2,\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }));\n          break;\n\n        case 3:\n          component = React.createElement(Timer, Object.assign({}, timer, {\n            cases: 3,\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }));\n          break;\n\n        case 4:\n          component = React.createElement(Layout, {\n            layout: layout,\n            cases: 4,\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          });\n          break;\n\n        case 5:\n          component = React.createElement(Style, Object.assign({}, STYLE, {\n            layout: layout,\n            cases: 5,\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }));\n          break;\n\n        case 6:\n          component = React.createElement(Code, Object.assign({}, CODE, {\n            cases: 6,\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }));\n          break;\n\n        default:\n          component = React.createElement(CreateText, Object.assign({}, create, {\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }));\n          break;\n      }\n\n      return component;\n    };\n\n    this.onClickSave = () => {\n      const toolData = this.state;\n\n      if (this.state.CODE.include[0].url !== \"\") {\n        if (!Util.isArrayEqual(helloBarTimerr, this.state, 3)) {\n          RequestHandler.PostRequest(SAVE_TOOL, {\n            toolData: HelloBarTimerModal(toolData)\n          }, (res, err) => {\n            if (res) {\n              if (res.data.success) {\n                Modal.success({\n                  content: \"Campaign Save SuccessFully\"\n                });\n                setTimeout(() => {\n                  this.props.history.push(\"/Campaigns\");\n                }, 1000);\n              } else {\n                window.gs.toast(res.data.message, {\n                  position: \"bottom-right\",\n                  type: window.gs.toast.TYPE.FAILED\n                });\n              }\n            } else {\n              console.log(err);\n            }\n          });\n        }\n      } else {\n        Modal.warning({\n          content: \"Should Contain atleast one trigger point\"\n        });\n      }\n    };\n\n    this.closePopup = () => {\n      this.setState({\n        openPopUp: false,\n        success: false\n      });\n      this.props.history.push(\"/\");\n    };\n\n    this.setTemplate = i => {\n      this.setState({\n        templateType: i\n      });\n    };\n\n    this.onDrawerClose = () => {\n      if (this.state.visible) this.setState({\n        visible: false\n      });else this.setState({\n        visible: true\n      });\n    };\n\n    this.renderRight = () => {\n      const {\n        layout\n      } = this.state;\n      if (layout === 0) return React.createElement(ReponsiveImage, {\n        isAs: true,\n        url: \"asset/hbt1.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      });\n      if (layout === 1) return React.createElement(ReponsiveImage, {\n        isAs: true,\n        url: \"asset/hbt2.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      });\n      return React.createElement(ReponsiveImage, {\n        isAs: true,\n        url: \"asset/hbt3.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      });\n    };\n\n    this.back = () => {\n      this.props.history.push(\"/Create\");\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match ? this.props.match.params ? this.props.match.params.id : null : null;\n\n    if (id) {\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\n        this.loaded = true;\n\n        if (res) {\n          Util.isRedirected = true;\n          const data = HelloBarTimerModalResponse(res);\n\n          if (data) {\n            this.setState(data, () => {\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\n            });\n          }\n        }\n      });\n    } else {\n      const toolId = 17;\n      this.loaded = true;\n      this.setState({\n        toolId: toolId,\n        toolName: ToolUtil.getTool(toolId),\n        name: Util.CAMPAIGNS_NAME\n      });\n      Util.RedirectWhenCampaignEmpty(this.props);\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\n    }\n  }\n\n  render() {\n    const itemId = this.props.location.state;\n    const {\n      preview\n    } = this.state;\n    return React.createElement(ToolLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, preview ? React.createElement(Preview, Object.assign({}, this.state, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      className: \"col-10 toolItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, this.renderMain()), React.createElement(\"div\", {\n      className: \"col-md-6 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, this.renderRight()), React.createElement(ButtonsGroup, {\n      preview: () => {\n        this.setState({\n          preview: !preview\n        });\n      },\n      backUrl: this.back,\n      save: this.onClickSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-1 sideBarButtomPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(CreateSideBar, Object.assign({\n      activeTab: this.state.activeTab,\n      onChangeActive: this.onChangeActive\n    }, itemId, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    })))));\n  }\n\n}\nHelloBar.CAMPAIGNS_NAME = \"\";","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBarTimer/index.js"],"names":["React","Component","CreateSideBar","CreateText","Code","Style","Layout","Timer","CTA","RequestHandler","SAVE_TOOL","GET_ONE_TOOL","getPath","ToolUtil","Util","Preview","HelloBarTimerModalResponse","HelloBarTimerModal","ButtonsGroup","ToolLayout","Modal","ReponsiveImage","helloBarTimerr","toolName","activeTab","create","campaignName","CAMPAIGNS_NAME","helloBarPos","textBody","cpCode","codeText","cta","ctaText","ctaAction","redirectUrl","timer","timerType","endDateTime","Date","timeZone","getTimeZoneList","value","whenTimeExp","DD","HH","MM","SS","layout","STYLE","elements","name","text","color","selected","CODE","include","type","url","exclude","file","toolId","status","openPopUp","popUpScript","preview","_id","HelloBar","state","loaded","onChangeActive","tabIndex","setState","onUpdate","index","data","renderMain","component","onClickSave","toolData","isArrayEqual","PostRequest","res","err","success","content","setTimeout","props","history","push","window","gs","toast","message","position","TYPE","FAILED","console","log","warning","closePopup","setTemplate","i","templateType","onDrawerClose","visible","renderRight","back","componentDidMount","id","match","params","isRedirected","navTitle","getTool","RedirectWhenCampaignEmpty","render","itemId","location"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./index.css\";\nimport CreateSideBar from \"./CreateSideBar\";\nimport CreateText from \"./CreateText\";\nimport Code from \"./Code\";\nimport Style from \"./Style\";\nimport Layout from \"./Layout\";\nimport Timer from \"./Timer\";\nimport CTA from \"./CTA\";\nimport RequestHandler from \"../../../../actions/RequestHandler\";\nimport { SAVE_TOOL, GET_ONE_TOOL, getPath } from \"../../../../actions/URLs\";\nimport ToolUtil from \"../../../../utils/ToolUtil\";\nimport Util from \"../../../Util\";\nimport Preview from \"./Preview\";\nimport { HelloBarTimerModalResponse, HelloBarTimerModal } from \"../../../utils/Modal\";\nimport { ButtonsGroup, ToolLayout } from \"../../../layout/ToolLayout\";\nimport { Modal } from \"antd\";\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\n\nconst helloBarTimerr = {\n  toolName: \"\",\n  activeTab: 4,\n  create: { campaignName: Util.CAMPAIGNS_NAME, helloBarPos: \"top\", textBody: \"\", cpCode: \"\", codeText: \"\" },\n  cta: { ctaText: \"\", ctaAction: \"redirect\", redirectUrl: \"\" },\n  timer: { timerType: \"DATE_AND_TIME_BASED\", endDateTime: new Date(), timeZone: Util.getTimeZoneList()[0].value, redirectUrl: \"\", whenTimeExp: \"redirect\", DD: 0, HH: 0, MM: 0, SS: 0 },\n  layout: 1,\n  STYLE: {\n    elements: [\n      { name: \"highlight\", text: \"HelloBar Background\", color: \"#420068\" },\n      { name: \"highlightBackground\", text: \"CTA Background\", color: \"#ffcc00\" },\n      { name: \"arrowBackground\", text: \"Arrow Background\", color: \"#210b45\" },\n      { name: \"timerBox\", text: \"Timer Box\", color: \"#000\" },\n      { name: \"timerTextColor\", text: \"Timer Color\", color: \"#fff\" },\n    ],\n    selected: 0,\n  },\n  CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: \"\" }] },\n  file: { file: [] },\n  toolId: 0,\n  status: true,\n  openPopUp: false,\n  popUpScript: \"\",\n  preview: false,\n  _id: null,\n  // templateType: null\n};\nexport default class HelloBar extends Component {\n  static CAMPAIGNS_NAME = \"\";\n  toolId = 0;\n  state = helloBarTimerr;\n  loaded = false;\n  componentDidMount() {\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\n    if (id) {\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\n        this.loaded = true;\n        if (res) {\n          Util.isRedirected = true;\n          const data = HelloBarTimerModalResponse(res);\n          if (data) {\n            this.setState(data, () => {\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\n            });\n          }\n        }\n      });\n    } else {\n      const toolId = 17;\n      this.loaded = true;\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\n      Util.RedirectWhenCampaignEmpty(this.props);\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\n    }\n  }\n  onChangeActive = (tabIndex) => {\n    const { activeTab } = this.state;\n    if (activeTab !== tabIndex) {\n      this.setState({ activeTab: tabIndex });\n    }\n  };\n  onUpdate = (index, data) => {\n    switch (index) {\n      case 1:\n        this.setState({ create: data });\n        break;\n      case 2:\n        this.setState({ cta: data });\n        break;\n      case 3:\n        this.setState({ timer: data });\n        break;\n      case 4:\n        this.setState({ layout: data });\n        break;\n      case 5:\n        this.setState({ STYLE: data });\n        break;\n      case 6:\n        this.setState({ CODE: data });\n        break;\n      case 7:\n        this.setState({ file: data });\n        break;\n      default:\n        break;\n    }\n  };\n  renderMain = () => {\n    const { activeTab, create, cta, timer, layout, STYLE, CODE, file } = this.state;\n    if (!this.loaded) return null;\n    let component = null;\n    switch (activeTab) {\n      case 1:\n        component = <CreateText {...create} layout={layout} cases={1} onChange={this.onUpdate} />;\n        break;\n      case 2:\n        component = <CTA {...cta} cases={2} onChange={this.onUpdate} />;\n        break;\n      case 3:\n        component = <Timer {...timer} cases={3} onChange={this.onUpdate} />;\n        break;\n      case 4:\n        component = <Layout layout={layout} cases={4} onChange={this.onUpdate} />;\n        break;\n      case 5:\n        component = <Style {...STYLE} layout={layout} cases={5} onChange={this.onUpdate} />;\n        break;\n      case 6:\n        component = <Code {...CODE} cases={6} onChange={this.onUpdate} />;\n        break;\n      default:\n        component = <CreateText {...create} onChange={this.onUpdate} />;\n        break;\n    }\n    return component;\n  };\n\n  onClickSave = () => {\n    const toolData = this.state;\n    if (this.state.CODE.include[0].url !== \"\") {\n      if (!Util.isArrayEqual(helloBarTimerr, this.state, 3)) {\n        RequestHandler.PostRequest(SAVE_TOOL, { toolData: HelloBarTimerModal(toolData) }, (res, err) => {\n          if (res) {\n            if (res.data.success) {\n              Modal.success({\n                content: \"Campaign Save SuccessFully\",\n              });\n              setTimeout(() => {\n                this.props.history.push(\"/Campaigns\");\n              }, 1000);\n            } else {\n              window.gs.toast(res.data.message, { position: \"bottom-right\", type: window.gs.toast.TYPE.FAILED });\n            }\n          } else {\n            console.log(err);\n          }\n        });\n      }\n    } else {\n      Modal.warning({\n        content: \"Should Contain atleast one trigger point\",\n      });\n    }\n  };\n\n  closePopup = () => {\n    this.setState({ openPopUp: false, success: false });\n    this.props.history.push(\"/\");\n  };\n  setTemplate = (i) => {\n    this.setState({ templateType: i });\n  };\n\n  onDrawerClose = () => {\n    if (this.state.visible) this.setState({ visible: false });\n    else this.setState({ visible: true });\n  };\n\n  renderRight = () => {\n    const { layout } = this.state;\n    if (layout === 0) return <ReponsiveImage isAs={true} url={\"asset/hbt1.png\"} />;\n    if (layout === 1) return <ReponsiveImage isAs={true} url={\"asset/hbt2.png\"} />;\n    return <ReponsiveImage isAs={true} url={\"asset/hbt3.png\"} />;\n  };\n\n  back = () => {\n    this.props.history.push(\"/Create\");\n  };\n\n  render() {\n    const itemId = this.props.location.state;\n    const { preview } = this.state;\n\n    return (\n      <ToolLayout>\n        <div className=\"row\">\n          {preview ? <Preview {...this.state} /> : null}\n          <div className=\"col-10 toolItem\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">{this.renderMain()}</div>\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\n              <ButtonsGroup\n                preview={() => {\n                  this.setState({ preview: !preview });\n                }}\n                backUrl={this.back}\n                save={this.onClickSave}\n              />\n            </div>\n          </div>\n          <div className=\"col-1 sideBarButtomPanel\">\n            <CreateSideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} {...itemId} />\n          </div>\n        </div>\n      </ToolLayout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}