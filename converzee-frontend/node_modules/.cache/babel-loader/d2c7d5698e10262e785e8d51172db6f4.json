{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/Text.js\";\nimport React, { Component } from \"react\";\nimport Editor from \"../comman/Editor\";\nimport { Switch } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Text extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      text: this.props.text,\n      subTitle: this.props.subTitle,\n      isNameInput: this.props.isNameInput\n    };\n\n    this.onChange = value => {\n      this.setState({\n        text: value\n      }, () => {\n        this.props.onChange({\n          text: this.state.text\n        });\n      });\n    };\n\n    this.onChange1 = value => {\n      this.setState({\n        subTitle: value\n      }, () => {\n        this.props.onChange({\n          subTitle: this.state.subTitle\n        });\n      });\n    };\n\n    this.onToggle = () => {\n      this.setState({\n        isNameInput: !this.state.isNameInput\n      }, () => {\n        this.props.onChange({\n          isNameInput: this.state.isNameInput\n        });\n      });\n    };\n  }\n\n  render() {\n    const {\n      text,\n      subTitle,\n      isNameInput\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-text\",\n          children: \"Text*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Editor, {\n          value: text,\n          name: \"text\",\n          onChange: this.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), this.props.layout != 3 && this.props.layout != 4 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-text\",\n          children: \"Name Input*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          className: \"m-2\",\n          onChange: this.onToggle,\n          size: \"small\",\n          defaultChecked: isNameInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this) : null, this.props.layout === 2 ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-element\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label-text\",\n            children: \"Sub Title*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Editor, {\n            value: subTitle,\n            name: \"subTitle\",\n            onChange: this.onChange1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/Text.js"],"names":["React","Component","Editor","Switch","Text","state","text","props","subTitle","isNameInput","onChange","value","setState","onChange1","onToggle","render","layout"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,MAAT,QAAuB,MAAvB;;AACA,eAAe,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC1CI,KAD0C,GAClC;AACNC,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IADX;AAENE,MAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAFf;AAGNC,MAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWE;AAHlB,KADkC;;AAAA,SAM1CC,QAN0C,GAM9BC,KAAD,IAAW;AACpB,WAAKC,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAEK;AAAR,OAAd,EAA+B,MAAM;AACnC,aAAKJ,KAAL,CAAWG,QAAX,CAAoB;AAAEJ,UAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC;AAAnB,SAApB;AACD,OAFD;AAGD,KAVyC;;AAAA,SAY1CO,SAZ0C,GAY7BF,KAAD,IAAW;AACrB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAEG;AAAZ,OAAd,EAAmC,MAAM;AACvC,aAAKJ,KAAL,CAAWG,QAAX,CAAoB;AAAEF,UAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG;AAAvB,SAApB;AACD,OAFD;AAGD,KAhByC;;AAAA,SAkB1CM,QAlB0C,GAkB/B,MAAM;AACf,WAAKF,QAAL,CAAc;AAAEH,QAAAA,WAAW,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AAA3B,OAAd,EAAwD,MAAM;AAC5D,aAAKF,KAAL,CAAWG,QAAX,CAAoB;AAAED,UAAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWI;AAA1B,SAApB;AACD,OAFD;AAGD,KAtByC;AAAA;;AAwB1CM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,IAAF;AAAQE,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,QAAkC,KAAKJ,KAA7C;AACA,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAEC,IAAf;AAAqB,UAAA,IAAI,EAAC,MAA1B;AAAiC,UAAA,QAAQ,EAAE,KAAKI;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAKI,KAAKH,KAAL,CAAWS,MAAX,IAAqB,CAArB,IAA0B,KAAKT,KAAL,CAAWS,MAAX,IAAqB,CAAhD,gBACD;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAwB,UAAA,QAAQ,EAAE,KAAKF,QAAvC;AAAiD,UAAA,IAAI,EAAC,OAAtD;AAA8D,UAAA,cAAc,EAAEL;AAA9E;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,GAIO,IATV,EAWG,KAAKF,KAAL,CAAWS,MAAX,KAAsB,CAAtB,gBACC,QAAC,KAAD,CAAO,QAAP;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAER,QAAf;AAAyB,YAAA,IAAI,EAAC,UAA9B;AAAyC,YAAA,QAAQ,EAAE,KAAKK;AAAxD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,GAOG,IAlBN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AAhDyC","sourcesContent":["import React, { Component } from \"react\";\r\nimport Editor from \"../comman/Editor\";\r\nimport { Switch } from \"antd\";\r\nexport default class Text extends Component {\r\n  state = {\r\n    text: this.props.text,\r\n    subTitle: this.props.subTitle,\r\n    isNameInput: this.props.isNameInput,\r\n  };\r\n  onChange = (value) => {\r\n    this.setState({ text: value }, () => {\r\n      this.props.onChange({ text: this.state.text });\r\n    });\r\n  };\r\n\r\n  onChange1 = (value) => {\r\n    this.setState({ subTitle: value }, () => {\r\n      this.props.onChange({ subTitle: this.state.subTitle });\r\n    });\r\n  };\r\n\r\n  onToggle = () => {\r\n    this.setState({ isNameInput: !this.state.isNameInput }, () => {\r\n      this.props.onChange({ isNameInput: this.state.isNameInput });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { text, subTitle, isNameInput } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Text*</div>\r\n          <Editor value={text} name=\"text\" onChange={this.onChange} />\r\n        </div>\r\n        {(this.props.layout != 3 && this.props.layout != 4 )? (\r\n        <div className=\"form-element\">\r\n          <div className=\"label-text\">Name Input*</div>\r\n          <Switch className=\"m-2\" onChange={this.onToggle} size=\"small\" defaultChecked={isNameInput} />\r\n        </div>):null\r\n        }\r\n        {this.props.layout === 2 ? (\r\n          <React.Fragment>\r\n            <div className=\"form-element\">\r\n              <div className=\"label-text\">Sub Title*</div>\r\n              <Editor value={subTitle} name=\"subTitle\" onChange={this.onChange1} />\r\n            </div>\r\n          </React.Fragment>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}