{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ReviewEngin/Style.js\";\nimport React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport { ColorSelector } from \"../layout/LayoutSelector\";\nexport default class Style extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      style: this.props.style,\n      bgImg: this.props.bgImg,\n      isBGIMG: this.props.isBGIMG,\n      selectedIndex: 0,\n      count: 0\n    };\n\n    this.onColorChange = value => {\n      const {\n        style,\n        selectedIndex,\n        count\n      } = this.state;\n\n      if (selectedIndex === 3) {\n        this.setState({\n          bgImg: value.hex\n        }, () => {\n          this.props.onChange({\n            bgImg: this.state.bgImg\n          });\n        });\n      } else {\n        style[selectedIndex].value = value.hex;\n        this.setState({\n          count: count + 1\n        }, () => {\n          this.props.onChange({\n            style: this.state.style\n          });\n        });\n      }\n    };\n\n    this.onColorBoxClick = index => {\n      this.setState({\n        selectedIndex: index\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.onChange({\n      style: this.state.style\n    });\n  }\n\n  render() {\n    const {\n      style,\n      selectedIndex\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, style.map((e, i) => React.createElement(ColorSelector, Object.assign({\n      showName: true\n    }, e, {\n      selectedIndex: selectedIndex,\n      onClick: this.onColorBoxClick,\n      index: i,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(SketchPicker, {\n      defaultValue: \"#452135\",\n      presetColors: [\"TRANSPARENT\"],\n      color: style[selectedIndex].value,\n      onChangeComplete: this.onColorChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ReviewEngin/Style.js"],"names":["React","Component","SketchPicker","ColorSelector","Style","state","style","props","bgImg","isBGIMG","selectedIndex","count","onColorChange","value","setState","hex","onChange","onColorBoxClick","index","componentWillUnmount","render","map","e","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,eAAe,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC3CI,KAD2C,GACnC;AACNC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KADZ;AAENE,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAFZ;AAGNC,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,OAHd;AAINC,MAAAA,aAAa,EAAE,CAJT;AAKNC,MAAAA,KAAK,EAAE;AALD,KADmC;;AAAA,SAS3CC,aAT2C,GAS1BC,KAAD,IAAW;AACzB,YAAM;AAAEP,QAAAA,KAAF;AAASI,QAAAA,aAAT;AAAwBC,QAAAA;AAAxB,UAAkC,KAAKN,KAA7C;;AACA,UAAIK,aAAa,KAAK,CAAtB,EAAyB;AACvB,aAAKI,QAAL,CAAc;AAAEN,UAAAA,KAAK,EAAEK,KAAK,CAACE;AAAf,SAAd,EAAoC,MAAM;AACxC,eAAKR,KAAL,CAAWS,QAAX,CAAoB;AAAER,YAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG;AAApB,WAApB;AACD,SAFD;AAGD,OAJD,MAIO;AACLF,QAAAA,KAAK,CAACI,aAAD,CAAL,CAAqBG,KAArB,GAA6BA,KAAK,CAACE,GAAnC;AACA,aAAKD,QAAL,CAAc;AAAEH,UAAAA,KAAK,EAAEA,KAAK,GAAG;AAAjB,SAAd,EAAoC,MAAM;AACxC,eAAKJ,KAAL,CAAWS,QAAX,CAAoB;AAAEV,YAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AAApB,WAApB;AACD,SAFD;AAGD;AACF,KArB0C;;AAAA,SAuB3CW,eAvB2C,GAuBxBC,KAAD,IAAW;AAC3B,WAAKJ,QAAL,CAAc;AAAEJ,QAAAA,aAAa,EAAEQ;AAAjB,OAAd;AACD,KAzB0C;AAAA;;AA2B3CC,EAAAA,oBAAoB,GAAG;AACrB,SAAKZ,KAAL,CAAWS,QAAX,CAAoB;AAAEV,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AAApB,KAApB;AACD;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA,KAAF;AAASI,MAAAA;AAAT,QAA2B,KAAKL,KAAtC;AACA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,KAAK,CAACe,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,KACT,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAE;AAAzB,OAAmCD,CAAnC;AAAsC,MAAA,aAAa,EAAEZ,aAArD;AAAoE,MAAA,OAAO,EAAE,KAAKO,eAAlF;AAAmG,MAAA,KAAK,EAAEM,CAA1G;AAA6G,MAAA,GAAG,EAAEA,CAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD,CADH,CADF,EAME;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAc,MAAA,YAAY,EAAC,SAA3B;AAAqC,MAAA,YAAY,EAAE,CAAC,aAAD,CAAnD;AAAoE,MAAA,KAAK,EAAEjB,KAAK,CAACI,aAAD,CAAL,CAAqBG,KAAhG;AAAuG,MAAA,gBAAgB,EAAE,KAAKD,aAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,CADF;AAYD;;AA7C0C","sourcesContent":["import React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport { ColorSelector } from \"../layout/LayoutSelector\";\nexport default class Style extends Component {\n  state = {\n    style: this.props.style,\n    bgImg: this.props.bgImg,\n    isBGIMG: this.props.isBGIMG,\n    selectedIndex: 0,\n    count: 0,\n  };\n\n  onColorChange = (value) => {\n    const { style, selectedIndex, count } = this.state;\n    if (selectedIndex === 3) {\n      this.setState({ bgImg: value.hex }, () => {\n        this.props.onChange({ bgImg: this.state.bgImg });\n      });\n    } else {\n      style[selectedIndex].value = value.hex;\n      this.setState({ count: count + 1 }, () => {\n        this.props.onChange({ style: this.state.style });\n      });\n    }\n  };\n\n  onColorBoxClick = (index) => {\n    this.setState({ selectedIndex: index });\n  };\n\n  componentWillUnmount() {\n    this.props.onChange({ style: this.state.style });\n  }\n\n  render() {\n    const { style, selectedIndex } = this.state;\n    return (\n      <div className=\"row\">\n        <div className=\"col-4\">\n          {style.map((e, i) => (\n            <ColorSelector showName={true} {...e} selectedIndex={selectedIndex} onClick={this.onColorBoxClick} index={i} key={i} />\n          ))}\n        </div>\n        <div className=\"col-8\">\n          <SketchPicker defaultValue=\"#452135\" presetColors={[\"TRANSPARENT\"]} color={style[selectedIndex].value} onChangeComplete={this.onColorChange} />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}