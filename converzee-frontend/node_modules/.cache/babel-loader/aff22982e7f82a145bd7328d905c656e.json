{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ReviewEngin/index.js\";\nimport React, { Component } from \"react\";\nimport SideBar from \"./SideBar\";\nimport ToolUtil from \"../../utils/ToolUtil\";\nimport Util from \"../Util\";\nimport Text from \"./Text\";\nimport { ToolLayout, ButtonsGroup } from \"../layout/ToolLayout\";\nimport { SAVE_TOOL, GET_ONE_TOOL } from \"../../actions/URLs\";\nimport { OTO2, BONUS_CREATE } from \"../../utils/Routes\";\nimport RequestHandler from \"../../actions/RequestHandler\";\nimport { Modal } from \"antd\";\nimport Style from \"./Style\";\nimport Code from \"./Code\";\nimport { OptinFormModalResponse, OptinFormModal } from \"../utils/Modal\";\nimport { Preview } from \"./Preview\";\nimport { ReponsiveImage } from \"../comman/PreviewAble\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ReviewEngin extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      toolName: \"\",\n      toolId: \"\",\n      preview: false,\n      _id: null,\n      activeTab: 2,\n      toolData: {\n        style: [{\n          name: \"Background\",\n          id: \"backgound\",\n          value: \"#fff3ea\"\n        }],\n        items: [],\n        position: \"left\"\n      },\n      CODE: {\n        include: [{\n          type: \"contains\",\n          url: \"\"\n        }],\n        exclude: [{\n          type: \"contains\",\n          url: null\n        }]\n      }\n    };\n    this.loaded = false;\n\n    this.onChangeActive = tabIndex => {\n      const {\n        activeTab\n      } = this.state;\n\n      if (activeTab !== tabIndex) {\n        this.setState({\n          activeTab: tabIndex\n        });\n      }\n    };\n\n    this.codeChange = data => {\n      this.setState({\n        CODE: data\n      });\n    };\n\n    this.onUpdate = data => {\n      const {\n        toolData\n      } = this.state;\n      this.setState({\n        toolData: { ...toolData,\n          ...data\n        }\n      });\n    };\n\n    this.renderMain = () => {\n      const {\n        activeTab,\n        toolData,\n        CODE\n      } = this.state;\n      let component = null;\n      if (!this.loaded) return null;\n\n      switch (activeTab) {\n        case 2:\n          component = /*#__PURE__*/_jsxDEV(Text, {\n            items: toolData.items,\n            position: toolData.position,\n            onChange: this.onUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this);\n          break;\n\n        case 4:\n          component = /*#__PURE__*/_jsxDEV(Style, {\n            style: toolData.style,\n            onChange: this.onUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this);\n          break;\n\n        case 5:\n          component = /*#__PURE__*/_jsxDEV(Code, { ...CODE,\n            onChange: this.codeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this);\n          break;\n\n        default:\n          component = /*#__PURE__*/_jsxDEV(Text, {\n            onChange: this.onUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this);\n          break;\n      }\n\n      return component;\n    };\n\n    this.onClickSave = () => {\n      if (this.state.CODE.include[0].url !== \"\") {\n        RequestHandler.PostRequest(SAVE_TOOL, {\n          toolData: OptinFormModal(this.state)\n        }, (res, err) => {\n          if (res) {\n            const data1 = res.data;\n\n            if (data1.success) {\n              Modal.success({\n                content: data1.message\n              });\n              setTimeout(() => {\n                this.props.history.push(\"/Campaigns\");\n              }, 1000);\n            }\n          }\n        });\n      } else {\n        Modal.warning({\n          content: \"Should Contain atleast one trigger point\"\n        });\n      }\n    };\n\n    this.renderRight = () => {// return <ReponsiveImage isAs={true} url={\"asset/hb3.png\"} />;\n    };\n\n    this.back = () => {\n      this.props.history.push(BONUS_CREATE);\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match ? this.props.match.params ? this.props.match.params.id : null : null;\n\n    if (id) {\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\n        this.loaded = true;\n\n        if (res) {\n          Util.isRedirected = true;\n          const data = OptinFormModalResponse(res);\n\n          if (data) {\n            this.setState(data, () => {\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\n            });\n          }\n        }\n      });\n    } else {\n      const toolId = 21;\n      this.loaded = true;\n      this.setState({\n        toolId: toolId,\n        toolName: ToolUtil.getTool(toolId),\n        name: Util.CAMPAIGNS_NAME\n      });\n      Util.RedirectWhenCampaignEmpty(this.props);\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \" \" + \"(\" + Util.CAMPAIGNS_NAME + \")\");\n      delete window.gs.defaultLayout;\n    }\n  }\n\n  // togglePreview = () => {\n  //   const { preview } = this.state;\n  //   this.setState({ preview: !preview });\n  // };\n  render() {\n    // const { preview } = this.state;\n    return /*#__PURE__*/_jsxDEV(ToolLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-10 toolItem\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: this.renderMain()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6 mt-2\",\n              children: this.renderRight()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonsGroup, {\n              backUrl: this.back,\n              preview: this.togglePreview,\n              save: this.onClickSave\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-1 sideBarButtomPanel\",\n          children: /*#__PURE__*/_jsxDEV(SideBar, {\n            activeTab: this.state.activeTab,\n            onChangeActive: this.onChangeActive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ReviewEngin/index.js"],"names":["React","Component","SideBar","ToolUtil","Util","Text","ToolLayout","ButtonsGroup","SAVE_TOOL","GET_ONE_TOOL","OTO2","BONUS_CREATE","RequestHandler","Modal","Style","Code","OptinFormModalResponse","OptinFormModal","Preview","ReponsiveImage","ReviewEngin","state","toolName","toolId","preview","_id","activeTab","toolData","style","name","id","value","items","position","CODE","include","type","url","exclude","loaded","onChangeActive","tabIndex","setState","codeChange","data","onUpdate","renderMain","component","onClickSave","PostRequest","res","err","data1","success","content","message","setTimeout","props","history","push","warning","renderRight","back","componentDidMount","match","params","isRedirected","window","gs","navTitle","getTool","CAMPAIGNS_NAME","RedirectWhenCampaignEmpty","defaultLayout","render","togglePreview"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport SideBar from \"./SideBar\";\r\nimport ToolUtil from \"../../utils/ToolUtil\";\r\nimport Util from \"../Util\";\r\nimport Text from \"./Text\";\r\nimport { ToolLayout, ButtonsGroup } from \"../layout/ToolLayout\";\r\nimport { SAVE_TOOL, GET_ONE_TOOL } from \"../../actions/URLs\";\r\nimport { OTO2, BONUS_CREATE } from \"../../utils/Routes\";\r\nimport RequestHandler from \"../../actions/RequestHandler\";\r\nimport { Modal } from \"antd\";\r\nimport Style from \"./Style\";\r\nimport Code from \"./Code\";\r\nimport { OptinFormModalResponse, OptinFormModal } from \"../utils/Modal\";\r\nimport { Preview } from \"./Preview\";\r\nimport { ReponsiveImage } from \"../comman/PreviewAble\";\r\n\r\nexport default class ReviewEngin extends Component {\r\n  state = {\r\n    toolName: \"\",\r\n    toolId: \"\",\r\n    preview: false,\r\n    _id: null,\r\n    activeTab: 2,\r\n    toolData: {\r\n      style: [{ name: \"Background\", id: \"backgound\", value: \"#fff3ea\" }],\r\n      items: [],\r\n      position: \"left\",\r\n    },\r\n    CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: null }] },\r\n  };\r\n  loaded = false;\r\n\r\n  componentDidMount() {\r\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\r\n    if (id) {\r\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\r\n        this.loaded = true;\r\n        if (res) {\r\n          Util.isRedirected = true;\r\n          const data = OptinFormModalResponse(res);\r\n          if (data) {\r\n            this.setState(data, () => {\r\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const toolId = 21;\r\n      this.loaded = true;\r\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\r\n      Util.RedirectWhenCampaignEmpty(this.props);\r\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \" \" + \"(\" + Util.CAMPAIGNS_NAME + \")\");\r\n      delete window.gs.defaultLayout;\r\n    }\r\n  }\r\n\r\n  onChangeActive = (tabIndex) => {\r\n    const { activeTab } = this.state;\r\n    if (activeTab !== tabIndex) {\r\n      this.setState({ activeTab: tabIndex });\r\n    }\r\n  };\r\n\r\n  codeChange = (data) => {\r\n    this.setState({ CODE: data });\r\n  };\r\n\r\n  onUpdate = (data) => {\r\n    const { toolData } = this.state;\r\n    this.setState({ toolData: { ...toolData, ...data } });\r\n  };\r\n\r\n  renderMain = () => {\r\n    const { activeTab, toolData, CODE } = this.state;\r\n    let component = null;\r\n    if (!this.loaded) return null;\r\n    switch (activeTab) {\r\n      case 2:\r\n        component = <Text items={toolData.items} position={toolData.position} onChange={this.onUpdate} />;\r\n        break;\r\n      case 4:\r\n        component = <Style style={toolData.style} onChange={this.onUpdate} />;\r\n        break;\r\n      case 5:\r\n        component = <Code {...CODE} onChange={this.codeChange} />;\r\n        break;\r\n      default:\r\n        component = <Text onChange={this.onUpdate} />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n\r\n  onClickSave = () => {\r\n    if (this.state.CODE.include[0].url !== \"\") {\r\n      RequestHandler.PostRequest(SAVE_TOOL, { toolData: OptinFormModal(this.state) }, (res, err) => {\r\n        if (res) {\r\n          const data1 = res.data;\r\n          if (data1.success) {\r\n            Modal.success({\r\n              content: data1.message,\r\n            });\r\n            setTimeout(() => {\r\n              this.props.history.push(\"/Campaigns\");\r\n            }, 1000);\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      Modal.warning({\r\n        content: \"Should Contain atleast one trigger point\",\r\n      });\r\n    }\r\n  };\r\n\r\n  renderRight = () => {\r\n    // return <ReponsiveImage isAs={true} url={\"asset/hb3.png\"} />;\r\n  };\r\n\r\n  back = () => {\r\n    this.props.history.push(BONUS_CREATE);\r\n  };\r\n\r\n  // togglePreview = () => {\r\n  //   const { preview } = this.state;\r\n  //   this.setState({ preview: !preview });\r\n  // };\r\n\r\n  render() {\r\n    // const { preview } = this.state;\r\n    return (\r\n      <ToolLayout>\r\n        {/* {preview ? <Preview {...this.state} onClose={this.togglePreview} /> : null} */}\r\n        <div className=\"row\">\r\n          <div className=\"col-10 toolItem\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">{this.renderMain()}</div>\r\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\r\n              <ButtonsGroup backUrl={this.back} preview={this.togglePreview} save={this.onClickSave} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 sideBarButtomPanel\">\r\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\r\n          </div>\r\n        </div>\r\n      </ToolLayout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}