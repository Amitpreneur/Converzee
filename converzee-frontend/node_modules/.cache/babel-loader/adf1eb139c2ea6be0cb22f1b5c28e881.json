{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/PreviewAble.js\";\nimport React from \"react\";\nimport { youtubeUrlParse, viemoUrlParse, parseImgUrl } from \"../Util\";\nimport { getPath } from \"../../actions/URLs\";\nexport const ReponsiveImage = function (props) {\n  if (props.isImg) {\n    return React.createElement(RepoImage, {\n      url: props.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    });\n  }\n\n  if (props.isVideo) {\n    return React.createElement(VideoRepo, {\n      url: props.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    });\n  }\n\n  if (props.isAs) {\n    return React.createElement(RepoImage, {\n      isAs: true,\n      url: props.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"img\", {\n    src: getPath(\"asset/Iframegraphic.png\"),\n    className: \"img-fluid\",\n    alt: \"Responsive image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  });\n};\n\nconst RepoImage = function (props) {\n  if (props.isAs) {\n    return React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: getPath(props.url),\n      className: \"img-fluid\",\n      alt: \"Responsive image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  } else if (props.url && props.url != \"\") {\n    return React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: parseImgUrl(props.url),\n      className: \"img-fluid\",\n      alt: \"Responsive image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: getPath(\"asset/Iframegraphic.png\"),\n      className: \"img-fluid\",\n      alt: \"Responsive image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n};\n\nconst VideoRepo = function (props) {\n  if (isUrlVideo(props.url)) {\n    const url = props.url;\n\n    if (url.indexOf(\"viemo\") !== -1) {\n      return React.createElement(\"iframe\", {\n        width: \"100%\",\n        height: \"100%\",\n        frameborder: \"0\",\n        allowfullscreen: true,\n        src: \"https://player.vimeo.com/video/\" + viemoUrlParse(props.url),\n        frameborder: \"0\",\n        allowfullscreen: true,\n        auto: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"iframe\", {\n        width: \"100%\",\n        height: \"100%\",\n        frameborder: \"0\",\n        allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n        allowfullscreen: true,\n        src: \"https://www.youtube.com/embed/\" + youtubeUrlParse(props.url) + \"\",\n        frameborder: \"0\",\n        allowfullscreen: true,\n        auto: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n    }\n  }\n\n  return React.createElement(\"img\", {\n    src: getPath(\"asset/Iframegraphic.png\"),\n    className: \"img-fluid\",\n    alt: \"Responsive image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  });\n};\n\nfunction isUrlVideo(url) {\n  if (url.indexOf(\"youtube\") !== -1 || url.indexOf(\"youtu\") !== -1 || url.indexOf(\"viemo\") !== -1) {\n    return true;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/PreviewAble.js"],"names":["React","youtubeUrlParse","viemoUrlParse","parseImgUrl","getPath","ReponsiveImage","props","isImg","url","isVideo","isAs","RepoImage","VideoRepo","isUrlVideo","indexOf"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { youtubeUrlParse, viemoUrlParse, parseImgUrl } from \"../Util\";\nimport { getPath } from \"../../actions/URLs\";\n\nexport const ReponsiveImage = function (props) {\n  if (props.isImg) {\n    return <RepoImage url={props.url} />;\n  }\n  if (props.isVideo) {\n    return <VideoRepo url={props.url} />;\n  }\n  if (props.isAs) {\n    return <RepoImage isAs={true} url={props.url} />;\n  }\n  return <img src={getPath(\"asset/Iframegraphic.png\")} className=\"img-fluid\" alt=\"Responsive image\" />;\n};\n\nconst RepoImage = function (props) {\n  if (props.isAs) {\n    return (\n      <center>\n        <img src={getPath(props.url)} className=\"img-fluid\" alt=\"Responsive image\" />\n      </center>\n    );\n  } else if (props.url && props.url != \"\") {\n    return (\n      <center>\n        <img src={parseImgUrl(props.url)} className=\"img-fluid\" alt=\"Responsive image\" />\n      </center>\n    );\n  } else {\n    return (\n      <center>\n        <img src={getPath(\"asset/Iframegraphic.png\")} className=\"img-fluid\" alt=\"Responsive image\" />\n      </center>\n    );\n  }\n};\n\nconst VideoRepo = function (props) {\n  if (isUrlVideo(props.url)) {\n    const url = props.url;\n    if (url.indexOf(\"viemo\") !== -1) {\n      return <iframe width=\"100%\" height=\"100%\" frameborder=\"0\" allowfullscreen src={\"https://player.vimeo.com/video/\" + viemoUrlParse(props.url)} frameborder=\"0\" allowfullscreen auto></iframe>;\n    } else {\n      return (\n        <iframe\n          width=\"100%\"\n          height=\"100%\"\n          frameborder=\"0\"\n          allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n          allowfullscreen\n          src={\"https://www.youtube.com/embed/\" + youtubeUrlParse(props.url) + \"\"}\n          frameborder=\"0\"\n          allowfullscreen\n          auto\n        ></iframe>\n      );\n    }\n  }\n  return <img src={getPath(\"asset/Iframegraphic.png\")} className=\"img-fluid\" alt=\"Responsive image\" />;\n};\n\nfunction isUrlVideo(url) {\n  if (url.indexOf(\"youtube\") !== -1 || url.indexOf(\"youtu\") !== -1 || url.indexOf(\"viemo\") !== -1) {\n    return true;\n  }\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}