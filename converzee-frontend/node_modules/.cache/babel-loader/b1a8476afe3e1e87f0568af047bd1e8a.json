{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/Preview.js\";\nimport React, { Component } from \"react\";\nimport \"./Preview.css\";\nimport { parseImgUrl, youtubeUrlParse, getcolor, viemoUrlParse } from \"../../../Util\";\nimport Portal from \"../../../comman/Portal\";\nexport default class Preview extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getStyle = () => {\n      const {\n        elements\n      } = this.props.STYLE;\n      const style = {};\n      Object.assign(style, {\n        background: this.getcolor(elements, \"background\")\n      });\n      return style;\n    };\n\n    this.getColor = key => {\n      return getcolor(this.props.STYLE.elements, key);\n    };\n\n    this.isUrlVideo = url => {\n      try {\n        if (url.indexOf(\"youtube\") !== -1 || url.indexOf(\"youtu\") !== -1 || url.indexOf(\"viemo\") !== -1) {\n          return true;\n        }\n\n        return false;\n      } catch (e) {\n        window.gs.toast(\"Error in Video URL , Please input a valid Url\", {\n          position: \"bottom-right\",\n          type: window.gs.toast.TYPE.FAILED\n        });\n      }\n    };\n\n    this.getPopUpstyle = () => {\n      return {\n        height: \"100%\",\n        width: \"100%\"\n      }; // const { height, width } = this.props.STYLE;\n      // return { width: width + \"px\" };\n      // return { width: width + \"px\", height: height + \"px\" };\n    };\n\n    this.renderImgVideo = () => {\n      const {\n        mediaType,\n        url,\n        isInput\n      } = this.props;\n      const {\n        height,\n        width\n      } = this.props.STYLE;\n\n      if (isInput) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          name: \"leadengagr_exit_intent_input\",\n          style: {\n            width: \"30%\"\n          },\n          placeholder: \"Name\",\n          className: \"Input-text form-item\",\n          id: \"leadengagr_exit_intent_input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"text\",\n          name: \"leadengagr_exit_intent_input\",\n          style: {\n            width: \"30%\"\n          },\n          placeholder: \"Email\",\n          className: \"Input-text form-item\",\n          id: \"leadengagr_exit_intent_input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }));\n      }\n\n      if (mediaType === \"IMAGE\" && !this.isUrlVideo(url)) {\n        return React.createElement(\"img\", {\n          src: parseImgUrl(url),\n          style: {\n            height: \"auto\",\n            width: width + \"%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }); //return <div className=\"popup-background\" style={{ backgroundImage: \"url( \" + parseImgUrl(url) + \")\", height: this.props.STYLE.height - 10 + \"px\", width: \"100%\" }}></div>;\n      } else {\n        if (this.isUrlVideo(url)) {\n          return React.createElement(\"iframe\", {\n            width: \"100%\",\n            height: \"100%\",\n            frameborder: \"0\",\n            allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n            allowfullscreen: true,\n            src: \"https://www.youtube.com/embed/\" + youtubeUrlParse(url) + \"?autoplay=1\",\n            frameborder: \"0\",\n            allowfullscreen: true,\n            auto: true,\n            style: {\n              height: height,\n              width: width + \"px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          });\n        } else {\n          return React.createElement(\"iframe\", {\n            style: {\n              height: height,\n              width: width + \"px\"\n            },\n            width: \"100%\",\n            height: \"100%\",\n            frameborder: \"0\",\n            allowfullscreen: true,\n            src: \"https://player.vimeo.com/video/\" + viemoUrlParse(url) + \"?autoplay=1\",\n            frameborder: \"0\",\n            allowfullscreen: true,\n            auto: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          });\n        }\n      }\n    };\n\n    this.getBackGroundStyle = () => {\n      if (this.props.STYLE.isbackGroundImage) {\n        return {\n          backgroundImage: \"url(\" + parseImgUrl(this.props.STYLE.backgroundImage) + \")\",\n          backgroundSize: \"cover\"\n        };\n      }\n\n      return {\n        backgroundColor: this.getColor(\"popupBackgoundColor\")\n      };\n    };\n\n    this.renderContant = () => {\n      const {\n        headline,\n        subheadline,\n        ctaText,\n        noThanksText\n      } = this.props;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: headline\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: subheadline\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"popup-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"popup-cta-button btn btn-sm btn-success\",\n        style: {\n          backgroundColor: this.getColor(\"ctaBackgound\")\n        },\n        dangerouslySetInnerHTML: {\n          __html: ctaText\n        },\n        style: {\n          backgroundColor: this.getColor(\"ctaBackgound\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })));\n    };\n  }\n\n  getVideoURL(url) {\n    return parseImgUrl(url);\n  }\n\n  render() {\n    const layout = 1;\n    const style = this.getBackGroundStyle();\n    const popUpStyle = this.getPopUpstyle();\n    const isInput = this.props.isInput;\n    return React.createElement(Portal, {\n      defaultOpen: true,\n      closeOnEsc: true,\n      closeOnOutsideClick: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"image-popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"image-preview content-center\",\n      style: Object.assign(popUpStyle, style),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"popUpTitlebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: () => {\n        this.props.closePopup();\n      },\n      className: \"popupCloseButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        width: \"30px\"\n      },\n      src: window.rPath + \"asset/close.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: this.props.headline\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: this.props.subheadline\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, this.renderImgVideo()), isInput ? React.createElement(\"button\", {\n      className: \"btn btn-sm btn-success\",\n      style: {\n        backgroundColor: this.getColor(\"ctaBackgound\"),\n        border: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Subscribe Now\") : React.createElement(\"button\", {\n      className: \"btn btn-sm\",\n      dangerouslySetInnerHTML: {\n        __html: this.props.ctaText\n      },\n      style: {\n        backgroundColor: this.getColor(\"ctaBackgound\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: this.props.noThanksText\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/Preview.js"],"names":["React","Component","parseImgUrl","youtubeUrlParse","getcolor","viemoUrlParse","Portal","Preview","getStyle","elements","props","STYLE","style","Object","assign","background","getColor","key","isUrlVideo","url","indexOf","e","window","gs","toast","position","type","TYPE","FAILED","getPopUpstyle","height","width","renderImgVideo","mediaType","isInput","getBackGroundStyle","isbackGroundImage","backgroundImage","backgroundSize","backgroundColor","renderContant","headline","subheadline","ctaText","noThanksText","__html","getVideoURL","render","layout","popUpStyle","closePopup","rPath","border"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Preview.css\";\nimport { parseImgUrl, youtubeUrlParse, getcolor, viemoUrlParse } from \"../../../Util\";\nimport Portal from \"../../../comman/Portal\";\nexport default class Preview extends Component {\n  getStyle = () => {\n    const { elements } = this.props.STYLE;\n    const style = {};\n    Object.assign(style, { background: this.getcolor(elements, \"background\") });\n    return style;\n  };\n  getColor = (key) => {\n    return getcolor(this.props.STYLE.elements, key);\n  };\n\n  isUrlVideo = (url) => {\n    try {\n      if (url.indexOf(\"youtube\") !== -1 || url.indexOf(\"youtu\") !== -1 || url.indexOf(\"viemo\") !== -1) {\n        return true;\n      }\n      return false;\n    } catch (e) {\n      window.gs.toast(\"Error in Video URL , Please input a valid Url\", { position: \"bottom-right\", type: window.gs.toast.TYPE.FAILED });\n    }\n  };\n  getVideoURL(url) {\n    return parseImgUrl(url);\n  }\n  getPopUpstyle = () => {\n    return { height: \"100%\", width: \"100%\" };\n    // const { height, width } = this.props.STYLE;\n    // return { width: width + \"px\" };\n    // return { width: width + \"px\", height: height + \"px\" };\n  };\n  renderImgVideo = () => {\n    const { mediaType, url, isInput } = this.props;\n    const { height, width } = this.props.STYLE;\n    if (isInput) {\n      return (\n        <React.Fragment>\n          <input type=\"text\" name=\"leadengagr_exit_intent_input\" style={{ width: \"30%\" }} placeholder=\"Name\" className=\"Input-text form-item\" id=\"leadengagr_exit_intent_input\" />\n          <br></br>\n          <input type=\"text\" name=\"leadengagr_exit_intent_input\" style={{ width: \"30%\" }} placeholder=\"Email\" className=\"Input-text form-item\" id=\"leadengagr_exit_intent_input\" />\n        </React.Fragment>\n      );\n    }\n    if (mediaType === \"IMAGE\" && !this.isUrlVideo(url)) {\n      return <img src={parseImgUrl(url)} style={{ height: \"auto\", width: width + \"%\" }} />;\n      //return <div className=\"popup-background\" style={{ backgroundImage: \"url( \" + parseImgUrl(url) + \")\", height: this.props.STYLE.height - 10 + \"px\", width: \"100%\" }}></div>;\n    } else {\n      if (this.isUrlVideo(url)) {\n        return (\n          <iframe\n            width=\"100%\"\n            height=\"100%\"\n            frameborder=\"0\"\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n            allowfullscreen\n            src={\"https://www.youtube.com/embed/\" + youtubeUrlParse(url) + \"?autoplay=1\"}\n            frameborder=\"0\"\n            allowfullscreen\n            auto\n            style={{ height: height, width: width + \"px\" }}\n          ></iframe>\n        );\n      } else {\n        return (\n          <iframe\n            style={{ height: height, width: width + \"px\" }}\n            width=\"100%\"\n            height=\"100%\"\n            frameborder=\"0\"\n            allowfullscreen\n            src={\"https://player.vimeo.com/video/\" + viemoUrlParse(url) + \"?autoplay=1\"}\n            frameborder=\"0\"\n            allowfullscreen\n            auto\n          ></iframe>\n        );\n      }\n    }\n  };\n  getBackGroundStyle = () => {\n    if (this.props.STYLE.isbackGroundImage) {\n      return { backgroundImage: \"url(\" + parseImgUrl(this.props.STYLE.backgroundImage) + \")\", backgroundSize: \"cover\" };\n    }\n    return { backgroundColor: this.getColor(\"popupBackgoundColor\") };\n  };\n  renderContant = () => {\n    const { headline, subheadline, ctaText, noThanksText } = this.props;\n\n    return (\n      <div>\n        <div dangerouslySetInnerHTML={{ __html: headline }}></div>\n        <div dangerouslySetInnerHTML={{ __html: subheadline }}></div>\n        <div className=\"popup-button\">\n          <a\n            className=\"popup-cta-button btn btn-sm btn-success\"\n            style={{ backgroundColor: this.getColor(\"ctaBackgound\") }}\n            dangerouslySetInnerHTML={{ __html: ctaText }}\n            style={{ backgroundColor: this.getColor(\"ctaBackgound\") }}\n          />\n        </div>\n      </div>\n    );\n  };\n  render() {\n    const layout = 1;\n    const style = this.getBackGroundStyle();\n    const popUpStyle = this.getPopUpstyle();\n    const isInput = this.props.isInput;\n    return (\n      <Portal defaultOpen={true} closeOnEsc={true} closeOnOutsideClick={true}>\n        <div className=\"image-popup\">\n          <div className=\"image-preview content-center\" style={Object.assign(popUpStyle, style)}>\n            <div className=\"popUpTitlebar\">\n              <div\n                onClick={() => {\n                  this.props.closePopup();\n                }}\n                className=\"popupCloseButton\"\n              >\n                <img style={{ width: \"30px\" }} src={window.rPath + \"asset/close.png\"} />\n              </div>\n            </div>\n            <div>\n              <center>\n                <div dangerouslySetInnerHTML={{ __html: this.props.headline }} />\n                <br />\n                <div dangerouslySetInnerHTML={{ __html: this.props.subheadline }}></div>\n                <div>{this.renderImgVideo()}</div>\n                {isInput ? (\n                  <button className=\"btn btn-sm btn-success\" style={{ backgroundColor: this.getColor(\"ctaBackgound\"), border: \"none\" }}>\n                    Subscribe Now\n                  </button>\n                ) : (\n                  <button className=\"btn btn-sm\" dangerouslySetInnerHTML={{ __html: this.props.ctaText }} style={{ backgroundColor: this.getColor(\"ctaBackgound\") }} />\n                )}\n\n                <div dangerouslySetInnerHTML={{ __html: this.props.noThanksText }} />\n              </center>\n            </div>\n          </div>\n        </div>\n      </Portal>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}