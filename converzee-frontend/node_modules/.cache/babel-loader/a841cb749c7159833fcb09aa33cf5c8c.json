{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/layout/LayoutSelector.js\";\nimport React from \"react\";\nimport \"./LayoutSelector.css\";\nimport { getPath } from \"../../actions/URLs\";\nexport const LayoutSelector = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: \"80%\",\n      padding: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.items.map((e, i) => React.createElement(TemplateView, {\n    isExit: props.isExit,\n    isText: props.isText,\n    key: \"TEMP_\" + i,\n    index: i,\n    onClick: props.onLayoutSelect,\n    checkedIndex: props.selected,\n    img: e,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }))));\n};\n\nconst TemplateView = props => {\n  return React.createElement(\"div\", {\n    className: \"template_item\",\n    onClick: () => props.onClick(props.index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.checkedIndex === props.index ? React.createElement(\"span\", {\n    className: \"Icon-awesome-check-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-check-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })) : React.createElement(\"span\", {\n    className: \"Icon-awesome-uncheck-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-circle-o\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), props.isText ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, props.img) : React.createElement(\"img\", {\n    className: props.isExit ? \"layoutSelector_img layoutSelector_img_height\" : \"layoutSelector_img\",\n    src: getPath(props.img),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n};\n\nexport const ColorSelector = props => {\n  return React.createElement(\"div\", {\n    onClick: () => props.onClick(props.index),\n    className: props.selectedIndex === props.index ? \"layout-color-selected\" : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, props.showName ? props.name : props.text), React.createElement(\"div\", {\n    className: props.selectedIndex === props.index ? \"layout-color-box layout-color-box-selected\" : \"layout-color-box\",\n    style: {\n      backgroundColor: props.value || props.color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/layout/LayoutSelector.js"],"names":["React","getPath","LayoutSelector","props","width","padding","items","map","e","i","isExit","isText","onLayoutSelect","selected","TemplateView","onClick","index","checkedIndex","img","ColorSelector","selectedIndex","showName","name","text","backgroundColor","value","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAW;AACvC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,OAAO,EAAE;AAAzB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KACf,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAEN,KAAK,CAACO,MAA5B;AAAoC,IAAA,MAAM,EAAEP,KAAK,CAACQ,MAAlD;AAA0D,IAAA,GAAG,EAAE,UAAUF,CAAzE;AAA4E,IAAA,KAAK,EAAEA,CAAnF;AAAsF,IAAA,OAAO,EAAEN,KAAK,CAACS,cAArG;AAAqH,IAAA,YAAY,EAAET,KAAK,CAACU,QAAzI;AAAmJ,IAAA,GAAG,EAAEL,CAAxJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CADF;AASD,CAVM;;AAYP,MAAMM,YAAY,GAAIX,KAAD,IAAW;AAC9B,SACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,OAAO,EAAE,MAAMA,KAAK,CAACY,OAAN,CAAcZ,KAAK,CAACa,KAApB,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,KAAK,CAACc,YAAN,KAAuBd,KAAK,CAACa,KAA7B,GACC;AAAM,IAAA,SAAS,EAAC,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GAKC;AAAM,IAAA,SAAS,EAAC,6BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANJ,EAUGb,KAAK,CAACQ,MAAN,GAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOR,KAAK,CAACe,GAAb,CAAf,GAA0C;AAAK,IAAA,SAAS,EAAEf,KAAK,CAACO,MAAN,GAAe,8CAAf,GAAgE,oBAAhF;AAAsG,IAAA,GAAG,EAAET,OAAO,CAACE,KAAK,CAACe,GAAP,CAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAV7C,CADF;AAcD,CAfD;;AAiBA,OAAO,MAAMC,aAAa,GAAIhB,KAAD,IAAW;AACtC,SACE;AAAK,IAAA,OAAO,EAAE,MAAMA,KAAK,CAACY,OAAN,CAAcZ,KAAK,CAACa,KAApB,CAApB;AAAgD,IAAA,SAAS,EAAEb,KAAK,CAACiB,aAAN,KAAwBjB,KAAK,CAACa,KAA9B,GAAsC,uBAAtC,GAAgE,EAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMb,KAAK,CAACkB,QAAN,GAAiBlB,KAAK,CAACmB,IAAvB,GAA8BnB,KAAK,CAACoB,IAA1C,CADF,EAEE;AAAK,IAAA,SAAS,EAAEpB,KAAK,CAACiB,aAAN,KAAwBjB,KAAK,CAACa,KAA9B,GAAsC,4CAAtC,GAAqF,kBAArG;AAAyH,IAAA,KAAK,EAAE;AAAEQ,MAAAA,eAAe,EAAErB,KAAK,CAACsB,KAAN,IAAetB,KAAK,CAACuB;AAAxC,KAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAPM","sourcesContent":["import React from \"react\";\nimport \"./LayoutSelector.css\";\nimport { getPath } from \"../../actions/URLs\";\n\nexport const LayoutSelector = (props) => {\n  return (\n    <div>\n      <div style={{ width: \"80%\", padding: \"20px\" }}>\n        {props.items.map((e, i) => (\n          <TemplateView isExit={props.isExit} isText={props.isText} key={\"TEMP_\" + i} index={i} onClick={props.onLayoutSelect} checkedIndex={props.selected} img={e} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst TemplateView = (props) => {\n  return (\n    <div className=\"template_item\" onClick={() => props.onClick(props.index)}>\n      {props.checkedIndex === props.index ? (\n        <span className=\"Icon-awesome-check-circle\">\n          <i className=\"fa fa-check-circle\"></i>\n        </span>\n      ) : (\n        <span className=\"Icon-awesome-uncheck-circle\">\n          <i className=\"fa fa-circle-o\"></i>\n        </span>\n      )}\n      {props.isText ? <span>{props.img}</span> : <img className={props.isExit ? \"layoutSelector_img layoutSelector_img_height\" : \"layoutSelector_img\"} src={getPath(props.img)} />}\n    </div>\n  );\n};\n\nexport const ColorSelector = (props) => {\n  return (\n    <div onClick={() => props.onClick(props.index)} className={props.selectedIndex === props.index ? \"layout-color-selected\" : \"\"}>\n      <div>{props.showName ? props.name : props.text}</div>\n      <div className={props.selectedIndex === props.index ? \"layout-color-box layout-color-box-selected\" : \"layout-color-box\"} style={{ backgroundColor: props.value || props.color }}></div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}