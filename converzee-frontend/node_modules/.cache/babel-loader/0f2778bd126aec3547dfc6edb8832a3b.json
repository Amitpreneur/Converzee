{"ast":null,"code":"import React,{Component}from\"react\";import{SketchPicker}from\"react-color\";import{ColorSelector}from\"../layout/LayoutSelector\";import{createElement as _createElement}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default class Style extends Component{constructor(){super(...arguments);this.state={style:this.props.style,bgImg:this.props.bgImg,isBGIMG:this.props.isBGIMG,selectedIndex:0,count:0};this.onColorChange=value=>{const{style,selectedIndex,count}=this.state;if(selectedIndex===3){this.setState({bgImg:value.hex},()=>{this.props.onChange({bgImg:this.state.bgImg});});}else{style[selectedIndex].value=value.hex;this.setState({count:count+1},()=>{this.props.onChange({style:this.state.style});});}};this.onColorBoxClick=index=>{this.setState({selectedIndex:index});};}componentWillUnmount(){this.props.onChange({style:this.state.style});}render(){const{style,selectedIndex}=this.state;return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-4\",children:style.map((e,i)=>/*#__PURE__*/_createElement(ColorSelector,{showName:true,...e,selectedIndex:selectedIndex,onClick:this.onColorBoxClick,index:i,key:i}))}),/*#__PURE__*/_jsx(\"div\",{className:\"col-8\",children:/*#__PURE__*/_jsx(SketchPicker,{defaultValue:\"#452135\",presetColors:[\"TRANSPARENT\"],color:style[selectedIndex].value,onChangeComplete:this.onColorChange})})]});}}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/ReviewEngin/Style.js"],"names":["React","Component","SketchPicker","ColorSelector","Style","state","style","props","bgImg","isBGIMG","selectedIndex","count","onColorChange","value","setState","hex","onChange","onColorBoxClick","index","componentWillUnmount","render","map","e","i"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,YAAT,KAA6B,aAA7B,CACA,OAASC,aAAT,KAA8B,0BAA9B,C,2IACA,cAAe,MAAMC,CAAAA,KAAN,QAAoBH,CAAAA,SAAU,wCAC3CI,KAD2C,CACnC,CACNC,KAAK,CAAE,KAAKC,KAAL,CAAWD,KADZ,CAENE,KAAK,CAAE,KAAKD,KAAL,CAAWC,KAFZ,CAGNC,OAAO,CAAE,KAAKF,KAAL,CAAWE,OAHd,CAINC,aAAa,CAAE,CAJT,CAKNC,KAAK,CAAE,CALD,CADmC,MAS3CC,aAT2C,CAS1BC,KAAD,EAAW,CACzB,KAAM,CAAEP,KAAF,CAASI,aAAT,CAAwBC,KAAxB,EAAkC,KAAKN,KAA7C,CACA,GAAIK,aAAa,GAAK,CAAtB,CAAyB,CACvB,KAAKI,QAAL,CAAc,CAAEN,KAAK,CAAEK,KAAK,CAACE,GAAf,CAAd,CAAoC,IAAM,CACxC,KAAKR,KAAL,CAAWS,QAAX,CAAoB,CAAER,KAAK,CAAE,KAAKH,KAAL,CAAWG,KAApB,CAApB,EACD,CAFD,EAGD,CAJD,IAIO,CACLF,KAAK,CAACI,aAAD,CAAL,CAAqBG,KAArB,CAA6BA,KAAK,CAACE,GAAnC,CACA,KAAKD,QAAL,CAAc,CAAEH,KAAK,CAAEA,KAAK,CAAG,CAAjB,CAAd,CAAoC,IAAM,CACxC,KAAKJ,KAAL,CAAWS,QAAX,CAAoB,CAAEV,KAAK,CAAE,KAAKD,KAAL,CAAWC,KAApB,CAApB,EACD,CAFD,EAGD,CACF,CArB0C,MAuB3CW,eAvB2C,CAuBxBC,KAAD,EAAW,CAC3B,KAAKJ,QAAL,CAAc,CAAEJ,aAAa,CAAEQ,KAAjB,CAAd,EACD,CAzB0C,EA2B3CC,oBAAoB,EAAG,CACrB,KAAKZ,KAAL,CAAWS,QAAX,CAAoB,CAAEV,KAAK,CAAE,KAAKD,KAAL,CAAWC,KAApB,CAApB,EACD,CAEDc,MAAM,EAAG,CACP,KAAM,CAAEd,KAAF,CAASI,aAAT,EAA2B,KAAKL,KAAtC,CACA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,YAAK,SAAS,CAAC,OAAf,UACGC,KAAK,CAACe,GAAN,CAAU,CAACC,CAAD,CAAIC,CAAJ,gBACT,eAAC,aAAD,EAAe,QAAQ,CAAE,IAAzB,IAAmCD,CAAnC,CAAsC,aAAa,CAAEZ,aAArD,CAAoE,OAAO,CAAE,KAAKO,eAAlF,CAAmG,KAAK,CAAEM,CAA1G,CAA6G,GAAG,CAAEA,CAAlH,EADD,CADH,EADF,cAME,YAAK,SAAS,CAAC,OAAf,uBACE,KAAC,YAAD,EAAc,YAAY,CAAC,SAA3B,CAAqC,YAAY,CAAE,CAAC,aAAD,CAAnD,CAAoE,KAAK,CAAEjB,KAAK,CAACI,aAAD,CAAL,CAAqBG,KAAhG,CAAuG,gBAAgB,CAAE,KAAKD,aAA9H,EADF,EANF,GADF,CAYD,CA7C0C","sourcesContent":["import React, { Component } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { ColorSelector } from \"../layout/LayoutSelector\";\r\nexport default class Style extends Component {\r\n  state = {\r\n    style: this.props.style,\r\n    bgImg: this.props.bgImg,\r\n    isBGIMG: this.props.isBGIMG,\r\n    selectedIndex: 0,\r\n    count: 0,\r\n  };\r\n\r\n  onColorChange = (value) => {\r\n    const { style, selectedIndex, count } = this.state;\r\n    if (selectedIndex === 3) {\r\n      this.setState({ bgImg: value.hex }, () => {\r\n        this.props.onChange({ bgImg: this.state.bgImg });\r\n      });\r\n    } else {\r\n      style[selectedIndex].value = value.hex;\r\n      this.setState({ count: count + 1 }, () => {\r\n        this.props.onChange({ style: this.state.style });\r\n      });\r\n    }\r\n  };\r\n\r\n  onColorBoxClick = (index) => {\r\n    this.setState({ selectedIndex: index });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.onChange({ style: this.state.style });\r\n  }\r\n\r\n  render() {\r\n    const { style, selectedIndex } = this.state;\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-4\">\r\n          {style.map((e, i) => (\r\n            <ColorSelector showName={true} {...e} selectedIndex={selectedIndex} onClick={this.onColorBoxClick} index={i} key={i} />\r\n          ))}\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <SketchPicker defaultValue=\"#452135\" presetColors={[\"TRANSPARENT\"]} color={style[selectedIndex].value} onChangeComplete={this.onColorChange} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}