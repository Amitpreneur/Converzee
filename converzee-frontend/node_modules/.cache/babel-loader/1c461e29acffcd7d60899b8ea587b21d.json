{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Campaigns.js\";\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./Campaigns.css\";\nimport RequestHandler from \"../../actions/RequestHandler\";\nimport { GET_CAMPAIGNS, CLONE_TOOL, ARCHIVE_TOOL, PURGE_TOOL, getPath, DOWNLOAD_DATA } from \"../../actions/URLs\";\nimport ToolUtil, { exportCSVFile } from \"../../utils/ToolUtil\";\nimport { EMAIL_SEND } from \"../../utils/Routes\";\nimport { Filter } from \"../comman/Filter\";\nimport { CampignItem } from \"../layout/ToolLayout\";\nexport default class Campaigns extends Component {\n  constructor(...args) {\n    super(...args);\n    this.toolId = 0;\n    this.url = null;\n    this.state = {\n      items: [],\n      emails: [],\n      isRedirect: false,\n      isopenFilter: false,\n      searchStr: \"\"\n    };\n\n    this.getCampaigns = (data = {}) => {\n      RequestHandler.PostRequest(GET_CAMPAIGNS, {\n        searchData: data\n      }, (res, err) => {\n        if (res) {\n          const items = res.data.campaigns;\n          this.setState({\n            items\n          });\n        }\n      });\n    };\n\n    this.cloneRequest = id => {\n      RequestHandler.PostRequest(CLONE_TOOL + id, {}, (res, err) => {\n        if (res) {\n          window.gs.toast(\"Clone Success\", {\n            position: \"bottom-right\",\n            type: window.gs.toast.TYPE.SUCCESS\n          });\n          this.getCampaigns();\n        }\n      });\n    };\n\n    this.archiveRequest = id => {\n      RequestHandler.PostRequest(ARCHIVE_TOOL + id, {}, (res, err) => {\n        if (res) {\n          window.gs.toast(\"Successfully\", {\n            position: \"bottom-right\",\n            type: window.gs.toast.TYPE.SUCCESS\n          });\n          this.getCampaigns();\n        }\n      });\n    };\n\n    this.purgeTool = id => {\n      RequestHandler.PostRequest(PURGE_TOOL + id, {}, (res, err) => {\n        if (res) {\n          window.gs.toast(\"Archive Success\", {\n            position: \"bottom-right\",\n            type: window.gs.toast.TYPE.SUCCESS\n          });\n          this.getCampaigns();\n        }\n      });\n    };\n\n    this.downloadData = id => {\n      RequestHandler.PostRequest(DOWNLOAD_DATA + id, {}, (res, err) => {\n        if (res) {\n          const {\n            data\n          } = res.data;\n\n          if (data) {\n            exportCSVFile(data, \"myconversionkit\");\n          }\n        }\n      });\n    };\n\n    this.onClickAction = (id, toolId, action) => {\n      if (action == \"CLONE\") {\n        if (!ToolUtil.isUpgrade2) {\n          window.gs.sayUpdate(null, false, \"https://live.myconversionkit.com/club\");\n          return;\n        }\n      }\n\n      this.getToolurl(toolId, id);\n\n      switch (action) {\n        case \"EDIT\":\n          this.setState({\n            isRedirect: true\n          });\n          break;\n\n        case \"CLONE\":\n          this.cloneRequest(id);\n          break;\n\n        case \"ARCHIVE\":\n          this.purgeTool(id);\n          break;\n\n        case \"STATUS\":\n          this.archiveRequest(id);\n          break;\n\n        case \"SEND\":\n          this.setState({\n            isRedirect: true\n          });\n          break;\n\n        default:\n          this.setState({\n            isRedirect: true\n          });\n          break;\n      }\n    };\n\n    this.renderListItems = (item, i) => {\n      const items = { ...item,\n        onClickAction: this.onClickAction,\n        archiveRequest: this.archiveRequest,\n        downloadData: this.downloadData,\n        isLock: ToolUtil.isUpgrade2 ? false : true\n      };\n      return React.createElement(CampignItem, Object.assign({}, items, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }));\n    };\n\n    this.openFilterClick = () => {\n      if (!ToolUtil.isUpgrade2) {\n        window.gs.sayUpdate(null, false, \"https://live.myconversionkit.com/club\");\n        return;\n      }\n\n      this.setState({\n        isopenFilter: true\n      });\n    };\n\n    this.onFilterClose = () => {\n      this.setState({\n        isopenFilter: false\n      });\n    };\n\n    this.onFilterChange = filters => {\n      if (!ToolUtil.isUpgrade2) {\n        window.gs.sayUpdate(null, false, \"https://live.myconversionkit.com/club\");\n        return;\n      }\n\n      const {\n        searchStr\n      } = this.state;\n      if (searchStr !== \"\") filters[\"searchStr\"] = searchStr;\n      this.getCampaigns(filters);\n    };\n\n    this.onSearchClick = () => {\n      const {\n        searchStr\n      } = this.state;\n      this.getCampaigns({\n        searchStr\n      });\n    };\n\n    this.onSearchChange = e => {\n      this.setState({\n        searchStr: e.target.value\n      });\n    };\n\n    this.onSortingChange = istrue => {\n      this.setState({\n        sorting: istrue ? 1 : 0\n      });\n    };\n\n    this.PressEnter = e => {\n      if (e.keyCode === 13) this.onSearchClick();\n    };\n\n    this.resetSearch = () => {\n      this.setState({\n        searchStr: \"\"\n      }, () => this.onSearchClick());\n    };\n  }\n\n  componentDidMount() {\n    this.getCampaigns();\n  }\n\n  getToolurl(toolId, id) {\n    if (toolId) this.url = ToolUtil.getToolData(toolId).url + \"/\" + id || null;else this.url = EMAIL_SEND + \"/\" + id || null;\n  }\n\n  render() {\n    const {\n      items,\n      isRedirect,\n      isopenFilter,\n      searchStr\n    } = this.state;\n    const url = this.url;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      name: \"Campaigns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Filter, {\n      visible: isopenFilter,\n      onChangeFilter: this.onFilterChange,\n      onClose: this.onFilterClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3 col-sm-2 d-none d-sm-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-md-5 col-sm-8 camp_filterItem1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pull-right input-group mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control search-field\",\n      onKeyUp: this.PressEnter,\n      value: searchStr,\n      onChange: this.onSearchChange,\n      placeholder: \"Search By Campaign Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text search-icon\",\n      onClick: this.onSearchClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"col-md-4 col-sm-2 camp_filterItem2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pull-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-sm filter-btn\",\n      onClick: this.openFilterClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"d-block d-sm-none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"d-none d-sm-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), \"Filter\"))))), isRedirect && url ? React.createElement(Redirect, {\n      to: url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }) : null, items.map(this.renderListItems));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Campaigns.js"],"names":["React","Component","Redirect","RequestHandler","GET_CAMPAIGNS","CLONE_TOOL","ARCHIVE_TOOL","PURGE_TOOL","getPath","DOWNLOAD_DATA","ToolUtil","exportCSVFile","EMAIL_SEND","Filter","CampignItem","Campaigns","toolId","url","state","items","emails","isRedirect","isopenFilter","searchStr","getCampaigns","data","PostRequest","searchData","res","err","campaigns","setState","cloneRequest","id","window","gs","toast","position","type","TYPE","SUCCESS","archiveRequest","purgeTool","downloadData","onClickAction","action","isUpgrade2","sayUpdate","getToolurl","renderListItems","item","i","isLock","openFilterClick","onFilterClose","onFilterChange","filters","onSearchClick","onSearchChange","e","target","value","onSortingChange","istrue","sorting","PressEnter","keyCode","resetSearch","componentDidMount","getToolData","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./Campaigns.css\";\nimport RequestHandler from \"../../actions/RequestHandler\";\nimport { GET_CAMPAIGNS, CLONE_TOOL, ARCHIVE_TOOL, PURGE_TOOL, getPath, DOWNLOAD_DATA } from \"../../actions/URLs\";\nimport ToolUtil, { exportCSVFile } from \"../../utils/ToolUtil\";\nimport { EMAIL_SEND } from \"../../utils/Routes\";\nimport { Filter } from \"../comman/Filter\";\nimport { CampignItem } from \"../layout/ToolLayout\";\nexport default class Campaigns extends Component {\n  toolId = 0;\n  url = null;\n  state = {\n    items: [],\n    emails: [],\n    isRedirect: false,\n    isopenFilter: false,\n    searchStr: \"\",\n  };\n\n  componentDidMount() {\n    this.getCampaigns(); \n  }\n  getCampaigns = (data = {}) => {\n    RequestHandler.PostRequest(GET_CAMPAIGNS, { searchData: data }, (res, err) => {\n      if (res) {\n        const items = res.data.campaigns;\n        this.setState({ items });\n      }\n    });\n  };\n\n  getToolurl(toolId, id) {\n    if (toolId) this.url = ToolUtil.getToolData(toolId).url + \"/\" + id || null;\n    else this.url = EMAIL_SEND + \"/\" + id || null;\n  }\n\n  cloneRequest = (id) => {\n    RequestHandler.PostRequest(CLONE_TOOL + id, {}, (res, err) => {\n      if (res) {\n        window.gs.toast(\"Clone Success\", { position: \"bottom-right\", type: window.gs.toast.TYPE.SUCCESS });\n        this.getCampaigns();\n      }\n    });\n  };\n\n  archiveRequest = (id) => {\n    RequestHandler.PostRequest(ARCHIVE_TOOL + id, {}, (res, err) => {\n      if (res) {\n        window.gs.toast(\"Successfully\", { position: \"bottom-right\", type: window.gs.toast.TYPE.SUCCESS });\n        this.getCampaigns();\n      }\n    });\n  };\n\n  purgeTool = (id) => {\n    RequestHandler.PostRequest(PURGE_TOOL + id, {}, (res, err) => {\n      if (res) {\n        window.gs.toast(\"Archive Success\", { position: \"bottom-right\", type: window.gs.toast.TYPE.SUCCESS });\n        this.getCampaigns();\n      }\n    });\n  };\n\n  downloadData = (id) => {\n    RequestHandler.PostRequest(DOWNLOAD_DATA + id, {}, (res, err) => {\n      if (res) {\n        const { data } = res.data;\n        if (data) {\n          exportCSVFile(data, \"myconversionkit\");\n        }\n      }\n    });\n  };\n\n  onClickAction = (id, toolId, action) => {\n    if (action == \"CLONE\") {\n      if (!ToolUtil.isUpgrade2) {\n        window.gs.sayUpdate(null, false, \"https://live.myconversionkit.com/club\");\n        return;\n      }\n    }\n    this.getToolurl(toolId, id);\n    switch (action) {\n      case \"EDIT\":\n        this.setState({ isRedirect: true });\n        break;\n      case \"CLONE\":\n        this.cloneRequest(id);\n        break;\n      case \"ARCHIVE\":\n        this.purgeTool(id);\n        break;\n      case \"STATUS\":\n        this.archiveRequest(id);\n        break;\n      case \"SEND\":\n        this.setState({ isRedirect: true });\n        break;\n      default:\n        this.setState({ isRedirect: true });\n        break;\n    }\n  };\n\n  renderListItems = (item, i) => {\n    const items = {\n      ...item,\n      onClickAction: this.onClickAction,\n      archiveRequest: this.archiveRequest,\n      downloadData: this.downloadData,\n      isLock: ToolUtil.isUpgrade2 ? false : true,\n    };\n    return <CampignItem {...items} key={i} />;\n  };\n\n  openFilterClick = () => {\n    if (!ToolUtil.isUpgrade2) {\n      window.gs.sayUpdate(null, false, \"https://live.myconversionkit.com/club\");\n      return;\n    }\n    this.setState({ isopenFilter: true });\n  };\n\n  onFilterClose = () => {\n    this.setState({ isopenFilter: false });\n  };\n\n  onFilterChange = (filters) => {\n    if (!ToolUtil.isUpgrade2) {\n      window.gs.sayUpdate(null, false, \"https://live.myconversionkit.com/club\");\n      return;\n    }\n    const { searchStr } = this.state;\n    if (searchStr !== \"\") filters[\"searchStr\"] = searchStr;\n    this.getCampaigns(filters);\n  };\n\n  onSearchClick = () => {\n    const { searchStr } = this.state;\n    this.getCampaigns({ searchStr });\n  };\n\n  onSearchChange = (e) => {\n    this.setState({ searchStr: e.target.value });\n  };\n\n  onSortingChange = (istrue) => {\n    this.setState({ sorting: istrue ? 1 : 0 });\n  };\n\n  PressEnter = (e) => {\n    if (e.keyCode === 13) this.onSearchClick();\n  };\n\n  resetSearch = () => {\n    this.setState({ searchStr: \"\" }, () => this.onSearchClick());\n  };\n\n  render() {\n    const { items, isRedirect, isopenFilter, searchStr } = this.state;\n    const url = this.url;\n    return (\n      <div className=\"container\" name=\"Campaigns\">\n        <Filter visible={isopenFilter} onChangeFilter={this.onFilterChange} onClose={this.onFilterClose} />\n        <div className=\"row\">\n          <div className=\"col-md-3 col-sm-2 d-none d-sm-block\"></div>\n          <div className=\"col-md-5 col-sm-8 camp_filterItem1\">\n            <div className=\"pull-right input-group mb-3\">\n              <input type=\"text\" className=\"form-control search-field\" onKeyUp={this.PressEnter} value={searchStr} onChange={this.onSearchChange} placeholder=\"Search By Campaign Name\" />\n              <div className=\"input-group-append\">\n                <span className=\"input-group-text search-icon\" onClick={this.onSearchClick}>\n                  <i className=\"fa fa-search\"></i>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-4 col-sm-2 camp_filterItem2\">\n            <div className=\"pull-right\">\n              <button className=\"btn btn-sm filter-btn\" onClick={this.openFilterClick}>\n                <span className=\"d-block d-sm-none\">\n                  <i className=\"fa fa-filter\"></i>\n                </span>\n                <span className=\"d-none d-sm-block\">\n                  <i className=\"fa fa-filter\"></i>Filter\n                </span>\n              </button>\n            </div>\n          </div>\n        </div>\n        {isRedirect && url ? <Redirect to={url} /> : null}\n        {items.map(this.renderListItems)}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}