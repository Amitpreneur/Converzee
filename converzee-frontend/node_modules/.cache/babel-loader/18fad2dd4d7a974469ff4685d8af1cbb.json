{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/DynamicElements/Style.js\";\nimport React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport \"react-color-picker/index.css\";\nimport DropDown from \"../../../comman/DropDown\";\nimport { Info } from \"../../../comman/Info\";\nimport { ColorSelector } from \"../../../layout/LayoutSelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Style extends Component {\n  constructor() {\n    super(...arguments);\n    this.options = [\n    /* { label: \"Top-left\", value: \"TL\" },\r\n    { label: \"Top-Right\", value: \"TR\" }, */\n    {\n      label: \"Bottom-left\",\n      value: \"BL\"\n    }, {\n      label: \"Bottom-Right\",\n      value: \"BR\"\n    }];\n    this.state = {\n      elements: this.props.elements,\n      selected: this.props.selected,\n      position: this.props.position // fontSize: this.props.fontSize\n\n    };\n\n    this.onClickElement = i => {\n      const cases = this.props.case || 1;\n      this.setState({\n        selected: i\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onColorChange = color => {\n      const cases = this.props.case || 1;\n      const {\n        elements,\n        selected\n      } = this.state;\n      elements[selected].color = color.hex;\n      this.setState({\n        elements\n      }, () => {\n        this.props.onChange(cases, this.state);\n      });\n    };\n\n    this.onFontChange = e => {\n      const cases = this.props.case || 1;\n      this.setState({\n        [e.target.name]: e.target.value\n      }, () => {\n        this.props.onChange(cases, this.state);\n      });\n    };\n\n    this.renderElements = (ele, i) => {\n      const {\n        selected\n      } = this.state;\n      const selectedDiv = selected === i ? \"element-div-active\" : \"\";\n      const selectedText = selected === i ? \"element-text-active\" : \"\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element-list\",\n        onClick: () => this.onClickElement(i),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-list-text \" + selectedText,\n          children: ele.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-list-div \" + selectedDiv,\n          style: {\n            backgroundColor: ele.color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.onChangeStyle = e => {\n      const cases = this.props.case || 1;\n      this.setState({\n        [e.target.name]: parseInt(e.target.value || 0)\n      }, () => {\n        this.props.onChange(cases, this.state);\n      });\n    };\n\n    this.onDropDownChange = value => {\n      const cases = this.props.case || 1;\n      this.setState({\n        position: value\n      }, () => {\n        this.props.onChange(cases, this.state);\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    const cases = this.props.case || 1;\n    this.props.onChange(cases, this.state);\n  }\n\n  render() {\n    const {\n      elements,\n      selected,\n      position,\n      fontSize\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-element\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"label-text\",\n              children: [\"Position*\", /*#__PURE__*/_jsxDEV(Info, {\n                text: \"Select dynemic element position \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n              options: this.options,\n              onChange: this.onDropDownChange,\n              value: position,\n              class: \"dropdown-style\",\n              style: {\n                width: \"\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/DynamicElements/Style.js"],"names":["React","Component","SketchPicker","DropDown","Info","ColorSelector","Style","options","label","value","state","elements","props","selected","position","onClickElement","i","cases","case","setState","onChange","onColorChange","color","hex","onFontChange","e","target","name","renderElements","ele","selectedDiv","selectedText","text","backgroundColor","onChangeStyle","parseInt","onDropDownChange","componentWillUnmount","render","fontSize","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\n\r\nimport \"react-color-picker/index.css\";\r\nimport DropDown from \"../../../comman/DropDown\";\r\nimport { Info } from \"../../../comman/Info\";\r\nimport { ColorSelector } from \"../../../layout/LayoutSelector\";\r\nexport default class Style extends Component {\r\n  options = [\r\n    /* { label: \"Top-left\", value: \"TL\" },\r\n    { label: \"Top-Right\", value: \"TR\" }, */\r\n    { label: \"Bottom-left\", value: \"BL\" },\r\n    { label: \"Bottom-Right\", value: \"BR\" },\r\n  ];\r\n  state = {\r\n    elements: this.props.elements,\r\n    selected: this.props.selected,\r\n    position: this.props.position,\r\n    // fontSize: this.props.fontSize\r\n  };\r\n\r\n  onClickElement = (i) => {\r\n    const cases = this.props.case || 1;\r\n    this.setState({ selected: i });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const cases = this.props.case || 1;\r\n    this.props.onChange(cases, this.state);\r\n  }\r\n\r\n  onColorChange = (color) => {\r\n    const cases = this.props.case || 1;\r\n    const { elements, selected } = this.state;\r\n    elements[selected].color = color.hex;\r\n    this.setState({ elements }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n\r\n  onFontChange = (e) => {\r\n    const cases = this.props.case || 1;\r\n    this.setState({ [e.target.name]: e.target.value }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n\r\n  renderElements = (ele, i) => {\r\n    const { selected } = this.state;\r\n    const selectedDiv = selected === i ? \"element-div-active\" : \"\";\r\n    const selectedText = selected === i ? \"element-text-active\" : \"\";\r\n    return (\r\n      <div className={\"element-list\"} onClick={() => this.onClickElement(i)}>\r\n        <div className={\"element-list-text \" + selectedText}>{ele.text}</div>\r\n        <div className={\"element-list-div \" + selectedDiv} style={{ backgroundColor: ele.color }}></div>\r\n      </div>\r\n    );\r\n  };\r\n  onChangeStyle = (e) => {\r\n    const cases = this.props.case || 1;\r\n    this.setState({ [e.target.name]: parseInt(e.target.value || 0) }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n  onDropDownChange = (value) => {\r\n    const cases = this.props.case || 1;\r\n    this.setState({ position: value }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n  render() {\r\n    const { elements, selected, position, fontSize } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          {/* <div className=\"col-md-4 col-sm-12 order-sm-2\">\r\n            {elements.map((e, i) => (\r\n              <ColorSelector {...e} selectedIndex={selected} onClick={this.onClickElement} index={i} key={i} />\r\n            ))}\r\n          </div>\r\n          <div className=\"col-md-8 col-sm-12\">\r\n            <SketchPicker defaultValue=\"#452135\" color={elements[selected].color} onChangeComplete={this.onColorChange} />\r\n          </div> */}\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"form-element\">\r\n              <div className=\"label-text\">\r\n                Position*\r\n                <Info text=\"Select dynemic element position \" />\r\n              </div>\r\n              <DropDown options={this.options} onChange={this.onDropDownChange} value={position} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}