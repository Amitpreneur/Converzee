{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Domain.js\";\nimport React, { Component } from \"react\";\nimport { SAVE_TOOL, SAVE_DOMAIN, GET_DOMAIN } from \"../../actions/URLs\";\nimport RequestHandler from \"../../actions/RequestHandler\";\nimport _ from \"lodash\";\nimport ToolUtil from \"../../utils/ToolUtil\";\nexport default class Domain extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      domains: [\"\"]\n    };\n\n    this.onClickSave = () => {\n      const newDomains = _.compact(this.state.domains);\n\n      if (ToolUtil.domainLimit >= newDomains.length) {\n        RequestHandler.PostRequest(SAVE_DOMAIN, {\n          domainData: {\n            domains: newDomains\n          }\n        }, (res, err) => {\n          if (res.data.success) {\n            window.gs.toast(\"Domain Save Successfully\", {\n              position: \"bottom-right\",\n              type: window.gs.toast.TYPE.SUCCESS\n            });\n            this.setState({\n              domains: newDomains\n            }, () => {\n              if (this.state.domains && !this.state.domains.length) {\n                this.setState({\n                  domains: [\"\"]\n                });\n              }\n            });\n          } else {\n            const msg = res.data.message || \"Something went wrong\";\n            window.gs.toast(msg, {\n              position: \"bottom-right\",\n              autoClose: false,\n              type: window.gs.toast.TYPE.ERROR\n            });\n          }\n        });\n      } else {\n        window.gs.sayUpdate(null, false, \"https://live.myconversionkit.com/pro\");\n      }\n    };\n\n    this.onItemChange = (index, e) => {\n      let {\n        domains\n      } = this.state;\n      const value = e.target.value;\n      domains[index] = value;\n      this.setState({\n        domains\n      });\n    };\n\n    this.onAddClick = () => {\n      const {\n        domains\n      } = this.state;\n      domains.push(\"\");\n      this.setState({\n        domains\n      });\n    };\n\n    this.onRemoveClick = index => {\n      const domains = this.state.domains || [\"\"];\n      domains.splice(index, 1);\n      this.setState({\n        domains\n      }, () => {\n        if (!this.state.domains.length) {\n          this.setState({\n            domains: [\"\"]\n          });\n        }\n      });\n    };\n\n    this.renderDomainList = (item, index) => {\n      const size = this.state.domains.length;\n      const props = {\n        value: item,\n        onChange: this.onItemChange,\n        index,\n        onAddClick: this.onAddClick,\n        size,\n        onRemoveClick: this.onRemoveClick\n      };\n      return React.createElement(\"div\", {\n        className: \"col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(TextInput, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })));\n    };\n  }\n\n  componentDidMount() {\n    window.gs.navTitle(\"Domains\");\n    RequestHandler.PostRequest(GET_DOMAIN, {}, (res, err) => {\n      if (res) {\n        const domains = res.data.domains;\n\n        if (domains) {\n          this.setState({\n            domains\n          }, () => {\n            if (this.state.domains && !this.state.domains.length) {\n              this.setState({\n                domains: [\"\"]\n              });\n            }\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    const {\n      domains\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"create-top-bar-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.onClickSave,\n      className: \"btn btn-primary btn-md create-top-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Save\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"80%\",\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        fontSize: \"20px\",\n        paddingLeft: \"33px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Domain\")), React.createElement(\"div\", {\n      style: {\n        paddingLeft: \"33px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Total Domain limit (\", ToolUtil.domainLimit, \")\"), React.createElement(\"p\", {\n      style: {\n        color: \"gray\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"List of Domain where you want to run your tool\"))))), React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"create-center-main\",\n      style: {\n        paddingTop: \"20px\",\n        marginTop: \"2%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"80%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, domains.map(this.renderDomainList))))), React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"80%\",\n        textAlign: \"left\",\n        paddingTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        paddingLeft: \"33px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: \"gray\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Use HTTP / HTTPS \")))))));\n  }\n\n}\n\nconst TextInput = props => {\n  return React.createElement(\"div\", {\n    className: \"code-input-block \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: props.value,\n    className: \"form-control\",\n    onChange: e => props.onChange(props.index, e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"code-plusIcon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, props.size - 1 === props.index ? React.createElement(\"i\", {\n    onClick: () => props.onAddClick(),\n    className: \"fa fa-plus-circle\",\n    \"aria-hidden\": \"true\",\n    title: \"Click to Add Domain\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }) : React.createElement(\"i\", {\n    onClick: () => props.onRemoveClick(props.index),\n    className: \"fa fa-minus-circle\",\n    \"aria-hidden\": \"true\",\n    title: \"Click to Remove Domain\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/Domain.js"],"names":["React","Component","SAVE_TOOL","SAVE_DOMAIN","GET_DOMAIN","RequestHandler","_","ToolUtil","Domain","state","domains","onClickSave","newDomains","compact","domainLimit","length","PostRequest","domainData","res","err","data","success","window","gs","toast","position","type","TYPE","SUCCESS","setState","msg","message","autoClose","ERROR","sayUpdate","onItemChange","index","e","value","target","onAddClick","push","onRemoveClick","splice","renderDomainList","item","size","props","onChange","componentDidMount","navTitle","render","width","textAlign","fontSize","paddingLeft","color","paddingTop","marginTop","map","TextInput"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { SAVE_TOOL, SAVE_DOMAIN, GET_DOMAIN } from \"../../actions/URLs\";\nimport RequestHandler from \"../../actions/RequestHandler\";\nimport _ from \"lodash\";\nimport ToolUtil from \"../../utils/ToolUtil\";\nexport default class Domain extends Component {\n  state = {\n    domains: [\"\"],\n  };\n  componentDidMount() {\n    window.gs.navTitle(\"Domains\");\n    RequestHandler.PostRequest(GET_DOMAIN, {}, (res, err) => {\n      if (res) {\n        const domains = res.data.domains;\n        if (domains) {\n          this.setState({ domains }, () => {\n            if (this.state.domains && !this.state.domains.length) {\n              this.setState({ domains: [\"\"] });\n            }\n          });\n        }\n      }\n    });\n  }\n\n  onClickSave = () => {\n    const newDomains = _.compact(this.state.domains);\n    if (ToolUtil.domainLimit >= newDomains.length) {\n      RequestHandler.PostRequest(SAVE_DOMAIN, { domainData: { domains: newDomains } }, (res, err) => {\n        if (res.data.success) {\n          window.gs.toast(\"Domain Save Successfully\", { position: \"bottom-right\", type: window.gs.toast.TYPE.SUCCESS });\n          this.setState({ domains: newDomains }, () => {\n            if (this.state.domains && !this.state.domains.length) {\n              this.setState({ domains: [\"\"] });\n            }\n          });\n        } else {\n          const msg = res.data.message || \"Something went wrong\";\n          window.gs.toast(msg, { position: \"bottom-right\", autoClose: false, type: window.gs.toast.TYPE.ERROR });\n        }\n      });\n    } else {\n      window.gs.sayUpdate(null, false, \"https://live.myconversionkit.com/pro\");\n    }\n  };\n\n  onItemChange = (index, e) => {\n    let { domains } = this.state;\n    const value = e.target.value;\n    domains[index] = value;\n    this.setState({ domains });\n  };\n\n  onAddClick = () => {\n    const { domains } = this.state;\n    domains.push(\"\");\n    this.setState({ domains });\n  };\n\n  onRemoveClick = (index) => {\n    const domains = this.state.domains || [\"\"];\n    domains.splice(index, 1);\n    this.setState({ domains }, () => {\n      if (!this.state.domains.length) {\n        this.setState({ domains: [\"\"] });\n      }\n    });\n  };\n\n  renderDomainList = (item, index) => {\n    const size = this.state.domains.length;\n    const props = {\n      value: item,\n      onChange: this.onItemChange,\n      index,\n      onAddClick: this.onAddClick,\n      size,\n      onRemoveClick: this.onRemoveClick,\n    };\n    return (\n      <div className=\"col-12\">\n        <TextInput {...props} />\n      </div>\n    );\n  };\n\n  render() {\n    const { domains } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"create-top-bar-button\">\n              <button onClick={this.onClickSave} className=\"btn btn-primary btn-md create-top-button\">\n                Save\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <center>\n              <div style={{ width: \"80%\", textAlign: \"left\" }}>\n                <div style={{ fontSize: \"20px\", paddingLeft: \"33px\" }}>\n                  <strong>Domain</strong>\n                </div>\n                <div style={{ paddingLeft: \"33px\" }}>\n                  <p>Total Domain limit ({ToolUtil.domainLimit})</p>\n                  <p style={{ color: \"gray\" }}>List of Domain where you want to run your tool</p>\n                </div>\n              </div>\n            </center>\n          </div>\n          <div className=\"col-12\">\n            <center>\n              <div className=\"create-center-main\" style={{ paddingTop: \"20px\", marginTop: \"2%\" }}>\n                <div style={{ width: \"80%\" }}>{domains.map(this.renderDomainList)}</div>\n              </div>\n            </center>\n          </div>\n          <div className=\"col-12\">\n            <center>\n              <div style={{ width: \"80%\", textAlign: \"left\", paddingTop: \"10px\" }}>\n                <div style={{ paddingLeft: \"33px\" }}>\n                  <p style={{ color: \"gray\" }}>Use HTTP / HTTPS </p>\n                </div>\n              </div>\n            </center>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst TextInput = (props) => {\n  return (\n    <div className=\"code-input-block \">\n      <input type=\"text\" value={props.value} className=\"form-control\" onChange={(e) => props.onChange(props.index, e)} />\n      <div className=\"code-plusIcon\">\n        {props.size - 1 === props.index ? (\n          <i onClick={() => props.onAddClick()} className=\"fa fa-plus-circle\" aria-hidden=\"true\" title=\"Click to Add Domain\" />\n        ) : (\n          <i onClick={() => props.onRemoveClick(props.index)} className=\"fa fa-minus-circle\" aria-hidden=\"true\" title=\"Click to Remove Domain\" />\n        )}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}