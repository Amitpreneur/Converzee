{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/index.js\";\nimport React, { Component } from \"react\";\nimport \"../../Create.css\";\nimport Code from \"../../../subpages/create/Code\";\nimport RequestHandler from \"../../../../actions/RequestHandler\";\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath } from \"../../../../actions/URLs\";\nimport Text from \"./Text\";\nimport SideBar from \"./SideBar\";\nimport ToolUtil from \"../../../../utils/ToolUtil\";\nimport Style from \"./Style\";\nimport Video from \"./Video\";\nimport Preview from \"./Preview\";\nimport Util from \"../../../Util\";\nimport { VideoPopUpModalResponse, VideoPopUpModal } from \"../../../utils/Modal\";\nimport Image from \"./Image\";\nimport { ToolLayout, ButtonsGroup } from \"../../../layout/ToolLayout\";\nimport { Modal } from \"antd\";\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\nconst vidoPop = {\n  activeTab: 1,\n  image: \"\",\n  TEXT: {\n    campaignName: \"\"\n  },\n  video: {\n    url: \"\",\n    videoType: \"youtube\"\n  },\n  STYLE: {\n    elements: [{\n      name: \"background\",\n      text: \"Video Background\",\n      color: \"\"\n    }],\n    switchElement: false,\n    selected: 0\n  },\n  CODE: {\n    include: [{\n      type: \"contains\",\n      url: \"\"\n    }],\n    exclude: [{\n      type: \"contains\",\n      url: \"\"\n    }]\n  }\n};\nexport default class VideoPopup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = vidoPop;\n    this.loaded = false;\n\n    this.onVideoChange = switchElement => {\n      this.setState({\n        STYLE: {\n          switchElement\n        }\n      });\n    };\n\n    this.onChangeActive = tabIndex => {\n      const {\n        activeTab\n      } = this.state;\n\n      if (activeTab !== tabIndex) {\n        this.setState({\n          activeTab: tabIndex\n        });\n      }\n    };\n\n    this.onUpdate = (index, data) => {\n      switch (index) {\n        case 1:\n          this.setState({\n            TEXT: data\n          });\n          break;\n\n        case 2:\n          this.setState({\n            video: data\n          });\n          break;\n\n        case 3:\n          this.setState({\n            STYLE: data\n          });\n          break;\n\n        case 4:\n          this.setState({\n            CODE: data\n          });\n          break;\n\n        case 5:\n          this.setState({\n            image: data\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.renderMain = () => {\n      const {\n        activeTab,\n        TEXT,\n        video,\n        STYLE,\n        CODE,\n        image\n      } = this.state;\n      if (!this.loaded) return null;\n      let component = null;\n\n      switch (activeTab) {\n        case 15:\n          component = React.createElement(Text, Object.assign({}, TEXT, {\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }));\n          break;\n\n        case 1:\n          component = React.createElement(Video, Object.assign({}, video, {\n            onVideoChange: this.onVideoChange,\n            switchElement: STYLE.switchElement,\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }));\n          break;\n\n        case 2:\n          component = React.createElement(Style, Object.assign({}, STYLE, {\n            case: 3,\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }));\n          break;\n\n        case 3:\n          component = React.createElement(Code, Object.assign({}, CODE, {\n            case: 4,\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }));\n          break;\n\n        case 4:\n          component = React.createElement(Image, {\n            image: image,\n            case: 5,\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          });\n          break;\n\n        default:\n          component = React.createElement(Text, Object.assign({}, TEXT, {\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }));\n          break;\n      }\n\n      return component;\n    };\n\n    this.onClickSave = () => {\n      const toolData = this.state;\n\n      if (this.state.CODE.include[0].url !== \"\") {\n        if (!Util.isArrayEqual(vidoPop, this.state, 3)) {\n          RequestHandler.PostRequest(SAVE_TOOL, {\n            toolData: VideoPopUpModal(toolData)\n          }, (res, err) => {\n            if (res) {\n              if (res.data.script) {\n                window.gs.setScript(res.data.script);\n                setTimeout(() => {\n                  this.props.history.push(\"/Campaigns\");\n                }, 3000);\n              } else {\n                window.gs.toast(res.data.message, {\n                  position: \"bottom-right\",\n                  type: window.gs.toast.TYPE.FAILED\n                });\n              }\n            } else {\n              console.log(err);\n            }\n          });\n        }\n      } else {\n        Modal.warning({\n          content: \"Should Contain atleast one trigger point\"\n        });\n      }\n    };\n\n    this.renderRight = () => {\n      const {\n        activeTab,\n        image,\n        video\n      } = this.state;\n      if (activeTab === 1 && video.url) return React.createElement(ReponsiveImage, {\n        isVideo: true,\n        url: video.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      });\n      if (activeTab === 4 && image) return React.createElement(ReponsiveImage, {\n        isImg: true,\n        url: image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      });\n      return React.createElement(ReponsiveImage, {\n        isAs: true,\n        url: \"asset/video_pop_up.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      });\n    };\n\n    this.back = () => {\n      this.props.history.push(\"/Create\");\n    };\n\n    this.closePopup = () => {\n      this.setState({\n        preview: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match ? this.props.match.params ? this.props.match.params.id : null : null;\n\n    if (id) {\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\n        if (res) {\n          this.loaded = true;\n          Util.isRedirected = true;\n          const data = VideoPopUpModalResponse(res);\n\n          if (data) {\n            this.setState(data, () => {\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\n            });\n          }\n        }\n      });\n    } else {\n      const toolId = 5;\n      this.loaded = true;\n      this.setState({\n        toolId: toolId,\n        toolName: ToolUtil.getTool(toolId),\n        name: Util.CAMPAIGNS_NAME\n      });\n      Util.RedirectWhenCampaignEmpty(this.props);\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\n    }\n  }\n\n  render() {\n    const {\n      preview\n    } = this.state;\n    return React.createElement(ToolLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, preview ? React.createElement(Preview, Object.assign({}, this.state, {\n      closePopup: this.closePopup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      className: \"col-10 toolItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, this.renderMain()), React.createElement(\"div\", {\n      className: \"col-md-6 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, this.renderRight()), React.createElement(ButtonsGroup, {\n      preview: () => {\n        this.setState({\n          preview: !preview\n        });\n      },\n      backUrl: this.back,\n      save: this.onClickSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-1 sideBarButtomPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(SideBar, {\n      activeTab: this.state.activeTab,\n      onChangeActive: this.onChangeActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/index.js"],"names":["React","Component","Code","RequestHandler","GET_ONE_TOOL","SAVE_TOOL","getPath","Text","SideBar","ToolUtil","Style","Video","Preview","Util","VideoPopUpModalResponse","VideoPopUpModal","Image","ToolLayout","ButtonsGroup","Modal","ReponsiveImage","vidoPop","activeTab","image","TEXT","campaignName","video","url","videoType","STYLE","elements","name","text","color","switchElement","selected","CODE","include","type","exclude","VideoPopup","state","loaded","onVideoChange","setState","onChangeActive","tabIndex","onUpdate","index","data","renderMain","component","onClickSave","toolData","isArrayEqual","PostRequest","res","err","script","window","gs","setScript","setTimeout","props","history","push","toast","message","position","TYPE","FAILED","console","log","warning","content","renderRight","back","closePopup","preview","componentDidMount","id","match","params","isRedirected","navTitle","getTool","toolId","toolName","CAMPAIGNS_NAME","RedirectWhenCampaignEmpty","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../Create.css\";\nimport Code from \"../../../subpages/create/Code\";\nimport RequestHandler from \"../../../../actions/RequestHandler\";\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath } from \"../../../../actions/URLs\";\nimport Text from \"./Text\";\nimport SideBar from \"./SideBar\";\nimport ToolUtil from \"../../../../utils/ToolUtil\";\nimport Style from \"./Style\";\nimport Video from \"./Video\";\nimport Preview from \"./Preview\";\nimport Util from \"../../../Util\";\nimport { VideoPopUpModalResponse, VideoPopUpModal } from \"../../../utils/Modal\";\nimport Image from \"./Image\";\nimport { ToolLayout, ButtonsGroup } from \"../../../layout/ToolLayout\";\nimport { Modal } from \"antd\";\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\n\nconst vidoPop = {\n  activeTab: 1,\n  image: \"\",\n  TEXT: { campaignName: \"\" },\n  video: { url: \"\", videoType: \"youtube\" },\n  STYLE: {\n    elements: [{ name: \"background\", text: \"Video Background\", color: \"\" }],\n    switchElement: false,\n    selected: 0,\n  },\n  CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: \"\" }] },\n};\nexport default class VideoPopup extends Component {\n  state = vidoPop;\n  loaded = false;\n  onVideoChange = (switchElement) => {\n    this.setState({ STYLE: { switchElement } });\n  };\n  componentDidMount() {\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\n    if (id) {\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\n        if (res) {\n          this.loaded = true;\n          Util.isRedirected = true;\n          const data = VideoPopUpModalResponse(res);\n          if (data) {\n            this.setState(data, () => {\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\n            });\n          }\n        }\n      });\n    } else {\n      const toolId = 5;\n      this.loaded = true;\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\n      Util.RedirectWhenCampaignEmpty(this.props);\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\n    }\n  }\n  onChangeActive = (tabIndex) => {\n    const { activeTab } = this.state;\n    if (activeTab !== tabIndex) {\n      this.setState({ activeTab: tabIndex });\n    }\n  };\n  onUpdate = (index, data) => {\n    switch (index) {\n      case 1:\n        this.setState({ TEXT: data });\n        break;\n      case 2:\n        this.setState({ video: data });\n        break;\n      case 3:\n        this.setState({ STYLE: data });\n        break;\n      case 4:\n        this.setState({ CODE: data });\n        break;\n      case 5:\n        this.setState({ image: data });\n        break;\n      default:\n        break;\n    }\n  };\n  renderMain = () => {\n    const { activeTab, TEXT, video, STYLE, CODE, image } = this.state;\n    if (!this.loaded) return null;\n    let component = null;\n    switch (activeTab) {\n      case 15:\n        component = <Text {...TEXT} onChange={this.onUpdate} />;\n        break;\n      case 1:\n        component = <Video {...video} onVideoChange={this.onVideoChange} switchElement={STYLE.switchElement} onChange={this.onUpdate} />;\n        break;\n      case 2:\n        component = <Style {...STYLE} case={3} onChange={this.onUpdate} />;\n        break;\n      case 3:\n        component = <Code {...CODE} case={4} onChange={this.onUpdate} />;\n        break;\n      case 4:\n        component = <Image image={image} case={5} onChange={this.onUpdate} />;\n        break;\n      default:\n        component = <Text {...TEXT} onChange={this.onUpdate} />;\n        break;\n    }\n    return component;\n  };\n\n  onClickSave = () => {\n    const toolData = this.state;\n    if (this.state.CODE.include[0].url !== \"\") {\n      if (!Util.isArrayEqual(vidoPop, this.state, 3)) {\n        RequestHandler.PostRequest(SAVE_TOOL, { toolData: VideoPopUpModal(toolData) }, (res, err) => {\n          if (res) {\n            if (res.data.script) {\n              window.gs.setScript(res.data.script);\n              setTimeout(() => {\n                this.props.history.push(\"/Campaigns\");\n              }, 3000);\n            } else {\n              window.gs.toast(res.data.message, { position: \"bottom-right\", type: window.gs.toast.TYPE.FAILED });\n            }\n          } else {\n            console.log(err);\n          }\n        });\n      }\n    } else {\n      Modal.warning({\n        content: \"Should Contain atleast one trigger point\",\n      });\n    }\n  };\n\n  renderRight = () => {\n    const { activeTab, image, video } = this.state;\n    if (activeTab === 1 && video.url) return <ReponsiveImage isVideo={true} url={video.url} />;\n    if (activeTab === 4 && image) return <ReponsiveImage isImg={true} url={image} />;\n    return <ReponsiveImage isAs={true} url={\"asset/video_pop_up.png\"} />;\n  };\n\n  back = () => {\n    this.props.history.push(\"/Create\");\n  };\n\n  closePopup = () => {\n    this.setState({ preview: false });\n  };\n\n  render() {\n    const { preview } = this.state;\n\n    return (\n      <ToolLayout>\n        <div className=\"row\">\n          {preview ? <Preview {...this.state} closePopup={this.closePopup} /> : null}\n          <div className=\"col-10 toolItem\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">{this.renderMain()}</div>\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\n              <ButtonsGroup\n                preview={() => {\n                  this.setState({ preview: !preview });\n                }}\n                backUrl={this.back}\n                save={this.onClickSave}\n              />\n            </div>\n          </div>\n          <div className=\"col-1 sideBarButtomPanel\">\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\n          </div>\n        </div>\n      </ToolLayout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}