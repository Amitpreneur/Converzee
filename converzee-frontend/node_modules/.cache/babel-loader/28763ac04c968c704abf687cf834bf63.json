{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/Style.js\";\nimport React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport { ColorSelector } from \"../layout/LayoutSelector\";\nimport Uploader from \"../comman/Uploader\";\nimport { Switch } from \"antd\";\nexport default class Style extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      style: this.props.style,\n      bgImg: this.props.bgImg,\n      isBGIMG: this.props.isBGIMG,\n      selectedIndex: 0,\n      count: 0\n    };\n\n    this.onColorChange = value => {\n      const {\n        style,\n        selectedIndex,\n        count\n      } = this.state;\n\n      if (selectedIndex === 3) {\n        this.setState({\n          bgImg: value.hex\n        }, () => {\n          this.props.onChange({\n            bgImg: this.state.bgImg\n          });\n        });\n      } else {\n        style[selectedIndex].value = value.hex;\n        this.setState({\n          count: count + 1\n        }, () => {\n          this.props.onChange({\n            style: this.state.style\n          });\n        });\n      }\n    };\n\n    this.onColorBoxClick = index => {\n      this.setState({\n        selectedIndex: index\n      });\n    };\n\n    this.onUploadDone = image => {\n      this.setState({\n        bgImg: image.image\n      }, () => {\n        this.props.onChange({\n          bgImg: this.state.bgImg\n        });\n      });\n    };\n\n    this.onToggle = () => {\n      this.setState({\n        isBGIMG: !this.state.isBGIMG,\n        selectedIndex: 0\n      }, () => {\n        this.props.onChange({\n          isBGIMG: this.state.isBGIMG\n        });\n      });\n    };\n\n    this.onReset = () => {\n      this.setState({\n        bgImg: \"\"\n      }, () => {\n        this.props.onChange({\n          bgImg: this.state.bgImg\n        });\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.onChange({\n      style: this.state.style\n    });\n  }\n\n  render() {\n    const {\n      style,\n      selectedIndex,\n      isBGIMG,\n      bgImg\n    } = this.state;\n    const props = {\n      onUploadDone: this.onUploadDone\n    };\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.props.layout === 2 ? React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Use Background Color Or Image \", React.createElement(Switch, {\n      className: \"m-2\",\n      onChange: this.onToggle,\n      size: \"small\",\n      defaultChecked: isBGIMG,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      className: \"col-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, style.map((e, i) => React.createElement(ColorSelector, Object.assign({\n      showName: true\n    }, e, {\n      selectedIndex: selectedIndex,\n      onClick: this.onColorBoxClick,\n      index: i,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))), !isBGIMG && this.props.layout === 2 ? React.createElement(ColorSelector, {\n      showName: true,\n      name: \"Mat Background\",\n      id: \"bgImg\",\n      value: bgImg,\n      selectedIndex: selectedIndex,\n      onClick: this.onColorBoxClick,\n      index: 3,\n      key: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }) : null), React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(SketchPicker, {\n      defaultValue: \"#452135\",\n      color: selectedIndex === 3 && this.props.layout === 2 && !isBGIMG ? bgImg : style[selectedIndex].value,\n      onChangeComplete: this.onColorChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), isBGIMG ? React.createElement(\"div\", {\n      className: \"col-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Uploader, Object.assign({}, props, {\n      onReset: this.onReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))) : null);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/OptinForm/Style.js"],"names":["React","Component","SketchPicker","ColorSelector","Uploader","Switch","Style","state","style","props","bgImg","isBGIMG","selectedIndex","count","onColorChange","value","setState","hex","onChange","onColorBoxClick","index","onUploadDone","image","onToggle","onReset","componentWillUnmount","render","layout","map","e","i"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport { ColorSelector } from \"../layout/LayoutSelector\";\nimport Uploader from \"../comman/Uploader\";\nimport { Switch } from \"antd\";\nexport default class Style extends Component {\n  state = {\n    style: this.props.style,\n    bgImg: this.props.bgImg,\n    isBGIMG: this.props.isBGIMG,\n    selectedIndex: 0,\n    count: 0,\n  };\n\n  onColorChange = (value) => {\n    const { style, selectedIndex, count } = this.state;\n    if (selectedIndex === 3) {\n      this.setState({ bgImg: value.hex }, () => {\n        this.props.onChange({ bgImg: this.state.bgImg });\n      });\n    } else {\n      style[selectedIndex].value = value.hex;\n      this.setState({ count: count + 1 }, () => {\n        this.props.onChange({ style: this.state.style });\n      });\n    }\n  };\n\n  onColorBoxClick = (index) => {\n    this.setState({ selectedIndex: index });\n  };\n\n  componentWillUnmount() {\n    this.props.onChange({ style: this.state.style });\n  }\n\n  onUploadDone = (image) => {\n    this.setState({ bgImg: image.image }, () => {\n      this.props.onChange({ bgImg: this.state.bgImg });\n    });\n  };\n\n  onToggle = () => {\n    this.setState({ isBGIMG: !this.state.isBGIMG, selectedIndex: 0 }, () => {\n      this.props.onChange({ isBGIMG: this.state.isBGIMG });\n    });\n  };\n\n  onReset = () => {\n    this.setState({ bgImg: \"\" }, () => {\n      this.props.onChange({ bgImg: this.state.bgImg });\n    });\n  };\n\n  render() {\n    const { style, selectedIndex, isBGIMG, bgImg } = this.state;\n    const props = {\n      onUploadDone: this.onUploadDone,\n    };\n    return (\n      <div className=\"row\">\n        {this.props.layout === 2 ? (\n          <div className=\"col-12\">\n            Use Background Color Or Image <Switch className=\"m-2\" onChange={this.onToggle} size=\"small\" defaultChecked={isBGIMG} />\n          </div>\n        ) : null}\n        <div className=\"col-4\">\n          {style.map((e, i) => (\n            <ColorSelector showName={true} {...e} selectedIndex={selectedIndex} onClick={this.onColorBoxClick} index={i} key={i} />\n          ))}\n          {!isBGIMG && this.props.layout === 2 ? (\n            <ColorSelector showName={true} name={\"Mat Background\"} id={\"bgImg\"} value={bgImg} selectedIndex={selectedIndex} onClick={this.onColorBoxClick} index={3} key={3} />\n          ) : null}\n        </div>\n        <div className=\"col-8\">\n          <SketchPicker defaultValue=\"#452135\" color={selectedIndex === 3 && this.props.layout === 2 && !isBGIMG ? bgImg : style[selectedIndex].value} onChangeComplete={this.onColorChange} />\n        </div>\n        {isBGIMG ? (\n          <div className=\"col-12 \">\n            <Uploader {...props} onReset={this.onReset} />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}