{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/Offeriframe/index.js\";\nimport React, { Component } from \"react\";\nimport \"../../Create.css\";\nimport Code from \"../../../subpages/create/Code\";\nimport RequestHandler from \"../../../../actions/RequestHandler\";\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath } from \"../../../../actions/URLs\"; // import Text from \"./Text\";\n\nimport SideBar from \"./SideBar\";\nimport ToolUtil, { generateIframeContant } from \"../../../../utils/ToolUtil\";\nimport Util, { generateFile } from \"../../../Util\";\nimport { OfferIframeModal } from \"../../../utils/Modal\";\nimport Text from \"./Text\";\nimport SuccessPopup from \"../../../comman/SuccessPopUp\";\nimport { Drawer, Modal } from \"antd\";\nimport { ToolLayout, ButtonsGroup } from \"../../../layout/ToolLayout\";\nexport default class OfferIframe extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: 1,\n      TEXT: {\n        url: \"\",\n        title: \"\"\n      }\n    };\n\n    this.onChangeActive = tabIndex => {\n      const {\n        activeTab\n      } = this.state;\n\n      if (activeTab !== tabIndex) {\n        this.setState({\n          activeTab: tabIndex\n        });\n      }\n    };\n\n    this.onUpdate = (index, data) => {\n      switch (index) {\n        case 1:\n          this.setState({\n            TEXT: data\n          });\n          break;\n\n        case 2:\n          this.setState({\n            cta: data\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.renderMain = () => {\n      const {\n        activeTab,\n        TEXT\n      } = this.state;\n      let component = null;\n\n      switch (activeTab) {\n        case 1:\n          component = React.createElement(Text, Object.assign({}, TEXT, {\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }));\n          break;\n\n        case 2:\n          // component = <Timing {...template} onChange={this.onUpdate} />;\n          break;\n\n        case 3:\n          // component = <Code {...CODE} onChange={this.onUpdate} />;\n          break;\n\n        default:\n          component = React.createElement(Text, Object.assign({}, TEXT, {\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }));\n          break;\n      }\n\n      return component;\n    };\n\n    this.onClickSave = () => {\n      const {\n        TEXT\n      } = this.state;\n      generateFile(\"index.html\", generateIframeContant(TEXT.url, TEXT.title));\n      Modal.success({\n        content: \"File has been Donwloaded\"\n      });\n      setTimeout(() => {\n        this.props.history.push(\"/Create\");\n      }, 2000);\n    };\n\n    this.renderRight = () => {\n      return React.createElement(\"img\", {\n        src: getPath(\"asset/Iframegraphic.png\"),\n        class: \"img-fluid\",\n        alt: \"Responsive image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      });\n    };\n\n    this.back = () => {\n      this.props.history.push(\"/Create\");\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match ? this.props.match.params ? this.props.match.params.id : null : null;\n\n    if (id) {\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\n        if (res) {\n          Util.isRedirected = true;\n          const data = res.data.campaigns;\n          Object.assign(data, {\n            _id: id,\n            toolName: ToolUtil.getTool(data.toolId),\n            toolId: data.toolId,\n            name: data.data\n          });\n          this.setState({ ...data\n          });\n          window.gs.navTitle(ToolUtil.getTool(data.toolId));\n        }\n      });\n    } else {\n      const toolId = 14;\n      this.setState({\n        toolId: toolId,\n        toolName: ToolUtil.getTool(toolId),\n        name: Util.CAMPAIGNS_NAME\n      });\n      Util.RedirectWhenCampaignEmpty(this.props);\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\n    }\n  }\n\n  render() {\n    return React.createElement(ToolLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-10 toolItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.renderMain()), React.createElement(\"div\", {\n      className: \"col-md-6 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.renderRight()), React.createElement(ButtonsGroup, {\n      backUrl: this.back,\n      download: this.onClickSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-1 sideBarButtomPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(SideBar, {\n      activeTab: this.state.activeTab,\n      onChangeActive: this.onChangeActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/Offeriframe/index.js"],"names":["React","Component","Code","RequestHandler","GET_ONE_TOOL","SAVE_TOOL","getPath","SideBar","ToolUtil","generateIframeContant","Util","generateFile","OfferIframeModal","Text","SuccessPopup","Drawer","Modal","ToolLayout","ButtonsGroup","OfferIframe","state","activeTab","TEXT","url","title","onChangeActive","tabIndex","setState","onUpdate","index","data","cta","renderMain","component","onClickSave","success","content","setTimeout","props","history","push","renderRight","back","componentDidMount","id","match","params","PostRequest","res","err","isRedirected","campaigns","Object","assign","_id","toolName","getTool","toolId","name","window","gs","navTitle","CAMPAIGNS_NAME","RedirectWhenCampaignEmpty","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../Create.css\";\nimport Code from \"../../../subpages/create/Code\";\nimport RequestHandler from \"../../../../actions/RequestHandler\";\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath } from \"../../../../actions/URLs\";\n// import Text from \"./Text\";\nimport SideBar from \"./SideBar\";\nimport ToolUtil, { generateIframeContant } from \"../../../../utils/ToolUtil\";\nimport Util, { generateFile } from \"../../../Util\";\nimport { OfferIframeModal } from \"../../../utils/Modal\";\nimport Text from \"./Text\";\nimport SuccessPopup from \"../../../comman/SuccessPopUp\";\nimport { Drawer, Modal } from \"antd\";\nimport { ToolLayout, ButtonsGroup } from \"../../../layout/ToolLayout\";\nexport default class OfferIframe extends Component {\n  state = {\n    activeTab: 1,\n    TEXT: { url: \"\", title: \"\" },\n  };\n  componentDidMount() {\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\n    if (id) {\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\n        if (res) {\n          Util.isRedirected = true;\n          const data = res.data.campaigns;\n          Object.assign(data, { _id: id, toolName: ToolUtil.getTool(data.toolId), toolId: data.toolId, name: data.data });\n          this.setState({ ...data });\n          window.gs.navTitle(ToolUtil.getTool(data.toolId));\n        }\n      });\n    } else {\n      const toolId = 14;\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\n      Util.RedirectWhenCampaignEmpty(this.props);\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\n    }\n  }\n  onChangeActive = (tabIndex) => {\n    const { activeTab } = this.state;\n    if (activeTab !== tabIndex) {\n      this.setState({ activeTab: tabIndex });\n    }\n  };\n  onUpdate = (index, data) => {\n    switch (index) {\n      case 1:\n        this.setState({ TEXT: data });\n        break;\n      case 2:\n        this.setState({ cta: data });\n        break;\n      default:\n        break;\n    }\n  };\n  renderMain = () => {\n    const { activeTab, TEXT } = this.state;\n    let component = null;\n    switch (activeTab) {\n      case 1:\n        component = <Text {...TEXT} onChange={this.onUpdate} />;\n        break;\n      case 2:\n        // component = <Timing {...template} onChange={this.onUpdate} />;\n        break;\n      case 3:\n        // component = <Code {...CODE} onChange={this.onUpdate} />;\n        break;\n      default:\n        component = <Text {...TEXT} onChange={this.onUpdate} />;\n        break;\n    }\n    return component;\n  };\n\n  onClickSave = () => {\n    const { TEXT } = this.state;\n    generateFile(\"index.html\", generateIframeContant(TEXT.url, TEXT.title));\n    Modal.success({\n      content: \"File has been Donwloaded\",\n    });\n    setTimeout(() => {\n      this.props.history.push(\"/Create\");\n    }, 2000);\n  };\n\n  renderRight = () => {\n    return <img src={getPath(\"asset/Iframegraphic.png\")} class=\"img-fluid\" alt=\"Responsive image\"></img>;\n  };\n\n  back = () => {\n    this.props.history.push(\"/Create\");\n  };\n\n  render() {\n    return (\n      <ToolLayout>\n        <div className=\"row\">\n          <div className=\"col-10 toolItem\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">{this.renderMain()}</div>\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\n              <ButtonsGroup backUrl={this.back} download={this.onClickSave} />\n            </div>\n          </div>\n          <div className=\"col-1 sideBarButtomPanel\">\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\n          </div>\n        </div>\n      </ToolLayout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}