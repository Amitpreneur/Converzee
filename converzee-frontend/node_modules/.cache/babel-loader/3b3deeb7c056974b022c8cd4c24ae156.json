{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/Timer.js\";\nimport React, { Component } from \"react\";\nimport DropDown from \"../../../comman/DropDown\";\nimport Datetime from \"react-datetime\";\nimport moment from \"moment\";\nimport Util from \"../../../Util\";\nimport { Info } from \"../../../comman/Info\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Timer extends Component {\n  constructor() {\n    super(...arguments);\n    this._timerType = [{\n      label: \"Date and Time Based\",\n      value: \"DATE_AND_TIME_BASED\"\n    }, {\n      label: \"Cookie Based\",\n      value: \"COOKIE_BASED\"\n    }, {\n      label: \"Ever green\",\n      value: \"EVERGREEN\"\n    }];\n    this._timeZone = Util.getTimeZoneList();\n    this._whenTimeExp = [{\n      label: \"Hide the timer\",\n      value: \"hide\"\n    }, {\n      label: \"Redirect the page\",\n      value: \"redirect\"\n    }, {\n      label: \"Show static central time as 00:00\",\n      value: \"static\"\n    }];\n    this.state = {\n      timerType: this.props.timerType,\n      endDateTime: this.props.endDateTime,\n      timeZone: this.props.timeZone,\n      whenTimeExp: this.props.whenTimeExp\n    };\n\n    this.onDropDownChange1 = value => {\n      const {\n        cases\n      } = this.props;\n      this.setState({\n        timerType: value\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onDropDownChange2 = value => {\n      const {\n        cases\n      } = this.props;\n      const newValu = value.format(\"YYYY-MM-DD HH:mm:ss\");\n      this.setState({\n        endDateTime: newValu\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onDropDownChange3 = value => {\n      const {\n        cases\n      } = this.props;\n      this.setState({\n        timeZone: value\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onDropDownChange4 = value => {\n      const {\n        cases\n      } = this.props;\n      this.setState({\n        whenTimeExp: value\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onChange = e => {\n      const {\n        cases\n      } = this.props;\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onTextChange = ctaText => {\n      const {\n        cases\n      } = this.props;\n      this.setState({\n        ctaText\n      });\n      this.props.onChange(cases, this.state);\n    };\n  }\n\n  componentWillUnmount() {\n    const {\n      cases\n    } = this.props;\n    this.props.onChange(cases, this.state);\n  }\n\n  render() {\n    const {\n      timerType,\n      endDateTime,\n      timeZone,\n      whenTimeExp\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"80%\",\n            padding: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-element\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"label-text\",\n              children: [\"Timer Type*\", /*#__PURE__*/_jsxDEV(Info, {\n                text: \"Select timer type for different action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n              options: this._timerType,\n              onChange: this.onDropDownChange1,\n              value: timerType,\n              class: \"dropdown-style\",\n              style: {\n                width: \"\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-element\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"label-text\",\n              children: [\"End Date and Time* \", /*#__PURE__*/_jsxDEV(Info, {\n                text: \"Select your end date & time of timer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Datetime, {\n              defaultValue: moment(endDateTime),\n              onChange: this.onDropDownChange2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-element\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"label-text\",\n              children: [\"Time Zone* \", /*#__PURE__*/_jsxDEV(Info, {\n                text: \"Select timezone to set the timer in particular timezone.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n              options: this._timeZone,\n              onChange: this.onDropDownChange3,\n              value: timeZone,\n              class: \"dropdown-style\",\n              style: {\n                width: \"\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), timerType !== 'EVERGREEN' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-element\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"label-text\",\n              children: [\"When Time Expires* \", /*#__PURE__*/_jsxDEV(Info, {\n                text: \"Select the action when time is up.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n              options: this._whenTimeExp,\n              onChange: this.onDropDownChange4,\n              value: whenTimeExp,\n              class: \"dropdown-style\",\n              style: {\n                width: \"\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 40\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/HelloBar/Timer.js"],"names":["React","Component","DropDown","Datetime","moment","Util","Info","Timer","_timerType","label","value","_timeZone","getTimeZoneList","_whenTimeExp","state","timerType","props","endDateTime","timeZone","whenTimeExp","onDropDownChange1","cases","setState","onChange","onDropDownChange2","newValu","format","onDropDownChange3","onDropDownChange4","e","target","name","onTextChange","ctaText","componentWillUnmount","render","width","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport DropDown from \"../../../comman/DropDown\";\r\nimport Datetime from \"react-datetime\";\r\nimport moment from \"moment\";\r\nimport Util from \"../../../Util\";\r\nimport { Info } from \"../../../comman/Info\";\r\n\r\nexport default class Timer extends Component {\r\n  _timerType = [\r\n    { label: \"Date and Time Based\", value: \"DATE_AND_TIME_BASED\" },\r\n    { label: \"Cookie Based\", value: \"COOKIE_BASED\" },\r\n    { label: \"Ever green\", value: \"EVERGREEN\" },\r\n  ];\r\n  // _endDateTime = [{ label: \"A\", value: \"A\" }, { label: \"B\", value: \"B\" }, { label: \"C\", value: \"C\" }, { label: \"D\", value: \"D\" }];\r\n  _timeZone = Util.getTimeZoneList();\r\n  _whenTimeExp = [\r\n    { label: \"Hide the timer\", value: \"hide\" },\r\n    { label: \"Redirect the page\", value: \"redirect\" },\r\n    { label: \"Show static central time as 00:00\", value: \"static\" },\r\n  ];\r\n\r\n  state = {\r\n    timerType: this.props.timerType,\r\n    endDateTime: this.props.endDateTime,\r\n    timeZone: this.props.timeZone,\r\n    whenTimeExp: this.props.whenTimeExp,\r\n  };\r\n  onDropDownChange1 = (value) => {\r\n    const { cases } = this.props;\r\n    this.setState({ timerType: value });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n  onDropDownChange2 = (value) => {\r\n    const { cases } = this.props;\r\n    const newValu = value.format(\"YYYY-MM-DD HH:mm:ss\");\r\n    this.setState({ endDateTime: newValu });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n  onDropDownChange3 = (value) => {\r\n    const { cases } = this.props;\r\n    this.setState({ timeZone: value });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n  onDropDownChange4 = (value) => {\r\n    const { cases } = this.props;\r\n    this.setState({ whenTimeExp: value });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n  onChange = (e) => {\r\n    const { cases } = this.props;\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n  onTextChange = (ctaText) => {\r\n    const { cases } = this.props;\r\n    this.setState({ ctaText });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const { cases } = this.props;\r\n    this.props.onChange(cases, this.state);\r\n  }\r\n\r\n  render() {\r\n    const { timerType, endDateTime, timeZone, whenTimeExp } = this.state;\r\n    return (\r\n      <div>\r\n        <center>\r\n          <div style={{ width: \"80%\", padding: \"20px\" }}>\r\n            <div className=\"form-element\">\r\n              <div className=\"label-text\">\r\n                Timer Type*\r\n                <Info text=\"Select timer type for different action\" />\r\n              </div>\r\n              <DropDown options={this._timerType} onChange={this.onDropDownChange1} value={timerType} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n            </div>\r\n            <div className=\"form-element\">\r\n              <div className=\"label-text\">\r\n                End Date and Time* <Info text=\"Select your end date & time of timer\" />\r\n              </div>\r\n              <Datetime defaultValue={moment(endDateTime)} onChange={this.onDropDownChange2} />\r\n              {/* <DropDown options={this._endDateTime} onChange={this.onDropDownChange2} value={endDateTime} class=\"dropdown-style\" style={{ width: \"\" }} /> */}\r\n            </div>\r\n            <div className=\"form-element\">\r\n              <div className=\"label-text\">\r\n                Time Zone* <Info text=\"Select timezone to set the timer in particular timezone.\" />\r\n              </div>\r\n              <DropDown options={this._timeZone} onChange={this.onDropDownChange3} value={timeZone} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n            </div>\r\n            {timerType!== 'EVERGREEN' ?<div className=\"form-element\">\r\n              <div className=\"label-text\">\r\n                When Time Expires* <Info text=\"Select the action when time is up.\" />\r\n              </div>\r\n              {/* <input type=\"text\" name=\"whenTimeExp\" className=\"form-control\" value={whenTimeExp} onChange={this.onChange} /> */}\r\n              <DropDown options={this._whenTimeExp} onChange={this.onDropDownChange4} value={whenTimeExp} class=\"dropdown-style\" style={{ width: \"\" }} />\r\n            </div>: null}\r\n          </div>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}