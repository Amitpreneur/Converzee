{"ast":null,"code":"import React,{Component}from\"react\";import Uploader from\"../../../comman/Uploader\";import{parseImgUrl}from\"../../../Util\";import Switch1 from\"../../../comman/Switch\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default class Media extends Component{constructor(){super(...arguments);this.state={url:this.props.url,mediaType:this.props.mediaType};this.onUploadDone=image=>{this.setState({url:image.image},()=>{this.props.onChange({url:this.state.url});});};this.onChange=e=>{this.setState({url:e.target.value},()=>{this.props.onChange({url:this.state.url});});};this.isImg=()=>{return this.props.mediaType===\"IMAGE\";};this.onReset=()=>{this.setState({url:\"\"},()=>{this.props.onChange({url:this.state.url});});};}componentWillUnmount(){this.props.onChange({url:this.state.url,mediaType:this.state.mediaType});}render(){const props={onUploadDone:this.onUploadDone};const{url}=this.state;const{mediaType,isInput}=this.props;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",style:{padding:0},children:[!isInput?/*#__PURE__*/_jsx(\"label\",{children:mediaType===\"IMAGE\"?\"Image\":\"Video\"}):null,!isInput?/*#__PURE__*/_jsx(Switch1,{isChecked:this.props.mediaType===\"IMAGE\",onChange:status=>{this.setState({mediaType:status?\"IMAGE\":\"VIDEO\"},()=>{this.props.onChange({mediaType:this.state.mediaType});});}}):null]}),!isInput?/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",style:mediaType===\"IMAGE\"?{padding:0}:{padding:0,pointerEvents:\"none\"},children:/*#__PURE__*/_jsx(Uploader,{...props,onReset:this.onReset})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-element\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"label-text\",children:\"URL*\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"url\",className:\"form-control\",value:url,onChange:this.onChange})]})]}):null]});}}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/ExitIntent/Media.js"],"names":["React","Component","Uploader","parseImgUrl","Switch1","Media","state","url","props","mediaType","onUploadDone","image","setState","onChange","e","target","value","isImg","onReset","componentWillUnmount","render","isInput","padding","status","pointerEvents"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Uploader from \"../../../comman/Uploader\";\r\nimport { parseImgUrl } from \"../../../Util\";\r\nimport Switch1 from \"../../../comman/Switch\";\r\nexport default class Media extends Component {\r\n  state = { url: this.props.url, mediaType: this.props.mediaType };\r\n  componentWillUnmount() {\r\n    this.props.onChange({ url: this.state.url, mediaType: this.state.mediaType });\r\n  }\r\n  onUploadDone = (image) => {\r\n    this.setState({ url: image.image }, () => {\r\n      this.props.onChange({ url: this.state.url });\r\n    });\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({ url: e.target.value }, () => {\r\n      this.props.onChange({ url: this.state.url });\r\n    });\r\n  };\r\n  isImg = () => {\r\n    return this.props.mediaType === \"IMAGE\";\r\n  };\r\n  onReset = () => {\r\n    this.setState({ url: \"\" }, () => {\r\n      this.props.onChange({ url: this.state.url });\r\n    });\r\n  };\r\n  render() {\r\n    const props = {\r\n      onUploadDone: this.onUploadDone,\r\n    };\r\n    const { url } = this.state;\r\n    const { mediaType, isInput } = this.props;\r\n    return (\r\n      <div>\r\n        <div className=\"col-12\" style={{padding:0}}>\r\n          {!isInput ? <label>{mediaType === \"IMAGE\" ? \"Image\" : \"Video\"}</label> : null}\r\n          {!isInput ? (\r\n            <Switch1\r\n              isChecked={this.props.mediaType === \"IMAGE\"}\r\n              onChange={(status) => {\r\n                this.setState({ mediaType: status ? \"IMAGE\" : \"VIDEO\" }, () => {\r\n                  this.props.onChange({ mediaType: this.state.mediaType });\r\n                });\r\n              }}\r\n            />\r\n          ) : null}\r\n        </div>\r\n        {!isInput ? (\r\n          <React.Fragment>\r\n            <div className=\"col-12\" style={mediaType === \"IMAGE\" ? { padding:0 } : { padding:0 , pointerEvents: \"none\" }}>\r\n              <Uploader {...props} onReset={this.onReset} />\r\n            </div>\r\n            <div className=\"form-element\">\r\n              <div className=\"label-text\">URL*</div>\r\n              <input type=\"text\" name=\"url\" className=\"form-control\" value={url} onChange={this.onChange} />\r\n            </div>\r\n          </React.Fragment>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}