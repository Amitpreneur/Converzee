{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/Style.js\";\nimport React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport \"react-color-picker/index.css\";\nimport Switch1 from \"../../../comman/Switch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Style extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      elements: this.props.elements,\n      switchElement: this.props.switchElement,\n      selected: this.props.selected\n    };\n\n    this.onClickElement = i => {\n      const cases = this.props.case || 1;\n      this.setState({\n        selected: i\n      });\n      this.props.onChange(cases, this.state);\n    };\n\n    this.onColorChange = color => {\n      const cases = this.props.case || 1;\n      const {\n        elements,\n        selected\n      } = this.state;\n      elements[selected].color = color.hex;\n      this.setState({\n        elements\n      }, () => {\n        this.props.onChange(cases, this.state);\n      });\n    };\n\n    this.onChange = value => {\n      const cases = this.props.case || 1;\n      this.setState({\n        switchElement: value\n      }, () => {\n        this.props.onChange(cases, this.state);\n      });\n    };\n\n    this.renderElements = (ele, i) => {\n      const {\n        selected\n      } = this.state;\n      const selectedDiv = selected === i ? \"element-div-active\" : \"\";\n      const selectedText = selected === i ? \"element-text-active\" : \"\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element-list\",\n        onClick: () => this.onClickElement(i),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-list-text \" + selectedText,\n          children: ele.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-list-div \" + selectedDiv,\n          style: {\n            backgroundColor: ele.color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  componentWillUnmount() {\n    const cases = this.props.case || 1;\n    this.props.onChange(cases, this.state);\n  }\n\n  render() {\n    const {\n      elements,\n      selected,\n      switchElement\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"80%\",\n            padding: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                paddingBottom: \"5px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-element\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"label-text\",\n                  children: \"Autoplay*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Switch1, {\n                  onChange: this.onChange,\n                  isChecked: switchElement\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/VideoPopup/Style.js"],"names":["React","Component","SketchPicker","Switch1","Style","state","elements","props","switchElement","selected","onClickElement","i","cases","case","setState","onChange","onColorChange","color","hex","value","renderElements","ele","selectedDiv","selectedText","text","backgroundColor","componentWillUnmount","render","width","padding","paddingBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\n\r\nimport \"react-color-picker/index.css\";\r\nimport Switch1 from \"../../../comman/Switch\";\r\nexport default class Style extends Component {\r\n  state = {\r\n    elements: this.props.elements,\r\n    switchElement: this.props.switchElement,\r\n    selected: this.props.selected\r\n  };\r\n\r\n  onClickElement = i => {\r\n    const cases = this.props.case || 1;\r\n    this.setState({ selected: i });\r\n    this.props.onChange(cases, this.state);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const cases = this.props.case || 1;\r\n    this.props.onChange(cases, this.state);\r\n  }\r\n\r\n  onColorChange = color => {\r\n    const cases = this.props.case || 1;\r\n    const { elements, selected } = this.state;\r\n    elements[selected].color = color.hex;\r\n    this.setState({ elements }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n  onChange = value => {\r\n    const cases = this.props.case || 1;\r\n    this.setState({ switchElement: value }, () => {\r\n      this.props.onChange(cases, this.state);\r\n    });\r\n  };\r\n  renderElements = (ele, i) => {\r\n    const { selected } = this.state;\r\n    const selectedDiv = selected === i ? \"element-div-active\" : \"\";\r\n    const selectedText = selected === i ? \"element-text-active\" : \"\";\r\n    return (\r\n      <div className={\"element-list\"} onClick={() => this.onClickElement(i)}>\r\n        <div className={\"element-list-text \" + selectedText}>{ele.text}</div>\r\n        <div className={\"element-list-div \" + selectedDiv} style={{ backgroundColor: ele.color }}></div>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    const { elements, selected, switchElement } = this.state;\r\n    return (\r\n      <div>\r\n        <center>\r\n          <div style={{ width: \"80%\", padding: \"20px\" }}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\" style={{ paddingBottom: \"5px\" }}>\r\n                <div className=\"form-element\">\r\n                  <div className=\"label-text\">Autoplay*</div>\r\n                  <Switch1 onChange={this.onChange} isChecked={switchElement} />\r\n                </div>\r\n              </div>\r\n              {/* <div className=\"col-md-6\">\r\n                <SketchPicker defaultValue=\"#452135\" color={elements[selected].color} onChangeComplete={this.onColorChange} />\r\n              </div> */}\r\n              {/* <div className=\"col-md-6\">{elements.map(this.renderElements)}</div> */}\r\n            </div>\r\n          </div>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}