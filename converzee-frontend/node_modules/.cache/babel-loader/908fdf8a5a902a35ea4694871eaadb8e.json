{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/CentralTimer/Preview.js\";\nimport React, { Component } from \"react\";\nimport { getcolor } from \"../../../Util\";\nimport \"./Preview.css\";\nimport FlipClock from \"../../../comman/FlipClock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Preview extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      millsecond: 0,\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      total: 0,\n      endtime: new Date(Date.parse(new Date()) + 15 * 24 * 60 * 60 * 1000)\n    };\n    this.intervalHandler = null;\n\n    this.initializeClock = endtime => {\n      if (this.intervalHandler) clearInterval(this.intervalHandler);\n      this.updateClock(endtime);\n      this.intervalHandler = setInterval(this.updateClock, 1000);\n    };\n\n    this.updateClock = () => {\n      var t = getTimeRemaining(this.state.endtime);\n      this.setState({\n        days: t.days,\n        hours: t.hours,\n        minutes: t.minutes,\n        seconds: t.seconds\n      });\n\n      if (t.total <= 0) {\n        clearInterval(this.intervalHandler);\n        this.setState({\n          days: 0,\n          hours: 0,\n          minutes: 0,\n          seconds: 0\n        });\n      }\n    };\n\n    this.getColor = key => {\n      return getcolor(this.props.STYLE.elements, key);\n    };\n\n    this.getLabelStyle = () => {\n      const color = this.getColor(\"centralTimerLabel\");\n      const backgroundColor = \"\"; //this.getColor(\"highlightBackground\");\n\n      if (this.props.layout == 2) return {\n        color: color,\n        backgroundColor: backgroundColor,\n        fontSize: parseInt(this.props.STYLE.timerLabelFont)\n      };else if (this.props.layout == 1) return {\n        color: color,\n        fontSize: parseInt(this.props.STYLE.timerLabelFont)\n      };else return {\n        color: this.getColor(\"centralTimerLabel\"),\n        backgroundColor: this.getColor(\"highlight\")\n      };\n    };\n\n    this.getTimerStyle = () => {\n      const color = this.getColor(\"centralTimer\");\n      const backgroundColor = this.getColor(\"highlight\");\n      if (this.props.layout == 2 || this.props.layout == 3) return {\n        color: color,\n        backgroundColor: backgroundColor,\n        fontSize: parseInt(this.props.STYLE.timerFont)\n      };else return {\n        color: color,\n        fontSize: parseInt(this.props.STYLE.timerFont)\n      };\n    };\n\n    this.getTemplate = () => {\n      const layout = this.props.layout;\n      const labelStyle = this.getLabelStyle();\n      const timerStyle = this.getTimerStyle();\n      let {\n        days,\n        hours,\n        minutes,\n        seconds\n      } = this.state;\n      days = (\"0\" + days).slice(-2);\n      hours = (\"0\" + hours).slice(-2);\n      minutes = (\"0\" + minutes).slice(-2);\n      seconds = (\"0\" + seconds).slice(-2);\n      const {\n        DD = \"Days\",\n        HH = \"Hours\",\n        MM = \"Mintues\",\n        SS = \"Second\"\n      } = this.props.TEXT; //.timerLabel;\n\n      if (layout == 2) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"clockdiv\",\n          style: this.getLabelStyleTemp(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"objdivTimer\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"days\",\n              style: timerStyle,\n              children: days\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: labelStyle,\n              className: \"smalltext\",\n              children: DD\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"objdivTimer\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"hours\",\n              style: timerStyle,\n              children: hours\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: labelStyle,\n              className: \"smalltext\",\n              children: HH\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"objdivTimer\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"minutes\",\n              style: timerStyle,\n              children: minutes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: labelStyle,\n              className: \"smalltext\",\n              children: MM\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"objdivTimer\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"seconds\",\n              style: timerStyle,\n              children: seconds\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: labelStyle,\n              className: \"smalltext\",\n              children: SS\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this);\n      } else if (layout == 1) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"clockdiv\",\n          style: this.getLabelStyleTemp(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"objdivTimer\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"days\",\n              style: timerStyle,\n              children: days\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: labelStyle,\n              className: \"smalltext\",\n              children: DD\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"objdivTimer\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"hours\",\n              style: timerStyle,\n              children: hours\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: labelStyle,\n              className: \"smalltext\",\n              children: HH\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"objdivTimer\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"minutes\",\n              style: timerStyle,\n              children: minutes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: labelStyle,\n              className: \"smalltext\",\n              children: MM\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"objdivTimer\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"seconds\",\n              style: timerStyle,\n              children: seconds\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: labelStyle,\n              className: \"smalltext\",\n              children: SS\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"clockdiv\",\n          style: this.getLabelStyleTemp(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"objdivTimer\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"days\",\n              style: timerStyle,\n              children: days\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: labelStyle,\n              className: \"smalltext\",\n              children: DD\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"objdivTimer\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"hours\",\n              style: timerStyle,\n              children: hours\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: labelStyle,\n              className: \"smalltext\",\n              children: HH\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"objdivTimer\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"minutes\",\n              style: timerStyle,\n              children: minutes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: labelStyle,\n              className: \"smalltext\",\n              children: MM\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"objdivTimer\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"seconds\",\n              style: timerStyle,\n              children: seconds\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: labelStyle,\n              className: \"smalltext\",\n              children: SS\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }, this);\n      } //else if (layout == 2) {\n      // } else if (layout == 3) {\n      // } else if (layout == 4) {\n      //   return (\n      //     <div id=\"clockdiv\" style={timerStyle}>\n      //       <div className=\"objdivTimer\">\n      //         <span className=\"days\" style={timerStyle}>\n      //           {days}\n      //         </span>\n      //         <div style={labelStyle} className=\"smalltext\">\n      //           {DD}\n      //         </div>\n      //       </div>\n      //       <div className=\"objdivTimer\">\n      //         <span className=\"hours\" style={timerStyle}>\n      //           {hours}\n      //         </span>\n      //         <div style={labelStyle} className=\"smalltext\">\n      //           {HH}\n      //         </div>\n      //       </div>\n      //       <div className=\"objdivTimer\">\n      //         <span className=\"minutes\" style={timerStyle}>\n      //           {minutes}\n      //         </span>\n      //         <div style={labelStyle} className=\"smalltext\">\n      //           {MM}\n      //         </div>\n      //       </div>\n      //       <div className=\"objdivTimer\">\n      //         <span className=\"seconds\" style={timerStyle}>\n      //           {seconds}\n      //         </span>\n      //         <div style={labelStyle} className=\"smalltext\">\n      //           {SS}\n      //         </div>\n      //       </div>\n      //     </div>\n      //   );\n      // } else {\n      //   return <FlipClock timer={20000} />;\n      // }\n\n    };\n  }\n\n  componentDidMount() {\n    //this.setState({ endtime: new Date(Date.parse(this.props.timer.endDateTime)) });\n    this.setTimer();\n  }\n\n  setTimer() {\n    let nextProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    const {\n      DD,\n      HH,\n      MM,\n      SS\n    } = nextProps ? nextProps.timer : this.props.timer;\n    const newtimerType = nextProps ? nextProps.timer.timerType : this.props.timer.timerType;\n\n    if (newtimerType !== \"DATE_AND_TIME_BASED\") {\n      let time = new Date();\n      time.setDate(time.getDate() + parseInt(DD));\n      time.setHours(time.getHours() + parseInt(HH));\n      time.setMinutes(time.getMinutes() + parseInt(MM));\n      time.setSeconds(time.getSeconds() + parseInt(SS));\n      this.setState({\n        endtime: time\n      }, () => {\n        this.initializeClock(this.state.endtime);\n      });\n    } else {\n      const time = nextProps ? nextProps.timer.endDateTime : this.props.timer.endDateTime;\n      this.setState({\n        endtime: new Date(Date.parse(time))\n      }, () => {\n        this.initializeClock(this.state.endtime);\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setTimer(nextProps);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalHandler);\n  }\n\n  getLabelStyleTemp() {\n    const color = this.getColor(\"centralTimer\");\n    const backgroundColor = this.getColor(\"highlight\");\n    if (this.props.layout == 2) return {\n      color: color,\n      backgroundColor: backgroundColor,\n      fontSize: parseInt(this.props.STYLE.timerFont)\n    };else return {\n      color: color,\n      fontSize: parseInt(this.props.STYLE.timerFont)\n    };\n  }\n\n  render() {\n    // const { isStop, millsecond } = this.state;\n    // const style = this.getStyle();\n    const layout = this.props.layout;\n    let {\n      days,\n      hours,\n      minutes,\n      seconds\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previewPortal\",\n        style: {\n          backgroundColor: \"#fcfcfc00\",\n          left: layout == 5 ? \"15%\" : \"\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: this.props.TEXT.timerText\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), this.getTemplate()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction getTimeRemaining(endtime) {\n  var t = Date.parse(endtime) - Date.parse(new Date());\n  var seconds = Math.floor(t / 1000 % 60);\n  var minutes = Math.floor(t / 1000 / 60 % 60);\n  var hours = Math.floor(t / (1000 * 60 * 60) % 24);\n  var days = Math.floor(t / (1000 * 60 * 60 * 24));\n  return {\n    total: t,\n    days: days,\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds\n  };\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/CentralTimer/Preview.js"],"names":["React","Component","getcolor","FlipClock","Preview","state","millsecond","days","hours","minutes","seconds","total","endtime","Date","parse","intervalHandler","initializeClock","clearInterval","updateClock","setInterval","t","getTimeRemaining","setState","getColor","key","props","STYLE","elements","getLabelStyle","color","backgroundColor","layout","fontSize","parseInt","timerLabelFont","getTimerStyle","timerFont","getTemplate","labelStyle","timerStyle","slice","DD","HH","MM","SS","TEXT","getLabelStyleTemp","componentDidMount","setTimer","nextProps","timer","newtimerType","timerType","time","setDate","getDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","endDateTime","componentWillReceiveProps","componentWillUnmount","render","left","__html","timerText","Math","floor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AACA,eAAe,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC7CI,KAD6C,GACrC;AACNC,MAAAA,UAAU,EAAE,CADN;AAENC,MAAAA,IAAI,EAAE,CAFA;AAGNC,MAAAA,KAAK,EAAE,CAHD;AAINC,MAAAA,OAAO,EAAE,CAJH;AAKNC,MAAAA,OAAO,EAAE,CALH;AAMNC,MAAAA,KAAK,EAAE,CAND;AAONC,MAAAA,OAAO,EAAE,IAAIC,IAAJ,CAASA,IAAI,CAACC,KAAL,CAAW,IAAID,IAAJ,EAAX,IAAyB,KAAK,EAAL,GAAU,EAAV,GAAe,EAAf,GAAoB,IAAtD;AAPH,KADqC;AAAA,SAU7CE,eAV6C,GAU3B,IAV2B;;AAAA,SAW7CC,eAX6C,GAW1BJ,OAAD,IAAa;AAC7B,UAAI,KAAKG,eAAT,EAA0BE,aAAa,CAAC,KAAKF,eAAN,CAAb;AAC1B,WAAKG,WAAL,CAAiBN,OAAjB;AACA,WAAKG,eAAL,GAAuBI,WAAW,CAAC,KAAKD,WAAN,EAAmB,IAAnB,CAAlC;AACD,KAf4C;;AAAA,SAmD7CA,WAnD6C,GAmD/B,MAAM;AAClB,UAAIE,CAAC,GAAGC,gBAAgB,CAAC,KAAKhB,KAAL,CAAWO,OAAZ,CAAxB;AACA,WAAKU,QAAL,CAAc;AAAEf,QAAAA,IAAI,EAAEa,CAAC,CAACb,IAAV;AAAgBC,QAAAA,KAAK,EAAEY,CAAC,CAACZ,KAAzB;AAAgCC,QAAAA,OAAO,EAAEW,CAAC,CAACX,OAA3C;AAAoDC,QAAAA,OAAO,EAAEU,CAAC,CAACV;AAA/D,OAAd;;AACA,UAAIU,CAAC,CAACT,KAAF,IAAW,CAAf,EAAkB;AAChBM,QAAAA,aAAa,CAAC,KAAKF,eAAN,CAAb;AACA,aAAKO,QAAL,CAAc;AAAEf,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,KAAK,EAAE,CAAlB;AAAqBC,UAAAA,OAAO,EAAE,CAA9B;AAAiCC,UAAAA,OAAO,EAAE;AAA1C,SAAd;AACD;AACF,KA1D4C;;AAAA,SA4D7Ca,QA5D6C,GA4DjCC,GAAD,IAAS;AAClB,aAAOtB,QAAQ,CAAC,KAAKuB,KAAL,CAAWC,KAAX,CAAiBC,QAAlB,EAA4BH,GAA5B,CAAf;AACD,KA9D4C;;AAAA,SAgE7CI,aAhE6C,GAgE7B,MAAM;AACpB,YAAMC,KAAK,GAAG,KAAKN,QAAL,CAAc,mBAAd,CAAd;AACA,YAAMO,eAAe,GAAG,EAAxB,CAFoB,CAEQ;;AAC5B,UAAI,KAAKL,KAAL,CAAWM,MAAX,IAAqB,CAAzB,EAA4B,OAAO;AAAEF,QAAAA,KAAK,EAAEA,KAAT;AAAgBC,QAAAA,eAAe,EAAEA,eAAjC;AAAkDE,QAAAA,QAAQ,EAAEC,QAAQ,CAAC,KAAKR,KAAL,CAAWC,KAAX,CAAiBQ,cAAlB;AAApE,OAAP,CAA5B,KACK,IAAI,KAAKT,KAAL,CAAWM,MAAX,IAAqB,CAAzB,EAA4B,OAAO;AAAEF,QAAAA,KAAK,EAAEA,KAAT;AAAgBG,QAAAA,QAAQ,EAAEC,QAAQ,CAAC,KAAKR,KAAL,CAAWC,KAAX,CAAiBQ,cAAlB;AAAlC,OAAP,CAA5B,KACA,OAAO;AAAEL,QAAAA,KAAK,EAAE,KAAKN,QAAL,CAAc,mBAAd,CAAT;AAA6CO,QAAAA,eAAe,EAAE,KAAKP,QAAL,CAAc,WAAd;AAA9D,OAAP;AACN,KAtE4C;;AAAA,SAwE7CY,aAxE6C,GAwE7B,MAAM;AACpB,YAAMN,KAAK,GAAG,KAAKN,QAAL,CAAc,cAAd,CAAd;AACA,YAAMO,eAAe,GAAG,KAAKP,QAAL,CAAc,WAAd,CAAxB;AACA,UAAI,KAAKE,KAAL,CAAWM,MAAX,IAAqB,CAArB,IAA0B,KAAKN,KAAL,CAAWM,MAAX,IAAqB,CAAnD,EAAsD,OAAO;AAAEF,QAAAA,KAAK,EAAEA,KAAT;AAAgBC,QAAAA,eAAe,EAAEA,eAAjC;AAAkDE,QAAAA,QAAQ,EAAEC,QAAQ,CAAC,KAAKR,KAAL,CAAWC,KAAX,CAAiBU,SAAlB;AAApE,OAAP,CAAtD,KACK,OAAO;AAAEP,QAAAA,KAAK,EAAEA,KAAT;AAAgBG,QAAAA,QAAQ,EAAEC,QAAQ,CAAC,KAAKR,KAAL,CAAWC,KAAX,CAAiBU,SAAlB;AAAlC,OAAP;AACN,KA7E4C;;AAAA,SAsF7CC,WAtF6C,GAsF/B,MAAM;AAClB,YAAMN,MAAM,GAAG,KAAKN,KAAL,CAAWM,MAA1B;AACA,YAAMO,UAAU,GAAG,KAAKV,aAAL,EAAnB;AACA,YAAMW,UAAU,GAAG,KAAKJ,aAAL,EAAnB;AACA,UAAI;AAAE5B,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA,OAAf;AAAwBC,QAAAA;AAAxB,UAAoC,KAAKL,KAA7C;AACAE,MAAAA,IAAI,GAAG,CAAC,MAAMA,IAAP,EAAaiC,KAAb,CAAmB,CAAC,CAApB,CAAP;AACAhC,MAAAA,KAAK,GAAG,CAAC,MAAMA,KAAP,EAAcgC,KAAd,CAAoB,CAAC,CAArB,CAAR;AACA/B,MAAAA,OAAO,GAAG,CAAC,MAAMA,OAAP,EAAgB+B,KAAhB,CAAsB,CAAC,CAAvB,CAAV;AACA9B,MAAAA,OAAO,GAAG,CAAC,MAAMA,OAAP,EAAgB8B,KAAhB,CAAsB,CAAC,CAAvB,CAAV;AACA,YAAM;AAAEC,QAAAA,EAAE,GAAG,MAAP;AAAeC,QAAAA,EAAE,GAAG,OAApB;AAA6BC,QAAAA,EAAE,GAAG,SAAlC;AAA6CC,QAAAA,EAAE,GAAG;AAAlD,UAA+D,KAAKnB,KAAL,CAAWoB,IAAhF,CATkB,CASoE;;AACtF,UAAId,MAAM,IAAI,CAAd,EAAiB;AACf,4BACE;AAAK,UAAA,EAAE,EAAC,UAAR;AAAmB,UAAA,KAAK,EAAE,KAAKe,iBAAL,EAA1B;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AAAM,cAAA,SAAS,EAAC,MAAhB;AAAuB,cAAA,KAAK,EAAEP,UAA9B;AAAA,wBACGhC;AADH;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,KAAK,EAAE+B,UAAZ;AAAwB,cAAA,SAAS,EAAC,WAAlC;AAAA,wBACGG;AADH;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AAAM,cAAA,SAAS,EAAC,OAAhB;AAAwB,cAAA,KAAK,EAAEF,UAA/B;AAAA,wBACG/B;AADH;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,KAAK,EAAE8B,UAAZ;AAAwB,cAAA,SAAS,EAAC,WAAlC;AAAA,wBACGI;AADH;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,eAiBE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AAAM,cAAA,SAAS,EAAC,SAAhB;AAA0B,cAAA,KAAK,EAAEH,UAAjC;AAAA,wBACG9B;AADH;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,KAAK,EAAE6B,UAAZ;AAAwB,cAAA,SAAS,EAAC,WAAlC;AAAA,wBACGK;AADH;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBF,eAyBE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AAAM,cAAA,SAAS,EAAC,SAAhB;AAA0B,cAAA,KAAK,EAAEJ,UAAjC;AAAA,wBACG7B;AADH;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,KAAK,EAAE4B,UAAZ;AAAwB,cAAA,SAAS,EAAC,WAAlC;AAAA,wBACGM;AADH;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAoCD,OArCD,MAqCO,IAAIb,MAAM,IAAI,CAAd,EAAiB;AACtB,4BACE;AAAK,UAAA,EAAE,EAAC,UAAR;AAAmB,UAAA,KAAK,EAAE,KAAKe,iBAAL,EAA1B;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AAAM,cAAA,SAAS,EAAC,MAAhB;AAAuB,cAAA,KAAK,EAAEP,UAA9B;AAAA,wBACGhC;AADH;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,KAAK,EAAE+B,UAAZ;AAAwB,cAAA,SAAS,EAAC,WAAlC;AAAA,wBACGG;AADH;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AAAM,cAAA,SAAS,EAAC,OAAhB;AAAwB,cAAA,KAAK,EAAEF,UAA/B;AAAA,wBACG/B;AADH;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,KAAK,EAAE8B,UAAZ;AAAwB,cAAA,SAAS,EAAC,WAAlC;AAAA,wBACGI;AADH;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,eAiBE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AAAM,cAAA,SAAS,EAAC,SAAhB;AAA0B,cAAA,KAAK,EAAEH,UAAjC;AAAA,wBACG9B;AADH;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,KAAK,EAAE6B,UAAZ;AAAwB,cAAA,SAAS,EAAC,WAAlC;AAAA,wBACGK;AADH;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBF,eAyBE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AAAM,cAAA,SAAS,EAAC,SAAhB;AAA0B,cAAA,KAAK,EAAEJ,UAAjC;AAAA,wBACG7B;AADH;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,KAAK,EAAE4B,UAAZ;AAAwB,cAAA,SAAS,EAAC,WAAlC;AAAA,wBACGM;AADH;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAoCD,OArCM,MAqCA;AACL,4BACE;AAAK,UAAA,EAAE,EAAC,UAAR;AAAmB,UAAA,KAAK,EAAE,KAAKE,iBAAL,EAA1B;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AAAM,cAAA,SAAS,EAAC,MAAhB;AAAuB,cAAA,KAAK,EAAEP,UAA9B;AAAA,wBACGhC;AADH;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,KAAK,EAAE+B,UAAZ;AAAwB,cAAA,SAAS,EAAC,WAAlC;AAAA,wBACGG;AADH;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AAAM,cAAA,SAAS,EAAC,OAAhB;AAAwB,cAAA,KAAK,EAAEF,UAA/B;AAAA,wBACG/B;AADH;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,KAAK,EAAE8B,UAAZ;AAAwB,cAAA,SAAS,EAAC,WAAlC;AAAA,wBACGI;AADH;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,eAiBE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AAAM,cAAA,SAAS,EAAC,SAAhB;AAA0B,cAAA,KAAK,EAAEH,UAAjC;AAAA,wBACG9B;AADH;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,KAAK,EAAE6B,UAAZ;AAAwB,cAAA,SAAS,EAAC,WAAlC;AAAA,wBACGK;AADH;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBF,eAyBE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AAAM,cAAA,SAAS,EAAC,SAAhB;AAA0B,cAAA,KAAK,EAAEJ,UAAjC;AAAA,wBACG7B;AADH;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,KAAK,EAAE4B,UAAZ;AAAwB,cAAA,SAAS,EAAC,WAAlC;AAAA,wBACGM;AADH;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAoCD,OAzHiB,CA0HlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,KA1P4C;AAAA;;AAiB7CG,EAAAA,iBAAiB,GAAG;AAClB;AAEA,SAAKC,QAAL;AACD;;AAEDA,EAAAA,QAAQ,GAAmB;AAAA,QAAlBC,SAAkB,uEAAN,IAAM;AACzB,UAAM;AAAER,MAAAA,EAAF;AAAMC,MAAAA,EAAN;AAAUC,MAAAA,EAAV;AAAcC,MAAAA;AAAd,QAAqBK,SAAS,GAAGA,SAAS,CAACC,KAAb,GAAqB,KAAKzB,KAAL,CAAWyB,KAApE;AACA,UAAMC,YAAY,GAAGF,SAAS,GAAGA,SAAS,CAACC,KAAV,CAAgBE,SAAnB,GAA+B,KAAK3B,KAAL,CAAWyB,KAAX,CAAiBE,SAA9E;;AACA,QAAID,YAAY,KAAK,qBAArB,EAA4C;AAC1C,UAAIE,IAAI,GAAG,IAAIxC,IAAJ,EAAX;AACAwC,MAAAA,IAAI,CAACC,OAAL,CAAaD,IAAI,CAACE,OAAL,KAAiBtB,QAAQ,CAACQ,EAAD,CAAtC;AACAY,MAAAA,IAAI,CAACG,QAAL,CAAcH,IAAI,CAACI,QAAL,KAAkBxB,QAAQ,CAACS,EAAD,CAAxC;AACAW,MAAAA,IAAI,CAACK,UAAL,CAAgBL,IAAI,CAACM,UAAL,KAAoB1B,QAAQ,CAACU,EAAD,CAA5C;AACAU,MAAAA,IAAI,CAACO,UAAL,CAAgBP,IAAI,CAACQ,UAAL,KAAoB5B,QAAQ,CAACW,EAAD,CAA5C;AACA,WAAKtB,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAEyC;AAAX,OAAd,EAAiC,MAAM;AACrC,aAAKrC,eAAL,CAAqB,KAAKX,KAAL,CAAWO,OAAhC;AACD,OAFD;AAGD,KATD,MASO;AACL,YAAMyC,IAAI,GAAGJ,SAAS,GAAGA,SAAS,CAACC,KAAV,CAAgBY,WAAnB,GAAiC,KAAKrC,KAAL,CAAWyB,KAAX,CAAiBY,WAAxE;AACA,WAAKxC,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAE,IAAIC,IAAJ,CAASA,IAAI,CAACC,KAAL,CAAWuC,IAAX,CAAT;AAAX,OAAd,EAAuD,MAAM;AAC3D,aAAKrC,eAAL,CAAqB,KAAKX,KAAL,CAAWO,OAAhC;AACD,OAFD;AAGD;AACF;;AAEDmD,EAAAA,yBAAyB,CAACd,SAAD,EAAY;AACnC,SAAKD,QAAL,CAAcC,SAAd;AACD;;AAEDe,EAAAA,oBAAoB,GAAG;AACrB/C,IAAAA,aAAa,CAAC,KAAKF,eAAN,CAAb;AACD;;AA8BD+B,EAAAA,iBAAiB,GAAG;AAClB,UAAMjB,KAAK,GAAG,KAAKN,QAAL,CAAc,cAAd,CAAd;AACA,UAAMO,eAAe,GAAG,KAAKP,QAAL,CAAc,WAAd,CAAxB;AACA,QAAI,KAAKE,KAAL,CAAWM,MAAX,IAAqB,CAAzB,EAA4B,OAAO;AAAEF,MAAAA,KAAK,EAAEA,KAAT;AAAgBC,MAAAA,eAAe,EAAEA,eAAjC;AAAkDE,MAAAA,QAAQ,EAAEC,QAAQ,CAAC,KAAKR,KAAL,CAAWC,KAAX,CAAiBU,SAAlB;AAApE,KAAP,CAA5B,KACK,OAAO;AAAEP,MAAAA,KAAK,EAAEA,KAAT;AAAgBG,MAAAA,QAAQ,EAAEC,QAAQ,CAAC,KAAKR,KAAL,CAAWC,KAAX,CAAiBU,SAAlB;AAAlC,KAAP;AACN;;AAwKD6B,EAAAA,MAAM,GAAG;AACP;AACA;AACA,UAAMlC,MAAM,GAAG,KAAKN,KAAL,CAAWM,MAA1B;AACA,QAAI;AAAExB,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,OAAf;AAAwBC,MAAAA;AAAxB,QAAoC,KAAKL,KAA7C;AACA,wBACE;AAAA,6BAEE;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,KAAK,EAAE;AAAEyB,UAAAA,eAAe,EAAE,WAAnB;AAAgCoC,UAAAA,IAAI,EAAEnC,MAAM,IAAI,CAAV,GAAc,KAAd,GAAsB;AAA5D,SAAtC;AAAA,gCAEE;AAAA,iCACE;AAAK,YAAA,uBAAuB,EAAE;AAAEoC,cAAAA,MAAM,EAAE,KAAK1C,KAAL,CAAWoB,IAAX,CAAgBuB;AAA1B;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,EAMG,KAAK/B,WAAL,EANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA9Q4C;;AAiR/C,SAAShB,gBAAT,CAA0BT,OAA1B,EAAmC;AACjC,MAAIQ,CAAC,GAAGP,IAAI,CAACC,KAAL,CAAWF,OAAX,IAAsBC,IAAI,CAACC,KAAL,CAAW,IAAID,IAAJ,EAAX,CAA9B;AACA,MAAIH,OAAO,GAAG2D,IAAI,CAACC,KAAL,CAAYlD,CAAC,GAAG,IAAL,GAAa,EAAxB,CAAd;AACA,MAAIX,OAAO,GAAG4D,IAAI,CAACC,KAAL,CAAYlD,CAAC,GAAG,IAAJ,GAAW,EAAZ,GAAkB,EAA7B,CAAd;AACA,MAAIZ,KAAK,GAAG6D,IAAI,CAACC,KAAL,CAAYlD,CAAC,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAF,GAAyB,EAApC,CAAZ;AACA,MAAIb,IAAI,GAAG8D,IAAI,CAACC,KAAL,CAAWlD,CAAC,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAZ,CAAX;AACA,SAAO;AACLT,IAAAA,KAAK,EAAES,CADF;AAELb,IAAAA,IAAI,EAAEA,IAFD;AAGLC,IAAAA,KAAK,EAAEA,KAHF;AAILC,IAAAA,OAAO,EAAEA,OAJJ;AAKLC,IAAAA,OAAO,EAAEA;AALJ,GAAP;AAOD","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getcolor } from \"../../../Util\";\r\nimport \"./Preview.css\";\r\nimport FlipClock from \"../../../comman/FlipClock\";\r\nexport default class Preview extends Component {\r\n  state = {\r\n    millsecond: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n    total: 0,\r\n    endtime: new Date(Date.parse(new Date()) + 15 * 24 * 60 * 60 * 1000),\r\n  };\r\n  intervalHandler = null;\r\n  initializeClock = (endtime) => {\r\n    if (this.intervalHandler) clearInterval(this.intervalHandler);\r\n    this.updateClock(endtime);\r\n    this.intervalHandler = setInterval(this.updateClock, 1000);\r\n  };\r\n\r\n  componentDidMount() {\r\n    //this.setState({ endtime: new Date(Date.parse(this.props.timer.endDateTime)) });\r\n\r\n    this.setTimer();\r\n  }\r\n\r\n  setTimer(nextProps = null) {\r\n    const { DD, HH, MM, SS } = nextProps ? nextProps.timer : this.props.timer;\r\n    const newtimerType = nextProps ? nextProps.timer.timerType : this.props.timer.timerType;\r\n    if (newtimerType !== \"DATE_AND_TIME_BASED\") {\r\n      let time = new Date();\r\n      time.setDate(time.getDate() + parseInt(DD));\r\n      time.setHours(time.getHours() + parseInt(HH));\r\n      time.setMinutes(time.getMinutes() + parseInt(MM));\r\n      time.setSeconds(time.getSeconds() + parseInt(SS));\r\n      this.setState({ endtime: time }, () => {\r\n        this.initializeClock(this.state.endtime);\r\n      });\r\n    } else {\r\n      const time = nextProps ? nextProps.timer.endDateTime : this.props.timer.endDateTime;\r\n      this.setState({ endtime: new Date(Date.parse(time)) }, () => {\r\n        this.initializeClock(this.state.endtime);\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setTimer(nextProps);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalHandler);\r\n  }\r\n\r\n  updateClock = () => {\r\n    var t = getTimeRemaining(this.state.endtime);\r\n    this.setState({ days: t.days, hours: t.hours, minutes: t.minutes, seconds: t.seconds });\r\n    if (t.total <= 0) {\r\n      clearInterval(this.intervalHandler);\r\n      this.setState({ days: 0, hours: 0, minutes: 0, seconds: 0 });\r\n    }\r\n  };\r\n\r\n  getColor = (key) => {\r\n    return getcolor(this.props.STYLE.elements, key);\r\n  };\r\n\r\n  getLabelStyle = () => {\r\n    const color = this.getColor(\"centralTimerLabel\");\r\n    const backgroundColor = \"\"; //this.getColor(\"highlightBackground\");\r\n    if (this.props.layout == 2) return { color: color, backgroundColor: backgroundColor, fontSize: parseInt(this.props.STYLE.timerLabelFont) };\r\n    else if (this.props.layout == 1) return { color: color, fontSize: parseInt(this.props.STYLE.timerLabelFont) };\r\n    else return { color: this.getColor(\"centralTimerLabel\"), backgroundColor: this.getColor(\"highlight\") };\r\n  };\r\n\r\n  getTimerStyle = () => {\r\n    const color = this.getColor(\"centralTimer\");\r\n    const backgroundColor = this.getColor(\"highlight\");\r\n    if (this.props.layout == 2 || this.props.layout == 3) return { color: color, backgroundColor: backgroundColor, fontSize: parseInt(this.props.STYLE.timerFont) };\r\n    else return { color: color, fontSize: parseInt(this.props.STYLE.timerFont) };\r\n  };\r\n\r\n  getLabelStyleTemp() {\r\n    const color = this.getColor(\"centralTimer\");\r\n    const backgroundColor = this.getColor(\"highlight\");\r\n    if (this.props.layout == 2) return { color: color, backgroundColor: backgroundColor, fontSize: parseInt(this.props.STYLE.timerFont) };\r\n    else return { color: color, fontSize: parseInt(this.props.STYLE.timerFont) };\r\n  }\r\n\r\n  getTemplate = () => {\r\n    const layout = this.props.layout;\r\n    const labelStyle = this.getLabelStyle();\r\n    const timerStyle = this.getTimerStyle();\r\n    let { days, hours, minutes, seconds } = this.state;\r\n    days = (\"0\" + days).slice(-2);\r\n    hours = (\"0\" + hours).slice(-2);\r\n    minutes = (\"0\" + minutes).slice(-2);\r\n    seconds = (\"0\" + seconds).slice(-2);\r\n    const { DD = \"Days\", HH = \"Hours\", MM = \"Mintues\", SS = \"Second\" } = this.props.TEXT; //.timerLabel;\r\n    if (layout == 2) {\r\n      return (\r\n        <div id=\"clockdiv\" style={this.getLabelStyleTemp()}>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"days\" style={timerStyle}>\r\n              {days}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {DD}\r\n            </div>\r\n          </div>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"hours\" style={timerStyle}>\r\n              {hours}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {HH}\r\n            </div>\r\n          </div>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"minutes\" style={timerStyle}>\r\n              {minutes}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {MM}\r\n            </div>\r\n          </div>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"seconds\" style={timerStyle}>\r\n              {seconds}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {SS}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (layout == 1) {\r\n      return (\r\n        <div id=\"clockdiv\" style={this.getLabelStyleTemp()}>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"days\" style={timerStyle}>\r\n              {days}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {DD}\r\n            </div>\r\n          </div>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"hours\" style={timerStyle}>\r\n              {hours}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {HH}\r\n            </div>\r\n          </div>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"minutes\" style={timerStyle}>\r\n              {minutes}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {MM}\r\n            </div>\r\n          </div>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"seconds\" style={timerStyle}>\r\n              {seconds}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {SS}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div id=\"clockdiv\" style={this.getLabelStyleTemp()}>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"days\" style={timerStyle}>\r\n              {days}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {DD}\r\n            </div>\r\n          </div>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"hours\" style={timerStyle}>\r\n              {hours}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {HH}\r\n            </div>\r\n          </div>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"minutes\" style={timerStyle}>\r\n              {minutes}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {MM}\r\n            </div>\r\n          </div>\r\n          <div className=\"objdivTimer\">\r\n            <span className=\"seconds\" style={timerStyle}>\r\n              {seconds}\r\n            </span>\r\n            <div style={labelStyle} className=\"smalltext\">\r\n              {SS}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    //else if (layout == 2) {\r\n    // } else if (layout == 3) {\r\n    // } else if (layout == 4) {\r\n    //   return (\r\n    //     <div id=\"clockdiv\" style={timerStyle}>\r\n    //       <div className=\"objdivTimer\">\r\n    //         <span className=\"days\" style={timerStyle}>\r\n    //           {days}\r\n    //         </span>\r\n    //         <div style={labelStyle} className=\"smalltext\">\r\n    //           {DD}\r\n    //         </div>\r\n    //       </div>\r\n    //       <div className=\"objdivTimer\">\r\n    //         <span className=\"hours\" style={timerStyle}>\r\n    //           {hours}\r\n    //         </span>\r\n    //         <div style={labelStyle} className=\"smalltext\">\r\n    //           {HH}\r\n    //         </div>\r\n    //       </div>\r\n    //       <div className=\"objdivTimer\">\r\n    //         <span className=\"minutes\" style={timerStyle}>\r\n    //           {minutes}\r\n    //         </span>\r\n    //         <div style={labelStyle} className=\"smalltext\">\r\n    //           {MM}\r\n    //         </div>\r\n    //       </div>\r\n    //       <div className=\"objdivTimer\">\r\n    //         <span className=\"seconds\" style={timerStyle}>\r\n    //           {seconds}\r\n    //         </span>\r\n    //         <div style={labelStyle} className=\"smalltext\">\r\n    //           {SS}\r\n    //         </div>\r\n    //       </div>\r\n    //     </div>\r\n    //   );\r\n    // } else {\r\n    //   return <FlipClock timer={20000} />;\r\n    // }\r\n  };\r\n\r\n  render() {\r\n    // const { isStop, millsecond } = this.state;\r\n    // const style = this.getStyle();\r\n    const layout = this.props.layout;\r\n    let { days, hours, minutes, seconds } = this.state;\r\n    return (\r\n      <center>\r\n        {/* <div className=\"previewPortal\"><Countdown date={Date.now() + millsecond} /></div> */}\r\n        <div className=\"previewPortal\" style={{ backgroundColor: \"#fcfcfc00\", left: layout == 5 ? \"15%\" : \"\" }}>\r\n         {/* { (days == 0 && hours == 0 && minutes == 0 && seconds == 0) ? null : */}\r\n          <center>\r\n            <div dangerouslySetInnerHTML={{ __html: this.props.TEXT.timerText }}></div>\r\n          </center>\r\n          {/* } */}\r\n          {this.getTemplate()}\r\n        </div>\r\n      </center>\r\n    );\r\n  }\r\n}\r\n\r\nfunction getTimeRemaining(endtime) {\r\n  var t = Date.parse(endtime) - Date.parse(new Date());\r\n  var seconds = Math.floor((t / 1000) % 60);\r\n  var minutes = Math.floor((t / 1000 / 60) % 60);\r\n  var hours = Math.floor((t / (1000 * 60 * 60)) % 24);\r\n  var days = Math.floor(t / (1000 * 60 * 60 * 24));\r\n  return {\r\n    total: t,\r\n    days: days,\r\n    hours: hours,\r\n    minutes: minutes,\r\n    seconds: seconds,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}