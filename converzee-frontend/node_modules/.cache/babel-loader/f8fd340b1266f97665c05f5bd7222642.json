{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/MobileVibrator/index.js\";\nimport React, { Component } from \"react\";\nimport \"../../Create.css\";\nimport RequestHandler from \"../../../../actions/RequestHandler\";\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath } from \"../../../../actions/URLs\";\nimport SideBar from \"./SideBar\";\nimport ToolUtil from \"../../../../utils/ToolUtil\";\nimport Timer from \"./Timer\";\nimport { MobileVibratorModal, MobileVibratorModalResponse } from \"../../../utils/Modal\";\nimport Util from \"../../../Util\";\nimport { Drawer } from \"antd\";\nimport { ButtonsGroup, ToolLayout } from \"../../../layout/ToolLayout\";\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\nconst mobVib = {\n  activeTab: 1,\n  TEXT: {\n    campaignName: \"\",\n    headline: \"\",\n    subheadline: [\"\"]\n  },\n  timing: {\n    firstVib: 0,\n    pause: 0,\n    secondVib: 0\n  },\n  CODE: {\n    include: [{\n      type: \"contains\",\n      url: \"\"\n    }],\n    exclude: [{\n      type: \"contains\",\n      url: \"\"\n    }]\n  }\n};\nexport default class MobileVibrator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = mobVib;\n\n    this.onChangeActive = tabIndex => {\n      const {\n        activeTab\n      } = this.state;\n\n      if (activeTab !== tabIndex) {\n        this.setState({\n          activeTab: tabIndex\n        });\n      }\n    };\n\n    this.onUpdate = (index, data) => {\n      switch (index) {\n        case 1:\n          this.setState({\n            timing: data\n          });\n          break;\n\n        case 2:\n          this.setState({\n            code: data\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.renderMain = () => {\n      const {\n        activeTab,\n        TEXT,\n        timing,\n        CODE\n      } = this.state;\n      let component = null;\n\n      switch (activeTab) {\n        case 1:\n          component = React.createElement(Timer, Object.assign({}, timing, {\n            onChange: this.onUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }));\n          break;\n\n        default:\n          // component = <Text {...TEXT} onChange={this.onUpdate} />;\n          break;\n      }\n\n      return component;\n    };\n\n    this.onClickSave = () => {\n      const {\n        timing\n      } = this.state;\n      const {\n        firstVib,\n        pause,\n        secondVib\n      } = timing;\n      const script = genCodeMobileVibartor(firstVib * 1000, pause * 1000, secondVib * 1000);\n      window.gs.setScript(script);\n      setTimeout(() => {\n        this.props.history.push(\"/Campaigns\");\n      }, 3000);\n    };\n\n    this.renderRight = () => {\n      return React.createElement(ReponsiveImage, {\n        isAs: true,\n        url: \"asset/mobilevab.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      });\n    };\n\n    this.back = () => {\n      this.props.history.push(\"/Create\");\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match ? this.props.match.params ? this.props.match.params.id : null : null;\n\n    if (id) {\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\n        if (res) {\n          Util.isRedirected = true;\n          const data = MobileVibratorModalResponse(res);\n\n          if (data) {\n            this.setState(data, () => {\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\n            });\n          }\n        }\n      });\n    } else {\n      const toolId = 10;\n      this.setState({\n        toolId: toolId,\n        toolName: ToolUtil.getTool(toolId),\n        name: Util.CAMPAIGNS_NAME\n      });\n      Util.RedirectWhenCampaignEmpty(this.props);\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\n    }\n  }\n\n  render() {\n    return React.createElement(ToolLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-10 toolItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.renderMain()), React.createElement(\"div\", {\n      className: \"col-md-6 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.renderRight()), React.createElement(ButtonsGroup, {\n      backUrl: this.back,\n      save: this.onClickSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-1 sideBarButtomPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(SideBar, {\n      activeTab: this.state.activeTab,\n      onChangeActive: this.onChangeActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction genCodeMobileVibartor(f, s, t) {\n  return \"<script>document.addEventListener(\\\"click\\\",function(){navigator.vibrate([\".concat(f, \",\").concat(s, \",\").concat(t, \"]),document.removeEventListener(\\\"click\\\",function(){})});</script>\");\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/pages/tools/MobileVibrator/index.js"],"names":["React","Component","RequestHandler","GET_ONE_TOOL","SAVE_TOOL","getPath","SideBar","ToolUtil","Timer","MobileVibratorModal","MobileVibratorModalResponse","Util","Drawer","ButtonsGroup","ToolLayout","ReponsiveImage","mobVib","activeTab","TEXT","campaignName","headline","subheadline","timing","firstVib","pause","secondVib","CODE","include","type","url","exclude","MobileVibrator","state","onChangeActive","tabIndex","setState","onUpdate","index","data","code","renderMain","component","onClickSave","script","genCodeMobileVibartor","window","gs","setScript","setTimeout","props","history","push","renderRight","back","componentDidMount","id","match","params","PostRequest","res","err","isRedirected","navTitle","getTool","toolId","name","toolName","CAMPAIGNS_NAME","RedirectWhenCampaignEmpty","render","f","s","t"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../Create.css\";\nimport RequestHandler from \"../../../../actions/RequestHandler\";\nimport { GET_ONE_TOOL, SAVE_TOOL, getPath } from \"../../../../actions/URLs\";\nimport SideBar from \"./SideBar\";\nimport ToolUtil from \"../../../../utils/ToolUtil\";\nimport Timer from \"./Timer\";\nimport { MobileVibratorModal, MobileVibratorModalResponse } from \"../../../utils/Modal\";\nimport Util from \"../../../Util\";\nimport { Drawer } from \"antd\";\nimport { ButtonsGroup, ToolLayout } from \"../../../layout/ToolLayout\";\nimport { ReponsiveImage } from \"../../../comman/PreviewAble\";\n\nconst mobVib = {\n  activeTab: 1,\n  TEXT: { campaignName: \"\", headline: \"\", subheadline: [\"\"] },\n  timing: { firstVib: 0, pause: 0, secondVib: 0 },\n  CODE: { include: [{ type: \"contains\", url: \"\" }], exclude: [{ type: \"contains\", url: \"\" }] },\n};\nexport default class MobileVibrator extends Component {\n  state = mobVib;\n  componentDidMount() {\n    const id = this.props.match ? (this.props.match.params ? this.props.match.params.id : null) : null;\n    if (id) {\n      RequestHandler.PostRequest(GET_ONE_TOOL + id, {}, (res, err) => {\n        if (res) {\n          Util.isRedirected = true;\n          const data = MobileVibratorModalResponse(res);\n          if (data) {\n            this.setState(data, () => {\n              window.gs.navTitle(ToolUtil.getTool(data.toolId) + \"(\" + data.name + \")\");\n            });\n          }\n        }\n      });\n    } else {\n      const toolId = 10;\n      this.setState({ toolId: toolId, toolName: ToolUtil.getTool(toolId), name: Util.CAMPAIGNS_NAME });\n      Util.RedirectWhenCampaignEmpty(this.props);\n      window.gs.navTitle(ToolUtil.getTool(toolId) + \"(\" + Util.CAMPAIGNS_NAME + \")\");\n    }\n  }\n  onChangeActive = (tabIndex) => {\n    const { activeTab } = this.state;\n    if (activeTab !== tabIndex) {\n      this.setState({ activeTab: tabIndex });\n    }\n  };\n  onUpdate = (index, data) => {\n    switch (index) {\n      case 1:\n        this.setState({ timing: data });\n        break;\n      case 2:\n        this.setState({ code: data });\n        break;\n      default:\n        break;\n    }\n  };\n  renderMain = () => {\n    const { activeTab, TEXT, timing, CODE } = this.state;\n    let component = null;\n    switch (activeTab) {\n      case 1:\n        component = <Timer {...timing} onChange={this.onUpdate} />;\n        break;\n      default:\n        // component = <Text {...TEXT} onChange={this.onUpdate} />;\n        break;\n    }\n    return component;\n  };\n\n  onClickSave = () => {\n    const { timing } = this.state;\n    const { firstVib, pause, secondVib } = timing;\n    const script = genCodeMobileVibartor(firstVib * 1000, pause * 1000, secondVib * 1000);\n    window.gs.setScript(script);\n    setTimeout(() => {\n      this.props.history.push(\"/Campaigns\");\n    }, 3000);\n  };\n\n  renderRight = () => {\n    return <ReponsiveImage isAs={true} url={\"asset/mobilevab.png\"} />;\n  };\n\n  back = () => {\n    this.props.history.push(\"/Create\");\n  };\n\n  render() {\n    return (\n      <ToolLayout>\n        <div className=\"row\">\n          <div className=\"col-10 toolItem\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">{this.renderMain()}</div>\n              <div className=\"col-md-6 mt-2\">{this.renderRight()}</div>\n              <ButtonsGroup backUrl={this.back} save={this.onClickSave} />\n            </div>\n          </div>\n          <div className=\"col-1 sideBarButtomPanel\">\n            <SideBar activeTab={this.state.activeTab} onChangeActive={this.onChangeActive} />\n          </div>\n        </div>\n      </ToolLayout>\n    );\n  }\n}\n\nfunction genCodeMobileVibartor(f, s, t) {\n  return `<script>document.addEventListener(\"click\",function(){navigator.vibrate([${f},${s},${t}]),document.removeEventListener(\"click\",function(){})});</script>`;\n}\n"]},"metadata":{},"sourceType":"module"}