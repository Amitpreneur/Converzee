{"ast":null,"code":"var _jsxFileName = \"/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/TimeCounter.js\";\nimport React from \"react\";\nimport \"./TimeCounter.css\";\nexport default class TimeCounter extends React.Component {\n  constructor() {\n    super();\n    let someDate = new Date();\n    let numberOfDaysToAdd = 6;\n    someDate.setDate(someDate.getDate() + numberOfDaysToAdd);\n    this.state = {\n      time: {},\n      seconds: 5000000\n    };\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n  }\n\n  secondsToTime(secs) {\n    const difference = +(new Date(this.props.date) || new Date().setHours(5)) - +new Date();\n    let timeLeft = {};\n\n    if (difference > 0) {\n      timeLeft = {\n        d: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        h: Math.floor(difference / (1000 * 60 * 60) % 24),\n        m: Math.floor(difference / 1000 / 60 % 60),\n        s: Math.floor(difference / 1000 % 60)\n      };\n    } else {\n      timeLeft = {\n        d: 0,\n        h: 0,\n        m: 0,\n        s: 0\n      };\n    }\n\n    return timeLeft; // let days = Math.floor(secs / (24 * 60 * 60 * 1000));\n    // let divisor_for_hours = secs % 24;\n    // let hours = Math.floor(divisor_for_hours / 60);\n    // let divisor_for_minutes = secs % (60 * 60);\n    // let minutes = Math.floor(divisor_for_minutes / 60);\n    // let divisor_for_seconds = divisor_for_minutes % 60;\n    // let seconds = Math.ceil(divisor_for_seconds);\n    // let obj = {\n    //   d: days,\n    //   h: hours,\n    //   m: minutes,\n    //   s: seconds\n    // };\n    // return obj;\n  }\n\n  componentDidMount() {\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\n    this.setState({\n      time: timeLeftVar\n    });\n    this.startTimer();\n  }\n\n  startTimer() {\n    if (this.timer == 0 && this.state.seconds > 0) {\n      this.timer = setInterval(this.countDown, 1000);\n    }\n  }\n\n  countDown() {\n    // Remove one second, set state so a re-render happens.\n    let seconds = this.state.seconds - 1;\n    this.setState({\n      time: this.secondsToTime(seconds),\n      seconds: seconds\n    }); // Check if we're at zero.\n\n    if (seconds == 0) {\n      clearInterval(this.timer);\n    }\n  }\n\n  render() {\n    const {\n      d,\n      h,\n      m,\n      s\n    } = this.state.time;\n    const {\n      timerType,\n      color,\n      textcolor\n    } = this.props;\n    const textFontcolor = textcolor ? {\n      color: textcolor\n    } : {};\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, timerType == \"BOX\" ? React.createElement(\"div\", {\n      class: \"hellobartimer1-timer\",\n      style: textcolor ? {\n        color: textcolor\n      } : {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"blockTimer\",\n      style: {\n        backgroundColor: color,\n        color: textcolor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, d, \" :\", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Days\")), React.createElement(\"li\", {\n      className: \"blockTimer\",\n      style: {\n        backgroundColor: color,\n        color: textcolor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, h, \" :\", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Hours\")), React.createElement(\"li\", {\n      className: \"blockTimer\",\n      style: {\n        backgroundColor: color,\n        color: textcolor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, m, \" :\", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Minutes\")), React.createElement(\"li\", {\n      className: \"blockTimer\",\n      style: {\n        backgroundColor: color,\n        color: textcolor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, s, \" \", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Seconds\"))) : React.createElement(\"div\", {\n      class: \"hellobartimer1-timer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      style: textFontcolor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, d, \" :\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Days\")), React.createElement(\"li\", {\n      style: textFontcolor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, h, \" :\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Hours\")), React.createElement(\"li\", {\n      style: textFontcolor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, m, \" :\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Minutes\")), React.createElement(\"li\", {\n      style: textFontcolor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, s, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Seconds\"))));\n  }\n\n}","map":{"version":3,"sources":["/opt/bitnami/apache/htdocs/converzee-frontend/src/components/comman/TimeCounter.js"],"names":["React","TimeCounter","Component","constructor","someDate","Date","numberOfDaysToAdd","setDate","getDate","state","time","seconds","timer","startTimer","bind","countDown","secondsToTime","secs","difference","props","date","setHours","timeLeft","d","Math","floor","h","m","s","componentDidMount","timeLeftVar","setState","setInterval","clearInterval","render","timerType","color","textcolor","textFontcolor","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./TimeCounter.css\";\nexport default class TimeCounter extends React.Component {\n  constructor() {\n    super();\n    let someDate = new Date();\n    let numberOfDaysToAdd = 6;\n    someDate.setDate(someDate.getDate() + numberOfDaysToAdd);\n    this.state = { time: {}, seconds: 5000000 };\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n  }\n\n  secondsToTime(secs) {\n    const difference = +(new Date(this.props.date) || new Date().setHours(5)) - +new Date();\n    let timeLeft = {};\n    if (difference > 0) {\n      timeLeft = {\n        d: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        h: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        m: Math.floor((difference / 1000 / 60) % 60),\n        s: Math.floor((difference / 1000) % 60),\n      };\n    } else {\n      timeLeft = {\n        d: 0,\n        h: 0,\n        m: 0,\n        s: 0,\n      };\n    }\n\n    return timeLeft;\n    // let days = Math.floor(secs / (24 * 60 * 60 * 1000));\n    // let divisor_for_hours = secs % 24;\n    // let hours = Math.floor(divisor_for_hours / 60);\n\n    // let divisor_for_minutes = secs % (60 * 60);\n    // let minutes = Math.floor(divisor_for_minutes / 60);\n\n    // let divisor_for_seconds = divisor_for_minutes % 60;\n    // let seconds = Math.ceil(divisor_for_seconds);\n\n    // let obj = {\n    //   d: days,\n    //   h: hours,\n    //   m: minutes,\n    //   s: seconds\n    // };\n    // return obj;\n  }\n\n  componentDidMount() {\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\n    this.setState({ time: timeLeftVar });\n    this.startTimer();\n  }\n\n  startTimer() {\n    if (this.timer == 0 && this.state.seconds > 0) {\n      this.timer = setInterval(this.countDown, 1000);\n    }\n  }\n\n  countDown() {\n    // Remove one second, set state so a re-render happens.\n    let seconds = this.state.seconds - 1;\n    this.setState({\n      time: this.secondsToTime(seconds),\n      seconds: seconds,\n    });\n\n    // Check if we're at zero.\n    if (seconds == 0) {\n      clearInterval(this.timer);\n    }\n  }\n\n  render() {\n    const { d, h, m, s } = this.state.time;\n    const { timerType, color, textcolor } = this.props;\n    const textFontcolor = textcolor ? { color: textcolor } : {};\n    return (\n      <div>\n        {/* m: {this.state.time.m} s: {this.state.time.s} */}\n        {timerType == \"BOX\" ? (\n          <div class=\"hellobartimer1-timer\" style={textcolor ? { color: textcolor } : {}}>\n            <li className=\"blockTimer\" style={{ backgroundColor: color, color: textcolor }}>\n              {d} :<div>Days</div>\n            </li>\n            <li className=\"blockTimer\" style={{ backgroundColor: color, color: textcolor }}>\n              {h} :<div>Hours</div>\n            </li>\n            <li className=\"blockTimer\" style={{ backgroundColor: color, color: textcolor }}>\n              {m} :<div>Minutes</div>\n            </li>\n            <li className=\"blockTimer\" style={{ backgroundColor: color, color: textcolor }}>\n              {s} <div>Seconds</div>\n            </li>\n          </div>\n        ) : (\n          <div class=\"hellobartimer1-timer\">\n            <li style={textFontcolor}>\n              {d} :\n              <br />\n              <span>Days</span>\n            </li>\n            <li style={textFontcolor}>\n              {h} :\n              <br />\n              <span>Hours</span>\n            </li>\n            <li style={textFontcolor}>\n              {m} :\n              <br />\n              <span>Minutes</span>\n            </li>\n            <li style={textFontcolor}>\n              {s}\n              <br />\n              <span>Seconds</span>\n            </li>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}